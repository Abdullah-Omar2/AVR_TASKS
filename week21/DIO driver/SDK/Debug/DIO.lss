
DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d8a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000f48  00000000  00000000  00000de0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000006ba  00000000  00000000  00001d28  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 95 06 	call	0xd2a	; 0xd2a <main>
  64:	0c 94 c3 06 	jmp	0xd86	; 0xd86 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_enumPortInit>:
#include "../include/LIB/Error_State.h"
#include "../include/LIB/BITMATH.h"


ES_T DIO_enumPortInit (void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	0f 92       	push	r0
  72:	cd b7       	in	r28, 0x3d	; 61
  74:	de b7       	in	r29, 0x3e	; 62
	ES_T Local_enumErrorState=ES_NOK;
  76:	19 82       	std	Y+1, r1	; 0x01

	DDRA=CONC(PA_PIN7_DIR,PA_PIN6_DIR,PA_PIN5_DIR,PA_PIN4_DIR,PA_PIN3_DIR,PA_PIN2_DIR,PA_PIN1_DIR,PA_PIN0_DIR);
  78:	ea e3       	ldi	r30, 0x3A	; 58
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	8f ef       	ldi	r24, 0xFF	; 255
  7e:	80 83       	st	Z, r24
	DDRB=CONC(PB_PIN7_DIR,PB_PIN6_DIR,PB_PIN5_DIR,PB_PIN4_DIR,PB_PIN3_DIR,PB_PIN2_DIR,PB_PIN1_DIR,PB_PIN0_DIR);
  80:	e7 e3       	ldi	r30, 0x37	; 55
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	8f ef       	ldi	r24, 0xFF	; 255
  86:	80 83       	st	Z, r24
	DDRC=CONC(PC_PIN7_DIR,PC_PIN6_DIR,PC_PIN5_DIR,PC_PIN4_DIR,PC_PIN3_DIR,PC_PIN2_DIR,PC_PIN1_DIR,PC_PIN0_DIR);
  88:	e4 e3       	ldi	r30, 0x34	; 52
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	8f ef       	ldi	r24, 0xFF	; 255
  8e:	80 83       	st	Z, r24
	DDRD=CONC(PD_PIN7_DIR,PD_PIN6_DIR,PD_PIN5_DIR,PD_PIN4_DIR,PD_PIN3_DIR,PD_PIN2_DIR,PD_PIN1_DIR,PD_PIN0_DIR);
  90:	e1 e3       	ldi	r30, 0x31	; 49
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	80 83       	st	Z, r24

	PORTA=CONC(PA_PIN7_VAL,PA_PIN6_VAL,PA_PIN5_VAL,PA_PIN4_VAL,PA_PIN3_VAL,PA_PIN2_VAL,PA_PIN1_VAL,PA_PIN0_VAL);
  98:	eb e3       	ldi	r30, 0x3B	; 59
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	10 82       	st	Z, r1
	PORTB=CONC(PB_PIN7_VAL,PB_PIN6_VAL,PB_PIN5_VAL,PB_PIN4_VAL,PB_PIN3_VAL,PB_PIN2_VAL,PB_PIN1_VAL,PB_PIN0_VAL);
  9e:	e8 e3       	ldi	r30, 0x38	; 56
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	10 82       	st	Z, r1
	PORTC=CONC(PC_PIN7_VAL,PC_PIN6_VAL,PC_PIN5_VAL,PC_PIN4_VAL,PC_PIN3_VAL,PC_PIN2_VAL,PC_PIN1_VAL,PC_PIN0_VAL);
  a4:	e5 e3       	ldi	r30, 0x35	; 53
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	10 82       	st	Z, r1
	PORTD=CONC(PD_PIN7_VAL,PD_PIN6_VAL,PD_PIN5_VAL,PD_PIN4_VAL,PD_PIN3_VAL,PD_PIN2_VAL,PD_PIN1_VAL,PD_PIN0_VAL);
  aa:	e2 e3       	ldi	r30, 0x32	; 50
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	10 82       	st	Z, r1

	Local_enumErrorState=ES_OK;
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	89 83       	std	Y+1, r24	; 0x01

	return Local_enumErrorState;
  b4:	89 81       	ldd	r24, Y+1	; 0x01
}
  b6:	0f 90       	pop	r0
  b8:	cf 91       	pop	r28
  ba:	df 91       	pop	r29
  bc:	08 95       	ret

000000be <DIO_enumSetPortDirection>:

ES_T DIO_enumSetPortDirection (u8 Copy_u8PortID,u8 Copy_u8Direction)
{
  be:	df 93       	push	r29
  c0:	cf 93       	push	r28
  c2:	00 d0       	rcall	.+0      	; 0xc4 <DIO_enumSetPortDirection+0x6>
  c4:	00 d0       	rcall	.+0      	; 0xc6 <DIO_enumSetPortDirection+0x8>
  c6:	0f 92       	push	r0
  c8:	cd b7       	in	r28, 0x3d	; 61
  ca:	de b7       	in	r29, 0x3e	; 62
  cc:	8a 83       	std	Y+2, r24	; 0x02
  ce:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
  d0:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
  d2:	8a 81       	ldd	r24, Y+2	; 0x02
  d4:	84 30       	cpi	r24, 0x04	; 4
  d6:	a8 f5       	brcc	.+106    	; 0x142 <DIO_enumSetPortDirection+0x84>
	{
		switch(Copy_u8PortID)
  d8:	8a 81       	ldd	r24, Y+2	; 0x02
  da:	28 2f       	mov	r18, r24
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	3d 83       	std	Y+5, r19	; 0x05
  e0:	2c 83       	std	Y+4, r18	; 0x04
  e2:	8c 81       	ldd	r24, Y+4	; 0x04
  e4:	9d 81       	ldd	r25, Y+5	; 0x05
  e6:	81 30       	cpi	r24, 0x01	; 1
  e8:	91 05       	cpc	r25, r1
  ea:	d1 f0       	breq	.+52     	; 0x120 <DIO_enumSetPortDirection+0x62>
  ec:	2c 81       	ldd	r18, Y+4	; 0x04
  ee:	3d 81       	ldd	r19, Y+5	; 0x05
  f0:	22 30       	cpi	r18, 0x02	; 2
  f2:	31 05       	cpc	r19, r1
  f4:	2c f4       	brge	.+10     	; 0x100 <DIO_enumSetPortDirection+0x42>
  f6:	8c 81       	ldd	r24, Y+4	; 0x04
  f8:	9d 81       	ldd	r25, Y+5	; 0x05
  fa:	00 97       	sbiw	r24, 0x00	; 0
  fc:	61 f0       	breq	.+24     	; 0x116 <DIO_enumSetPortDirection+0x58>
  fe:	1e c0       	rjmp	.+60     	; 0x13c <DIO_enumSetPortDirection+0x7e>
 100:	2c 81       	ldd	r18, Y+4	; 0x04
 102:	3d 81       	ldd	r19, Y+5	; 0x05
 104:	22 30       	cpi	r18, 0x02	; 2
 106:	31 05       	cpc	r19, r1
 108:	81 f0       	breq	.+32     	; 0x12a <DIO_enumSetPortDirection+0x6c>
 10a:	8c 81       	ldd	r24, Y+4	; 0x04
 10c:	9d 81       	ldd	r25, Y+5	; 0x05
 10e:	83 30       	cpi	r24, 0x03	; 3
 110:	91 05       	cpc	r25, r1
 112:	81 f0       	breq	.+32     	; 0x134 <DIO_enumSetPortDirection+0x76>
 114:	13 c0       	rjmp	.+38     	; 0x13c <DIO_enumSetPortDirection+0x7e>
		{
			case DIO_PORTA:
				DDRA=Copy_u8Direction;
 116:	ea e3       	ldi	r30, 0x3A	; 58
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	8b 81       	ldd	r24, Y+3	; 0x03
 11c:	80 83       	st	Z, r24
 11e:	0e c0       	rjmp	.+28     	; 0x13c <DIO_enumSetPortDirection+0x7e>
				break;
			case DIO_PORTB:
				DDRB=Copy_u8Direction;
 120:	e7 e3       	ldi	r30, 0x37	; 55
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	8b 81       	ldd	r24, Y+3	; 0x03
 126:	80 83       	st	Z, r24
 128:	09 c0       	rjmp	.+18     	; 0x13c <DIO_enumSetPortDirection+0x7e>
				break;
			case DIO_PORTC:
				DDRC=Copy_u8Direction;
 12a:	e4 e3       	ldi	r30, 0x34	; 52
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	8b 81       	ldd	r24, Y+3	; 0x03
 130:	80 83       	st	Z, r24
 132:	04 c0       	rjmp	.+8      	; 0x13c <DIO_enumSetPortDirection+0x7e>
				break;
			case DIO_PORTD:
				DDRD=Copy_u8Direction;
 134:	e1 e3       	ldi	r30, 0x31	; 49
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	8b 81       	ldd	r24, Y+3	; 0x03
 13a:	80 83       	st	Z, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	89 83       	std	Y+1, r24	; 0x01
 140:	02 c0       	rjmp	.+4      	; 0x146 <DIO_enumSetPortDirection+0x88>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 142:	83 e0       	ldi	r24, 0x03	; 3
 144:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 146:	89 81       	ldd	r24, Y+1	; 0x01
}
 148:	0f 90       	pop	r0
 14a:	0f 90       	pop	r0
 14c:	0f 90       	pop	r0
 14e:	0f 90       	pop	r0
 150:	0f 90       	pop	r0
 152:	cf 91       	pop	r28
 154:	df 91       	pop	r29
 156:	08 95       	ret

00000158 <DIO_enumSetPortValue>:
ES_T DIO_enumSetPortValue (u8 Copy_u8PortID,u8 Copy_u8Value)
{
 158:	df 93       	push	r29
 15a:	cf 93       	push	r28
 15c:	00 d0       	rcall	.+0      	; 0x15e <DIO_enumSetPortValue+0x6>
 15e:	00 d0       	rcall	.+0      	; 0x160 <DIO_enumSetPortValue+0x8>
 160:	0f 92       	push	r0
 162:	cd b7       	in	r28, 0x3d	; 61
 164:	de b7       	in	r29, 0x3e	; 62
 166:	8a 83       	std	Y+2, r24	; 0x02
 168:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
 16a:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 16c:	8a 81       	ldd	r24, Y+2	; 0x02
 16e:	84 30       	cpi	r24, 0x04	; 4
 170:	a8 f5       	brcc	.+106    	; 0x1dc <DIO_enumSetPortValue+0x84>
	{
		switch(Copy_u8PortID)
 172:	8a 81       	ldd	r24, Y+2	; 0x02
 174:	28 2f       	mov	r18, r24
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	3d 83       	std	Y+5, r19	; 0x05
 17a:	2c 83       	std	Y+4, r18	; 0x04
 17c:	8c 81       	ldd	r24, Y+4	; 0x04
 17e:	9d 81       	ldd	r25, Y+5	; 0x05
 180:	81 30       	cpi	r24, 0x01	; 1
 182:	91 05       	cpc	r25, r1
 184:	d1 f0       	breq	.+52     	; 0x1ba <DIO_enumSetPortValue+0x62>
 186:	2c 81       	ldd	r18, Y+4	; 0x04
 188:	3d 81       	ldd	r19, Y+5	; 0x05
 18a:	22 30       	cpi	r18, 0x02	; 2
 18c:	31 05       	cpc	r19, r1
 18e:	2c f4       	brge	.+10     	; 0x19a <DIO_enumSetPortValue+0x42>
 190:	8c 81       	ldd	r24, Y+4	; 0x04
 192:	9d 81       	ldd	r25, Y+5	; 0x05
 194:	00 97       	sbiw	r24, 0x00	; 0
 196:	61 f0       	breq	.+24     	; 0x1b0 <DIO_enumSetPortValue+0x58>
 198:	1e c0       	rjmp	.+60     	; 0x1d6 <DIO_enumSetPortValue+0x7e>
 19a:	2c 81       	ldd	r18, Y+4	; 0x04
 19c:	3d 81       	ldd	r19, Y+5	; 0x05
 19e:	22 30       	cpi	r18, 0x02	; 2
 1a0:	31 05       	cpc	r19, r1
 1a2:	81 f0       	breq	.+32     	; 0x1c4 <DIO_enumSetPortValue+0x6c>
 1a4:	8c 81       	ldd	r24, Y+4	; 0x04
 1a6:	9d 81       	ldd	r25, Y+5	; 0x05
 1a8:	83 30       	cpi	r24, 0x03	; 3
 1aa:	91 05       	cpc	r25, r1
 1ac:	81 f0       	breq	.+32     	; 0x1ce <DIO_enumSetPortValue+0x76>
 1ae:	13 c0       	rjmp	.+38     	; 0x1d6 <DIO_enumSetPortValue+0x7e>
		{
			case DIO_PORTA:
				PORTA=Copy_u8Value;
 1b0:	eb e3       	ldi	r30, 0x3B	; 59
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	8b 81       	ldd	r24, Y+3	; 0x03
 1b6:	80 83       	st	Z, r24
 1b8:	0e c0       	rjmp	.+28     	; 0x1d6 <DIO_enumSetPortValue+0x7e>
				break;
			case DIO_PORTB:
				PORTB=Copy_u8Value;
 1ba:	e8 e3       	ldi	r30, 0x38	; 56
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	8b 81       	ldd	r24, Y+3	; 0x03
 1c0:	80 83       	st	Z, r24
 1c2:	09 c0       	rjmp	.+18     	; 0x1d6 <DIO_enumSetPortValue+0x7e>
				break;
			case DIO_PORTC:
				PORTC=Copy_u8Value;
 1c4:	e5 e3       	ldi	r30, 0x35	; 53
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	8b 81       	ldd	r24, Y+3	; 0x03
 1ca:	80 83       	st	Z, r24
 1cc:	04 c0       	rjmp	.+8      	; 0x1d6 <DIO_enumSetPortValue+0x7e>
				break;
			case DIO_PORTD:
				PORTD=Copy_u8Value;
 1ce:	e2 e3       	ldi	r30, 0x32	; 50
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	8b 81       	ldd	r24, Y+3	; 0x03
 1d4:	80 83       	st	Z, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	89 83       	std	Y+1, r24	; 0x01
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <DIO_enumSetPortValue+0x88>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 1dc:	83 e0       	ldi	r24, 0x03	; 3
 1de:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 1e0:	89 81       	ldd	r24, Y+1	; 0x01
}
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	cf 91       	pop	r28
 1ee:	df 91       	pop	r29
 1f0:	08 95       	ret

000001f2 <DIO_enumTogglePortDirection>:
ES_T DIO_enumTogglePortDirection (u8 Copy_u8PortID)
{
 1f2:	df 93       	push	r29
 1f4:	cf 93       	push	r28
 1f6:	00 d0       	rcall	.+0      	; 0x1f8 <DIO_enumTogglePortDirection+0x6>
 1f8:	00 d0       	rcall	.+0      	; 0x1fa <DIO_enumTogglePortDirection+0x8>
 1fa:	cd b7       	in	r28, 0x3d	; 61
 1fc:	de b7       	in	r29, 0x3e	; 62
 1fe:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
 200:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 202:	8a 81       	ldd	r24, Y+2	; 0x02
 204:	84 30       	cpi	r24, 0x04	; 4
 206:	08 f0       	brcs	.+2      	; 0x20a <DIO_enumTogglePortDirection+0x18>
 208:	41 c0       	rjmp	.+130    	; 0x28c <DIO_enumTogglePortDirection+0x9a>
	{
		switch(Copy_u8PortID)
 20a:	8a 81       	ldd	r24, Y+2	; 0x02
 20c:	28 2f       	mov	r18, r24
 20e:	30 e0       	ldi	r19, 0x00	; 0
 210:	3c 83       	std	Y+4, r19	; 0x04
 212:	2b 83       	std	Y+3, r18	; 0x03
 214:	8b 81       	ldd	r24, Y+3	; 0x03
 216:	9c 81       	ldd	r25, Y+4	; 0x04
 218:	81 30       	cpi	r24, 0x01	; 1
 21a:	91 05       	cpc	r25, r1
 21c:	e9 f0       	breq	.+58     	; 0x258 <DIO_enumTogglePortDirection+0x66>
 21e:	2b 81       	ldd	r18, Y+3	; 0x03
 220:	3c 81       	ldd	r19, Y+4	; 0x04
 222:	22 30       	cpi	r18, 0x02	; 2
 224:	31 05       	cpc	r19, r1
 226:	2c f4       	brge	.+10     	; 0x232 <DIO_enumTogglePortDirection+0x40>
 228:	8b 81       	ldd	r24, Y+3	; 0x03
 22a:	9c 81       	ldd	r25, Y+4	; 0x04
 22c:	00 97       	sbiw	r24, 0x00	; 0
 22e:	61 f0       	breq	.+24     	; 0x248 <DIO_enumTogglePortDirection+0x56>
 230:	2a c0       	rjmp	.+84     	; 0x286 <DIO_enumTogglePortDirection+0x94>
 232:	2b 81       	ldd	r18, Y+3	; 0x03
 234:	3c 81       	ldd	r19, Y+4	; 0x04
 236:	22 30       	cpi	r18, 0x02	; 2
 238:	31 05       	cpc	r19, r1
 23a:	b1 f0       	breq	.+44     	; 0x268 <DIO_enumTogglePortDirection+0x76>
 23c:	8b 81       	ldd	r24, Y+3	; 0x03
 23e:	9c 81       	ldd	r25, Y+4	; 0x04
 240:	83 30       	cpi	r24, 0x03	; 3
 242:	91 05       	cpc	r25, r1
 244:	c9 f0       	breq	.+50     	; 0x278 <DIO_enumTogglePortDirection+0x86>
 246:	1f c0       	rjmp	.+62     	; 0x286 <DIO_enumTogglePortDirection+0x94>
		{
			case DIO_PORTA:
				DDRA=~DDRA;
 248:	aa e3       	ldi	r26, 0x3A	; 58
 24a:	b0 e0       	ldi	r27, 0x00	; 0
 24c:	ea e3       	ldi	r30, 0x3A	; 58
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	80 81       	ld	r24, Z
 252:	80 95       	com	r24
 254:	8c 93       	st	X, r24
 256:	17 c0       	rjmp	.+46     	; 0x286 <DIO_enumTogglePortDirection+0x94>
				break;
			case DIO_PORTB:
				DDRB=~DDRB;
 258:	a7 e3       	ldi	r26, 0x37	; 55
 25a:	b0 e0       	ldi	r27, 0x00	; 0
 25c:	e7 e3       	ldi	r30, 0x37	; 55
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	80 81       	ld	r24, Z
 262:	80 95       	com	r24
 264:	8c 93       	st	X, r24
 266:	0f c0       	rjmp	.+30     	; 0x286 <DIO_enumTogglePortDirection+0x94>
				break;
			case DIO_PORTC:
				DDRC=~DDRC;
 268:	a4 e3       	ldi	r26, 0x34	; 52
 26a:	b0 e0       	ldi	r27, 0x00	; 0
 26c:	e4 e3       	ldi	r30, 0x34	; 52
 26e:	f0 e0       	ldi	r31, 0x00	; 0
 270:	80 81       	ld	r24, Z
 272:	80 95       	com	r24
 274:	8c 93       	st	X, r24
 276:	07 c0       	rjmp	.+14     	; 0x286 <DIO_enumTogglePortDirection+0x94>
				break;
			case DIO_PORTD:
				DDRD=~DDRD;
 278:	a1 e3       	ldi	r26, 0x31	; 49
 27a:	b0 e0       	ldi	r27, 0x00	; 0
 27c:	e1 e3       	ldi	r30, 0x31	; 49
 27e:	f0 e0       	ldi	r31, 0x00	; 0
 280:	80 81       	ld	r24, Z
 282:	80 95       	com	r24
 284:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	89 83       	std	Y+1, r24	; 0x01
 28a:	02 c0       	rjmp	.+4      	; 0x290 <DIO_enumTogglePortDirection+0x9e>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 28c:	83 e0       	ldi	r24, 0x03	; 3
 28e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 290:	89 81       	ldd	r24, Y+1	; 0x01
}
 292:	0f 90       	pop	r0
 294:	0f 90       	pop	r0
 296:	0f 90       	pop	r0
 298:	0f 90       	pop	r0
 29a:	cf 91       	pop	r28
 29c:	df 91       	pop	r29
 29e:	08 95       	ret

000002a0 <DIO_enumTogglePortValue>:
ES_T DIO_enumTogglePortValue (u8 Copy_u8PortID)
{
 2a0:	df 93       	push	r29
 2a2:	cf 93       	push	r28
 2a4:	00 d0       	rcall	.+0      	; 0x2a6 <DIO_enumTogglePortValue+0x6>
 2a6:	00 d0       	rcall	.+0      	; 0x2a8 <DIO_enumTogglePortValue+0x8>
 2a8:	cd b7       	in	r28, 0x3d	; 61
 2aa:	de b7       	in	r29, 0x3e	; 62
 2ac:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
 2ae:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 2b0:	8a 81       	ldd	r24, Y+2	; 0x02
 2b2:	84 30       	cpi	r24, 0x04	; 4
 2b4:	08 f0       	brcs	.+2      	; 0x2b8 <DIO_enumTogglePortValue+0x18>
 2b6:	41 c0       	rjmp	.+130    	; 0x33a <DIO_enumTogglePortValue+0x9a>
	{
		switch(Copy_u8PortID)
 2b8:	8a 81       	ldd	r24, Y+2	; 0x02
 2ba:	28 2f       	mov	r18, r24
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	3c 83       	std	Y+4, r19	; 0x04
 2c0:	2b 83       	std	Y+3, r18	; 0x03
 2c2:	8b 81       	ldd	r24, Y+3	; 0x03
 2c4:	9c 81       	ldd	r25, Y+4	; 0x04
 2c6:	81 30       	cpi	r24, 0x01	; 1
 2c8:	91 05       	cpc	r25, r1
 2ca:	e9 f0       	breq	.+58     	; 0x306 <DIO_enumTogglePortValue+0x66>
 2cc:	2b 81       	ldd	r18, Y+3	; 0x03
 2ce:	3c 81       	ldd	r19, Y+4	; 0x04
 2d0:	22 30       	cpi	r18, 0x02	; 2
 2d2:	31 05       	cpc	r19, r1
 2d4:	2c f4       	brge	.+10     	; 0x2e0 <DIO_enumTogglePortValue+0x40>
 2d6:	8b 81       	ldd	r24, Y+3	; 0x03
 2d8:	9c 81       	ldd	r25, Y+4	; 0x04
 2da:	00 97       	sbiw	r24, 0x00	; 0
 2dc:	61 f0       	breq	.+24     	; 0x2f6 <DIO_enumTogglePortValue+0x56>
 2de:	2a c0       	rjmp	.+84     	; 0x334 <DIO_enumTogglePortValue+0x94>
 2e0:	2b 81       	ldd	r18, Y+3	; 0x03
 2e2:	3c 81       	ldd	r19, Y+4	; 0x04
 2e4:	22 30       	cpi	r18, 0x02	; 2
 2e6:	31 05       	cpc	r19, r1
 2e8:	b1 f0       	breq	.+44     	; 0x316 <DIO_enumTogglePortValue+0x76>
 2ea:	8b 81       	ldd	r24, Y+3	; 0x03
 2ec:	9c 81       	ldd	r25, Y+4	; 0x04
 2ee:	83 30       	cpi	r24, 0x03	; 3
 2f0:	91 05       	cpc	r25, r1
 2f2:	c9 f0       	breq	.+50     	; 0x326 <DIO_enumTogglePortValue+0x86>
 2f4:	1f c0       	rjmp	.+62     	; 0x334 <DIO_enumTogglePortValue+0x94>
		{
			case DIO_PORTA:
				PORTA=~PORTA;
 2f6:	ab e3       	ldi	r26, 0x3B	; 59
 2f8:	b0 e0       	ldi	r27, 0x00	; 0
 2fa:	eb e3       	ldi	r30, 0x3B	; 59
 2fc:	f0 e0       	ldi	r31, 0x00	; 0
 2fe:	80 81       	ld	r24, Z
 300:	80 95       	com	r24
 302:	8c 93       	st	X, r24
 304:	17 c0       	rjmp	.+46     	; 0x334 <DIO_enumTogglePortValue+0x94>
				break;
			case DIO_PORTB:
				PORTB=~PORTB;
 306:	a8 e3       	ldi	r26, 0x38	; 56
 308:	b0 e0       	ldi	r27, 0x00	; 0
 30a:	e8 e3       	ldi	r30, 0x38	; 56
 30c:	f0 e0       	ldi	r31, 0x00	; 0
 30e:	80 81       	ld	r24, Z
 310:	80 95       	com	r24
 312:	8c 93       	st	X, r24
 314:	0f c0       	rjmp	.+30     	; 0x334 <DIO_enumTogglePortValue+0x94>
				break;
			case DIO_PORTC:
				PORTC=~PORTC;
 316:	a5 e3       	ldi	r26, 0x35	; 53
 318:	b0 e0       	ldi	r27, 0x00	; 0
 31a:	e5 e3       	ldi	r30, 0x35	; 53
 31c:	f0 e0       	ldi	r31, 0x00	; 0
 31e:	80 81       	ld	r24, Z
 320:	80 95       	com	r24
 322:	8c 93       	st	X, r24
 324:	07 c0       	rjmp	.+14     	; 0x334 <DIO_enumTogglePortValue+0x94>
				break;
			case DIO_PORTD:
				PORTD=~PORTD;
 326:	a2 e3       	ldi	r26, 0x32	; 50
 328:	b0 e0       	ldi	r27, 0x00	; 0
 32a:	e2 e3       	ldi	r30, 0x32	; 50
 32c:	f0 e0       	ldi	r31, 0x00	; 0
 32e:	80 81       	ld	r24, Z
 330:	80 95       	com	r24
 332:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	89 83       	std	Y+1, r24	; 0x01
 338:	02 c0       	rjmp	.+4      	; 0x33e <DIO_enumTogglePortValue+0x9e>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 33a:	83 e0       	ldi	r24, 0x03	; 3
 33c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 33e:	89 81       	ldd	r24, Y+1	; 0x01
}
 340:	0f 90       	pop	r0
 342:	0f 90       	pop	r0
 344:	0f 90       	pop	r0
 346:	0f 90       	pop	r0
 348:	cf 91       	pop	r28
 34a:	df 91       	pop	r29
 34c:	08 95       	ret

0000034e <DIO_enumGetPortDirection>:
ES_T DIO_enumGetPortDirection (u8 Copy_u8PortID,u8 *Copy_pu8Direction)
{
 34e:	df 93       	push	r29
 350:	cf 93       	push	r28
 352:	00 d0       	rcall	.+0      	; 0x354 <DIO_enumGetPortDirection+0x6>
 354:	00 d0       	rcall	.+0      	; 0x356 <DIO_enumGetPortDirection+0x8>
 356:	00 d0       	rcall	.+0      	; 0x358 <DIO_enumGetPortDirection+0xa>
 358:	cd b7       	in	r28, 0x3d	; 61
 35a:	de b7       	in	r29, 0x3e	; 62
 35c:	8a 83       	std	Y+2, r24	; 0x02
 35e:	7c 83       	std	Y+4, r23	; 0x04
 360:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
 362:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 364:	8a 81       	ldd	r24, Y+2	; 0x02
 366:	84 30       	cpi	r24, 0x04	; 4
 368:	08 f0       	brcs	.+2      	; 0x36c <DIO_enumGetPortDirection+0x1e>
 36a:	44 c0       	rjmp	.+136    	; 0x3f4 <DIO_enumGetPortDirection+0xa6>
	{
		if (Copy_pu8Direction!=NULL)
 36c:	8b 81       	ldd	r24, Y+3	; 0x03
 36e:	9c 81       	ldd	r25, Y+4	; 0x04
 370:	00 97       	sbiw	r24, 0x00	; 0
 372:	e9 f1       	breq	.+122    	; 0x3ee <DIO_enumGetPortDirection+0xa0>
		{
			switch(Copy_u8PortID)
 374:	8a 81       	ldd	r24, Y+2	; 0x02
 376:	28 2f       	mov	r18, r24
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	3e 83       	std	Y+6, r19	; 0x06
 37c:	2d 83       	std	Y+5, r18	; 0x05
 37e:	8d 81       	ldd	r24, Y+5	; 0x05
 380:	9e 81       	ldd	r25, Y+6	; 0x06
 382:	81 30       	cpi	r24, 0x01	; 1
 384:	91 05       	cpc	r25, r1
 386:	e1 f0       	breq	.+56     	; 0x3c0 <DIO_enumGetPortDirection+0x72>
 388:	2d 81       	ldd	r18, Y+5	; 0x05
 38a:	3e 81       	ldd	r19, Y+6	; 0x06
 38c:	22 30       	cpi	r18, 0x02	; 2
 38e:	31 05       	cpc	r19, r1
 390:	2c f4       	brge	.+10     	; 0x39c <DIO_enumGetPortDirection+0x4e>
 392:	8d 81       	ldd	r24, Y+5	; 0x05
 394:	9e 81       	ldd	r25, Y+6	; 0x06
 396:	00 97       	sbiw	r24, 0x00	; 0
 398:	61 f0       	breq	.+24     	; 0x3b2 <DIO_enumGetPortDirection+0x64>
 39a:	26 c0       	rjmp	.+76     	; 0x3e8 <DIO_enumGetPortDirection+0x9a>
 39c:	2d 81       	ldd	r18, Y+5	; 0x05
 39e:	3e 81       	ldd	r19, Y+6	; 0x06
 3a0:	22 30       	cpi	r18, 0x02	; 2
 3a2:	31 05       	cpc	r19, r1
 3a4:	a1 f0       	breq	.+40     	; 0x3ce <DIO_enumGetPortDirection+0x80>
 3a6:	8d 81       	ldd	r24, Y+5	; 0x05
 3a8:	9e 81       	ldd	r25, Y+6	; 0x06
 3aa:	83 30       	cpi	r24, 0x03	; 3
 3ac:	91 05       	cpc	r25, r1
 3ae:	b1 f0       	breq	.+44     	; 0x3dc <DIO_enumGetPortDirection+0x8e>
 3b0:	1b c0       	rjmp	.+54     	; 0x3e8 <DIO_enumGetPortDirection+0x9a>
			{
				case DIO_PORTA:
					*Copy_pu8Direction=DDRA;
 3b2:	ea e3       	ldi	r30, 0x3A	; 58
 3b4:	f0 e0       	ldi	r31, 0x00	; 0
 3b6:	80 81       	ld	r24, Z
 3b8:	eb 81       	ldd	r30, Y+3	; 0x03
 3ba:	fc 81       	ldd	r31, Y+4	; 0x04
 3bc:	80 83       	st	Z, r24
 3be:	14 c0       	rjmp	.+40     	; 0x3e8 <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTB:
					*Copy_pu8Direction=DDRB;
 3c0:	e7 e3       	ldi	r30, 0x37	; 55
 3c2:	f0 e0       	ldi	r31, 0x00	; 0
 3c4:	80 81       	ld	r24, Z
 3c6:	eb 81       	ldd	r30, Y+3	; 0x03
 3c8:	fc 81       	ldd	r31, Y+4	; 0x04
 3ca:	80 83       	st	Z, r24
 3cc:	0d c0       	rjmp	.+26     	; 0x3e8 <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTC:
					*Copy_pu8Direction=DDRC;
 3ce:	e4 e3       	ldi	r30, 0x34	; 52
 3d0:	f0 e0       	ldi	r31, 0x00	; 0
 3d2:	80 81       	ld	r24, Z
 3d4:	eb 81       	ldd	r30, Y+3	; 0x03
 3d6:	fc 81       	ldd	r31, Y+4	; 0x04
 3d8:	80 83       	st	Z, r24
 3da:	06 c0       	rjmp	.+12     	; 0x3e8 <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTD:
					*Copy_pu8Direction=DDRD;
 3dc:	e1 e3       	ldi	r30, 0x31	; 49
 3de:	f0 e0       	ldi	r31, 0x00	; 0
 3e0:	80 81       	ld	r24, Z
 3e2:	eb 81       	ldd	r30, Y+3	; 0x03
 3e4:	fc 81       	ldd	r31, Y+4	; 0x04
 3e6:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
 3e8:	81 e0       	ldi	r24, 0x01	; 1
 3ea:	89 83       	std	Y+1, r24	; 0x01
 3ec:	05 c0       	rjmp	.+10     	; 0x3f8 <DIO_enumGetPortDirection+0xaa>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
 3ee:	82 e0       	ldi	r24, 0x02	; 2
 3f0:	89 83       	std	Y+1, r24	; 0x01
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <DIO_enumGetPortDirection+0xaa>
		}

	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 3f4:	83 e0       	ldi	r24, 0x03	; 3
 3f6:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 3f8:	89 81       	ldd	r24, Y+1	; 0x01
}
 3fa:	26 96       	adiw	r28, 0x06	; 6
 3fc:	0f b6       	in	r0, 0x3f	; 63
 3fe:	f8 94       	cli
 400:	de bf       	out	0x3e, r29	; 62
 402:	0f be       	out	0x3f, r0	; 63
 404:	cd bf       	out	0x3d, r28	; 61
 406:	cf 91       	pop	r28
 408:	df 91       	pop	r29
 40a:	08 95       	ret

0000040c <DIO_enumGetPortValue>:
ES_T DIO_enumGetPortValue (u8 Copy_u8PortID,u8 *Copy_pu8Value)
{
 40c:	df 93       	push	r29
 40e:	cf 93       	push	r28
 410:	00 d0       	rcall	.+0      	; 0x412 <DIO_enumGetPortValue+0x6>
 412:	00 d0       	rcall	.+0      	; 0x414 <DIO_enumGetPortValue+0x8>
 414:	00 d0       	rcall	.+0      	; 0x416 <DIO_enumGetPortValue+0xa>
 416:	cd b7       	in	r28, 0x3d	; 61
 418:	de b7       	in	r29, 0x3e	; 62
 41a:	8a 83       	std	Y+2, r24	; 0x02
 41c:	7c 83       	std	Y+4, r23	; 0x04
 41e:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
 420:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 422:	8a 81       	ldd	r24, Y+2	; 0x02
 424:	84 30       	cpi	r24, 0x04	; 4
 426:	08 f0       	brcs	.+2      	; 0x42a <DIO_enumGetPortValue+0x1e>
 428:	44 c0       	rjmp	.+136    	; 0x4b2 <DIO_enumGetPortValue+0xa6>
	{
		if (Copy_pu8Value!=NULL)
 42a:	8b 81       	ldd	r24, Y+3	; 0x03
 42c:	9c 81       	ldd	r25, Y+4	; 0x04
 42e:	00 97       	sbiw	r24, 0x00	; 0
 430:	e9 f1       	breq	.+122    	; 0x4ac <DIO_enumGetPortValue+0xa0>
		{
			switch(Copy_u8PortID)
 432:	8a 81       	ldd	r24, Y+2	; 0x02
 434:	28 2f       	mov	r18, r24
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	3e 83       	std	Y+6, r19	; 0x06
 43a:	2d 83       	std	Y+5, r18	; 0x05
 43c:	8d 81       	ldd	r24, Y+5	; 0x05
 43e:	9e 81       	ldd	r25, Y+6	; 0x06
 440:	81 30       	cpi	r24, 0x01	; 1
 442:	91 05       	cpc	r25, r1
 444:	e1 f0       	breq	.+56     	; 0x47e <DIO_enumGetPortValue+0x72>
 446:	2d 81       	ldd	r18, Y+5	; 0x05
 448:	3e 81       	ldd	r19, Y+6	; 0x06
 44a:	22 30       	cpi	r18, 0x02	; 2
 44c:	31 05       	cpc	r19, r1
 44e:	2c f4       	brge	.+10     	; 0x45a <DIO_enumGetPortValue+0x4e>
 450:	8d 81       	ldd	r24, Y+5	; 0x05
 452:	9e 81       	ldd	r25, Y+6	; 0x06
 454:	00 97       	sbiw	r24, 0x00	; 0
 456:	61 f0       	breq	.+24     	; 0x470 <DIO_enumGetPortValue+0x64>
 458:	26 c0       	rjmp	.+76     	; 0x4a6 <DIO_enumGetPortValue+0x9a>
 45a:	2d 81       	ldd	r18, Y+5	; 0x05
 45c:	3e 81       	ldd	r19, Y+6	; 0x06
 45e:	22 30       	cpi	r18, 0x02	; 2
 460:	31 05       	cpc	r19, r1
 462:	a1 f0       	breq	.+40     	; 0x48c <DIO_enumGetPortValue+0x80>
 464:	8d 81       	ldd	r24, Y+5	; 0x05
 466:	9e 81       	ldd	r25, Y+6	; 0x06
 468:	83 30       	cpi	r24, 0x03	; 3
 46a:	91 05       	cpc	r25, r1
 46c:	b1 f0       	breq	.+44     	; 0x49a <DIO_enumGetPortValue+0x8e>
 46e:	1b c0       	rjmp	.+54     	; 0x4a6 <DIO_enumGetPortValue+0x9a>
			{
				case DIO_PORTA:
					*Copy_pu8Value=PINA;
 470:	e9 e3       	ldi	r30, 0x39	; 57
 472:	f0 e0       	ldi	r31, 0x00	; 0
 474:	80 81       	ld	r24, Z
 476:	eb 81       	ldd	r30, Y+3	; 0x03
 478:	fc 81       	ldd	r31, Y+4	; 0x04
 47a:	80 83       	st	Z, r24
 47c:	14 c0       	rjmp	.+40     	; 0x4a6 <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTB:
					*Copy_pu8Value=PINB;
 47e:	e6 e3       	ldi	r30, 0x36	; 54
 480:	f0 e0       	ldi	r31, 0x00	; 0
 482:	80 81       	ld	r24, Z
 484:	eb 81       	ldd	r30, Y+3	; 0x03
 486:	fc 81       	ldd	r31, Y+4	; 0x04
 488:	80 83       	st	Z, r24
 48a:	0d c0       	rjmp	.+26     	; 0x4a6 <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTC:
					*Copy_pu8Value=PINC;
 48c:	e3 e3       	ldi	r30, 0x33	; 51
 48e:	f0 e0       	ldi	r31, 0x00	; 0
 490:	80 81       	ld	r24, Z
 492:	eb 81       	ldd	r30, Y+3	; 0x03
 494:	fc 81       	ldd	r31, Y+4	; 0x04
 496:	80 83       	st	Z, r24
 498:	06 c0       	rjmp	.+12     	; 0x4a6 <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTD:
					*Copy_pu8Value=PIND;
 49a:	e0 e3       	ldi	r30, 0x30	; 48
 49c:	f0 e0       	ldi	r31, 0x00	; 0
 49e:	80 81       	ld	r24, Z
 4a0:	eb 81       	ldd	r30, Y+3	; 0x03
 4a2:	fc 81       	ldd	r31, Y+4	; 0x04
 4a4:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	89 83       	std	Y+1, r24	; 0x01
 4aa:	05 c0       	rjmp	.+10     	; 0x4b6 <DIO_enumGetPortValue+0xaa>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
 4ac:	82 e0       	ldi	r24, 0x02	; 2
 4ae:	89 83       	std	Y+1, r24	; 0x01
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <DIO_enumGetPortValue+0xaa>
		}

	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 4b2:	83 e0       	ldi	r24, 0x03	; 3
 4b4:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 4b6:	89 81       	ldd	r24, Y+1	; 0x01
}
 4b8:	26 96       	adiw	r28, 0x06	; 6
 4ba:	0f b6       	in	r0, 0x3f	; 63
 4bc:	f8 94       	cli
 4be:	de bf       	out	0x3e, r29	; 62
 4c0:	0f be       	out	0x3f, r0	; 63
 4c2:	cd bf       	out	0x3d, r28	; 61
 4c4:	cf 91       	pop	r28
 4c6:	df 91       	pop	r29
 4c8:	08 95       	ret

000004ca <DIO_enumSetPinDirection>:

ES_T DIO_enumSetPinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8Direction)
{
 4ca:	df 93       	push	r29
 4cc:	cf 93       	push	r28
 4ce:	00 d0       	rcall	.+0      	; 0x4d0 <DIO_enumSetPinDirection+0x6>
 4d0:	00 d0       	rcall	.+0      	; 0x4d2 <DIO_enumSetPinDirection+0x8>
 4d2:	00 d0       	rcall	.+0      	; 0x4d4 <DIO_enumSetPinDirection+0xa>
 4d4:	cd b7       	in	r28, 0x3d	; 61
 4d6:	de b7       	in	r29, 0x3e	; 62
 4d8:	8a 83       	std	Y+2, r24	; 0x02
 4da:	6b 83       	std	Y+3, r22	; 0x03
 4dc:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
 4de:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&& Copy_u8PinID <= DIO_PIN7 && Copy_u8Direction <= OUTPUT)
 4e0:	8a 81       	ldd	r24, Y+2	; 0x02
 4e2:	84 30       	cpi	r24, 0x04	; 4
 4e4:	08 f0       	brcs	.+2      	; 0x4e8 <DIO_enumSetPinDirection+0x1e>
 4e6:	d1 c0       	rjmp	.+418    	; 0x68a <DIO_enumSetPinDirection+0x1c0>
 4e8:	8b 81       	ldd	r24, Y+3	; 0x03
 4ea:	88 30       	cpi	r24, 0x08	; 8
 4ec:	08 f0       	brcs	.+2      	; 0x4f0 <DIO_enumSetPinDirection+0x26>
 4ee:	cd c0       	rjmp	.+410    	; 0x68a <DIO_enumSetPinDirection+0x1c0>
 4f0:	8c 81       	ldd	r24, Y+4	; 0x04
 4f2:	82 30       	cpi	r24, 0x02	; 2
 4f4:	08 f0       	brcs	.+2      	; 0x4f8 <DIO_enumSetPinDirection+0x2e>
 4f6:	c9 c0       	rjmp	.+402    	; 0x68a <DIO_enumSetPinDirection+0x1c0>
	{
		switch(Copy_u8PortID)
 4f8:	8a 81       	ldd	r24, Y+2	; 0x02
 4fa:	28 2f       	mov	r18, r24
 4fc:	30 e0       	ldi	r19, 0x00	; 0
 4fe:	3e 83       	std	Y+6, r19	; 0x06
 500:	2d 83       	std	Y+5, r18	; 0x05
 502:	6d 81       	ldd	r22, Y+5	; 0x05
 504:	7e 81       	ldd	r23, Y+6	; 0x06
 506:	61 30       	cpi	r22, 0x01	; 1
 508:	71 05       	cpc	r23, r1
 50a:	09 f4       	brne	.+2      	; 0x50e <DIO_enumSetPinDirection+0x44>
 50c:	41 c0       	rjmp	.+130    	; 0x590 <DIO_enumSetPinDirection+0xc6>
 50e:	8d 81       	ldd	r24, Y+5	; 0x05
 510:	9e 81       	ldd	r25, Y+6	; 0x06
 512:	82 30       	cpi	r24, 0x02	; 2
 514:	91 05       	cpc	r25, r1
 516:	34 f4       	brge	.+12     	; 0x524 <DIO_enumSetPinDirection+0x5a>
 518:	2d 81       	ldd	r18, Y+5	; 0x05
 51a:	3e 81       	ldd	r19, Y+6	; 0x06
 51c:	21 15       	cp	r18, r1
 51e:	31 05       	cpc	r19, r1
 520:	71 f0       	breq	.+28     	; 0x53e <DIO_enumSetPinDirection+0x74>
 522:	b0 c0       	rjmp	.+352    	; 0x684 <DIO_enumSetPinDirection+0x1ba>
 524:	6d 81       	ldd	r22, Y+5	; 0x05
 526:	7e 81       	ldd	r23, Y+6	; 0x06
 528:	62 30       	cpi	r22, 0x02	; 2
 52a:	71 05       	cpc	r23, r1
 52c:	09 f4       	brne	.+2      	; 0x530 <DIO_enumSetPinDirection+0x66>
 52e:	59 c0       	rjmp	.+178    	; 0x5e2 <DIO_enumSetPinDirection+0x118>
 530:	8d 81       	ldd	r24, Y+5	; 0x05
 532:	9e 81       	ldd	r25, Y+6	; 0x06
 534:	83 30       	cpi	r24, 0x03	; 3
 536:	91 05       	cpc	r25, r1
 538:	09 f4       	brne	.+2      	; 0x53c <DIO_enumSetPinDirection+0x72>
 53a:	7c c0       	rjmp	.+248    	; 0x634 <DIO_enumSetPinDirection+0x16a>
 53c:	a3 c0       	rjmp	.+326    	; 0x684 <DIO_enumSetPinDirection+0x1ba>
		{
			case DIO_PORTA:
				CLEAR_BIT(DDRA,Copy_u8PinID);
 53e:	aa e3       	ldi	r26, 0x3A	; 58
 540:	b0 e0       	ldi	r27, 0x00	; 0
 542:	ea e3       	ldi	r30, 0x3A	; 58
 544:	f0 e0       	ldi	r31, 0x00	; 0
 546:	80 81       	ld	r24, Z
 548:	48 2f       	mov	r20, r24
 54a:	8b 81       	ldd	r24, Y+3	; 0x03
 54c:	28 2f       	mov	r18, r24
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	02 c0       	rjmp	.+4      	; 0x55a <DIO_enumSetPinDirection+0x90>
 556:	88 0f       	add	r24, r24
 558:	99 1f       	adc	r25, r25
 55a:	2a 95       	dec	r18
 55c:	e2 f7       	brpl	.-8      	; 0x556 <DIO_enumSetPinDirection+0x8c>
 55e:	80 95       	com	r24
 560:	84 23       	and	r24, r20
 562:	8c 93       	st	X, r24
				DDRA |= (Copy_u8Direction << Copy_u8PinID);
 564:	aa e3       	ldi	r26, 0x3A	; 58
 566:	b0 e0       	ldi	r27, 0x00	; 0
 568:	ea e3       	ldi	r30, 0x3A	; 58
 56a:	f0 e0       	ldi	r31, 0x00	; 0
 56c:	80 81       	ld	r24, Z
 56e:	48 2f       	mov	r20, r24
 570:	8c 81       	ldd	r24, Y+4	; 0x04
 572:	28 2f       	mov	r18, r24
 574:	30 e0       	ldi	r19, 0x00	; 0
 576:	8b 81       	ldd	r24, Y+3	; 0x03
 578:	88 2f       	mov	r24, r24
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	b9 01       	movw	r22, r18
 57e:	02 c0       	rjmp	.+4      	; 0x584 <DIO_enumSetPinDirection+0xba>
 580:	66 0f       	add	r22, r22
 582:	77 1f       	adc	r23, r23
 584:	8a 95       	dec	r24
 586:	e2 f7       	brpl	.-8      	; 0x580 <DIO_enumSetPinDirection+0xb6>
 588:	cb 01       	movw	r24, r22
 58a:	84 2b       	or	r24, r20
 58c:	8c 93       	st	X, r24
 58e:	7a c0       	rjmp	.+244    	; 0x684 <DIO_enumSetPinDirection+0x1ba>
				break;
			case DIO_PORTB:
				CLEAR_BIT(DDRB,Copy_u8PinID);
 590:	a7 e3       	ldi	r26, 0x37	; 55
 592:	b0 e0       	ldi	r27, 0x00	; 0
 594:	e7 e3       	ldi	r30, 0x37	; 55
 596:	f0 e0       	ldi	r31, 0x00	; 0
 598:	80 81       	ld	r24, Z
 59a:	48 2f       	mov	r20, r24
 59c:	8b 81       	ldd	r24, Y+3	; 0x03
 59e:	28 2f       	mov	r18, r24
 5a0:	30 e0       	ldi	r19, 0x00	; 0
 5a2:	81 e0       	ldi	r24, 0x01	; 1
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	02 c0       	rjmp	.+4      	; 0x5ac <DIO_enumSetPinDirection+0xe2>
 5a8:	88 0f       	add	r24, r24
 5aa:	99 1f       	adc	r25, r25
 5ac:	2a 95       	dec	r18
 5ae:	e2 f7       	brpl	.-8      	; 0x5a8 <DIO_enumSetPinDirection+0xde>
 5b0:	80 95       	com	r24
 5b2:	84 23       	and	r24, r20
 5b4:	8c 93       	st	X, r24
				DDRB |= (Copy_u8Direction << Copy_u8PinID);
 5b6:	a7 e3       	ldi	r26, 0x37	; 55
 5b8:	b0 e0       	ldi	r27, 0x00	; 0
 5ba:	e7 e3       	ldi	r30, 0x37	; 55
 5bc:	f0 e0       	ldi	r31, 0x00	; 0
 5be:	80 81       	ld	r24, Z
 5c0:	48 2f       	mov	r20, r24
 5c2:	8c 81       	ldd	r24, Y+4	; 0x04
 5c4:	28 2f       	mov	r18, r24
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	8b 81       	ldd	r24, Y+3	; 0x03
 5ca:	88 2f       	mov	r24, r24
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	b9 01       	movw	r22, r18
 5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <DIO_enumSetPinDirection+0x10c>
 5d2:	66 0f       	add	r22, r22
 5d4:	77 1f       	adc	r23, r23
 5d6:	8a 95       	dec	r24
 5d8:	e2 f7       	brpl	.-8      	; 0x5d2 <DIO_enumSetPinDirection+0x108>
 5da:	cb 01       	movw	r24, r22
 5dc:	84 2b       	or	r24, r20
 5de:	8c 93       	st	X, r24
 5e0:	51 c0       	rjmp	.+162    	; 0x684 <DIO_enumSetPinDirection+0x1ba>
				break;
			case DIO_PORTC:
				CLEAR_BIT(DDRC,Copy_u8PinID);
 5e2:	a4 e3       	ldi	r26, 0x34	; 52
 5e4:	b0 e0       	ldi	r27, 0x00	; 0
 5e6:	e4 e3       	ldi	r30, 0x34	; 52
 5e8:	f0 e0       	ldi	r31, 0x00	; 0
 5ea:	80 81       	ld	r24, Z
 5ec:	48 2f       	mov	r20, r24
 5ee:	8b 81       	ldd	r24, Y+3	; 0x03
 5f0:	28 2f       	mov	r18, r24
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	81 e0       	ldi	r24, 0x01	; 1
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	02 c0       	rjmp	.+4      	; 0x5fe <DIO_enumSetPinDirection+0x134>
 5fa:	88 0f       	add	r24, r24
 5fc:	99 1f       	adc	r25, r25
 5fe:	2a 95       	dec	r18
 600:	e2 f7       	brpl	.-8      	; 0x5fa <DIO_enumSetPinDirection+0x130>
 602:	80 95       	com	r24
 604:	84 23       	and	r24, r20
 606:	8c 93       	st	X, r24
				DDRC |= (Copy_u8Direction << Copy_u8PinID);
 608:	a4 e3       	ldi	r26, 0x34	; 52
 60a:	b0 e0       	ldi	r27, 0x00	; 0
 60c:	e4 e3       	ldi	r30, 0x34	; 52
 60e:	f0 e0       	ldi	r31, 0x00	; 0
 610:	80 81       	ld	r24, Z
 612:	48 2f       	mov	r20, r24
 614:	8c 81       	ldd	r24, Y+4	; 0x04
 616:	28 2f       	mov	r18, r24
 618:	30 e0       	ldi	r19, 0x00	; 0
 61a:	8b 81       	ldd	r24, Y+3	; 0x03
 61c:	88 2f       	mov	r24, r24
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	b9 01       	movw	r22, r18
 622:	02 c0       	rjmp	.+4      	; 0x628 <DIO_enumSetPinDirection+0x15e>
 624:	66 0f       	add	r22, r22
 626:	77 1f       	adc	r23, r23
 628:	8a 95       	dec	r24
 62a:	e2 f7       	brpl	.-8      	; 0x624 <DIO_enumSetPinDirection+0x15a>
 62c:	cb 01       	movw	r24, r22
 62e:	84 2b       	or	r24, r20
 630:	8c 93       	st	X, r24
 632:	28 c0       	rjmp	.+80     	; 0x684 <DIO_enumSetPinDirection+0x1ba>
				break;
			case DIO_PORTD:
				CLEAR_BIT(DDRD,Copy_u8PinID);
 634:	a1 e3       	ldi	r26, 0x31	; 49
 636:	b0 e0       	ldi	r27, 0x00	; 0
 638:	e1 e3       	ldi	r30, 0x31	; 49
 63a:	f0 e0       	ldi	r31, 0x00	; 0
 63c:	80 81       	ld	r24, Z
 63e:	48 2f       	mov	r20, r24
 640:	8b 81       	ldd	r24, Y+3	; 0x03
 642:	28 2f       	mov	r18, r24
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	81 e0       	ldi	r24, 0x01	; 1
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	02 c0       	rjmp	.+4      	; 0x650 <DIO_enumSetPinDirection+0x186>
 64c:	88 0f       	add	r24, r24
 64e:	99 1f       	adc	r25, r25
 650:	2a 95       	dec	r18
 652:	e2 f7       	brpl	.-8      	; 0x64c <DIO_enumSetPinDirection+0x182>
 654:	80 95       	com	r24
 656:	84 23       	and	r24, r20
 658:	8c 93       	st	X, r24
				DDRD |= (Copy_u8Direction << Copy_u8PinID);
 65a:	a1 e3       	ldi	r26, 0x31	; 49
 65c:	b0 e0       	ldi	r27, 0x00	; 0
 65e:	e1 e3       	ldi	r30, 0x31	; 49
 660:	f0 e0       	ldi	r31, 0x00	; 0
 662:	80 81       	ld	r24, Z
 664:	48 2f       	mov	r20, r24
 666:	8c 81       	ldd	r24, Y+4	; 0x04
 668:	28 2f       	mov	r18, r24
 66a:	30 e0       	ldi	r19, 0x00	; 0
 66c:	8b 81       	ldd	r24, Y+3	; 0x03
 66e:	88 2f       	mov	r24, r24
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	b9 01       	movw	r22, r18
 674:	02 c0       	rjmp	.+4      	; 0x67a <DIO_enumSetPinDirection+0x1b0>
 676:	66 0f       	add	r22, r22
 678:	77 1f       	adc	r23, r23
 67a:	8a 95       	dec	r24
 67c:	e2 f7       	brpl	.-8      	; 0x676 <DIO_enumSetPinDirection+0x1ac>
 67e:	cb 01       	movw	r24, r22
 680:	84 2b       	or	r24, r20
 682:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 684:	81 e0       	ldi	r24, 0x01	; 1
 686:	89 83       	std	Y+1, r24	; 0x01
 688:	02 c0       	rjmp	.+4      	; 0x68e <DIO_enumSetPinDirection+0x1c4>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 68a:	83 e0       	ldi	r24, 0x03	; 3
 68c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 68e:	89 81       	ldd	r24, Y+1	; 0x01
}
 690:	26 96       	adiw	r28, 0x06	; 6
 692:	0f b6       	in	r0, 0x3f	; 63
 694:	f8 94       	cli
 696:	de bf       	out	0x3e, r29	; 62
 698:	0f be       	out	0x3f, r0	; 63
 69a:	cd bf       	out	0x3d, r28	; 61
 69c:	cf 91       	pop	r28
 69e:	df 91       	pop	r29
 6a0:	08 95       	ret

000006a2 <DIO_enumSetPinValue>:
ES_T DIO_enumSetPinValue (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8Value)
{
 6a2:	df 93       	push	r29
 6a4:	cf 93       	push	r28
 6a6:	00 d0       	rcall	.+0      	; 0x6a8 <DIO_enumSetPinValue+0x6>
 6a8:	00 d0       	rcall	.+0      	; 0x6aa <DIO_enumSetPinValue+0x8>
 6aa:	00 d0       	rcall	.+0      	; 0x6ac <DIO_enumSetPinValue+0xa>
 6ac:	cd b7       	in	r28, 0x3d	; 61
 6ae:	de b7       	in	r29, 0x3e	; 62
 6b0:	8a 83       	std	Y+2, r24	; 0x02
 6b2:	6b 83       	std	Y+3, r22	; 0x03
 6b4:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
 6b6:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7&&Copy_u8Value<=OUTPUT)
 6b8:	8a 81       	ldd	r24, Y+2	; 0x02
 6ba:	84 30       	cpi	r24, 0x04	; 4
 6bc:	08 f0       	brcs	.+2      	; 0x6c0 <DIO_enumSetPinValue+0x1e>
 6be:	d1 c0       	rjmp	.+418    	; 0x862 <__stack+0x3>
 6c0:	8b 81       	ldd	r24, Y+3	; 0x03
 6c2:	88 30       	cpi	r24, 0x08	; 8
 6c4:	08 f0       	brcs	.+2      	; 0x6c8 <DIO_enumSetPinValue+0x26>
 6c6:	cd c0       	rjmp	.+410    	; 0x862 <__stack+0x3>
 6c8:	8c 81       	ldd	r24, Y+4	; 0x04
 6ca:	82 30       	cpi	r24, 0x02	; 2
 6cc:	08 f0       	brcs	.+2      	; 0x6d0 <DIO_enumSetPinValue+0x2e>
 6ce:	c9 c0       	rjmp	.+402    	; 0x862 <__stack+0x3>
	{
		switch(Copy_u8PortID)
 6d0:	8a 81       	ldd	r24, Y+2	; 0x02
 6d2:	28 2f       	mov	r18, r24
 6d4:	30 e0       	ldi	r19, 0x00	; 0
 6d6:	3e 83       	std	Y+6, r19	; 0x06
 6d8:	2d 83       	std	Y+5, r18	; 0x05
 6da:	6d 81       	ldd	r22, Y+5	; 0x05
 6dc:	7e 81       	ldd	r23, Y+6	; 0x06
 6de:	61 30       	cpi	r22, 0x01	; 1
 6e0:	71 05       	cpc	r23, r1
 6e2:	09 f4       	brne	.+2      	; 0x6e6 <DIO_enumSetPinValue+0x44>
 6e4:	41 c0       	rjmp	.+130    	; 0x768 <DIO_enumSetPinValue+0xc6>
 6e6:	8d 81       	ldd	r24, Y+5	; 0x05
 6e8:	9e 81       	ldd	r25, Y+6	; 0x06
 6ea:	82 30       	cpi	r24, 0x02	; 2
 6ec:	91 05       	cpc	r25, r1
 6ee:	34 f4       	brge	.+12     	; 0x6fc <DIO_enumSetPinValue+0x5a>
 6f0:	2d 81       	ldd	r18, Y+5	; 0x05
 6f2:	3e 81       	ldd	r19, Y+6	; 0x06
 6f4:	21 15       	cp	r18, r1
 6f6:	31 05       	cpc	r19, r1
 6f8:	71 f0       	breq	.+28     	; 0x716 <DIO_enumSetPinValue+0x74>
 6fa:	b0 c0       	rjmp	.+352    	; 0x85c <DIO_enumSetPinValue+0x1ba>
 6fc:	6d 81       	ldd	r22, Y+5	; 0x05
 6fe:	7e 81       	ldd	r23, Y+6	; 0x06
 700:	62 30       	cpi	r22, 0x02	; 2
 702:	71 05       	cpc	r23, r1
 704:	09 f4       	brne	.+2      	; 0x708 <DIO_enumSetPinValue+0x66>
 706:	59 c0       	rjmp	.+178    	; 0x7ba <DIO_enumSetPinValue+0x118>
 708:	8d 81       	ldd	r24, Y+5	; 0x05
 70a:	9e 81       	ldd	r25, Y+6	; 0x06
 70c:	83 30       	cpi	r24, 0x03	; 3
 70e:	91 05       	cpc	r25, r1
 710:	09 f4       	brne	.+2      	; 0x714 <DIO_enumSetPinValue+0x72>
 712:	7c c0       	rjmp	.+248    	; 0x80c <DIO_enumSetPinValue+0x16a>
 714:	a3 c0       	rjmp	.+326    	; 0x85c <DIO_enumSetPinValue+0x1ba>
		{
			case DIO_PORTA:
				CLEAR_BIT(PORTA,Copy_u8PinID);
 716:	ab e3       	ldi	r26, 0x3B	; 59
 718:	b0 e0       	ldi	r27, 0x00	; 0
 71a:	eb e3       	ldi	r30, 0x3B	; 59
 71c:	f0 e0       	ldi	r31, 0x00	; 0
 71e:	80 81       	ld	r24, Z
 720:	48 2f       	mov	r20, r24
 722:	8b 81       	ldd	r24, Y+3	; 0x03
 724:	28 2f       	mov	r18, r24
 726:	30 e0       	ldi	r19, 0x00	; 0
 728:	81 e0       	ldi	r24, 0x01	; 1
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	02 c0       	rjmp	.+4      	; 0x732 <DIO_enumSetPinValue+0x90>
 72e:	88 0f       	add	r24, r24
 730:	99 1f       	adc	r25, r25
 732:	2a 95       	dec	r18
 734:	e2 f7       	brpl	.-8      	; 0x72e <DIO_enumSetPinValue+0x8c>
 736:	80 95       	com	r24
 738:	84 23       	and	r24, r20
 73a:	8c 93       	st	X, r24
				PORTA |= (Copy_u8Value << Copy_u8PinID);
 73c:	ab e3       	ldi	r26, 0x3B	; 59
 73e:	b0 e0       	ldi	r27, 0x00	; 0
 740:	eb e3       	ldi	r30, 0x3B	; 59
 742:	f0 e0       	ldi	r31, 0x00	; 0
 744:	80 81       	ld	r24, Z
 746:	48 2f       	mov	r20, r24
 748:	8c 81       	ldd	r24, Y+4	; 0x04
 74a:	28 2f       	mov	r18, r24
 74c:	30 e0       	ldi	r19, 0x00	; 0
 74e:	8b 81       	ldd	r24, Y+3	; 0x03
 750:	88 2f       	mov	r24, r24
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	b9 01       	movw	r22, r18
 756:	02 c0       	rjmp	.+4      	; 0x75c <DIO_enumSetPinValue+0xba>
 758:	66 0f       	add	r22, r22
 75a:	77 1f       	adc	r23, r23
 75c:	8a 95       	dec	r24
 75e:	e2 f7       	brpl	.-8      	; 0x758 <DIO_enumSetPinValue+0xb6>
 760:	cb 01       	movw	r24, r22
 762:	84 2b       	or	r24, r20
 764:	8c 93       	st	X, r24
 766:	7a c0       	rjmp	.+244    	; 0x85c <DIO_enumSetPinValue+0x1ba>
				break;
			case DIO_PORTB:
				CLEAR_BIT(PORTB,Copy_u8PinID);
 768:	a8 e3       	ldi	r26, 0x38	; 56
 76a:	b0 e0       	ldi	r27, 0x00	; 0
 76c:	e8 e3       	ldi	r30, 0x38	; 56
 76e:	f0 e0       	ldi	r31, 0x00	; 0
 770:	80 81       	ld	r24, Z
 772:	48 2f       	mov	r20, r24
 774:	8b 81       	ldd	r24, Y+3	; 0x03
 776:	28 2f       	mov	r18, r24
 778:	30 e0       	ldi	r19, 0x00	; 0
 77a:	81 e0       	ldi	r24, 0x01	; 1
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	02 c0       	rjmp	.+4      	; 0x784 <DIO_enumSetPinValue+0xe2>
 780:	88 0f       	add	r24, r24
 782:	99 1f       	adc	r25, r25
 784:	2a 95       	dec	r18
 786:	e2 f7       	brpl	.-8      	; 0x780 <DIO_enumSetPinValue+0xde>
 788:	80 95       	com	r24
 78a:	84 23       	and	r24, r20
 78c:	8c 93       	st	X, r24
				PORTB |= (Copy_u8Value << Copy_u8PinID);
 78e:	a8 e3       	ldi	r26, 0x38	; 56
 790:	b0 e0       	ldi	r27, 0x00	; 0
 792:	e8 e3       	ldi	r30, 0x38	; 56
 794:	f0 e0       	ldi	r31, 0x00	; 0
 796:	80 81       	ld	r24, Z
 798:	48 2f       	mov	r20, r24
 79a:	8c 81       	ldd	r24, Y+4	; 0x04
 79c:	28 2f       	mov	r18, r24
 79e:	30 e0       	ldi	r19, 0x00	; 0
 7a0:	8b 81       	ldd	r24, Y+3	; 0x03
 7a2:	88 2f       	mov	r24, r24
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	b9 01       	movw	r22, r18
 7a8:	02 c0       	rjmp	.+4      	; 0x7ae <DIO_enumSetPinValue+0x10c>
 7aa:	66 0f       	add	r22, r22
 7ac:	77 1f       	adc	r23, r23
 7ae:	8a 95       	dec	r24
 7b0:	e2 f7       	brpl	.-8      	; 0x7aa <DIO_enumSetPinValue+0x108>
 7b2:	cb 01       	movw	r24, r22
 7b4:	84 2b       	or	r24, r20
 7b6:	8c 93       	st	X, r24
 7b8:	51 c0       	rjmp	.+162    	; 0x85c <DIO_enumSetPinValue+0x1ba>
				break;
			case DIO_PORTC:
				CLEAR_BIT(PORTC,Copy_u8PinID);
 7ba:	a5 e3       	ldi	r26, 0x35	; 53
 7bc:	b0 e0       	ldi	r27, 0x00	; 0
 7be:	e5 e3       	ldi	r30, 0x35	; 53
 7c0:	f0 e0       	ldi	r31, 0x00	; 0
 7c2:	80 81       	ld	r24, Z
 7c4:	48 2f       	mov	r20, r24
 7c6:	8b 81       	ldd	r24, Y+3	; 0x03
 7c8:	28 2f       	mov	r18, r24
 7ca:	30 e0       	ldi	r19, 0x00	; 0
 7cc:	81 e0       	ldi	r24, 0x01	; 1
 7ce:	90 e0       	ldi	r25, 0x00	; 0
 7d0:	02 c0       	rjmp	.+4      	; 0x7d6 <DIO_enumSetPinValue+0x134>
 7d2:	88 0f       	add	r24, r24
 7d4:	99 1f       	adc	r25, r25
 7d6:	2a 95       	dec	r18
 7d8:	e2 f7       	brpl	.-8      	; 0x7d2 <DIO_enumSetPinValue+0x130>
 7da:	80 95       	com	r24
 7dc:	84 23       	and	r24, r20
 7de:	8c 93       	st	X, r24
				PORTC |= (Copy_u8Value << Copy_u8PinID);
 7e0:	a5 e3       	ldi	r26, 0x35	; 53
 7e2:	b0 e0       	ldi	r27, 0x00	; 0
 7e4:	e5 e3       	ldi	r30, 0x35	; 53
 7e6:	f0 e0       	ldi	r31, 0x00	; 0
 7e8:	80 81       	ld	r24, Z
 7ea:	48 2f       	mov	r20, r24
 7ec:	8c 81       	ldd	r24, Y+4	; 0x04
 7ee:	28 2f       	mov	r18, r24
 7f0:	30 e0       	ldi	r19, 0x00	; 0
 7f2:	8b 81       	ldd	r24, Y+3	; 0x03
 7f4:	88 2f       	mov	r24, r24
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	b9 01       	movw	r22, r18
 7fa:	02 c0       	rjmp	.+4      	; 0x800 <DIO_enumSetPinValue+0x15e>
 7fc:	66 0f       	add	r22, r22
 7fe:	77 1f       	adc	r23, r23
 800:	8a 95       	dec	r24
 802:	e2 f7       	brpl	.-8      	; 0x7fc <DIO_enumSetPinValue+0x15a>
 804:	cb 01       	movw	r24, r22
 806:	84 2b       	or	r24, r20
 808:	8c 93       	st	X, r24
 80a:	28 c0       	rjmp	.+80     	; 0x85c <DIO_enumSetPinValue+0x1ba>
				break;
			case DIO_PORTD:
				CLEAR_BIT(PORTD,Copy_u8PinID);
 80c:	a2 e3       	ldi	r26, 0x32	; 50
 80e:	b0 e0       	ldi	r27, 0x00	; 0
 810:	e2 e3       	ldi	r30, 0x32	; 50
 812:	f0 e0       	ldi	r31, 0x00	; 0
 814:	80 81       	ld	r24, Z
 816:	48 2f       	mov	r20, r24
 818:	8b 81       	ldd	r24, Y+3	; 0x03
 81a:	28 2f       	mov	r18, r24
 81c:	30 e0       	ldi	r19, 0x00	; 0
 81e:	81 e0       	ldi	r24, 0x01	; 1
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	02 c0       	rjmp	.+4      	; 0x828 <DIO_enumSetPinValue+0x186>
 824:	88 0f       	add	r24, r24
 826:	99 1f       	adc	r25, r25
 828:	2a 95       	dec	r18
 82a:	e2 f7       	brpl	.-8      	; 0x824 <DIO_enumSetPinValue+0x182>
 82c:	80 95       	com	r24
 82e:	84 23       	and	r24, r20
 830:	8c 93       	st	X, r24
				PORTD |= (Copy_u8Value << Copy_u8PinID);
 832:	a2 e3       	ldi	r26, 0x32	; 50
 834:	b0 e0       	ldi	r27, 0x00	; 0
 836:	e2 e3       	ldi	r30, 0x32	; 50
 838:	f0 e0       	ldi	r31, 0x00	; 0
 83a:	80 81       	ld	r24, Z
 83c:	48 2f       	mov	r20, r24
 83e:	8c 81       	ldd	r24, Y+4	; 0x04
 840:	28 2f       	mov	r18, r24
 842:	30 e0       	ldi	r19, 0x00	; 0
 844:	8b 81       	ldd	r24, Y+3	; 0x03
 846:	88 2f       	mov	r24, r24
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	b9 01       	movw	r22, r18
 84c:	02 c0       	rjmp	.+4      	; 0x852 <DIO_enumSetPinValue+0x1b0>
 84e:	66 0f       	add	r22, r22
 850:	77 1f       	adc	r23, r23
 852:	8a 95       	dec	r24
 854:	e2 f7       	brpl	.-8      	; 0x84e <DIO_enumSetPinValue+0x1ac>
 856:	cb 01       	movw	r24, r22
 858:	84 2b       	or	r24, r20
 85a:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 85c:	81 e0       	ldi	r24, 0x01	; 1
 85e:	89 83       	std	Y+1, r24	; 0x01
 860:	02 c0       	rjmp	.+4      	; 0x866 <__stack+0x7>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 862:	83 e0       	ldi	r24, 0x03	; 3
 864:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 866:	89 81       	ldd	r24, Y+1	; 0x01
}
 868:	26 96       	adiw	r28, 0x06	; 6
 86a:	0f b6       	in	r0, 0x3f	; 63
 86c:	f8 94       	cli
 86e:	de bf       	out	0x3e, r29	; 62
 870:	0f be       	out	0x3f, r0	; 63
 872:	cd bf       	out	0x3d, r28	; 61
 874:	cf 91       	pop	r28
 876:	df 91       	pop	r29
 878:	08 95       	ret

0000087a <DIO_enumTogglePinDirection>:
ES_T DIO_enumTogglePinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID)
{
 87a:	df 93       	push	r29
 87c:	cf 93       	push	r28
 87e:	00 d0       	rcall	.+0      	; 0x880 <DIO_enumTogglePinDirection+0x6>
 880:	00 d0       	rcall	.+0      	; 0x882 <DIO_enumTogglePinDirection+0x8>
 882:	0f 92       	push	r0
 884:	cd b7       	in	r28, 0x3d	; 61
 886:	de b7       	in	r29, 0x3e	; 62
 888:	8a 83       	std	Y+2, r24	; 0x02
 88a:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
 88c:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
 88e:	8a 81       	ldd	r24, Y+2	; 0x02
 890:	84 30       	cpi	r24, 0x04	; 4
 892:	08 f0       	brcs	.+2      	; 0x896 <DIO_enumTogglePinDirection+0x1c>
 894:	75 c0       	rjmp	.+234    	; 0x980 <DIO_enumTogglePinDirection+0x106>
 896:	8b 81       	ldd	r24, Y+3	; 0x03
 898:	88 30       	cpi	r24, 0x08	; 8
 89a:	08 f0       	brcs	.+2      	; 0x89e <DIO_enumTogglePinDirection+0x24>
 89c:	71 c0       	rjmp	.+226    	; 0x980 <DIO_enumTogglePinDirection+0x106>
	{
		switch(Copy_u8PortID)
 89e:	8a 81       	ldd	r24, Y+2	; 0x02
 8a0:	28 2f       	mov	r18, r24
 8a2:	30 e0       	ldi	r19, 0x00	; 0
 8a4:	3d 83       	std	Y+5, r19	; 0x05
 8a6:	2c 83       	std	Y+4, r18	; 0x04
 8a8:	8c 81       	ldd	r24, Y+4	; 0x04
 8aa:	9d 81       	ldd	r25, Y+5	; 0x05
 8ac:	81 30       	cpi	r24, 0x01	; 1
 8ae:	91 05       	cpc	r25, r1
 8b0:	49 f1       	breq	.+82     	; 0x904 <DIO_enumTogglePinDirection+0x8a>
 8b2:	2c 81       	ldd	r18, Y+4	; 0x04
 8b4:	3d 81       	ldd	r19, Y+5	; 0x05
 8b6:	22 30       	cpi	r18, 0x02	; 2
 8b8:	31 05       	cpc	r19, r1
 8ba:	2c f4       	brge	.+10     	; 0x8c6 <DIO_enumTogglePinDirection+0x4c>
 8bc:	8c 81       	ldd	r24, Y+4	; 0x04
 8be:	9d 81       	ldd	r25, Y+5	; 0x05
 8c0:	00 97       	sbiw	r24, 0x00	; 0
 8c2:	61 f0       	breq	.+24     	; 0x8dc <DIO_enumTogglePinDirection+0x62>
 8c4:	5a c0       	rjmp	.+180    	; 0x97a <DIO_enumTogglePinDirection+0x100>
 8c6:	2c 81       	ldd	r18, Y+4	; 0x04
 8c8:	3d 81       	ldd	r19, Y+5	; 0x05
 8ca:	22 30       	cpi	r18, 0x02	; 2
 8cc:	31 05       	cpc	r19, r1
 8ce:	71 f1       	breq	.+92     	; 0x92c <DIO_enumTogglePinDirection+0xb2>
 8d0:	8c 81       	ldd	r24, Y+4	; 0x04
 8d2:	9d 81       	ldd	r25, Y+5	; 0x05
 8d4:	83 30       	cpi	r24, 0x03	; 3
 8d6:	91 05       	cpc	r25, r1
 8d8:	e9 f1       	breq	.+122    	; 0x954 <DIO_enumTogglePinDirection+0xda>
 8da:	4f c0       	rjmp	.+158    	; 0x97a <DIO_enumTogglePinDirection+0x100>
		{
			case DIO_PORTA:
				TOGGLE_BIT(DDRA,Copy_u8PinID);
 8dc:	aa e3       	ldi	r26, 0x3A	; 58
 8de:	b0 e0       	ldi	r27, 0x00	; 0
 8e0:	ea e3       	ldi	r30, 0x3A	; 58
 8e2:	f0 e0       	ldi	r31, 0x00	; 0
 8e4:	80 81       	ld	r24, Z
 8e6:	48 2f       	mov	r20, r24
 8e8:	8b 81       	ldd	r24, Y+3	; 0x03
 8ea:	28 2f       	mov	r18, r24
 8ec:	30 e0       	ldi	r19, 0x00	; 0
 8ee:	81 e0       	ldi	r24, 0x01	; 1
 8f0:	90 e0       	ldi	r25, 0x00	; 0
 8f2:	02 2e       	mov	r0, r18
 8f4:	02 c0       	rjmp	.+4      	; 0x8fa <DIO_enumTogglePinDirection+0x80>
 8f6:	88 0f       	add	r24, r24
 8f8:	99 1f       	adc	r25, r25
 8fa:	0a 94       	dec	r0
 8fc:	e2 f7       	brpl	.-8      	; 0x8f6 <DIO_enumTogglePinDirection+0x7c>
 8fe:	84 27       	eor	r24, r20
 900:	8c 93       	st	X, r24
 902:	3b c0       	rjmp	.+118    	; 0x97a <DIO_enumTogglePinDirection+0x100>
				break;
			case DIO_PORTB:
				TOGGLE_BIT(DDRB,Copy_u8PinID);
 904:	a7 e3       	ldi	r26, 0x37	; 55
 906:	b0 e0       	ldi	r27, 0x00	; 0
 908:	e7 e3       	ldi	r30, 0x37	; 55
 90a:	f0 e0       	ldi	r31, 0x00	; 0
 90c:	80 81       	ld	r24, Z
 90e:	48 2f       	mov	r20, r24
 910:	8b 81       	ldd	r24, Y+3	; 0x03
 912:	28 2f       	mov	r18, r24
 914:	30 e0       	ldi	r19, 0x00	; 0
 916:	81 e0       	ldi	r24, 0x01	; 1
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	02 2e       	mov	r0, r18
 91c:	02 c0       	rjmp	.+4      	; 0x922 <DIO_enumTogglePinDirection+0xa8>
 91e:	88 0f       	add	r24, r24
 920:	99 1f       	adc	r25, r25
 922:	0a 94       	dec	r0
 924:	e2 f7       	brpl	.-8      	; 0x91e <DIO_enumTogglePinDirection+0xa4>
 926:	84 27       	eor	r24, r20
 928:	8c 93       	st	X, r24
 92a:	27 c0       	rjmp	.+78     	; 0x97a <DIO_enumTogglePinDirection+0x100>
				break;
			case DIO_PORTC:
				TOGGLE_BIT(DDRC,Copy_u8PinID);
 92c:	a4 e3       	ldi	r26, 0x34	; 52
 92e:	b0 e0       	ldi	r27, 0x00	; 0
 930:	e4 e3       	ldi	r30, 0x34	; 52
 932:	f0 e0       	ldi	r31, 0x00	; 0
 934:	80 81       	ld	r24, Z
 936:	48 2f       	mov	r20, r24
 938:	8b 81       	ldd	r24, Y+3	; 0x03
 93a:	28 2f       	mov	r18, r24
 93c:	30 e0       	ldi	r19, 0x00	; 0
 93e:	81 e0       	ldi	r24, 0x01	; 1
 940:	90 e0       	ldi	r25, 0x00	; 0
 942:	02 2e       	mov	r0, r18
 944:	02 c0       	rjmp	.+4      	; 0x94a <DIO_enumTogglePinDirection+0xd0>
 946:	88 0f       	add	r24, r24
 948:	99 1f       	adc	r25, r25
 94a:	0a 94       	dec	r0
 94c:	e2 f7       	brpl	.-8      	; 0x946 <DIO_enumTogglePinDirection+0xcc>
 94e:	84 27       	eor	r24, r20
 950:	8c 93       	st	X, r24
 952:	13 c0       	rjmp	.+38     	; 0x97a <DIO_enumTogglePinDirection+0x100>
				break;
			case DIO_PORTD:
				TOGGLE_BIT(DDRD,Copy_u8PinID);
 954:	a1 e3       	ldi	r26, 0x31	; 49
 956:	b0 e0       	ldi	r27, 0x00	; 0
 958:	e1 e3       	ldi	r30, 0x31	; 49
 95a:	f0 e0       	ldi	r31, 0x00	; 0
 95c:	80 81       	ld	r24, Z
 95e:	48 2f       	mov	r20, r24
 960:	8b 81       	ldd	r24, Y+3	; 0x03
 962:	28 2f       	mov	r18, r24
 964:	30 e0       	ldi	r19, 0x00	; 0
 966:	81 e0       	ldi	r24, 0x01	; 1
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	02 2e       	mov	r0, r18
 96c:	02 c0       	rjmp	.+4      	; 0x972 <DIO_enumTogglePinDirection+0xf8>
 96e:	88 0f       	add	r24, r24
 970:	99 1f       	adc	r25, r25
 972:	0a 94       	dec	r0
 974:	e2 f7       	brpl	.-8      	; 0x96e <DIO_enumTogglePinDirection+0xf4>
 976:	84 27       	eor	r24, r20
 978:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 97a:	81 e0       	ldi	r24, 0x01	; 1
 97c:	89 83       	std	Y+1, r24	; 0x01
 97e:	02 c0       	rjmp	.+4      	; 0x984 <DIO_enumTogglePinDirection+0x10a>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 980:	83 e0       	ldi	r24, 0x03	; 3
 982:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 984:	89 81       	ldd	r24, Y+1	; 0x01
}
 986:	0f 90       	pop	r0
 988:	0f 90       	pop	r0
 98a:	0f 90       	pop	r0
 98c:	0f 90       	pop	r0
 98e:	0f 90       	pop	r0
 990:	cf 91       	pop	r28
 992:	df 91       	pop	r29
 994:	08 95       	ret

00000996 <DIO_enumTogglePinValue>:
ES_T DIO_enumTogglePinValue (u8 Copy_u8PortID,u8 Copy_u8PinID)
{
 996:	df 93       	push	r29
 998:	cf 93       	push	r28
 99a:	00 d0       	rcall	.+0      	; 0x99c <DIO_enumTogglePinValue+0x6>
 99c:	00 d0       	rcall	.+0      	; 0x99e <DIO_enumTogglePinValue+0x8>
 99e:	0f 92       	push	r0
 9a0:	cd b7       	in	r28, 0x3d	; 61
 9a2:	de b7       	in	r29, 0x3e	; 62
 9a4:	8a 83       	std	Y+2, r24	; 0x02
 9a6:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
 9a8:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
 9aa:	8a 81       	ldd	r24, Y+2	; 0x02
 9ac:	84 30       	cpi	r24, 0x04	; 4
 9ae:	08 f0       	brcs	.+2      	; 0x9b2 <DIO_enumTogglePinValue+0x1c>
 9b0:	75 c0       	rjmp	.+234    	; 0xa9c <DIO_enumTogglePinValue+0x106>
 9b2:	8b 81       	ldd	r24, Y+3	; 0x03
 9b4:	88 30       	cpi	r24, 0x08	; 8
 9b6:	08 f0       	brcs	.+2      	; 0x9ba <DIO_enumTogglePinValue+0x24>
 9b8:	71 c0       	rjmp	.+226    	; 0xa9c <DIO_enumTogglePinValue+0x106>
	{
		switch(Copy_u8PortID)
 9ba:	8a 81       	ldd	r24, Y+2	; 0x02
 9bc:	28 2f       	mov	r18, r24
 9be:	30 e0       	ldi	r19, 0x00	; 0
 9c0:	3d 83       	std	Y+5, r19	; 0x05
 9c2:	2c 83       	std	Y+4, r18	; 0x04
 9c4:	8c 81       	ldd	r24, Y+4	; 0x04
 9c6:	9d 81       	ldd	r25, Y+5	; 0x05
 9c8:	81 30       	cpi	r24, 0x01	; 1
 9ca:	91 05       	cpc	r25, r1
 9cc:	49 f1       	breq	.+82     	; 0xa20 <DIO_enumTogglePinValue+0x8a>
 9ce:	2c 81       	ldd	r18, Y+4	; 0x04
 9d0:	3d 81       	ldd	r19, Y+5	; 0x05
 9d2:	22 30       	cpi	r18, 0x02	; 2
 9d4:	31 05       	cpc	r19, r1
 9d6:	2c f4       	brge	.+10     	; 0x9e2 <DIO_enumTogglePinValue+0x4c>
 9d8:	8c 81       	ldd	r24, Y+4	; 0x04
 9da:	9d 81       	ldd	r25, Y+5	; 0x05
 9dc:	00 97       	sbiw	r24, 0x00	; 0
 9de:	61 f0       	breq	.+24     	; 0x9f8 <DIO_enumTogglePinValue+0x62>
 9e0:	5a c0       	rjmp	.+180    	; 0xa96 <DIO_enumTogglePinValue+0x100>
 9e2:	2c 81       	ldd	r18, Y+4	; 0x04
 9e4:	3d 81       	ldd	r19, Y+5	; 0x05
 9e6:	22 30       	cpi	r18, 0x02	; 2
 9e8:	31 05       	cpc	r19, r1
 9ea:	71 f1       	breq	.+92     	; 0xa48 <DIO_enumTogglePinValue+0xb2>
 9ec:	8c 81       	ldd	r24, Y+4	; 0x04
 9ee:	9d 81       	ldd	r25, Y+5	; 0x05
 9f0:	83 30       	cpi	r24, 0x03	; 3
 9f2:	91 05       	cpc	r25, r1
 9f4:	e9 f1       	breq	.+122    	; 0xa70 <DIO_enumTogglePinValue+0xda>
 9f6:	4f c0       	rjmp	.+158    	; 0xa96 <DIO_enumTogglePinValue+0x100>
		{
			case DIO_PORTA:
				TOGGLE_BIT(PORTA,Copy_u8PinID);
 9f8:	ab e3       	ldi	r26, 0x3B	; 59
 9fa:	b0 e0       	ldi	r27, 0x00	; 0
 9fc:	eb e3       	ldi	r30, 0x3B	; 59
 9fe:	f0 e0       	ldi	r31, 0x00	; 0
 a00:	80 81       	ld	r24, Z
 a02:	48 2f       	mov	r20, r24
 a04:	8b 81       	ldd	r24, Y+3	; 0x03
 a06:	28 2f       	mov	r18, r24
 a08:	30 e0       	ldi	r19, 0x00	; 0
 a0a:	81 e0       	ldi	r24, 0x01	; 1
 a0c:	90 e0       	ldi	r25, 0x00	; 0
 a0e:	02 2e       	mov	r0, r18
 a10:	02 c0       	rjmp	.+4      	; 0xa16 <DIO_enumTogglePinValue+0x80>
 a12:	88 0f       	add	r24, r24
 a14:	99 1f       	adc	r25, r25
 a16:	0a 94       	dec	r0
 a18:	e2 f7       	brpl	.-8      	; 0xa12 <DIO_enumTogglePinValue+0x7c>
 a1a:	84 27       	eor	r24, r20
 a1c:	8c 93       	st	X, r24
 a1e:	3b c0       	rjmp	.+118    	; 0xa96 <DIO_enumTogglePinValue+0x100>
				break;
			case DIO_PORTB:
				TOGGLE_BIT(PORTB,Copy_u8PinID);
 a20:	a8 e3       	ldi	r26, 0x38	; 56
 a22:	b0 e0       	ldi	r27, 0x00	; 0
 a24:	e8 e3       	ldi	r30, 0x38	; 56
 a26:	f0 e0       	ldi	r31, 0x00	; 0
 a28:	80 81       	ld	r24, Z
 a2a:	48 2f       	mov	r20, r24
 a2c:	8b 81       	ldd	r24, Y+3	; 0x03
 a2e:	28 2f       	mov	r18, r24
 a30:	30 e0       	ldi	r19, 0x00	; 0
 a32:	81 e0       	ldi	r24, 0x01	; 1
 a34:	90 e0       	ldi	r25, 0x00	; 0
 a36:	02 2e       	mov	r0, r18
 a38:	02 c0       	rjmp	.+4      	; 0xa3e <DIO_enumTogglePinValue+0xa8>
 a3a:	88 0f       	add	r24, r24
 a3c:	99 1f       	adc	r25, r25
 a3e:	0a 94       	dec	r0
 a40:	e2 f7       	brpl	.-8      	; 0xa3a <DIO_enumTogglePinValue+0xa4>
 a42:	84 27       	eor	r24, r20
 a44:	8c 93       	st	X, r24
 a46:	27 c0       	rjmp	.+78     	; 0xa96 <DIO_enumTogglePinValue+0x100>
				break;
			case DIO_PORTC:
				TOGGLE_BIT(PORTC,Copy_u8PinID);
 a48:	a5 e3       	ldi	r26, 0x35	; 53
 a4a:	b0 e0       	ldi	r27, 0x00	; 0
 a4c:	e5 e3       	ldi	r30, 0x35	; 53
 a4e:	f0 e0       	ldi	r31, 0x00	; 0
 a50:	80 81       	ld	r24, Z
 a52:	48 2f       	mov	r20, r24
 a54:	8b 81       	ldd	r24, Y+3	; 0x03
 a56:	28 2f       	mov	r18, r24
 a58:	30 e0       	ldi	r19, 0x00	; 0
 a5a:	81 e0       	ldi	r24, 0x01	; 1
 a5c:	90 e0       	ldi	r25, 0x00	; 0
 a5e:	02 2e       	mov	r0, r18
 a60:	02 c0       	rjmp	.+4      	; 0xa66 <DIO_enumTogglePinValue+0xd0>
 a62:	88 0f       	add	r24, r24
 a64:	99 1f       	adc	r25, r25
 a66:	0a 94       	dec	r0
 a68:	e2 f7       	brpl	.-8      	; 0xa62 <DIO_enumTogglePinValue+0xcc>
 a6a:	84 27       	eor	r24, r20
 a6c:	8c 93       	st	X, r24
 a6e:	13 c0       	rjmp	.+38     	; 0xa96 <DIO_enumTogglePinValue+0x100>
				break;
			case DIO_PORTD:
				TOGGLE_BIT(PORTD,Copy_u8PinID);
 a70:	a2 e3       	ldi	r26, 0x32	; 50
 a72:	b0 e0       	ldi	r27, 0x00	; 0
 a74:	e2 e3       	ldi	r30, 0x32	; 50
 a76:	f0 e0       	ldi	r31, 0x00	; 0
 a78:	80 81       	ld	r24, Z
 a7a:	48 2f       	mov	r20, r24
 a7c:	8b 81       	ldd	r24, Y+3	; 0x03
 a7e:	28 2f       	mov	r18, r24
 a80:	30 e0       	ldi	r19, 0x00	; 0
 a82:	81 e0       	ldi	r24, 0x01	; 1
 a84:	90 e0       	ldi	r25, 0x00	; 0
 a86:	02 2e       	mov	r0, r18
 a88:	02 c0       	rjmp	.+4      	; 0xa8e <DIO_enumTogglePinValue+0xf8>
 a8a:	88 0f       	add	r24, r24
 a8c:	99 1f       	adc	r25, r25
 a8e:	0a 94       	dec	r0
 a90:	e2 f7       	brpl	.-8      	; 0xa8a <DIO_enumTogglePinValue+0xf4>
 a92:	84 27       	eor	r24, r20
 a94:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 a96:	81 e0       	ldi	r24, 0x01	; 1
 a98:	89 83       	std	Y+1, r24	; 0x01
 a9a:	02 c0       	rjmp	.+4      	; 0xaa0 <DIO_enumTogglePinValue+0x10a>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 a9c:	83 e0       	ldi	r24, 0x03	; 3
 a9e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 aa0:	89 81       	ldd	r24, Y+1	; 0x01
}
 aa2:	0f 90       	pop	r0
 aa4:	0f 90       	pop	r0
 aa6:	0f 90       	pop	r0
 aa8:	0f 90       	pop	r0
 aaa:	0f 90       	pop	r0
 aac:	cf 91       	pop	r28
 aae:	df 91       	pop	r29
 ab0:	08 95       	ret

00000ab2 <DIO_enumGetPinDirection>:
ES_T DIO_enumGetPinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 *Copy_pu8Direction)
{
 ab2:	df 93       	push	r29
 ab4:	cf 93       	push	r28
 ab6:	cd b7       	in	r28, 0x3d	; 61
 ab8:	de b7       	in	r29, 0x3e	; 62
 aba:	27 97       	sbiw	r28, 0x07	; 7
 abc:	0f b6       	in	r0, 0x3f	; 63
 abe:	f8 94       	cli
 ac0:	de bf       	out	0x3e, r29	; 62
 ac2:	0f be       	out	0x3f, r0	; 63
 ac4:	cd bf       	out	0x3d, r28	; 61
 ac6:	8a 83       	std	Y+2, r24	; 0x02
 ac8:	6b 83       	std	Y+3, r22	; 0x03
 aca:	5d 83       	std	Y+5, r21	; 0x05
 acc:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
 ace:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
 ad0:	8a 81       	ldd	r24, Y+2	; 0x02
 ad2:	84 30       	cpi	r24, 0x04	; 4
 ad4:	08 f0       	brcs	.+2      	; 0xad8 <DIO_enumGetPinDirection+0x26>
 ad6:	7f c0       	rjmp	.+254    	; 0xbd6 <DIO_enumGetPinDirection+0x124>
 ad8:	8b 81       	ldd	r24, Y+3	; 0x03
 ada:	88 30       	cpi	r24, 0x08	; 8
 adc:	08 f0       	brcs	.+2      	; 0xae0 <DIO_enumGetPinDirection+0x2e>
 ade:	7b c0       	rjmp	.+246    	; 0xbd6 <DIO_enumGetPinDirection+0x124>
		{
			if (Copy_pu8Direction!=NULL)
 ae0:	8c 81       	ldd	r24, Y+4	; 0x04
 ae2:	9d 81       	ldd	r25, Y+5	; 0x05
 ae4:	00 97       	sbiw	r24, 0x00	; 0
 ae6:	09 f4       	brne	.+2      	; 0xaea <DIO_enumGetPinDirection+0x38>
 ae8:	73 c0       	rjmp	.+230    	; 0xbd0 <DIO_enumGetPinDirection+0x11e>
			{
				switch(Copy_u8PortID)
 aea:	8a 81       	ldd	r24, Y+2	; 0x02
 aec:	28 2f       	mov	r18, r24
 aee:	30 e0       	ldi	r19, 0x00	; 0
 af0:	3f 83       	std	Y+7, r19	; 0x07
 af2:	2e 83       	std	Y+6, r18	; 0x06
 af4:	4e 81       	ldd	r20, Y+6	; 0x06
 af6:	5f 81       	ldd	r21, Y+7	; 0x07
 af8:	41 30       	cpi	r20, 0x01	; 1
 afa:	51 05       	cpc	r21, r1
 afc:	59 f1       	breq	.+86     	; 0xb54 <DIO_enumGetPinDirection+0xa2>
 afe:	8e 81       	ldd	r24, Y+6	; 0x06
 b00:	9f 81       	ldd	r25, Y+7	; 0x07
 b02:	82 30       	cpi	r24, 0x02	; 2
 b04:	91 05       	cpc	r25, r1
 b06:	34 f4       	brge	.+12     	; 0xb14 <DIO_enumGetPinDirection+0x62>
 b08:	2e 81       	ldd	r18, Y+6	; 0x06
 b0a:	3f 81       	ldd	r19, Y+7	; 0x07
 b0c:	21 15       	cp	r18, r1
 b0e:	31 05       	cpc	r19, r1
 b10:	69 f0       	breq	.+26     	; 0xb2c <DIO_enumGetPinDirection+0x7a>
 b12:	5b c0       	rjmp	.+182    	; 0xbca <DIO_enumGetPinDirection+0x118>
 b14:	4e 81       	ldd	r20, Y+6	; 0x06
 b16:	5f 81       	ldd	r21, Y+7	; 0x07
 b18:	42 30       	cpi	r20, 0x02	; 2
 b1a:	51 05       	cpc	r21, r1
 b1c:	79 f1       	breq	.+94     	; 0xb7c <DIO_enumGetPinDirection+0xca>
 b1e:	8e 81       	ldd	r24, Y+6	; 0x06
 b20:	9f 81       	ldd	r25, Y+7	; 0x07
 b22:	83 30       	cpi	r24, 0x03	; 3
 b24:	91 05       	cpc	r25, r1
 b26:	09 f4       	brne	.+2      	; 0xb2a <DIO_enumGetPinDirection+0x78>
 b28:	3d c0       	rjmp	.+122    	; 0xba4 <DIO_enumGetPinDirection+0xf2>
 b2a:	4f c0       	rjmp	.+158    	; 0xbca <DIO_enumGetPinDirection+0x118>
				{
					case DIO_PORTA:
						*Copy_pu8Direction=READ_BIT(DDRA,Copy_u8PinID);
 b2c:	ea e3       	ldi	r30, 0x3A	; 58
 b2e:	f0 e0       	ldi	r31, 0x00	; 0
 b30:	80 81       	ld	r24, Z
 b32:	28 2f       	mov	r18, r24
 b34:	30 e0       	ldi	r19, 0x00	; 0
 b36:	8b 81       	ldd	r24, Y+3	; 0x03
 b38:	88 2f       	mov	r24, r24
 b3a:	90 e0       	ldi	r25, 0x00	; 0
 b3c:	a9 01       	movw	r20, r18
 b3e:	02 c0       	rjmp	.+4      	; 0xb44 <DIO_enumGetPinDirection+0x92>
 b40:	55 95       	asr	r21
 b42:	47 95       	ror	r20
 b44:	8a 95       	dec	r24
 b46:	e2 f7       	brpl	.-8      	; 0xb40 <DIO_enumGetPinDirection+0x8e>
 b48:	ca 01       	movw	r24, r20
 b4a:	81 70       	andi	r24, 0x01	; 1
 b4c:	ec 81       	ldd	r30, Y+4	; 0x04
 b4e:	fd 81       	ldd	r31, Y+5	; 0x05
 b50:	80 83       	st	Z, r24
 b52:	3b c0       	rjmp	.+118    	; 0xbca <DIO_enumGetPinDirection+0x118>
						break;
					case DIO_PORTB:
						*Copy_pu8Direction=READ_BIT(DDRB,Copy_u8PinID);
 b54:	e7 e3       	ldi	r30, 0x37	; 55
 b56:	f0 e0       	ldi	r31, 0x00	; 0
 b58:	80 81       	ld	r24, Z
 b5a:	28 2f       	mov	r18, r24
 b5c:	30 e0       	ldi	r19, 0x00	; 0
 b5e:	8b 81       	ldd	r24, Y+3	; 0x03
 b60:	88 2f       	mov	r24, r24
 b62:	90 e0       	ldi	r25, 0x00	; 0
 b64:	a9 01       	movw	r20, r18
 b66:	02 c0       	rjmp	.+4      	; 0xb6c <DIO_enumGetPinDirection+0xba>
 b68:	55 95       	asr	r21
 b6a:	47 95       	ror	r20
 b6c:	8a 95       	dec	r24
 b6e:	e2 f7       	brpl	.-8      	; 0xb68 <DIO_enumGetPinDirection+0xb6>
 b70:	ca 01       	movw	r24, r20
 b72:	81 70       	andi	r24, 0x01	; 1
 b74:	ec 81       	ldd	r30, Y+4	; 0x04
 b76:	fd 81       	ldd	r31, Y+5	; 0x05
 b78:	80 83       	st	Z, r24
 b7a:	27 c0       	rjmp	.+78     	; 0xbca <DIO_enumGetPinDirection+0x118>
						break;
					case DIO_PORTC:
						*Copy_pu8Direction=READ_BIT(DDRC,Copy_u8PinID);
 b7c:	e4 e3       	ldi	r30, 0x34	; 52
 b7e:	f0 e0       	ldi	r31, 0x00	; 0
 b80:	80 81       	ld	r24, Z
 b82:	28 2f       	mov	r18, r24
 b84:	30 e0       	ldi	r19, 0x00	; 0
 b86:	8b 81       	ldd	r24, Y+3	; 0x03
 b88:	88 2f       	mov	r24, r24
 b8a:	90 e0       	ldi	r25, 0x00	; 0
 b8c:	a9 01       	movw	r20, r18
 b8e:	02 c0       	rjmp	.+4      	; 0xb94 <DIO_enumGetPinDirection+0xe2>
 b90:	55 95       	asr	r21
 b92:	47 95       	ror	r20
 b94:	8a 95       	dec	r24
 b96:	e2 f7       	brpl	.-8      	; 0xb90 <DIO_enumGetPinDirection+0xde>
 b98:	ca 01       	movw	r24, r20
 b9a:	81 70       	andi	r24, 0x01	; 1
 b9c:	ec 81       	ldd	r30, Y+4	; 0x04
 b9e:	fd 81       	ldd	r31, Y+5	; 0x05
 ba0:	80 83       	st	Z, r24
 ba2:	13 c0       	rjmp	.+38     	; 0xbca <DIO_enumGetPinDirection+0x118>
						break;
					case DIO_PORTD:
						*Copy_pu8Direction=READ_BIT(DDRD,Copy_u8PinID);
 ba4:	e1 e3       	ldi	r30, 0x31	; 49
 ba6:	f0 e0       	ldi	r31, 0x00	; 0
 ba8:	80 81       	ld	r24, Z
 baa:	28 2f       	mov	r18, r24
 bac:	30 e0       	ldi	r19, 0x00	; 0
 bae:	8b 81       	ldd	r24, Y+3	; 0x03
 bb0:	88 2f       	mov	r24, r24
 bb2:	90 e0       	ldi	r25, 0x00	; 0
 bb4:	a9 01       	movw	r20, r18
 bb6:	02 c0       	rjmp	.+4      	; 0xbbc <DIO_enumGetPinDirection+0x10a>
 bb8:	55 95       	asr	r21
 bba:	47 95       	ror	r20
 bbc:	8a 95       	dec	r24
 bbe:	e2 f7       	brpl	.-8      	; 0xbb8 <DIO_enumGetPinDirection+0x106>
 bc0:	ca 01       	movw	r24, r20
 bc2:	81 70       	andi	r24, 0x01	; 1
 bc4:	ec 81       	ldd	r30, Y+4	; 0x04
 bc6:	fd 81       	ldd	r31, Y+5	; 0x05
 bc8:	80 83       	st	Z, r24
						break;
				}
				Local_enumErrorState=ES_OK;
 bca:	81 e0       	ldi	r24, 0x01	; 1
 bcc:	89 83       	std	Y+1, r24	; 0x01
 bce:	05 c0       	rjmp	.+10     	; 0xbda <DIO_enumGetPinDirection+0x128>
			}
			else
			{
				Local_enumErrorState=ES_NULL_POINTER;
 bd0:	82 e0       	ldi	r24, 0x02	; 2
 bd2:	89 83       	std	Y+1, r24	; 0x01
 bd4:	02 c0       	rjmp	.+4      	; 0xbda <DIO_enumGetPinDirection+0x128>
			}
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
 bd6:	83 e0       	ldi	r24, 0x03	; 3
 bd8:	89 83       	std	Y+1, r24	; 0x01
		}

	return Local_enumErrorState;
 bda:	89 81       	ldd	r24, Y+1	; 0x01
}
 bdc:	27 96       	adiw	r28, 0x07	; 7
 bde:	0f b6       	in	r0, 0x3f	; 63
 be0:	f8 94       	cli
 be2:	de bf       	out	0x3e, r29	; 62
 be4:	0f be       	out	0x3f, r0	; 63
 be6:	cd bf       	out	0x3d, r28	; 61
 be8:	cf 91       	pop	r28
 bea:	df 91       	pop	r29
 bec:	08 95       	ret

00000bee <DIO_enumGetPinValue>:
ES_T DIO_enumGetPinValue (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 *Copy_pu8Value)
{
 bee:	df 93       	push	r29
 bf0:	cf 93       	push	r28
 bf2:	cd b7       	in	r28, 0x3d	; 61
 bf4:	de b7       	in	r29, 0x3e	; 62
 bf6:	27 97       	sbiw	r28, 0x07	; 7
 bf8:	0f b6       	in	r0, 0x3f	; 63
 bfa:	f8 94       	cli
 bfc:	de bf       	out	0x3e, r29	; 62
 bfe:	0f be       	out	0x3f, r0	; 63
 c00:	cd bf       	out	0x3d, r28	; 61
 c02:	8a 83       	std	Y+2, r24	; 0x02
 c04:	6b 83       	std	Y+3, r22	; 0x03
 c06:	5d 83       	std	Y+5, r21	; 0x05
 c08:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
 c0a:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
 c0c:	8a 81       	ldd	r24, Y+2	; 0x02
 c0e:	84 30       	cpi	r24, 0x04	; 4
 c10:	08 f0       	brcs	.+2      	; 0xc14 <DIO_enumGetPinValue+0x26>
 c12:	7f c0       	rjmp	.+254    	; 0xd12 <DIO_enumGetPinValue+0x124>
 c14:	8b 81       	ldd	r24, Y+3	; 0x03
 c16:	88 30       	cpi	r24, 0x08	; 8
 c18:	08 f0       	brcs	.+2      	; 0xc1c <DIO_enumGetPinValue+0x2e>
 c1a:	7b c0       	rjmp	.+246    	; 0xd12 <DIO_enumGetPinValue+0x124>
	{
		if (Copy_pu8Value!=NULL)
 c1c:	8c 81       	ldd	r24, Y+4	; 0x04
 c1e:	9d 81       	ldd	r25, Y+5	; 0x05
 c20:	00 97       	sbiw	r24, 0x00	; 0
 c22:	09 f4       	brne	.+2      	; 0xc26 <DIO_enumGetPinValue+0x38>
 c24:	73 c0       	rjmp	.+230    	; 0xd0c <DIO_enumGetPinValue+0x11e>
		{
			switch(Copy_u8PortID)
 c26:	8a 81       	ldd	r24, Y+2	; 0x02
 c28:	28 2f       	mov	r18, r24
 c2a:	30 e0       	ldi	r19, 0x00	; 0
 c2c:	3f 83       	std	Y+7, r19	; 0x07
 c2e:	2e 83       	std	Y+6, r18	; 0x06
 c30:	4e 81       	ldd	r20, Y+6	; 0x06
 c32:	5f 81       	ldd	r21, Y+7	; 0x07
 c34:	41 30       	cpi	r20, 0x01	; 1
 c36:	51 05       	cpc	r21, r1
 c38:	59 f1       	breq	.+86     	; 0xc90 <DIO_enumGetPinValue+0xa2>
 c3a:	8e 81       	ldd	r24, Y+6	; 0x06
 c3c:	9f 81       	ldd	r25, Y+7	; 0x07
 c3e:	82 30       	cpi	r24, 0x02	; 2
 c40:	91 05       	cpc	r25, r1
 c42:	34 f4       	brge	.+12     	; 0xc50 <DIO_enumGetPinValue+0x62>
 c44:	2e 81       	ldd	r18, Y+6	; 0x06
 c46:	3f 81       	ldd	r19, Y+7	; 0x07
 c48:	21 15       	cp	r18, r1
 c4a:	31 05       	cpc	r19, r1
 c4c:	69 f0       	breq	.+26     	; 0xc68 <DIO_enumGetPinValue+0x7a>
 c4e:	5b c0       	rjmp	.+182    	; 0xd06 <DIO_enumGetPinValue+0x118>
 c50:	4e 81       	ldd	r20, Y+6	; 0x06
 c52:	5f 81       	ldd	r21, Y+7	; 0x07
 c54:	42 30       	cpi	r20, 0x02	; 2
 c56:	51 05       	cpc	r21, r1
 c58:	79 f1       	breq	.+94     	; 0xcb8 <DIO_enumGetPinValue+0xca>
 c5a:	8e 81       	ldd	r24, Y+6	; 0x06
 c5c:	9f 81       	ldd	r25, Y+7	; 0x07
 c5e:	83 30       	cpi	r24, 0x03	; 3
 c60:	91 05       	cpc	r25, r1
 c62:	09 f4       	brne	.+2      	; 0xc66 <DIO_enumGetPinValue+0x78>
 c64:	3d c0       	rjmp	.+122    	; 0xce0 <DIO_enumGetPinValue+0xf2>
 c66:	4f c0       	rjmp	.+158    	; 0xd06 <DIO_enumGetPinValue+0x118>
			{
				case DIO_PORTA:
					*Copy_pu8Value=READ_BIT(PINA,Copy_u8PinID);
 c68:	e9 e3       	ldi	r30, 0x39	; 57
 c6a:	f0 e0       	ldi	r31, 0x00	; 0
 c6c:	80 81       	ld	r24, Z
 c6e:	28 2f       	mov	r18, r24
 c70:	30 e0       	ldi	r19, 0x00	; 0
 c72:	8b 81       	ldd	r24, Y+3	; 0x03
 c74:	88 2f       	mov	r24, r24
 c76:	90 e0       	ldi	r25, 0x00	; 0
 c78:	a9 01       	movw	r20, r18
 c7a:	02 c0       	rjmp	.+4      	; 0xc80 <DIO_enumGetPinValue+0x92>
 c7c:	55 95       	asr	r21
 c7e:	47 95       	ror	r20
 c80:	8a 95       	dec	r24
 c82:	e2 f7       	brpl	.-8      	; 0xc7c <DIO_enumGetPinValue+0x8e>
 c84:	ca 01       	movw	r24, r20
 c86:	81 70       	andi	r24, 0x01	; 1
 c88:	ec 81       	ldd	r30, Y+4	; 0x04
 c8a:	fd 81       	ldd	r31, Y+5	; 0x05
 c8c:	80 83       	st	Z, r24
 c8e:	3b c0       	rjmp	.+118    	; 0xd06 <DIO_enumGetPinValue+0x118>
					break;
				case DIO_PORTB:
					*Copy_pu8Value=READ_BIT(PINB,Copy_u8PinID);
 c90:	e6 e3       	ldi	r30, 0x36	; 54
 c92:	f0 e0       	ldi	r31, 0x00	; 0
 c94:	80 81       	ld	r24, Z
 c96:	28 2f       	mov	r18, r24
 c98:	30 e0       	ldi	r19, 0x00	; 0
 c9a:	8b 81       	ldd	r24, Y+3	; 0x03
 c9c:	88 2f       	mov	r24, r24
 c9e:	90 e0       	ldi	r25, 0x00	; 0
 ca0:	a9 01       	movw	r20, r18
 ca2:	02 c0       	rjmp	.+4      	; 0xca8 <DIO_enumGetPinValue+0xba>
 ca4:	55 95       	asr	r21
 ca6:	47 95       	ror	r20
 ca8:	8a 95       	dec	r24
 caa:	e2 f7       	brpl	.-8      	; 0xca4 <DIO_enumGetPinValue+0xb6>
 cac:	ca 01       	movw	r24, r20
 cae:	81 70       	andi	r24, 0x01	; 1
 cb0:	ec 81       	ldd	r30, Y+4	; 0x04
 cb2:	fd 81       	ldd	r31, Y+5	; 0x05
 cb4:	80 83       	st	Z, r24
 cb6:	27 c0       	rjmp	.+78     	; 0xd06 <DIO_enumGetPinValue+0x118>
					break;
				case DIO_PORTC:
					*Copy_pu8Value=READ_BIT(PINC,Copy_u8PinID);
 cb8:	e3 e3       	ldi	r30, 0x33	; 51
 cba:	f0 e0       	ldi	r31, 0x00	; 0
 cbc:	80 81       	ld	r24, Z
 cbe:	28 2f       	mov	r18, r24
 cc0:	30 e0       	ldi	r19, 0x00	; 0
 cc2:	8b 81       	ldd	r24, Y+3	; 0x03
 cc4:	88 2f       	mov	r24, r24
 cc6:	90 e0       	ldi	r25, 0x00	; 0
 cc8:	a9 01       	movw	r20, r18
 cca:	02 c0       	rjmp	.+4      	; 0xcd0 <DIO_enumGetPinValue+0xe2>
 ccc:	55 95       	asr	r21
 cce:	47 95       	ror	r20
 cd0:	8a 95       	dec	r24
 cd2:	e2 f7       	brpl	.-8      	; 0xccc <DIO_enumGetPinValue+0xde>
 cd4:	ca 01       	movw	r24, r20
 cd6:	81 70       	andi	r24, 0x01	; 1
 cd8:	ec 81       	ldd	r30, Y+4	; 0x04
 cda:	fd 81       	ldd	r31, Y+5	; 0x05
 cdc:	80 83       	st	Z, r24
 cde:	13 c0       	rjmp	.+38     	; 0xd06 <DIO_enumGetPinValue+0x118>
					break;
				case DIO_PORTD:
					*Copy_pu8Value=READ_BIT(PIND,Copy_u8PinID);
 ce0:	e0 e3       	ldi	r30, 0x30	; 48
 ce2:	f0 e0       	ldi	r31, 0x00	; 0
 ce4:	80 81       	ld	r24, Z
 ce6:	28 2f       	mov	r18, r24
 ce8:	30 e0       	ldi	r19, 0x00	; 0
 cea:	8b 81       	ldd	r24, Y+3	; 0x03
 cec:	88 2f       	mov	r24, r24
 cee:	90 e0       	ldi	r25, 0x00	; 0
 cf0:	a9 01       	movw	r20, r18
 cf2:	02 c0       	rjmp	.+4      	; 0xcf8 <DIO_enumGetPinValue+0x10a>
 cf4:	55 95       	asr	r21
 cf6:	47 95       	ror	r20
 cf8:	8a 95       	dec	r24
 cfa:	e2 f7       	brpl	.-8      	; 0xcf4 <DIO_enumGetPinValue+0x106>
 cfc:	ca 01       	movw	r24, r20
 cfe:	81 70       	andi	r24, 0x01	; 1
 d00:	ec 81       	ldd	r30, Y+4	; 0x04
 d02:	fd 81       	ldd	r31, Y+5	; 0x05
 d04:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
 d06:	81 e0       	ldi	r24, 0x01	; 1
 d08:	89 83       	std	Y+1, r24	; 0x01
 d0a:	05 c0       	rjmp	.+10     	; 0xd16 <DIO_enumGetPinValue+0x128>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
 d0c:	82 e0       	ldi	r24, 0x02	; 2
 d0e:	89 83       	std	Y+1, r24	; 0x01
 d10:	02 c0       	rjmp	.+4      	; 0xd16 <DIO_enumGetPinValue+0x128>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 d12:	83 e0       	ldi	r24, 0x03	; 3
 d14:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 d16:	89 81       	ldd	r24, Y+1	; 0x01
}
 d18:	27 96       	adiw	r28, 0x07	; 7
 d1a:	0f b6       	in	r0, 0x3f	; 63
 d1c:	f8 94       	cli
 d1e:	de bf       	out	0x3e, r29	; 62
 d20:	0f be       	out	0x3f, r0	; 63
 d22:	cd bf       	out	0x3d, r28	; 61
 d24:	cf 91       	pop	r28
 d26:	df 91       	pop	r29
 d28:	08 95       	ret

00000d2a <main>:
#include "../include/LIB/STDtypes.h"
#include "../include/MCAL/DIO/DIO_int.h"


int main (void)
{
 d2a:	df 93       	push	r29
 d2c:	cf 93       	push	r28
 d2e:	0f 92       	push	r0
 d30:	cd b7       	in	r28, 0x3d	; 61
 d32:	de b7       	in	r29, 0x3e	; 62
	DIO_enumPortInit ();
 d34:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_enumPortInit>

	DIO_enumSetPinDirection (DIO_PORTA,DIO_PIN0,INPUT);
 d38:	80 e0       	ldi	r24, 0x00	; 0
 d3a:	60 e0       	ldi	r22, 0x00	; 0
 d3c:	40 e0       	ldi	r20, 0x00	; 0
 d3e:	0e 94 65 02 	call	0x4ca	; 0x4ca <DIO_enumSetPinDirection>
	DIO_enumSetPinDirection (DIO_PORTC,DIO_PIN0,OUTPUT);
 d42:	82 e0       	ldi	r24, 0x02	; 2
 d44:	60 e0       	ldi	r22, 0x00	; 0
 d46:	41 e0       	ldi	r20, 0x01	; 1
 d48:	0e 94 65 02 	call	0x4ca	; 0x4ca <DIO_enumSetPinDirection>

	DIO_enumSetPinValue (DIO_PORTA,DIO_PIN0,PULL_UP);
 d4c:	80 e0       	ldi	r24, 0x00	; 0
 d4e:	60 e0       	ldi	r22, 0x00	; 0
 d50:	41 e0       	ldi	r20, 0x01	; 1
 d52:	0e 94 51 03 	call	0x6a2	; 0x6a2 <DIO_enumSetPinValue>

	u8 button=0;
 d56:	19 82       	std	Y+1, r1	; 0x01
	while (1)
	{
		DIO_enumGetPinValue (DIO_PORTA,DIO_PIN0,&button);
 d58:	80 e0       	ldi	r24, 0x00	; 0
 d5a:	60 e0       	ldi	r22, 0x00	; 0
 d5c:	9e 01       	movw	r18, r28
 d5e:	2f 5f       	subi	r18, 0xFF	; 255
 d60:	3f 4f       	sbci	r19, 0xFF	; 255
 d62:	a9 01       	movw	r20, r18
 d64:	0e 94 f7 05 	call	0xbee	; 0xbee <DIO_enumGetPinValue>
		if (button==0)
 d68:	89 81       	ldd	r24, Y+1	; 0x01
 d6a:	88 23       	and	r24, r24
 d6c:	31 f4       	brne	.+12     	; 0xd7a <main+0x50>
		{
			DIO_enumSetPinValue (DIO_PORTC,DIO_PIN0,HIGH);
 d6e:	82 e0       	ldi	r24, 0x02	; 2
 d70:	60 e0       	ldi	r22, 0x00	; 0
 d72:	41 e0       	ldi	r20, 0x01	; 1
 d74:	0e 94 51 03 	call	0x6a2	; 0x6a2 <DIO_enumSetPinValue>
 d78:	ef cf       	rjmp	.-34     	; 0xd58 <main+0x2e>
		}
		else
		{
			DIO_enumSetPinValue (DIO_PORTC,DIO_PIN0,LOW);
 d7a:	82 e0       	ldi	r24, 0x02	; 2
 d7c:	60 e0       	ldi	r22, 0x00	; 0
 d7e:	40 e0       	ldi	r20, 0x00	; 0
 d80:	0e 94 51 03 	call	0x6a2	; 0x6a2 <DIO_enumSetPinValue>
 d84:	e9 cf       	rjmp	.-46     	; 0xd58 <main+0x2e>

00000d86 <_exit>:
 d86:	f8 94       	cli

00000d88 <__stop_program>:
 d88:	ff cf       	rjmp	.-2      	; 0xd88 <__stop_program>
