
DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000db4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000ee8  00000000  00000000  00000e08  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000005e7  00000000  00000000  00001cf0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
   4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
   8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
   c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  10:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  14:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  18:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  1c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  20:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  24:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  28:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  2c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  30:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  34:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  38:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  3c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  40:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  44:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  48:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  4c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  50:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  54:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  58:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  5c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  60:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  64:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  68:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  6c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  70:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  74:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  78:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  7c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  80:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  84:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  88:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  8c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  90:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  94:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  98:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  9c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  a0:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  a4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  a8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  ac:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  b0:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  b4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  b8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  bc:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  c0:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  c4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
  c8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d1 e2       	ldi	r29, 0x21	; 33
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61
  d8:	00 e0       	ldi	r16, 0x00	; 0
  da:	0c bf       	out	0x3c, r16	; 60

000000dc <__do_copy_data>:
  dc:	12 e0       	ldi	r17, 0x02	; 2
  de:	a0 e0       	ldi	r26, 0x00	; 0
  e0:	b2 e0       	ldi	r27, 0x02	; 2
  e2:	e4 eb       	ldi	r30, 0xB4	; 180
  e4:	fd e0       	ldi	r31, 0x0D	; 13
  e6:	00 e0       	ldi	r16, 0x00	; 0
  e8:	0b bf       	out	0x3b, r16	; 59
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <__do_copy_data+0x14>
  ec:	07 90       	elpm	r0, Z+
  ee:	0d 92       	st	X+, r0
  f0:	a0 30       	cpi	r26, 0x00	; 0
  f2:	b1 07       	cpc	r27, r17
  f4:	d9 f7       	brne	.-10     	; 0xec <__do_copy_data+0x10>
  f6:	0e 94 ac 06 	call	0xd58	; 0xd58 <main>
  fa:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <_exit>

000000fe <__bad_interrupt>:
  fe:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000102 <DIO_enumPortInit>:
#include "LIB/BITMATH.h"
#include "DIO_priv.h"
#include "DIO_config.h"

ES_T DIO_enumPortInit (void)
{
 102:	df 93       	push	r29
 104:	cf 93       	push	r28
 106:	0f 92       	push	r0
 108:	cd b7       	in	r28, 0x3d	; 61
 10a:	de b7       	in	r29, 0x3e	; 62
	ES_T Local_enumErrorState=ES_NOK;
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	89 83       	std	Y+1, r24	; 0x01

	DDRA=CONC(PA_PIN7_DIR,PA_PIN6_DIR,PA_PIN5_DIR,PA_PIN4_DIR,PA_PIN3_DIR,PA_PIN2_DIR,PA_PIN1_DIR,PA_PIN0_DIR);
 110:	ea e3       	ldi	r30, 0x3A	; 58
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	8f ef       	ldi	r24, 0xFF	; 255
 116:	80 83       	st	Z, r24
	DDRB=CONC(PB_PIN7_DIR,PB_PIN6_DIR,PB_PIN5_DIR,PB_PIN4_DIR,PB_PIN3_DIR,PB_PIN2_DIR,PB_PIN1_DIR,PB_PIN0_DIR);
 118:	e7 e3       	ldi	r30, 0x37	; 55
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	8f ef       	ldi	r24, 0xFF	; 255
 11e:	80 83       	st	Z, r24
	DDRC=CONC(PC_PIN7_DIR,PC_PIN6_DIR,PC_PIN5_DIR,PC_PIN4_DIR,PC_PIN3_DIR,PC_PIN2_DIR,PC_PIN1_DIR,PC_PIN0_DIR);
 120:	e4 e3       	ldi	r30, 0x34	; 52
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	8f ef       	ldi	r24, 0xFF	; 255
 126:	80 83       	st	Z, r24
	DDRD=CONC(PD_PIN7_DIR,PD_PIN6_DIR,PD_PIN5_DIR,PD_PIN4_DIR,PD_PIN3_DIR,PD_PIN2_DIR,PD_PIN1_DIR,PD_PIN0_DIR);
 128:	e1 e3       	ldi	r30, 0x31	; 49
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	8f ef       	ldi	r24, 0xFF	; 255
 12e:	80 83       	st	Z, r24

	PORTA=CONC(PA_PIN7_VAL,PA_PIN6_VAL,PA_PIN5_VAL,PA_PIN4_VAL,PA_PIN3_VAL,PA_PIN2_VAL,PA_PIN1_VAL,PA_PIN0_VAL);
 130:	eb e3       	ldi	r30, 0x3B	; 59
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	10 82       	st	Z, r1
	PORTB=CONC(PB_PIN7_VAL,PB_PIN6_VAL,PB_PIN5_VAL,PB_PIN4_VAL,PB_PIN3_VAL,PB_PIN2_VAL,PB_PIN1_VAL,PB_PIN0_VAL);
 136:	e8 e3       	ldi	r30, 0x38	; 56
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	10 82       	st	Z, r1
	PORTC=CONC(PC_PIN7_VAL,PC_PIN6_VAL,PC_PIN5_VAL,PC_PIN4_VAL,PC_PIN3_VAL,PC_PIN2_VAL,PC_PIN1_VAL,PC_PIN0_VAL);
 13c:	e5 e3       	ldi	r30, 0x35	; 53
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	10 82       	st	Z, r1
	PORTD=CONC(PD_PIN7_VAL,PD_PIN6_VAL,PD_PIN5_VAL,PD_PIN4_VAL,PD_PIN3_VAL,PD_PIN2_VAL,PD_PIN1_VAL,PD_PIN0_VAL);
 142:	e2 e3       	ldi	r30, 0x32	; 50
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	10 82       	st	Z, r1

	Local_enumErrorState=ES_OK;
 148:	19 82       	std	Y+1, r1	; 0x01

	return Local_enumErrorState;
 14a:	89 81       	ldd	r24, Y+1	; 0x01
}
 14c:	0f 90       	pop	r0
 14e:	cf 91       	pop	r28
 150:	df 91       	pop	r29
 152:	08 95       	ret

00000154 <DIO_enumSetPortDirection>:

ES_T DIO_enumSetPortDirection (u8 Copy_u8PortID,u8 Copy_u8Direction)
{
 154:	df 93       	push	r29
 156:	cf 93       	push	r28
 158:	00 d0       	rcall	.+0      	; 0x15a <DIO_enumSetPortDirection+0x6>
 15a:	0f 92       	push	r0
 15c:	0f 92       	push	r0
 15e:	cd b7       	in	r28, 0x3d	; 61
 160:	de b7       	in	r29, 0x3e	; 62
 162:	8a 83       	std	Y+2, r24	; 0x02
 164:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 16a:	8a 81       	ldd	r24, Y+2	; 0x02
 16c:	84 30       	cpi	r24, 0x04	; 4
 16e:	a0 f5       	brcc	.+104    	; 0x1d8 <DIO_enumSetPortDirection+0x84>
	{
		switch(Copy_u8PortID)
 170:	8a 81       	ldd	r24, Y+2	; 0x02
 172:	28 2f       	mov	r18, r24
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	3d 83       	std	Y+5, r19	; 0x05
 178:	2c 83       	std	Y+4, r18	; 0x04
 17a:	8c 81       	ldd	r24, Y+4	; 0x04
 17c:	9d 81       	ldd	r25, Y+5	; 0x05
 17e:	81 30       	cpi	r24, 0x01	; 1
 180:	91 05       	cpc	r25, r1
 182:	d1 f0       	breq	.+52     	; 0x1b8 <DIO_enumSetPortDirection+0x64>
 184:	2c 81       	ldd	r18, Y+4	; 0x04
 186:	3d 81       	ldd	r19, Y+5	; 0x05
 188:	22 30       	cpi	r18, 0x02	; 2
 18a:	31 05       	cpc	r19, r1
 18c:	2c f4       	brge	.+10     	; 0x198 <DIO_enumSetPortDirection+0x44>
 18e:	8c 81       	ldd	r24, Y+4	; 0x04
 190:	9d 81       	ldd	r25, Y+5	; 0x05
 192:	00 97       	sbiw	r24, 0x00	; 0
 194:	61 f0       	breq	.+24     	; 0x1ae <DIO_enumSetPortDirection+0x5a>
 196:	1e c0       	rjmp	.+60     	; 0x1d4 <DIO_enumSetPortDirection+0x80>
 198:	2c 81       	ldd	r18, Y+4	; 0x04
 19a:	3d 81       	ldd	r19, Y+5	; 0x05
 19c:	22 30       	cpi	r18, 0x02	; 2
 19e:	31 05       	cpc	r19, r1
 1a0:	81 f0       	breq	.+32     	; 0x1c2 <DIO_enumSetPortDirection+0x6e>
 1a2:	8c 81       	ldd	r24, Y+4	; 0x04
 1a4:	9d 81       	ldd	r25, Y+5	; 0x05
 1a6:	83 30       	cpi	r24, 0x03	; 3
 1a8:	91 05       	cpc	r25, r1
 1aa:	81 f0       	breq	.+32     	; 0x1cc <DIO_enumSetPortDirection+0x78>
 1ac:	13 c0       	rjmp	.+38     	; 0x1d4 <DIO_enumSetPortDirection+0x80>
		{
			case DIO_PORTA:
				DDRA=Copy_u8Direction;
 1ae:	ea e3       	ldi	r30, 0x3A	; 58
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	8b 81       	ldd	r24, Y+3	; 0x03
 1b4:	80 83       	st	Z, r24
 1b6:	0e c0       	rjmp	.+28     	; 0x1d4 <DIO_enumSetPortDirection+0x80>
				break;
			case DIO_PORTB:
				DDRB=Copy_u8Direction;
 1b8:	e7 e3       	ldi	r30, 0x37	; 55
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	8b 81       	ldd	r24, Y+3	; 0x03
 1be:	80 83       	st	Z, r24
 1c0:	09 c0       	rjmp	.+18     	; 0x1d4 <DIO_enumSetPortDirection+0x80>
				break;
			case DIO_PORTC:
				DDRC=Copy_u8Direction;
 1c2:	e4 e3       	ldi	r30, 0x34	; 52
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	8b 81       	ldd	r24, Y+3	; 0x03
 1c8:	80 83       	st	Z, r24
 1ca:	04 c0       	rjmp	.+8      	; 0x1d4 <DIO_enumSetPortDirection+0x80>
				break;
			case DIO_PORTD:
				DDRD=Copy_u8Direction;
 1cc:	e1 e3       	ldi	r30, 0x31	; 49
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	8b 81       	ldd	r24, Y+3	; 0x03
 1d2:	80 83       	st	Z, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 1d4:	19 82       	std	Y+1, r1	; 0x01
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DIO_enumSetPortDirection+0x88>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 1d8:	83 e0       	ldi	r24, 0x03	; 3
 1da:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 1dc:	89 81       	ldd	r24, Y+1	; 0x01
}
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	0f 90       	pop	r0
 1e8:	cf 91       	pop	r28
 1ea:	df 91       	pop	r29
 1ec:	08 95       	ret

000001ee <DIO_enumSetPortValue>:
ES_T DIO_enumSetPortValue (u8 Copy_u8PortID,u8 Copy_u8Value)
{
 1ee:	df 93       	push	r29
 1f0:	cf 93       	push	r28
 1f2:	00 d0       	rcall	.+0      	; 0x1f4 <DIO_enumSetPortValue+0x6>
 1f4:	0f 92       	push	r0
 1f6:	0f 92       	push	r0
 1f8:	cd b7       	in	r28, 0x3d	; 61
 1fa:	de b7       	in	r29, 0x3e	; 62
 1fc:	8a 83       	std	Y+2, r24	; 0x02
 1fe:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 204:	8a 81       	ldd	r24, Y+2	; 0x02
 206:	84 30       	cpi	r24, 0x04	; 4
 208:	a0 f5       	brcc	.+104    	; 0x272 <DIO_enumSetPortValue+0x84>
	{
		switch(Copy_u8PortID)
 20a:	8a 81       	ldd	r24, Y+2	; 0x02
 20c:	28 2f       	mov	r18, r24
 20e:	30 e0       	ldi	r19, 0x00	; 0
 210:	3d 83       	std	Y+5, r19	; 0x05
 212:	2c 83       	std	Y+4, r18	; 0x04
 214:	8c 81       	ldd	r24, Y+4	; 0x04
 216:	9d 81       	ldd	r25, Y+5	; 0x05
 218:	81 30       	cpi	r24, 0x01	; 1
 21a:	91 05       	cpc	r25, r1
 21c:	d1 f0       	breq	.+52     	; 0x252 <DIO_enumSetPortValue+0x64>
 21e:	2c 81       	ldd	r18, Y+4	; 0x04
 220:	3d 81       	ldd	r19, Y+5	; 0x05
 222:	22 30       	cpi	r18, 0x02	; 2
 224:	31 05       	cpc	r19, r1
 226:	2c f4       	brge	.+10     	; 0x232 <DIO_enumSetPortValue+0x44>
 228:	8c 81       	ldd	r24, Y+4	; 0x04
 22a:	9d 81       	ldd	r25, Y+5	; 0x05
 22c:	00 97       	sbiw	r24, 0x00	; 0
 22e:	61 f0       	breq	.+24     	; 0x248 <DIO_enumSetPortValue+0x5a>
 230:	1e c0       	rjmp	.+60     	; 0x26e <DIO_enumSetPortValue+0x80>
 232:	2c 81       	ldd	r18, Y+4	; 0x04
 234:	3d 81       	ldd	r19, Y+5	; 0x05
 236:	22 30       	cpi	r18, 0x02	; 2
 238:	31 05       	cpc	r19, r1
 23a:	81 f0       	breq	.+32     	; 0x25c <DIO_enumSetPortValue+0x6e>
 23c:	8c 81       	ldd	r24, Y+4	; 0x04
 23e:	9d 81       	ldd	r25, Y+5	; 0x05
 240:	83 30       	cpi	r24, 0x03	; 3
 242:	91 05       	cpc	r25, r1
 244:	81 f0       	breq	.+32     	; 0x266 <DIO_enumSetPortValue+0x78>
 246:	13 c0       	rjmp	.+38     	; 0x26e <DIO_enumSetPortValue+0x80>
		{
			case DIO_PORTA:
				PORTA=Copy_u8Value;
 248:	eb e3       	ldi	r30, 0x3B	; 59
 24a:	f0 e0       	ldi	r31, 0x00	; 0
 24c:	8b 81       	ldd	r24, Y+3	; 0x03
 24e:	80 83       	st	Z, r24
 250:	0e c0       	rjmp	.+28     	; 0x26e <DIO_enumSetPortValue+0x80>
				break;
			case DIO_PORTB:
				PORTB=Copy_u8Value;
 252:	e8 e3       	ldi	r30, 0x38	; 56
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	8b 81       	ldd	r24, Y+3	; 0x03
 258:	80 83       	st	Z, r24
 25a:	09 c0       	rjmp	.+18     	; 0x26e <DIO_enumSetPortValue+0x80>
				break;
			case DIO_PORTC:
				PORTC=Copy_u8Value;
 25c:	e5 e3       	ldi	r30, 0x35	; 53
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	8b 81       	ldd	r24, Y+3	; 0x03
 262:	80 83       	st	Z, r24
 264:	04 c0       	rjmp	.+8      	; 0x26e <DIO_enumSetPortValue+0x80>
				break;
			case DIO_PORTD:
				PORTD=Copy_u8Value;
 266:	e2 e3       	ldi	r30, 0x32	; 50
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	8b 81       	ldd	r24, Y+3	; 0x03
 26c:	80 83       	st	Z, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 26e:	19 82       	std	Y+1, r1	; 0x01
 270:	02 c0       	rjmp	.+4      	; 0x276 <DIO_enumSetPortValue+0x88>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 272:	83 e0       	ldi	r24, 0x03	; 3
 274:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 276:	89 81       	ldd	r24, Y+1	; 0x01
}
 278:	0f 90       	pop	r0
 27a:	0f 90       	pop	r0
 27c:	0f 90       	pop	r0
 27e:	0f 90       	pop	r0
 280:	0f 90       	pop	r0
 282:	cf 91       	pop	r28
 284:	df 91       	pop	r29
 286:	08 95       	ret

00000288 <DIO_enumTogglePortDirection>:
ES_T DIO_enumTogglePortDirection (u8 Copy_u8PortID)
{
 288:	df 93       	push	r29
 28a:	cf 93       	push	r28
 28c:	00 d0       	rcall	.+0      	; 0x28e <DIO_enumTogglePortDirection+0x6>
 28e:	0f 92       	push	r0
 290:	cd b7       	in	r28, 0x3d	; 61
 292:	de b7       	in	r29, 0x3e	; 62
 294:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 29a:	8a 81       	ldd	r24, Y+2	; 0x02
 29c:	84 30       	cpi	r24, 0x04	; 4
 29e:	08 f0       	brcs	.+2      	; 0x2a2 <DIO_enumTogglePortDirection+0x1a>
 2a0:	40 c0       	rjmp	.+128    	; 0x322 <DIO_enumTogglePortDirection+0x9a>
	{
		switch(Copy_u8PortID)
 2a2:	8a 81       	ldd	r24, Y+2	; 0x02
 2a4:	28 2f       	mov	r18, r24
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	3c 83       	std	Y+4, r19	; 0x04
 2aa:	2b 83       	std	Y+3, r18	; 0x03
 2ac:	8b 81       	ldd	r24, Y+3	; 0x03
 2ae:	9c 81       	ldd	r25, Y+4	; 0x04
 2b0:	81 30       	cpi	r24, 0x01	; 1
 2b2:	91 05       	cpc	r25, r1
 2b4:	e9 f0       	breq	.+58     	; 0x2f0 <DIO_enumTogglePortDirection+0x68>
 2b6:	2b 81       	ldd	r18, Y+3	; 0x03
 2b8:	3c 81       	ldd	r19, Y+4	; 0x04
 2ba:	22 30       	cpi	r18, 0x02	; 2
 2bc:	31 05       	cpc	r19, r1
 2be:	2c f4       	brge	.+10     	; 0x2ca <DIO_enumTogglePortDirection+0x42>
 2c0:	8b 81       	ldd	r24, Y+3	; 0x03
 2c2:	9c 81       	ldd	r25, Y+4	; 0x04
 2c4:	00 97       	sbiw	r24, 0x00	; 0
 2c6:	61 f0       	breq	.+24     	; 0x2e0 <DIO_enumTogglePortDirection+0x58>
 2c8:	2a c0       	rjmp	.+84     	; 0x31e <DIO_enumTogglePortDirection+0x96>
 2ca:	2b 81       	ldd	r18, Y+3	; 0x03
 2cc:	3c 81       	ldd	r19, Y+4	; 0x04
 2ce:	22 30       	cpi	r18, 0x02	; 2
 2d0:	31 05       	cpc	r19, r1
 2d2:	b1 f0       	breq	.+44     	; 0x300 <DIO_enumTogglePortDirection+0x78>
 2d4:	8b 81       	ldd	r24, Y+3	; 0x03
 2d6:	9c 81       	ldd	r25, Y+4	; 0x04
 2d8:	83 30       	cpi	r24, 0x03	; 3
 2da:	91 05       	cpc	r25, r1
 2dc:	c9 f0       	breq	.+50     	; 0x310 <DIO_enumTogglePortDirection+0x88>
 2de:	1f c0       	rjmp	.+62     	; 0x31e <DIO_enumTogglePortDirection+0x96>
		{
			case DIO_PORTA:
				DDRA=~DDRA;
 2e0:	aa e3       	ldi	r26, 0x3A	; 58
 2e2:	b0 e0       	ldi	r27, 0x00	; 0
 2e4:	ea e3       	ldi	r30, 0x3A	; 58
 2e6:	f0 e0       	ldi	r31, 0x00	; 0
 2e8:	80 81       	ld	r24, Z
 2ea:	80 95       	com	r24
 2ec:	8c 93       	st	X, r24
 2ee:	17 c0       	rjmp	.+46     	; 0x31e <DIO_enumTogglePortDirection+0x96>
				break;
			case DIO_PORTB:
				DDRB=~DDRB;
 2f0:	a7 e3       	ldi	r26, 0x37	; 55
 2f2:	b0 e0       	ldi	r27, 0x00	; 0
 2f4:	e7 e3       	ldi	r30, 0x37	; 55
 2f6:	f0 e0       	ldi	r31, 0x00	; 0
 2f8:	80 81       	ld	r24, Z
 2fa:	80 95       	com	r24
 2fc:	8c 93       	st	X, r24
 2fe:	0f c0       	rjmp	.+30     	; 0x31e <DIO_enumTogglePortDirection+0x96>
				break;
			case DIO_PORTC:
				DDRC=~DDRC;
 300:	a4 e3       	ldi	r26, 0x34	; 52
 302:	b0 e0       	ldi	r27, 0x00	; 0
 304:	e4 e3       	ldi	r30, 0x34	; 52
 306:	f0 e0       	ldi	r31, 0x00	; 0
 308:	80 81       	ld	r24, Z
 30a:	80 95       	com	r24
 30c:	8c 93       	st	X, r24
 30e:	07 c0       	rjmp	.+14     	; 0x31e <DIO_enumTogglePortDirection+0x96>
				break;
			case DIO_PORTD:
				DDRD=~DDRD;
 310:	a1 e3       	ldi	r26, 0x31	; 49
 312:	b0 e0       	ldi	r27, 0x00	; 0
 314:	e1 e3       	ldi	r30, 0x31	; 49
 316:	f0 e0       	ldi	r31, 0x00	; 0
 318:	80 81       	ld	r24, Z
 31a:	80 95       	com	r24
 31c:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 31e:	19 82       	std	Y+1, r1	; 0x01
 320:	02 c0       	rjmp	.+4      	; 0x326 <DIO_enumTogglePortDirection+0x9e>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 322:	83 e0       	ldi	r24, 0x03	; 3
 324:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 326:	89 81       	ldd	r24, Y+1	; 0x01
}
 328:	0f 90       	pop	r0
 32a:	0f 90       	pop	r0
 32c:	0f 90       	pop	r0
 32e:	0f 90       	pop	r0
 330:	cf 91       	pop	r28
 332:	df 91       	pop	r29
 334:	08 95       	ret

00000336 <DIO_enumTogglePortValue>:
ES_T DIO_enumTogglePortValue (u8 Copy_u8PortID)
{
 336:	df 93       	push	r29
 338:	cf 93       	push	r28
 33a:	00 d0       	rcall	.+0      	; 0x33c <DIO_enumTogglePortValue+0x6>
 33c:	0f 92       	push	r0
 33e:	cd b7       	in	r28, 0x3d	; 61
 340:	de b7       	in	r29, 0x3e	; 62
 342:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
 344:	81 e0       	ldi	r24, 0x01	; 1
 346:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 348:	8a 81       	ldd	r24, Y+2	; 0x02
 34a:	84 30       	cpi	r24, 0x04	; 4
 34c:	08 f0       	brcs	.+2      	; 0x350 <DIO_enumTogglePortValue+0x1a>
 34e:	40 c0       	rjmp	.+128    	; 0x3d0 <DIO_enumTogglePortValue+0x9a>
	{
		switch(Copy_u8PortID)
 350:	8a 81       	ldd	r24, Y+2	; 0x02
 352:	28 2f       	mov	r18, r24
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	3c 83       	std	Y+4, r19	; 0x04
 358:	2b 83       	std	Y+3, r18	; 0x03
 35a:	8b 81       	ldd	r24, Y+3	; 0x03
 35c:	9c 81       	ldd	r25, Y+4	; 0x04
 35e:	81 30       	cpi	r24, 0x01	; 1
 360:	91 05       	cpc	r25, r1
 362:	e9 f0       	breq	.+58     	; 0x39e <DIO_enumTogglePortValue+0x68>
 364:	2b 81       	ldd	r18, Y+3	; 0x03
 366:	3c 81       	ldd	r19, Y+4	; 0x04
 368:	22 30       	cpi	r18, 0x02	; 2
 36a:	31 05       	cpc	r19, r1
 36c:	2c f4       	brge	.+10     	; 0x378 <DIO_enumTogglePortValue+0x42>
 36e:	8b 81       	ldd	r24, Y+3	; 0x03
 370:	9c 81       	ldd	r25, Y+4	; 0x04
 372:	00 97       	sbiw	r24, 0x00	; 0
 374:	61 f0       	breq	.+24     	; 0x38e <DIO_enumTogglePortValue+0x58>
 376:	2a c0       	rjmp	.+84     	; 0x3cc <DIO_enumTogglePortValue+0x96>
 378:	2b 81       	ldd	r18, Y+3	; 0x03
 37a:	3c 81       	ldd	r19, Y+4	; 0x04
 37c:	22 30       	cpi	r18, 0x02	; 2
 37e:	31 05       	cpc	r19, r1
 380:	b1 f0       	breq	.+44     	; 0x3ae <DIO_enumTogglePortValue+0x78>
 382:	8b 81       	ldd	r24, Y+3	; 0x03
 384:	9c 81       	ldd	r25, Y+4	; 0x04
 386:	83 30       	cpi	r24, 0x03	; 3
 388:	91 05       	cpc	r25, r1
 38a:	c9 f0       	breq	.+50     	; 0x3be <DIO_enumTogglePortValue+0x88>
 38c:	1f c0       	rjmp	.+62     	; 0x3cc <DIO_enumTogglePortValue+0x96>
		{
			case DIO_PORTA:
				PORTA=~PORTA;
 38e:	ab e3       	ldi	r26, 0x3B	; 59
 390:	b0 e0       	ldi	r27, 0x00	; 0
 392:	eb e3       	ldi	r30, 0x3B	; 59
 394:	f0 e0       	ldi	r31, 0x00	; 0
 396:	80 81       	ld	r24, Z
 398:	80 95       	com	r24
 39a:	8c 93       	st	X, r24
 39c:	17 c0       	rjmp	.+46     	; 0x3cc <DIO_enumTogglePortValue+0x96>
				break;
			case DIO_PORTB:
				PORTB=~PORTB;
 39e:	a8 e3       	ldi	r26, 0x38	; 56
 3a0:	b0 e0       	ldi	r27, 0x00	; 0
 3a2:	e8 e3       	ldi	r30, 0x38	; 56
 3a4:	f0 e0       	ldi	r31, 0x00	; 0
 3a6:	80 81       	ld	r24, Z
 3a8:	80 95       	com	r24
 3aa:	8c 93       	st	X, r24
 3ac:	0f c0       	rjmp	.+30     	; 0x3cc <DIO_enumTogglePortValue+0x96>
				break;
			case DIO_PORTC:
				PORTC=~PORTC;
 3ae:	a5 e3       	ldi	r26, 0x35	; 53
 3b0:	b0 e0       	ldi	r27, 0x00	; 0
 3b2:	e5 e3       	ldi	r30, 0x35	; 53
 3b4:	f0 e0       	ldi	r31, 0x00	; 0
 3b6:	80 81       	ld	r24, Z
 3b8:	80 95       	com	r24
 3ba:	8c 93       	st	X, r24
 3bc:	07 c0       	rjmp	.+14     	; 0x3cc <DIO_enumTogglePortValue+0x96>
				break;
			case DIO_PORTD:
				PORTD=~PORTD;
 3be:	a2 e3       	ldi	r26, 0x32	; 50
 3c0:	b0 e0       	ldi	r27, 0x00	; 0
 3c2:	e2 e3       	ldi	r30, 0x32	; 50
 3c4:	f0 e0       	ldi	r31, 0x00	; 0
 3c6:	80 81       	ld	r24, Z
 3c8:	80 95       	com	r24
 3ca:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 3cc:	19 82       	std	Y+1, r1	; 0x01
 3ce:	02 c0       	rjmp	.+4      	; 0x3d4 <DIO_enumTogglePortValue+0x9e>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 3d0:	83 e0       	ldi	r24, 0x03	; 3
 3d2:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 3d4:	89 81       	ldd	r24, Y+1	; 0x01
}
 3d6:	0f 90       	pop	r0
 3d8:	0f 90       	pop	r0
 3da:	0f 90       	pop	r0
 3dc:	0f 90       	pop	r0
 3de:	cf 91       	pop	r28
 3e0:	df 91       	pop	r29
 3e2:	08 95       	ret

000003e4 <DIO_enumGetPortDirection>:
ES_T DIO_enumGetPortDirection (u8 Copy_u8PortID,u8 *Copy_pu8Direction)
{
 3e4:	df 93       	push	r29
 3e6:	cf 93       	push	r28
 3e8:	00 d0       	rcall	.+0      	; 0x3ea <DIO_enumGetPortDirection+0x6>
 3ea:	00 d0       	rcall	.+0      	; 0x3ec <DIO_enumGetPortDirection+0x8>
 3ec:	cd b7       	in	r28, 0x3d	; 61
 3ee:	de b7       	in	r29, 0x3e	; 62
 3f0:	8a 83       	std	Y+2, r24	; 0x02
 3f2:	7c 83       	std	Y+4, r23	; 0x04
 3f4:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
 3f6:	81 e0       	ldi	r24, 0x01	; 1
 3f8:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 3fa:	8a 81       	ldd	r24, Y+2	; 0x02
 3fc:	84 30       	cpi	r24, 0x04	; 4
 3fe:	08 f0       	brcs	.+2      	; 0x402 <DIO_enumGetPortDirection+0x1e>
 400:	43 c0       	rjmp	.+134    	; 0x488 <DIO_enumGetPortDirection+0xa4>
	{
		if (Copy_pu8Direction!=NULL)
 402:	8b 81       	ldd	r24, Y+3	; 0x03
 404:	9c 81       	ldd	r25, Y+4	; 0x04
 406:	00 97       	sbiw	r24, 0x00	; 0
 408:	e1 f1       	breq	.+120    	; 0x482 <DIO_enumGetPortDirection+0x9e>
		{
			switch(Copy_u8PortID)
 40a:	8a 81       	ldd	r24, Y+2	; 0x02
 40c:	28 2f       	mov	r18, r24
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	3e 83       	std	Y+6, r19	; 0x06
 412:	2d 83       	std	Y+5, r18	; 0x05
 414:	8d 81       	ldd	r24, Y+5	; 0x05
 416:	9e 81       	ldd	r25, Y+6	; 0x06
 418:	81 30       	cpi	r24, 0x01	; 1
 41a:	91 05       	cpc	r25, r1
 41c:	e1 f0       	breq	.+56     	; 0x456 <DIO_enumGetPortDirection+0x72>
 41e:	2d 81       	ldd	r18, Y+5	; 0x05
 420:	3e 81       	ldd	r19, Y+6	; 0x06
 422:	22 30       	cpi	r18, 0x02	; 2
 424:	31 05       	cpc	r19, r1
 426:	2c f4       	brge	.+10     	; 0x432 <DIO_enumGetPortDirection+0x4e>
 428:	8d 81       	ldd	r24, Y+5	; 0x05
 42a:	9e 81       	ldd	r25, Y+6	; 0x06
 42c:	00 97       	sbiw	r24, 0x00	; 0
 42e:	61 f0       	breq	.+24     	; 0x448 <DIO_enumGetPortDirection+0x64>
 430:	26 c0       	rjmp	.+76     	; 0x47e <DIO_enumGetPortDirection+0x9a>
 432:	2d 81       	ldd	r18, Y+5	; 0x05
 434:	3e 81       	ldd	r19, Y+6	; 0x06
 436:	22 30       	cpi	r18, 0x02	; 2
 438:	31 05       	cpc	r19, r1
 43a:	a1 f0       	breq	.+40     	; 0x464 <DIO_enumGetPortDirection+0x80>
 43c:	8d 81       	ldd	r24, Y+5	; 0x05
 43e:	9e 81       	ldd	r25, Y+6	; 0x06
 440:	83 30       	cpi	r24, 0x03	; 3
 442:	91 05       	cpc	r25, r1
 444:	b1 f0       	breq	.+44     	; 0x472 <DIO_enumGetPortDirection+0x8e>
 446:	1b c0       	rjmp	.+54     	; 0x47e <DIO_enumGetPortDirection+0x9a>
			{
				case DIO_PORTA:
					*Copy_pu8Direction=DDRA;
 448:	ea e3       	ldi	r30, 0x3A	; 58
 44a:	f0 e0       	ldi	r31, 0x00	; 0
 44c:	80 81       	ld	r24, Z
 44e:	eb 81       	ldd	r30, Y+3	; 0x03
 450:	fc 81       	ldd	r31, Y+4	; 0x04
 452:	80 83       	st	Z, r24
 454:	14 c0       	rjmp	.+40     	; 0x47e <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTB:
					*Copy_pu8Direction=DDRB;
 456:	e7 e3       	ldi	r30, 0x37	; 55
 458:	f0 e0       	ldi	r31, 0x00	; 0
 45a:	80 81       	ld	r24, Z
 45c:	eb 81       	ldd	r30, Y+3	; 0x03
 45e:	fc 81       	ldd	r31, Y+4	; 0x04
 460:	80 83       	st	Z, r24
 462:	0d c0       	rjmp	.+26     	; 0x47e <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTC:
					*Copy_pu8Direction=DDRC;
 464:	e4 e3       	ldi	r30, 0x34	; 52
 466:	f0 e0       	ldi	r31, 0x00	; 0
 468:	80 81       	ld	r24, Z
 46a:	eb 81       	ldd	r30, Y+3	; 0x03
 46c:	fc 81       	ldd	r31, Y+4	; 0x04
 46e:	80 83       	st	Z, r24
 470:	06 c0       	rjmp	.+12     	; 0x47e <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTD:
					*Copy_pu8Direction=DDRD;
 472:	e1 e3       	ldi	r30, 0x31	; 49
 474:	f0 e0       	ldi	r31, 0x00	; 0
 476:	80 81       	ld	r24, Z
 478:	eb 81       	ldd	r30, Y+3	; 0x03
 47a:	fc 81       	ldd	r31, Y+4	; 0x04
 47c:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
 47e:	19 82       	std	Y+1, r1	; 0x01
 480:	05 c0       	rjmp	.+10     	; 0x48c <DIO_enumGetPortDirection+0xa8>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
 482:	82 e0       	ldi	r24, 0x02	; 2
 484:	89 83       	std	Y+1, r24	; 0x01
 486:	02 c0       	rjmp	.+4      	; 0x48c <DIO_enumGetPortDirection+0xa8>
		}

	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 488:	83 e0       	ldi	r24, 0x03	; 3
 48a:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 48c:	89 81       	ldd	r24, Y+1	; 0x01
}
 48e:	26 96       	adiw	r28, 0x06	; 6
 490:	0f b6       	in	r0, 0x3f	; 63
 492:	f8 94       	cli
 494:	de bf       	out	0x3e, r29	; 62
 496:	0f be       	out	0x3f, r0	; 63
 498:	cd bf       	out	0x3d, r28	; 61
 49a:	cf 91       	pop	r28
 49c:	df 91       	pop	r29
 49e:	08 95       	ret

000004a0 <DIO_enumGetPortValue>:
ES_T DIO_enumGetPortValue (u8 Copy_u8PortID,u8 *Copy_pu8Value)
{
 4a0:	df 93       	push	r29
 4a2:	cf 93       	push	r28
 4a4:	00 d0       	rcall	.+0      	; 0x4a6 <DIO_enumGetPortValue+0x6>
 4a6:	00 d0       	rcall	.+0      	; 0x4a8 <DIO_enumGetPortValue+0x8>
 4a8:	cd b7       	in	r28, 0x3d	; 61
 4aa:	de b7       	in	r29, 0x3e	; 62
 4ac:	8a 83       	std	Y+2, r24	; 0x02
 4ae:	7c 83       	std	Y+4, r23	; 0x04
 4b0:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
 4b2:	81 e0       	ldi	r24, 0x01	; 1
 4b4:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 4b6:	8a 81       	ldd	r24, Y+2	; 0x02
 4b8:	84 30       	cpi	r24, 0x04	; 4
 4ba:	08 f0       	brcs	.+2      	; 0x4be <DIO_enumGetPortValue+0x1e>
 4bc:	43 c0       	rjmp	.+134    	; 0x544 <DIO_enumGetPortValue+0xa4>
	{
		if (Copy_pu8Value!=NULL)
 4be:	8b 81       	ldd	r24, Y+3	; 0x03
 4c0:	9c 81       	ldd	r25, Y+4	; 0x04
 4c2:	00 97       	sbiw	r24, 0x00	; 0
 4c4:	e1 f1       	breq	.+120    	; 0x53e <DIO_enumGetPortValue+0x9e>
		{
			switch(Copy_u8PortID)
 4c6:	8a 81       	ldd	r24, Y+2	; 0x02
 4c8:	28 2f       	mov	r18, r24
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	3e 83       	std	Y+6, r19	; 0x06
 4ce:	2d 83       	std	Y+5, r18	; 0x05
 4d0:	8d 81       	ldd	r24, Y+5	; 0x05
 4d2:	9e 81       	ldd	r25, Y+6	; 0x06
 4d4:	81 30       	cpi	r24, 0x01	; 1
 4d6:	91 05       	cpc	r25, r1
 4d8:	e1 f0       	breq	.+56     	; 0x512 <DIO_enumGetPortValue+0x72>
 4da:	2d 81       	ldd	r18, Y+5	; 0x05
 4dc:	3e 81       	ldd	r19, Y+6	; 0x06
 4de:	22 30       	cpi	r18, 0x02	; 2
 4e0:	31 05       	cpc	r19, r1
 4e2:	2c f4       	brge	.+10     	; 0x4ee <DIO_enumGetPortValue+0x4e>
 4e4:	8d 81       	ldd	r24, Y+5	; 0x05
 4e6:	9e 81       	ldd	r25, Y+6	; 0x06
 4e8:	00 97       	sbiw	r24, 0x00	; 0
 4ea:	61 f0       	breq	.+24     	; 0x504 <DIO_enumGetPortValue+0x64>
 4ec:	26 c0       	rjmp	.+76     	; 0x53a <DIO_enumGetPortValue+0x9a>
 4ee:	2d 81       	ldd	r18, Y+5	; 0x05
 4f0:	3e 81       	ldd	r19, Y+6	; 0x06
 4f2:	22 30       	cpi	r18, 0x02	; 2
 4f4:	31 05       	cpc	r19, r1
 4f6:	a1 f0       	breq	.+40     	; 0x520 <DIO_enumGetPortValue+0x80>
 4f8:	8d 81       	ldd	r24, Y+5	; 0x05
 4fa:	9e 81       	ldd	r25, Y+6	; 0x06
 4fc:	83 30       	cpi	r24, 0x03	; 3
 4fe:	91 05       	cpc	r25, r1
 500:	b1 f0       	breq	.+44     	; 0x52e <DIO_enumGetPortValue+0x8e>
 502:	1b c0       	rjmp	.+54     	; 0x53a <DIO_enumGetPortValue+0x9a>
			{
				case DIO_PORTA:
					*Copy_pu8Value=PINA;
 504:	e9 e3       	ldi	r30, 0x39	; 57
 506:	f0 e0       	ldi	r31, 0x00	; 0
 508:	80 81       	ld	r24, Z
 50a:	eb 81       	ldd	r30, Y+3	; 0x03
 50c:	fc 81       	ldd	r31, Y+4	; 0x04
 50e:	80 83       	st	Z, r24
 510:	14 c0       	rjmp	.+40     	; 0x53a <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTB:
					*Copy_pu8Value=PINB;
 512:	e6 e3       	ldi	r30, 0x36	; 54
 514:	f0 e0       	ldi	r31, 0x00	; 0
 516:	80 81       	ld	r24, Z
 518:	eb 81       	ldd	r30, Y+3	; 0x03
 51a:	fc 81       	ldd	r31, Y+4	; 0x04
 51c:	80 83       	st	Z, r24
 51e:	0d c0       	rjmp	.+26     	; 0x53a <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTC:
					*Copy_pu8Value=PINC;
 520:	e3 e3       	ldi	r30, 0x33	; 51
 522:	f0 e0       	ldi	r31, 0x00	; 0
 524:	80 81       	ld	r24, Z
 526:	eb 81       	ldd	r30, Y+3	; 0x03
 528:	fc 81       	ldd	r31, Y+4	; 0x04
 52a:	80 83       	st	Z, r24
 52c:	06 c0       	rjmp	.+12     	; 0x53a <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTD:
					*Copy_pu8Value=PIND;
 52e:	e0 e3       	ldi	r30, 0x30	; 48
 530:	f0 e0       	ldi	r31, 0x00	; 0
 532:	80 81       	ld	r24, Z
 534:	eb 81       	ldd	r30, Y+3	; 0x03
 536:	fc 81       	ldd	r31, Y+4	; 0x04
 538:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
 53a:	19 82       	std	Y+1, r1	; 0x01
 53c:	05 c0       	rjmp	.+10     	; 0x548 <DIO_enumGetPortValue+0xa8>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
 53e:	82 e0       	ldi	r24, 0x02	; 2
 540:	89 83       	std	Y+1, r24	; 0x01
 542:	02 c0       	rjmp	.+4      	; 0x548 <DIO_enumGetPortValue+0xa8>
		}

	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 544:	83 e0       	ldi	r24, 0x03	; 3
 546:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 548:	89 81       	ldd	r24, Y+1	; 0x01
}
 54a:	26 96       	adiw	r28, 0x06	; 6
 54c:	0f b6       	in	r0, 0x3f	; 63
 54e:	f8 94       	cli
 550:	de bf       	out	0x3e, r29	; 62
 552:	0f be       	out	0x3f, r0	; 63
 554:	cd bf       	out	0x3d, r28	; 61
 556:	cf 91       	pop	r28
 558:	df 91       	pop	r29
 55a:	08 95       	ret

0000055c <DIO_enumSetPinDirection>:

ES_T DIO_enumSetPinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8Direction)
{
 55c:	df 93       	push	r29
 55e:	cf 93       	push	r28
 560:	00 d0       	rcall	.+0      	; 0x562 <DIO_enumSetPinDirection+0x6>
 562:	00 d0       	rcall	.+0      	; 0x564 <DIO_enumSetPinDirection+0x8>
 564:	cd b7       	in	r28, 0x3d	; 61
 566:	de b7       	in	r29, 0x3e	; 62
 568:	8a 83       	std	Y+2, r24	; 0x02
 56a:	6b 83       	std	Y+3, r22	; 0x03
 56c:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
 56e:	81 e0       	ldi	r24, 0x01	; 1
 570:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 572:	8a 81       	ldd	r24, Y+2	; 0x02
 574:	84 30       	cpi	r24, 0x04	; 4
 576:	08 f0       	brcs	.+2      	; 0x57a <DIO_enumSetPinDirection+0x1e>
 578:	c8 c0       	rjmp	.+400    	; 0x70a <DIO_enumSetPinDirection+0x1ae>
	{
		switch(Copy_u8PortID)
 57a:	8a 81       	ldd	r24, Y+2	; 0x02
 57c:	28 2f       	mov	r18, r24
 57e:	30 e0       	ldi	r19, 0x00	; 0
 580:	3e 83       	std	Y+6, r19	; 0x06
 582:	2d 83       	std	Y+5, r18	; 0x05
 584:	6d 81       	ldd	r22, Y+5	; 0x05
 586:	7e 81       	ldd	r23, Y+6	; 0x06
 588:	61 30       	cpi	r22, 0x01	; 1
 58a:	71 05       	cpc	r23, r1
 58c:	09 f4       	brne	.+2      	; 0x590 <DIO_enumSetPinDirection+0x34>
 58e:	41 c0       	rjmp	.+130    	; 0x612 <DIO_enumSetPinDirection+0xb6>
 590:	8d 81       	ldd	r24, Y+5	; 0x05
 592:	9e 81       	ldd	r25, Y+6	; 0x06
 594:	82 30       	cpi	r24, 0x02	; 2
 596:	91 05       	cpc	r25, r1
 598:	34 f4       	brge	.+12     	; 0x5a6 <DIO_enumSetPinDirection+0x4a>
 59a:	2d 81       	ldd	r18, Y+5	; 0x05
 59c:	3e 81       	ldd	r19, Y+6	; 0x06
 59e:	21 15       	cp	r18, r1
 5a0:	31 05       	cpc	r19, r1
 5a2:	71 f0       	breq	.+28     	; 0x5c0 <DIO_enumSetPinDirection+0x64>
 5a4:	b0 c0       	rjmp	.+352    	; 0x706 <DIO_enumSetPinDirection+0x1aa>
 5a6:	6d 81       	ldd	r22, Y+5	; 0x05
 5a8:	7e 81       	ldd	r23, Y+6	; 0x06
 5aa:	62 30       	cpi	r22, 0x02	; 2
 5ac:	71 05       	cpc	r23, r1
 5ae:	09 f4       	brne	.+2      	; 0x5b2 <DIO_enumSetPinDirection+0x56>
 5b0:	59 c0       	rjmp	.+178    	; 0x664 <DIO_enumSetPinDirection+0x108>
 5b2:	8d 81       	ldd	r24, Y+5	; 0x05
 5b4:	9e 81       	ldd	r25, Y+6	; 0x06
 5b6:	83 30       	cpi	r24, 0x03	; 3
 5b8:	91 05       	cpc	r25, r1
 5ba:	09 f4       	brne	.+2      	; 0x5be <DIO_enumSetPinDirection+0x62>
 5bc:	7c c0       	rjmp	.+248    	; 0x6b6 <DIO_enumSetPinDirection+0x15a>
 5be:	a3 c0       	rjmp	.+326    	; 0x706 <DIO_enumSetPinDirection+0x1aa>
		{
			case DIO_PORTA:
				CLEAR_BIT(DDRA,Copy_u8PinID);
 5c0:	aa e3       	ldi	r26, 0x3A	; 58
 5c2:	b0 e0       	ldi	r27, 0x00	; 0
 5c4:	ea e3       	ldi	r30, 0x3A	; 58
 5c6:	f0 e0       	ldi	r31, 0x00	; 0
 5c8:	80 81       	ld	r24, Z
 5ca:	48 2f       	mov	r20, r24
 5cc:	8b 81       	ldd	r24, Y+3	; 0x03
 5ce:	28 2f       	mov	r18, r24
 5d0:	30 e0       	ldi	r19, 0x00	; 0
 5d2:	81 e0       	ldi	r24, 0x01	; 1
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <DIO_enumSetPinDirection+0x80>
 5d8:	88 0f       	add	r24, r24
 5da:	99 1f       	adc	r25, r25
 5dc:	2a 95       	dec	r18
 5de:	e2 f7       	brpl	.-8      	; 0x5d8 <DIO_enumSetPinDirection+0x7c>
 5e0:	80 95       	com	r24
 5e2:	84 23       	and	r24, r20
 5e4:	8c 93       	st	X, r24
				DDRA |= (Copy_u8Direction << Copy_u8PinID);
 5e6:	aa e3       	ldi	r26, 0x3A	; 58
 5e8:	b0 e0       	ldi	r27, 0x00	; 0
 5ea:	ea e3       	ldi	r30, 0x3A	; 58
 5ec:	f0 e0       	ldi	r31, 0x00	; 0
 5ee:	80 81       	ld	r24, Z
 5f0:	48 2f       	mov	r20, r24
 5f2:	8c 81       	ldd	r24, Y+4	; 0x04
 5f4:	28 2f       	mov	r18, r24
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	8b 81       	ldd	r24, Y+3	; 0x03
 5fa:	88 2f       	mov	r24, r24
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	b9 01       	movw	r22, r18
 600:	02 c0       	rjmp	.+4      	; 0x606 <DIO_enumSetPinDirection+0xaa>
 602:	66 0f       	add	r22, r22
 604:	77 1f       	adc	r23, r23
 606:	8a 95       	dec	r24
 608:	e2 f7       	brpl	.-8      	; 0x602 <DIO_enumSetPinDirection+0xa6>
 60a:	cb 01       	movw	r24, r22
 60c:	84 2b       	or	r24, r20
 60e:	8c 93       	st	X, r24
 610:	7a c0       	rjmp	.+244    	; 0x706 <DIO_enumSetPinDirection+0x1aa>
				break;
			case DIO_PORTB:
				CLEAR_BIT(DDRB,Copy_u8PinID);
 612:	a7 e3       	ldi	r26, 0x37	; 55
 614:	b0 e0       	ldi	r27, 0x00	; 0
 616:	e7 e3       	ldi	r30, 0x37	; 55
 618:	f0 e0       	ldi	r31, 0x00	; 0
 61a:	80 81       	ld	r24, Z
 61c:	48 2f       	mov	r20, r24
 61e:	8b 81       	ldd	r24, Y+3	; 0x03
 620:	28 2f       	mov	r18, r24
 622:	30 e0       	ldi	r19, 0x00	; 0
 624:	81 e0       	ldi	r24, 0x01	; 1
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	02 c0       	rjmp	.+4      	; 0x62e <DIO_enumSetPinDirection+0xd2>
 62a:	88 0f       	add	r24, r24
 62c:	99 1f       	adc	r25, r25
 62e:	2a 95       	dec	r18
 630:	e2 f7       	brpl	.-8      	; 0x62a <DIO_enumSetPinDirection+0xce>
 632:	80 95       	com	r24
 634:	84 23       	and	r24, r20
 636:	8c 93       	st	X, r24
				DDRB |= (Copy_u8Direction << Copy_u8PinID);
 638:	a7 e3       	ldi	r26, 0x37	; 55
 63a:	b0 e0       	ldi	r27, 0x00	; 0
 63c:	e7 e3       	ldi	r30, 0x37	; 55
 63e:	f0 e0       	ldi	r31, 0x00	; 0
 640:	80 81       	ld	r24, Z
 642:	48 2f       	mov	r20, r24
 644:	8c 81       	ldd	r24, Y+4	; 0x04
 646:	28 2f       	mov	r18, r24
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	8b 81       	ldd	r24, Y+3	; 0x03
 64c:	88 2f       	mov	r24, r24
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	b9 01       	movw	r22, r18
 652:	02 c0       	rjmp	.+4      	; 0x658 <DIO_enumSetPinDirection+0xfc>
 654:	66 0f       	add	r22, r22
 656:	77 1f       	adc	r23, r23
 658:	8a 95       	dec	r24
 65a:	e2 f7       	brpl	.-8      	; 0x654 <DIO_enumSetPinDirection+0xf8>
 65c:	cb 01       	movw	r24, r22
 65e:	84 2b       	or	r24, r20
 660:	8c 93       	st	X, r24
 662:	51 c0       	rjmp	.+162    	; 0x706 <DIO_enumSetPinDirection+0x1aa>
				break;
			case DIO_PORTC:
				CLEAR_BIT(DDRC,Copy_u8PinID);
 664:	a4 e3       	ldi	r26, 0x34	; 52
 666:	b0 e0       	ldi	r27, 0x00	; 0
 668:	e4 e3       	ldi	r30, 0x34	; 52
 66a:	f0 e0       	ldi	r31, 0x00	; 0
 66c:	80 81       	ld	r24, Z
 66e:	48 2f       	mov	r20, r24
 670:	8b 81       	ldd	r24, Y+3	; 0x03
 672:	28 2f       	mov	r18, r24
 674:	30 e0       	ldi	r19, 0x00	; 0
 676:	81 e0       	ldi	r24, 0x01	; 1
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	02 c0       	rjmp	.+4      	; 0x680 <DIO_enumSetPinDirection+0x124>
 67c:	88 0f       	add	r24, r24
 67e:	99 1f       	adc	r25, r25
 680:	2a 95       	dec	r18
 682:	e2 f7       	brpl	.-8      	; 0x67c <DIO_enumSetPinDirection+0x120>
 684:	80 95       	com	r24
 686:	84 23       	and	r24, r20
 688:	8c 93       	st	X, r24
				DDRC |= (Copy_u8Direction << Copy_u8PinID);
 68a:	a4 e3       	ldi	r26, 0x34	; 52
 68c:	b0 e0       	ldi	r27, 0x00	; 0
 68e:	e4 e3       	ldi	r30, 0x34	; 52
 690:	f0 e0       	ldi	r31, 0x00	; 0
 692:	80 81       	ld	r24, Z
 694:	48 2f       	mov	r20, r24
 696:	8c 81       	ldd	r24, Y+4	; 0x04
 698:	28 2f       	mov	r18, r24
 69a:	30 e0       	ldi	r19, 0x00	; 0
 69c:	8b 81       	ldd	r24, Y+3	; 0x03
 69e:	88 2f       	mov	r24, r24
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	b9 01       	movw	r22, r18
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <DIO_enumSetPinDirection+0x14e>
 6a6:	66 0f       	add	r22, r22
 6a8:	77 1f       	adc	r23, r23
 6aa:	8a 95       	dec	r24
 6ac:	e2 f7       	brpl	.-8      	; 0x6a6 <DIO_enumSetPinDirection+0x14a>
 6ae:	cb 01       	movw	r24, r22
 6b0:	84 2b       	or	r24, r20
 6b2:	8c 93       	st	X, r24
 6b4:	28 c0       	rjmp	.+80     	; 0x706 <DIO_enumSetPinDirection+0x1aa>
				break;
			case DIO_PORTD:
				CLEAR_BIT(DDRD,Copy_u8PinID);
 6b6:	a1 e3       	ldi	r26, 0x31	; 49
 6b8:	b0 e0       	ldi	r27, 0x00	; 0
 6ba:	e1 e3       	ldi	r30, 0x31	; 49
 6bc:	f0 e0       	ldi	r31, 0x00	; 0
 6be:	80 81       	ld	r24, Z
 6c0:	48 2f       	mov	r20, r24
 6c2:	8b 81       	ldd	r24, Y+3	; 0x03
 6c4:	28 2f       	mov	r18, r24
 6c6:	30 e0       	ldi	r19, 0x00	; 0
 6c8:	81 e0       	ldi	r24, 0x01	; 1
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <DIO_enumSetPinDirection+0x176>
 6ce:	88 0f       	add	r24, r24
 6d0:	99 1f       	adc	r25, r25
 6d2:	2a 95       	dec	r18
 6d4:	e2 f7       	brpl	.-8      	; 0x6ce <DIO_enumSetPinDirection+0x172>
 6d6:	80 95       	com	r24
 6d8:	84 23       	and	r24, r20
 6da:	8c 93       	st	X, r24
				DDRD |= (Copy_u8Direction << Copy_u8PinID);
 6dc:	a1 e3       	ldi	r26, 0x31	; 49
 6de:	b0 e0       	ldi	r27, 0x00	; 0
 6e0:	e1 e3       	ldi	r30, 0x31	; 49
 6e2:	f0 e0       	ldi	r31, 0x00	; 0
 6e4:	80 81       	ld	r24, Z
 6e6:	48 2f       	mov	r20, r24
 6e8:	8c 81       	ldd	r24, Y+4	; 0x04
 6ea:	28 2f       	mov	r18, r24
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	8b 81       	ldd	r24, Y+3	; 0x03
 6f0:	88 2f       	mov	r24, r24
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	b9 01       	movw	r22, r18
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <DIO_enumSetPinDirection+0x1a0>
 6f8:	66 0f       	add	r22, r22
 6fa:	77 1f       	adc	r23, r23
 6fc:	8a 95       	dec	r24
 6fe:	e2 f7       	brpl	.-8      	; 0x6f8 <DIO_enumSetPinDirection+0x19c>
 700:	cb 01       	movw	r24, r22
 702:	84 2b       	or	r24, r20
 704:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 706:	19 82       	std	Y+1, r1	; 0x01
 708:	02 c0       	rjmp	.+4      	; 0x70e <DIO_enumSetPinDirection+0x1b2>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 70a:	83 e0       	ldi	r24, 0x03	; 3
 70c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 70e:	89 81       	ldd	r24, Y+1	; 0x01
}
 710:	26 96       	adiw	r28, 0x06	; 6
 712:	0f b6       	in	r0, 0x3f	; 63
 714:	f8 94       	cli
 716:	de bf       	out	0x3e, r29	; 62
 718:	0f be       	out	0x3f, r0	; 63
 71a:	cd bf       	out	0x3d, r28	; 61
 71c:	cf 91       	pop	r28
 71e:	df 91       	pop	r29
 720:	08 95       	ret

00000722 <DIO_enumSetPinValue>:
ES_T DIO_enumSetPinValue (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8Value)
{
 722:	df 93       	push	r29
 724:	cf 93       	push	r28
 726:	00 d0       	rcall	.+0      	; 0x728 <DIO_enumSetPinValue+0x6>
 728:	00 d0       	rcall	.+0      	; 0x72a <DIO_enumSetPinValue+0x8>
 72a:	cd b7       	in	r28, 0x3d	; 61
 72c:	de b7       	in	r29, 0x3e	; 62
 72e:	8a 83       	std	Y+2, r24	; 0x02
 730:	6b 83       	std	Y+3, r22	; 0x03
 732:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
 734:	81 e0       	ldi	r24, 0x01	; 1
 736:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 738:	8a 81       	ldd	r24, Y+2	; 0x02
 73a:	84 30       	cpi	r24, 0x04	; 4
 73c:	08 f0       	brcs	.+2      	; 0x740 <DIO_enumSetPinValue+0x1e>
 73e:	c8 c0       	rjmp	.+400    	; 0x8d0 <DIO_enumSetPinValue+0x1ae>
	{
		switch(Copy_u8PortID)
 740:	8a 81       	ldd	r24, Y+2	; 0x02
 742:	28 2f       	mov	r18, r24
 744:	30 e0       	ldi	r19, 0x00	; 0
 746:	3e 83       	std	Y+6, r19	; 0x06
 748:	2d 83       	std	Y+5, r18	; 0x05
 74a:	6d 81       	ldd	r22, Y+5	; 0x05
 74c:	7e 81       	ldd	r23, Y+6	; 0x06
 74e:	61 30       	cpi	r22, 0x01	; 1
 750:	71 05       	cpc	r23, r1
 752:	09 f4       	brne	.+2      	; 0x756 <DIO_enumSetPinValue+0x34>
 754:	41 c0       	rjmp	.+130    	; 0x7d8 <DIO_enumSetPinValue+0xb6>
 756:	8d 81       	ldd	r24, Y+5	; 0x05
 758:	9e 81       	ldd	r25, Y+6	; 0x06
 75a:	82 30       	cpi	r24, 0x02	; 2
 75c:	91 05       	cpc	r25, r1
 75e:	34 f4       	brge	.+12     	; 0x76c <DIO_enumSetPinValue+0x4a>
 760:	2d 81       	ldd	r18, Y+5	; 0x05
 762:	3e 81       	ldd	r19, Y+6	; 0x06
 764:	21 15       	cp	r18, r1
 766:	31 05       	cpc	r19, r1
 768:	71 f0       	breq	.+28     	; 0x786 <DIO_enumSetPinValue+0x64>
 76a:	b0 c0       	rjmp	.+352    	; 0x8cc <DIO_enumSetPinValue+0x1aa>
 76c:	6d 81       	ldd	r22, Y+5	; 0x05
 76e:	7e 81       	ldd	r23, Y+6	; 0x06
 770:	62 30       	cpi	r22, 0x02	; 2
 772:	71 05       	cpc	r23, r1
 774:	09 f4       	brne	.+2      	; 0x778 <DIO_enumSetPinValue+0x56>
 776:	59 c0       	rjmp	.+178    	; 0x82a <DIO_enumSetPinValue+0x108>
 778:	8d 81       	ldd	r24, Y+5	; 0x05
 77a:	9e 81       	ldd	r25, Y+6	; 0x06
 77c:	83 30       	cpi	r24, 0x03	; 3
 77e:	91 05       	cpc	r25, r1
 780:	09 f4       	brne	.+2      	; 0x784 <DIO_enumSetPinValue+0x62>
 782:	7c c0       	rjmp	.+248    	; 0x87c <DIO_enumSetPinValue+0x15a>
 784:	a3 c0       	rjmp	.+326    	; 0x8cc <DIO_enumSetPinValue+0x1aa>
		{
			case DIO_PORTA:
				CLEAR_BIT(PORTA,Copy_u8PinID);
 786:	ab e3       	ldi	r26, 0x3B	; 59
 788:	b0 e0       	ldi	r27, 0x00	; 0
 78a:	eb e3       	ldi	r30, 0x3B	; 59
 78c:	f0 e0       	ldi	r31, 0x00	; 0
 78e:	80 81       	ld	r24, Z
 790:	48 2f       	mov	r20, r24
 792:	8b 81       	ldd	r24, Y+3	; 0x03
 794:	28 2f       	mov	r18, r24
 796:	30 e0       	ldi	r19, 0x00	; 0
 798:	81 e0       	ldi	r24, 0x01	; 1
 79a:	90 e0       	ldi	r25, 0x00	; 0
 79c:	02 c0       	rjmp	.+4      	; 0x7a2 <DIO_enumSetPinValue+0x80>
 79e:	88 0f       	add	r24, r24
 7a0:	99 1f       	adc	r25, r25
 7a2:	2a 95       	dec	r18
 7a4:	e2 f7       	brpl	.-8      	; 0x79e <DIO_enumSetPinValue+0x7c>
 7a6:	80 95       	com	r24
 7a8:	84 23       	and	r24, r20
 7aa:	8c 93       	st	X, r24
				PORTA |= (Copy_u8Value << Copy_u8PinID);
 7ac:	ab e3       	ldi	r26, 0x3B	; 59
 7ae:	b0 e0       	ldi	r27, 0x00	; 0
 7b0:	eb e3       	ldi	r30, 0x3B	; 59
 7b2:	f0 e0       	ldi	r31, 0x00	; 0
 7b4:	80 81       	ld	r24, Z
 7b6:	48 2f       	mov	r20, r24
 7b8:	8c 81       	ldd	r24, Y+4	; 0x04
 7ba:	28 2f       	mov	r18, r24
 7bc:	30 e0       	ldi	r19, 0x00	; 0
 7be:	8b 81       	ldd	r24, Y+3	; 0x03
 7c0:	88 2f       	mov	r24, r24
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	b9 01       	movw	r22, r18
 7c6:	02 c0       	rjmp	.+4      	; 0x7cc <DIO_enumSetPinValue+0xaa>
 7c8:	66 0f       	add	r22, r22
 7ca:	77 1f       	adc	r23, r23
 7cc:	8a 95       	dec	r24
 7ce:	e2 f7       	brpl	.-8      	; 0x7c8 <DIO_enumSetPinValue+0xa6>
 7d0:	cb 01       	movw	r24, r22
 7d2:	84 2b       	or	r24, r20
 7d4:	8c 93       	st	X, r24
 7d6:	7a c0       	rjmp	.+244    	; 0x8cc <DIO_enumSetPinValue+0x1aa>
				break;
			case DIO_PORTB:
				CLEAR_BIT(PORTB,Copy_u8PinID);
 7d8:	a8 e3       	ldi	r26, 0x38	; 56
 7da:	b0 e0       	ldi	r27, 0x00	; 0
 7dc:	e8 e3       	ldi	r30, 0x38	; 56
 7de:	f0 e0       	ldi	r31, 0x00	; 0
 7e0:	80 81       	ld	r24, Z
 7e2:	48 2f       	mov	r20, r24
 7e4:	8b 81       	ldd	r24, Y+3	; 0x03
 7e6:	28 2f       	mov	r18, r24
 7e8:	30 e0       	ldi	r19, 0x00	; 0
 7ea:	81 e0       	ldi	r24, 0x01	; 1
 7ec:	90 e0       	ldi	r25, 0x00	; 0
 7ee:	02 c0       	rjmp	.+4      	; 0x7f4 <DIO_enumSetPinValue+0xd2>
 7f0:	88 0f       	add	r24, r24
 7f2:	99 1f       	adc	r25, r25
 7f4:	2a 95       	dec	r18
 7f6:	e2 f7       	brpl	.-8      	; 0x7f0 <DIO_enumSetPinValue+0xce>
 7f8:	80 95       	com	r24
 7fa:	84 23       	and	r24, r20
 7fc:	8c 93       	st	X, r24
				PORTB |= (Copy_u8Value << Copy_u8PinID);
 7fe:	a8 e3       	ldi	r26, 0x38	; 56
 800:	b0 e0       	ldi	r27, 0x00	; 0
 802:	e8 e3       	ldi	r30, 0x38	; 56
 804:	f0 e0       	ldi	r31, 0x00	; 0
 806:	80 81       	ld	r24, Z
 808:	48 2f       	mov	r20, r24
 80a:	8c 81       	ldd	r24, Y+4	; 0x04
 80c:	28 2f       	mov	r18, r24
 80e:	30 e0       	ldi	r19, 0x00	; 0
 810:	8b 81       	ldd	r24, Y+3	; 0x03
 812:	88 2f       	mov	r24, r24
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	b9 01       	movw	r22, r18
 818:	02 c0       	rjmp	.+4      	; 0x81e <DIO_enumSetPinValue+0xfc>
 81a:	66 0f       	add	r22, r22
 81c:	77 1f       	adc	r23, r23
 81e:	8a 95       	dec	r24
 820:	e2 f7       	brpl	.-8      	; 0x81a <DIO_enumSetPinValue+0xf8>
 822:	cb 01       	movw	r24, r22
 824:	84 2b       	or	r24, r20
 826:	8c 93       	st	X, r24
 828:	51 c0       	rjmp	.+162    	; 0x8cc <DIO_enumSetPinValue+0x1aa>
				break;
			case DIO_PORTC:
				CLEAR_BIT(PORTC,Copy_u8PinID);
 82a:	a5 e3       	ldi	r26, 0x35	; 53
 82c:	b0 e0       	ldi	r27, 0x00	; 0
 82e:	e5 e3       	ldi	r30, 0x35	; 53
 830:	f0 e0       	ldi	r31, 0x00	; 0
 832:	80 81       	ld	r24, Z
 834:	48 2f       	mov	r20, r24
 836:	8b 81       	ldd	r24, Y+3	; 0x03
 838:	28 2f       	mov	r18, r24
 83a:	30 e0       	ldi	r19, 0x00	; 0
 83c:	81 e0       	ldi	r24, 0x01	; 1
 83e:	90 e0       	ldi	r25, 0x00	; 0
 840:	02 c0       	rjmp	.+4      	; 0x846 <DIO_enumSetPinValue+0x124>
 842:	88 0f       	add	r24, r24
 844:	99 1f       	adc	r25, r25
 846:	2a 95       	dec	r18
 848:	e2 f7       	brpl	.-8      	; 0x842 <DIO_enumSetPinValue+0x120>
 84a:	80 95       	com	r24
 84c:	84 23       	and	r24, r20
 84e:	8c 93       	st	X, r24
				PORTC |= (Copy_u8Value << Copy_u8PinID);
 850:	a5 e3       	ldi	r26, 0x35	; 53
 852:	b0 e0       	ldi	r27, 0x00	; 0
 854:	e5 e3       	ldi	r30, 0x35	; 53
 856:	f0 e0       	ldi	r31, 0x00	; 0
 858:	80 81       	ld	r24, Z
 85a:	48 2f       	mov	r20, r24
 85c:	8c 81       	ldd	r24, Y+4	; 0x04
 85e:	28 2f       	mov	r18, r24
 860:	30 e0       	ldi	r19, 0x00	; 0
 862:	8b 81       	ldd	r24, Y+3	; 0x03
 864:	88 2f       	mov	r24, r24
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	b9 01       	movw	r22, r18
 86a:	02 c0       	rjmp	.+4      	; 0x870 <DIO_enumSetPinValue+0x14e>
 86c:	66 0f       	add	r22, r22
 86e:	77 1f       	adc	r23, r23
 870:	8a 95       	dec	r24
 872:	e2 f7       	brpl	.-8      	; 0x86c <DIO_enumSetPinValue+0x14a>
 874:	cb 01       	movw	r24, r22
 876:	84 2b       	or	r24, r20
 878:	8c 93       	st	X, r24
 87a:	28 c0       	rjmp	.+80     	; 0x8cc <DIO_enumSetPinValue+0x1aa>
				break;
			case DIO_PORTD:
				CLEAR_BIT(PORTD,Copy_u8PinID);
 87c:	a2 e3       	ldi	r26, 0x32	; 50
 87e:	b0 e0       	ldi	r27, 0x00	; 0
 880:	e2 e3       	ldi	r30, 0x32	; 50
 882:	f0 e0       	ldi	r31, 0x00	; 0
 884:	80 81       	ld	r24, Z
 886:	48 2f       	mov	r20, r24
 888:	8b 81       	ldd	r24, Y+3	; 0x03
 88a:	28 2f       	mov	r18, r24
 88c:	30 e0       	ldi	r19, 0x00	; 0
 88e:	81 e0       	ldi	r24, 0x01	; 1
 890:	90 e0       	ldi	r25, 0x00	; 0
 892:	02 c0       	rjmp	.+4      	; 0x898 <DIO_enumSetPinValue+0x176>
 894:	88 0f       	add	r24, r24
 896:	99 1f       	adc	r25, r25
 898:	2a 95       	dec	r18
 89a:	e2 f7       	brpl	.-8      	; 0x894 <DIO_enumSetPinValue+0x172>
 89c:	80 95       	com	r24
 89e:	84 23       	and	r24, r20
 8a0:	8c 93       	st	X, r24
				PORTD |= (Copy_u8Value << Copy_u8PinID);
 8a2:	a2 e3       	ldi	r26, 0x32	; 50
 8a4:	b0 e0       	ldi	r27, 0x00	; 0
 8a6:	e2 e3       	ldi	r30, 0x32	; 50
 8a8:	f0 e0       	ldi	r31, 0x00	; 0
 8aa:	80 81       	ld	r24, Z
 8ac:	48 2f       	mov	r20, r24
 8ae:	8c 81       	ldd	r24, Y+4	; 0x04
 8b0:	28 2f       	mov	r18, r24
 8b2:	30 e0       	ldi	r19, 0x00	; 0
 8b4:	8b 81       	ldd	r24, Y+3	; 0x03
 8b6:	88 2f       	mov	r24, r24
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	b9 01       	movw	r22, r18
 8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <DIO_enumSetPinValue+0x1a0>
 8be:	66 0f       	add	r22, r22
 8c0:	77 1f       	adc	r23, r23
 8c2:	8a 95       	dec	r24
 8c4:	e2 f7       	brpl	.-8      	; 0x8be <DIO_enumSetPinValue+0x19c>
 8c6:	cb 01       	movw	r24, r22
 8c8:	84 2b       	or	r24, r20
 8ca:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 8cc:	19 82       	std	Y+1, r1	; 0x01
 8ce:	02 c0       	rjmp	.+4      	; 0x8d4 <DIO_enumSetPinValue+0x1b2>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 8d0:	83 e0       	ldi	r24, 0x03	; 3
 8d2:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 8d4:	89 81       	ldd	r24, Y+1	; 0x01
}
 8d6:	26 96       	adiw	r28, 0x06	; 6
 8d8:	0f b6       	in	r0, 0x3f	; 63
 8da:	f8 94       	cli
 8dc:	de bf       	out	0x3e, r29	; 62
 8de:	0f be       	out	0x3f, r0	; 63
 8e0:	cd bf       	out	0x3d, r28	; 61
 8e2:	cf 91       	pop	r28
 8e4:	df 91       	pop	r29
 8e6:	08 95       	ret

000008e8 <DIO_enumTogglePinDirection>:
ES_T DIO_enumTogglePinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID)
{
 8e8:	df 93       	push	r29
 8ea:	cf 93       	push	r28
 8ec:	00 d0       	rcall	.+0      	; 0x8ee <DIO_enumTogglePinDirection+0x6>
 8ee:	0f 92       	push	r0
 8f0:	0f 92       	push	r0
 8f2:	cd b7       	in	r28, 0x3d	; 61
 8f4:	de b7       	in	r29, 0x3e	; 62
 8f6:	8a 83       	std	Y+2, r24	; 0x02
 8f8:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
 8fa:	81 e0       	ldi	r24, 0x01	; 1
 8fc:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 8fe:	8a 81       	ldd	r24, Y+2	; 0x02
 900:	84 30       	cpi	r24, 0x04	; 4
 902:	08 f0       	brcs	.+2      	; 0x906 <DIO_enumTogglePinDirection+0x1e>
 904:	70 c0       	rjmp	.+224    	; 0x9e6 <DIO_enumTogglePinDirection+0xfe>
	{
		switch(Copy_u8PortID)
 906:	8a 81       	ldd	r24, Y+2	; 0x02
 908:	28 2f       	mov	r18, r24
 90a:	30 e0       	ldi	r19, 0x00	; 0
 90c:	3d 83       	std	Y+5, r19	; 0x05
 90e:	2c 83       	std	Y+4, r18	; 0x04
 910:	8c 81       	ldd	r24, Y+4	; 0x04
 912:	9d 81       	ldd	r25, Y+5	; 0x05
 914:	81 30       	cpi	r24, 0x01	; 1
 916:	91 05       	cpc	r25, r1
 918:	49 f1       	breq	.+82     	; 0x96c <DIO_enumTogglePinDirection+0x84>
 91a:	2c 81       	ldd	r18, Y+4	; 0x04
 91c:	3d 81       	ldd	r19, Y+5	; 0x05
 91e:	22 30       	cpi	r18, 0x02	; 2
 920:	31 05       	cpc	r19, r1
 922:	2c f4       	brge	.+10     	; 0x92e <DIO_enumTogglePinDirection+0x46>
 924:	8c 81       	ldd	r24, Y+4	; 0x04
 926:	9d 81       	ldd	r25, Y+5	; 0x05
 928:	00 97       	sbiw	r24, 0x00	; 0
 92a:	61 f0       	breq	.+24     	; 0x944 <DIO_enumTogglePinDirection+0x5c>
 92c:	5a c0       	rjmp	.+180    	; 0x9e2 <DIO_enumTogglePinDirection+0xfa>
 92e:	2c 81       	ldd	r18, Y+4	; 0x04
 930:	3d 81       	ldd	r19, Y+5	; 0x05
 932:	22 30       	cpi	r18, 0x02	; 2
 934:	31 05       	cpc	r19, r1
 936:	71 f1       	breq	.+92     	; 0x994 <DIO_enumTogglePinDirection+0xac>
 938:	8c 81       	ldd	r24, Y+4	; 0x04
 93a:	9d 81       	ldd	r25, Y+5	; 0x05
 93c:	83 30       	cpi	r24, 0x03	; 3
 93e:	91 05       	cpc	r25, r1
 940:	e9 f1       	breq	.+122    	; 0x9bc <DIO_enumTogglePinDirection+0xd4>
 942:	4f c0       	rjmp	.+158    	; 0x9e2 <DIO_enumTogglePinDirection+0xfa>
		{
			case DIO_PORTA:
				TOGGLE_BIT(DDRA,Copy_u8PinID);
 944:	aa e3       	ldi	r26, 0x3A	; 58
 946:	b0 e0       	ldi	r27, 0x00	; 0
 948:	ea e3       	ldi	r30, 0x3A	; 58
 94a:	f0 e0       	ldi	r31, 0x00	; 0
 94c:	80 81       	ld	r24, Z
 94e:	48 2f       	mov	r20, r24
 950:	8b 81       	ldd	r24, Y+3	; 0x03
 952:	28 2f       	mov	r18, r24
 954:	30 e0       	ldi	r19, 0x00	; 0
 956:	81 e0       	ldi	r24, 0x01	; 1
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	02 2e       	mov	r0, r18
 95c:	02 c0       	rjmp	.+4      	; 0x962 <DIO_enumTogglePinDirection+0x7a>
 95e:	88 0f       	add	r24, r24
 960:	99 1f       	adc	r25, r25
 962:	0a 94       	dec	r0
 964:	e2 f7       	brpl	.-8      	; 0x95e <DIO_enumTogglePinDirection+0x76>
 966:	84 27       	eor	r24, r20
 968:	8c 93       	st	X, r24
 96a:	3b c0       	rjmp	.+118    	; 0x9e2 <DIO_enumTogglePinDirection+0xfa>
				break;
			case DIO_PORTB:
				TOGGLE_BIT(DDRB,Copy_u8PinID);
 96c:	a7 e3       	ldi	r26, 0x37	; 55
 96e:	b0 e0       	ldi	r27, 0x00	; 0
 970:	e7 e3       	ldi	r30, 0x37	; 55
 972:	f0 e0       	ldi	r31, 0x00	; 0
 974:	80 81       	ld	r24, Z
 976:	48 2f       	mov	r20, r24
 978:	8b 81       	ldd	r24, Y+3	; 0x03
 97a:	28 2f       	mov	r18, r24
 97c:	30 e0       	ldi	r19, 0x00	; 0
 97e:	81 e0       	ldi	r24, 0x01	; 1
 980:	90 e0       	ldi	r25, 0x00	; 0
 982:	02 2e       	mov	r0, r18
 984:	02 c0       	rjmp	.+4      	; 0x98a <DIO_enumTogglePinDirection+0xa2>
 986:	88 0f       	add	r24, r24
 988:	99 1f       	adc	r25, r25
 98a:	0a 94       	dec	r0
 98c:	e2 f7       	brpl	.-8      	; 0x986 <DIO_enumTogglePinDirection+0x9e>
 98e:	84 27       	eor	r24, r20
 990:	8c 93       	st	X, r24
 992:	27 c0       	rjmp	.+78     	; 0x9e2 <DIO_enumTogglePinDirection+0xfa>
				break;
			case DIO_PORTC:
				TOGGLE_BIT(DDRC,Copy_u8PinID);
 994:	a4 e3       	ldi	r26, 0x34	; 52
 996:	b0 e0       	ldi	r27, 0x00	; 0
 998:	e4 e3       	ldi	r30, 0x34	; 52
 99a:	f0 e0       	ldi	r31, 0x00	; 0
 99c:	80 81       	ld	r24, Z
 99e:	48 2f       	mov	r20, r24
 9a0:	8b 81       	ldd	r24, Y+3	; 0x03
 9a2:	28 2f       	mov	r18, r24
 9a4:	30 e0       	ldi	r19, 0x00	; 0
 9a6:	81 e0       	ldi	r24, 0x01	; 1
 9a8:	90 e0       	ldi	r25, 0x00	; 0
 9aa:	02 2e       	mov	r0, r18
 9ac:	02 c0       	rjmp	.+4      	; 0x9b2 <DIO_enumTogglePinDirection+0xca>
 9ae:	88 0f       	add	r24, r24
 9b0:	99 1f       	adc	r25, r25
 9b2:	0a 94       	dec	r0
 9b4:	e2 f7       	brpl	.-8      	; 0x9ae <DIO_enumTogglePinDirection+0xc6>
 9b6:	84 27       	eor	r24, r20
 9b8:	8c 93       	st	X, r24
 9ba:	13 c0       	rjmp	.+38     	; 0x9e2 <DIO_enumTogglePinDirection+0xfa>
				break;
			case DIO_PORTD:
				TOGGLE_BIT(DDRD,Copy_u8PinID);
 9bc:	a1 e3       	ldi	r26, 0x31	; 49
 9be:	b0 e0       	ldi	r27, 0x00	; 0
 9c0:	e1 e3       	ldi	r30, 0x31	; 49
 9c2:	f0 e0       	ldi	r31, 0x00	; 0
 9c4:	80 81       	ld	r24, Z
 9c6:	48 2f       	mov	r20, r24
 9c8:	8b 81       	ldd	r24, Y+3	; 0x03
 9ca:	28 2f       	mov	r18, r24
 9cc:	30 e0       	ldi	r19, 0x00	; 0
 9ce:	81 e0       	ldi	r24, 0x01	; 1
 9d0:	90 e0       	ldi	r25, 0x00	; 0
 9d2:	02 2e       	mov	r0, r18
 9d4:	02 c0       	rjmp	.+4      	; 0x9da <DIO_enumTogglePinDirection+0xf2>
 9d6:	88 0f       	add	r24, r24
 9d8:	99 1f       	adc	r25, r25
 9da:	0a 94       	dec	r0
 9dc:	e2 f7       	brpl	.-8      	; 0x9d6 <DIO_enumTogglePinDirection+0xee>
 9de:	84 27       	eor	r24, r20
 9e0:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 9e2:	19 82       	std	Y+1, r1	; 0x01
 9e4:	02 c0       	rjmp	.+4      	; 0x9ea <DIO_enumTogglePinDirection+0x102>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 9e6:	83 e0       	ldi	r24, 0x03	; 3
 9e8:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 9ea:	89 81       	ldd	r24, Y+1	; 0x01
}
 9ec:	0f 90       	pop	r0
 9ee:	0f 90       	pop	r0
 9f0:	0f 90       	pop	r0
 9f2:	0f 90       	pop	r0
 9f4:	0f 90       	pop	r0
 9f6:	cf 91       	pop	r28
 9f8:	df 91       	pop	r29
 9fa:	08 95       	ret

000009fc <DIO_enumTogglePinValue>:
ES_T DIO_enumTogglePinValue (u8 Copy_u8PortID,u8 Copy_u8PinID)
{
 9fc:	df 93       	push	r29
 9fe:	cf 93       	push	r28
 a00:	00 d0       	rcall	.+0      	; 0xa02 <DIO_enumTogglePinValue+0x6>
 a02:	0f 92       	push	r0
 a04:	0f 92       	push	r0
 a06:	cd b7       	in	r28, 0x3d	; 61
 a08:	de b7       	in	r29, 0x3e	; 62
 a0a:	8a 83       	std	Y+2, r24	; 0x02
 a0c:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
 a0e:	81 e0       	ldi	r24, 0x01	; 1
 a10:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 a12:	8a 81       	ldd	r24, Y+2	; 0x02
 a14:	84 30       	cpi	r24, 0x04	; 4
 a16:	08 f0       	brcs	.+2      	; 0xa1a <DIO_enumTogglePinValue+0x1e>
 a18:	70 c0       	rjmp	.+224    	; 0xafa <DIO_enumTogglePinValue+0xfe>
	{
		switch(Copy_u8PortID)
 a1a:	8a 81       	ldd	r24, Y+2	; 0x02
 a1c:	28 2f       	mov	r18, r24
 a1e:	30 e0       	ldi	r19, 0x00	; 0
 a20:	3d 83       	std	Y+5, r19	; 0x05
 a22:	2c 83       	std	Y+4, r18	; 0x04
 a24:	8c 81       	ldd	r24, Y+4	; 0x04
 a26:	9d 81       	ldd	r25, Y+5	; 0x05
 a28:	81 30       	cpi	r24, 0x01	; 1
 a2a:	91 05       	cpc	r25, r1
 a2c:	49 f1       	breq	.+82     	; 0xa80 <DIO_enumTogglePinValue+0x84>
 a2e:	2c 81       	ldd	r18, Y+4	; 0x04
 a30:	3d 81       	ldd	r19, Y+5	; 0x05
 a32:	22 30       	cpi	r18, 0x02	; 2
 a34:	31 05       	cpc	r19, r1
 a36:	2c f4       	brge	.+10     	; 0xa42 <DIO_enumTogglePinValue+0x46>
 a38:	8c 81       	ldd	r24, Y+4	; 0x04
 a3a:	9d 81       	ldd	r25, Y+5	; 0x05
 a3c:	00 97       	sbiw	r24, 0x00	; 0
 a3e:	61 f0       	breq	.+24     	; 0xa58 <DIO_enumTogglePinValue+0x5c>
 a40:	5a c0       	rjmp	.+180    	; 0xaf6 <DIO_enumTogglePinValue+0xfa>
 a42:	2c 81       	ldd	r18, Y+4	; 0x04
 a44:	3d 81       	ldd	r19, Y+5	; 0x05
 a46:	22 30       	cpi	r18, 0x02	; 2
 a48:	31 05       	cpc	r19, r1
 a4a:	71 f1       	breq	.+92     	; 0xaa8 <DIO_enumTogglePinValue+0xac>
 a4c:	8c 81       	ldd	r24, Y+4	; 0x04
 a4e:	9d 81       	ldd	r25, Y+5	; 0x05
 a50:	83 30       	cpi	r24, 0x03	; 3
 a52:	91 05       	cpc	r25, r1
 a54:	e9 f1       	breq	.+122    	; 0xad0 <DIO_enumTogglePinValue+0xd4>
 a56:	4f c0       	rjmp	.+158    	; 0xaf6 <DIO_enumTogglePinValue+0xfa>
		{
			case DIO_PORTA:
				TOGGLE_BIT(PORTA,Copy_u8PinID);
 a58:	ab e3       	ldi	r26, 0x3B	; 59
 a5a:	b0 e0       	ldi	r27, 0x00	; 0
 a5c:	eb e3       	ldi	r30, 0x3B	; 59
 a5e:	f0 e0       	ldi	r31, 0x00	; 0
 a60:	80 81       	ld	r24, Z
 a62:	48 2f       	mov	r20, r24
 a64:	8b 81       	ldd	r24, Y+3	; 0x03
 a66:	28 2f       	mov	r18, r24
 a68:	30 e0       	ldi	r19, 0x00	; 0
 a6a:	81 e0       	ldi	r24, 0x01	; 1
 a6c:	90 e0       	ldi	r25, 0x00	; 0
 a6e:	02 2e       	mov	r0, r18
 a70:	02 c0       	rjmp	.+4      	; 0xa76 <DIO_enumTogglePinValue+0x7a>
 a72:	88 0f       	add	r24, r24
 a74:	99 1f       	adc	r25, r25
 a76:	0a 94       	dec	r0
 a78:	e2 f7       	brpl	.-8      	; 0xa72 <DIO_enumTogglePinValue+0x76>
 a7a:	84 27       	eor	r24, r20
 a7c:	8c 93       	st	X, r24
 a7e:	3b c0       	rjmp	.+118    	; 0xaf6 <DIO_enumTogglePinValue+0xfa>
				break;
			case DIO_PORTB:
				TOGGLE_BIT(PORTB,Copy_u8PinID);
 a80:	a8 e3       	ldi	r26, 0x38	; 56
 a82:	b0 e0       	ldi	r27, 0x00	; 0
 a84:	e8 e3       	ldi	r30, 0x38	; 56
 a86:	f0 e0       	ldi	r31, 0x00	; 0
 a88:	80 81       	ld	r24, Z
 a8a:	48 2f       	mov	r20, r24
 a8c:	8b 81       	ldd	r24, Y+3	; 0x03
 a8e:	28 2f       	mov	r18, r24
 a90:	30 e0       	ldi	r19, 0x00	; 0
 a92:	81 e0       	ldi	r24, 0x01	; 1
 a94:	90 e0       	ldi	r25, 0x00	; 0
 a96:	02 2e       	mov	r0, r18
 a98:	02 c0       	rjmp	.+4      	; 0xa9e <DIO_enumTogglePinValue+0xa2>
 a9a:	88 0f       	add	r24, r24
 a9c:	99 1f       	adc	r25, r25
 a9e:	0a 94       	dec	r0
 aa0:	e2 f7       	brpl	.-8      	; 0xa9a <DIO_enumTogglePinValue+0x9e>
 aa2:	84 27       	eor	r24, r20
 aa4:	8c 93       	st	X, r24
 aa6:	27 c0       	rjmp	.+78     	; 0xaf6 <DIO_enumTogglePinValue+0xfa>
				break;
			case DIO_PORTC:
				TOGGLE_BIT(PORTC,Copy_u8PinID);
 aa8:	a5 e3       	ldi	r26, 0x35	; 53
 aaa:	b0 e0       	ldi	r27, 0x00	; 0
 aac:	e5 e3       	ldi	r30, 0x35	; 53
 aae:	f0 e0       	ldi	r31, 0x00	; 0
 ab0:	80 81       	ld	r24, Z
 ab2:	48 2f       	mov	r20, r24
 ab4:	8b 81       	ldd	r24, Y+3	; 0x03
 ab6:	28 2f       	mov	r18, r24
 ab8:	30 e0       	ldi	r19, 0x00	; 0
 aba:	81 e0       	ldi	r24, 0x01	; 1
 abc:	90 e0       	ldi	r25, 0x00	; 0
 abe:	02 2e       	mov	r0, r18
 ac0:	02 c0       	rjmp	.+4      	; 0xac6 <DIO_enumTogglePinValue+0xca>
 ac2:	88 0f       	add	r24, r24
 ac4:	99 1f       	adc	r25, r25
 ac6:	0a 94       	dec	r0
 ac8:	e2 f7       	brpl	.-8      	; 0xac2 <DIO_enumTogglePinValue+0xc6>
 aca:	84 27       	eor	r24, r20
 acc:	8c 93       	st	X, r24
 ace:	13 c0       	rjmp	.+38     	; 0xaf6 <DIO_enumTogglePinValue+0xfa>
				break;
			case DIO_PORTD:
				TOGGLE_BIT(PORTD,Copy_u8PinID);
 ad0:	a2 e3       	ldi	r26, 0x32	; 50
 ad2:	b0 e0       	ldi	r27, 0x00	; 0
 ad4:	e2 e3       	ldi	r30, 0x32	; 50
 ad6:	f0 e0       	ldi	r31, 0x00	; 0
 ad8:	80 81       	ld	r24, Z
 ada:	48 2f       	mov	r20, r24
 adc:	8b 81       	ldd	r24, Y+3	; 0x03
 ade:	28 2f       	mov	r18, r24
 ae0:	30 e0       	ldi	r19, 0x00	; 0
 ae2:	81 e0       	ldi	r24, 0x01	; 1
 ae4:	90 e0       	ldi	r25, 0x00	; 0
 ae6:	02 2e       	mov	r0, r18
 ae8:	02 c0       	rjmp	.+4      	; 0xaee <DIO_enumTogglePinValue+0xf2>
 aea:	88 0f       	add	r24, r24
 aec:	99 1f       	adc	r25, r25
 aee:	0a 94       	dec	r0
 af0:	e2 f7       	brpl	.-8      	; 0xaea <DIO_enumTogglePinValue+0xee>
 af2:	84 27       	eor	r24, r20
 af4:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 af6:	19 82       	std	Y+1, r1	; 0x01
 af8:	02 c0       	rjmp	.+4      	; 0xafe <DIO_enumTogglePinValue+0x102>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 afa:	83 e0       	ldi	r24, 0x03	; 3
 afc:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 afe:	89 81       	ldd	r24, Y+1	; 0x01
}
 b00:	0f 90       	pop	r0
 b02:	0f 90       	pop	r0
 b04:	0f 90       	pop	r0
 b06:	0f 90       	pop	r0
 b08:	0f 90       	pop	r0
 b0a:	cf 91       	pop	r28
 b0c:	df 91       	pop	r29
 b0e:	08 95       	ret

00000b10 <DIO_enumGetPinDirection>:
ES_T DIO_enumGetPinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 *Copy_pu8Direction)
{
 b10:	df 93       	push	r29
 b12:	cf 93       	push	r28
 b14:	cd b7       	in	r28, 0x3d	; 61
 b16:	de b7       	in	r29, 0x3e	; 62
 b18:	27 97       	sbiw	r28, 0x07	; 7
 b1a:	0f b6       	in	r0, 0x3f	; 63
 b1c:	f8 94       	cli
 b1e:	de bf       	out	0x3e, r29	; 62
 b20:	0f be       	out	0x3f, r0	; 63
 b22:	cd bf       	out	0x3d, r28	; 61
 b24:	8a 83       	std	Y+2, r24	; 0x02
 b26:	6b 83       	std	Y+3, r22	; 0x03
 b28:	5d 83       	std	Y+5, r21	; 0x05
 b2a:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
 b2c:	81 e0       	ldi	r24, 0x01	; 1
 b2e:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 b30:	8a 81       	ldd	r24, Y+2	; 0x02
 b32:	84 30       	cpi	r24, 0x04	; 4
 b34:	08 f0       	brcs	.+2      	; 0xb38 <DIO_enumGetPinDirection+0x28>
 b36:	72 c0       	rjmp	.+228    	; 0xc1c <DIO_enumGetPinDirection+0x10c>
	{
		switch(Copy_u8PortID)
 b38:	8a 81       	ldd	r24, Y+2	; 0x02
 b3a:	28 2f       	mov	r18, r24
 b3c:	30 e0       	ldi	r19, 0x00	; 0
 b3e:	3f 83       	std	Y+7, r19	; 0x07
 b40:	2e 83       	std	Y+6, r18	; 0x06
 b42:	4e 81       	ldd	r20, Y+6	; 0x06
 b44:	5f 81       	ldd	r21, Y+7	; 0x07
 b46:	41 30       	cpi	r20, 0x01	; 1
 b48:	51 05       	cpc	r21, r1
 b4a:	59 f1       	breq	.+86     	; 0xba2 <DIO_enumGetPinDirection+0x92>
 b4c:	8e 81       	ldd	r24, Y+6	; 0x06
 b4e:	9f 81       	ldd	r25, Y+7	; 0x07
 b50:	82 30       	cpi	r24, 0x02	; 2
 b52:	91 05       	cpc	r25, r1
 b54:	34 f4       	brge	.+12     	; 0xb62 <DIO_enumGetPinDirection+0x52>
 b56:	2e 81       	ldd	r18, Y+6	; 0x06
 b58:	3f 81       	ldd	r19, Y+7	; 0x07
 b5a:	21 15       	cp	r18, r1
 b5c:	31 05       	cpc	r19, r1
 b5e:	69 f0       	breq	.+26     	; 0xb7a <DIO_enumGetPinDirection+0x6a>
 b60:	5b c0       	rjmp	.+182    	; 0xc18 <DIO_enumGetPinDirection+0x108>
 b62:	4e 81       	ldd	r20, Y+6	; 0x06
 b64:	5f 81       	ldd	r21, Y+7	; 0x07
 b66:	42 30       	cpi	r20, 0x02	; 2
 b68:	51 05       	cpc	r21, r1
 b6a:	79 f1       	breq	.+94     	; 0xbca <DIO_enumGetPinDirection+0xba>
 b6c:	8e 81       	ldd	r24, Y+6	; 0x06
 b6e:	9f 81       	ldd	r25, Y+7	; 0x07
 b70:	83 30       	cpi	r24, 0x03	; 3
 b72:	91 05       	cpc	r25, r1
 b74:	09 f4       	brne	.+2      	; 0xb78 <DIO_enumGetPinDirection+0x68>
 b76:	3d c0       	rjmp	.+122    	; 0xbf2 <DIO_enumGetPinDirection+0xe2>
 b78:	4f c0       	rjmp	.+158    	; 0xc18 <DIO_enumGetPinDirection+0x108>
		{
			case DIO_PORTA:
				*Copy_pu8Direction=READ_BIT(DDRA,Copy_u8PinID);
 b7a:	ea e3       	ldi	r30, 0x3A	; 58
 b7c:	f0 e0       	ldi	r31, 0x00	; 0
 b7e:	80 81       	ld	r24, Z
 b80:	28 2f       	mov	r18, r24
 b82:	30 e0       	ldi	r19, 0x00	; 0
 b84:	8b 81       	ldd	r24, Y+3	; 0x03
 b86:	88 2f       	mov	r24, r24
 b88:	90 e0       	ldi	r25, 0x00	; 0
 b8a:	a9 01       	movw	r20, r18
 b8c:	02 c0       	rjmp	.+4      	; 0xb92 <DIO_enumGetPinDirection+0x82>
 b8e:	55 95       	asr	r21
 b90:	47 95       	ror	r20
 b92:	8a 95       	dec	r24
 b94:	e2 f7       	brpl	.-8      	; 0xb8e <DIO_enumGetPinDirection+0x7e>
 b96:	ca 01       	movw	r24, r20
 b98:	81 70       	andi	r24, 0x01	; 1
 b9a:	ec 81       	ldd	r30, Y+4	; 0x04
 b9c:	fd 81       	ldd	r31, Y+5	; 0x05
 b9e:	80 83       	st	Z, r24
 ba0:	3b c0       	rjmp	.+118    	; 0xc18 <DIO_enumGetPinDirection+0x108>
				break;
			case DIO_PORTB:
				*Copy_pu8Direction=READ_BIT(DDRB,Copy_u8PinID);
 ba2:	e7 e3       	ldi	r30, 0x37	; 55
 ba4:	f0 e0       	ldi	r31, 0x00	; 0
 ba6:	80 81       	ld	r24, Z
 ba8:	28 2f       	mov	r18, r24
 baa:	30 e0       	ldi	r19, 0x00	; 0
 bac:	8b 81       	ldd	r24, Y+3	; 0x03
 bae:	88 2f       	mov	r24, r24
 bb0:	90 e0       	ldi	r25, 0x00	; 0
 bb2:	a9 01       	movw	r20, r18
 bb4:	02 c0       	rjmp	.+4      	; 0xbba <DIO_enumGetPinDirection+0xaa>
 bb6:	55 95       	asr	r21
 bb8:	47 95       	ror	r20
 bba:	8a 95       	dec	r24
 bbc:	e2 f7       	brpl	.-8      	; 0xbb6 <DIO_enumGetPinDirection+0xa6>
 bbe:	ca 01       	movw	r24, r20
 bc0:	81 70       	andi	r24, 0x01	; 1
 bc2:	ec 81       	ldd	r30, Y+4	; 0x04
 bc4:	fd 81       	ldd	r31, Y+5	; 0x05
 bc6:	80 83       	st	Z, r24
 bc8:	27 c0       	rjmp	.+78     	; 0xc18 <DIO_enumGetPinDirection+0x108>
				break;
			case DIO_PORTC:
				*Copy_pu8Direction=READ_BIT(DDRC,Copy_u8PinID);
 bca:	e4 e3       	ldi	r30, 0x34	; 52
 bcc:	f0 e0       	ldi	r31, 0x00	; 0
 bce:	80 81       	ld	r24, Z
 bd0:	28 2f       	mov	r18, r24
 bd2:	30 e0       	ldi	r19, 0x00	; 0
 bd4:	8b 81       	ldd	r24, Y+3	; 0x03
 bd6:	88 2f       	mov	r24, r24
 bd8:	90 e0       	ldi	r25, 0x00	; 0
 bda:	a9 01       	movw	r20, r18
 bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <DIO_enumGetPinDirection+0xd2>
 bde:	55 95       	asr	r21
 be0:	47 95       	ror	r20
 be2:	8a 95       	dec	r24
 be4:	e2 f7       	brpl	.-8      	; 0xbde <DIO_enumGetPinDirection+0xce>
 be6:	ca 01       	movw	r24, r20
 be8:	81 70       	andi	r24, 0x01	; 1
 bea:	ec 81       	ldd	r30, Y+4	; 0x04
 bec:	fd 81       	ldd	r31, Y+5	; 0x05
 bee:	80 83       	st	Z, r24
 bf0:	13 c0       	rjmp	.+38     	; 0xc18 <DIO_enumGetPinDirection+0x108>
				break;
			case DIO_PORTD:
				*Copy_pu8Direction=READ_BIT(DDRD,Copy_u8PinID);
 bf2:	e1 e3       	ldi	r30, 0x31	; 49
 bf4:	f0 e0       	ldi	r31, 0x00	; 0
 bf6:	80 81       	ld	r24, Z
 bf8:	28 2f       	mov	r18, r24
 bfa:	30 e0       	ldi	r19, 0x00	; 0
 bfc:	8b 81       	ldd	r24, Y+3	; 0x03
 bfe:	88 2f       	mov	r24, r24
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	a9 01       	movw	r20, r18
 c04:	02 c0       	rjmp	.+4      	; 0xc0a <DIO_enumGetPinDirection+0xfa>
 c06:	55 95       	asr	r21
 c08:	47 95       	ror	r20
 c0a:	8a 95       	dec	r24
 c0c:	e2 f7       	brpl	.-8      	; 0xc06 <DIO_enumGetPinDirection+0xf6>
 c0e:	ca 01       	movw	r24, r20
 c10:	81 70       	andi	r24, 0x01	; 1
 c12:	ec 81       	ldd	r30, Y+4	; 0x04
 c14:	fd 81       	ldd	r31, Y+5	; 0x05
 c16:	80 83       	st	Z, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 c18:	19 82       	std	Y+1, r1	; 0x01
 c1a:	02 c0       	rjmp	.+4      	; 0xc20 <DIO_enumGetPinDirection+0x110>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 c1c:	83 e0       	ldi	r24, 0x03	; 3
 c1e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 c20:	89 81       	ldd	r24, Y+1	; 0x01
}
 c22:	27 96       	adiw	r28, 0x07	; 7
 c24:	0f b6       	in	r0, 0x3f	; 63
 c26:	f8 94       	cli
 c28:	de bf       	out	0x3e, r29	; 62
 c2a:	0f be       	out	0x3f, r0	; 63
 c2c:	cd bf       	out	0x3d, r28	; 61
 c2e:	cf 91       	pop	r28
 c30:	df 91       	pop	r29
 c32:	08 95       	ret

00000c34 <DIO_enumGetPinValue>:
ES_T DIO_enumGetPinValue (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 *Copy_pu8Value)
{
 c34:	df 93       	push	r29
 c36:	cf 93       	push	r28
 c38:	cd b7       	in	r28, 0x3d	; 61
 c3a:	de b7       	in	r29, 0x3e	; 62
 c3c:	27 97       	sbiw	r28, 0x07	; 7
 c3e:	0f b6       	in	r0, 0x3f	; 63
 c40:	f8 94       	cli
 c42:	de bf       	out	0x3e, r29	; 62
 c44:	0f be       	out	0x3f, r0	; 63
 c46:	cd bf       	out	0x3d, r28	; 61
 c48:	8a 83       	std	Y+2, r24	; 0x02
 c4a:	6b 83       	std	Y+3, r22	; 0x03
 c4c:	5d 83       	std	Y+5, r21	; 0x05
 c4e:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
 c50:	81 e0       	ldi	r24, 0x01	; 1
 c52:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
 c54:	8a 81       	ldd	r24, Y+2	; 0x02
 c56:	84 30       	cpi	r24, 0x04	; 4
 c58:	08 f0       	brcs	.+2      	; 0xc5c <DIO_enumGetPinValue+0x28>
 c5a:	72 c0       	rjmp	.+228    	; 0xd40 <DIO_enumGetPinValue+0x10c>
	{
		switch(Copy_u8PortID)
 c5c:	8a 81       	ldd	r24, Y+2	; 0x02
 c5e:	28 2f       	mov	r18, r24
 c60:	30 e0       	ldi	r19, 0x00	; 0
 c62:	3f 83       	std	Y+7, r19	; 0x07
 c64:	2e 83       	std	Y+6, r18	; 0x06
 c66:	4e 81       	ldd	r20, Y+6	; 0x06
 c68:	5f 81       	ldd	r21, Y+7	; 0x07
 c6a:	41 30       	cpi	r20, 0x01	; 1
 c6c:	51 05       	cpc	r21, r1
 c6e:	59 f1       	breq	.+86     	; 0xcc6 <DIO_enumGetPinValue+0x92>
 c70:	8e 81       	ldd	r24, Y+6	; 0x06
 c72:	9f 81       	ldd	r25, Y+7	; 0x07
 c74:	82 30       	cpi	r24, 0x02	; 2
 c76:	91 05       	cpc	r25, r1
 c78:	34 f4       	brge	.+12     	; 0xc86 <DIO_enumGetPinValue+0x52>
 c7a:	2e 81       	ldd	r18, Y+6	; 0x06
 c7c:	3f 81       	ldd	r19, Y+7	; 0x07
 c7e:	21 15       	cp	r18, r1
 c80:	31 05       	cpc	r19, r1
 c82:	69 f0       	breq	.+26     	; 0xc9e <DIO_enumGetPinValue+0x6a>
 c84:	5b c0       	rjmp	.+182    	; 0xd3c <DIO_enumGetPinValue+0x108>
 c86:	4e 81       	ldd	r20, Y+6	; 0x06
 c88:	5f 81       	ldd	r21, Y+7	; 0x07
 c8a:	42 30       	cpi	r20, 0x02	; 2
 c8c:	51 05       	cpc	r21, r1
 c8e:	79 f1       	breq	.+94     	; 0xcee <DIO_enumGetPinValue+0xba>
 c90:	8e 81       	ldd	r24, Y+6	; 0x06
 c92:	9f 81       	ldd	r25, Y+7	; 0x07
 c94:	83 30       	cpi	r24, 0x03	; 3
 c96:	91 05       	cpc	r25, r1
 c98:	09 f4       	brne	.+2      	; 0xc9c <DIO_enumGetPinValue+0x68>
 c9a:	3d c0       	rjmp	.+122    	; 0xd16 <DIO_enumGetPinValue+0xe2>
 c9c:	4f c0       	rjmp	.+158    	; 0xd3c <DIO_enumGetPinValue+0x108>
		{
			case DIO_PORTA:
				*Copy_pu8Value=READ_BIT(PORTA,Copy_u8PinID);
 c9e:	eb e3       	ldi	r30, 0x3B	; 59
 ca0:	f0 e0       	ldi	r31, 0x00	; 0
 ca2:	80 81       	ld	r24, Z
 ca4:	28 2f       	mov	r18, r24
 ca6:	30 e0       	ldi	r19, 0x00	; 0
 ca8:	8b 81       	ldd	r24, Y+3	; 0x03
 caa:	88 2f       	mov	r24, r24
 cac:	90 e0       	ldi	r25, 0x00	; 0
 cae:	a9 01       	movw	r20, r18
 cb0:	02 c0       	rjmp	.+4      	; 0xcb6 <DIO_enumGetPinValue+0x82>
 cb2:	55 95       	asr	r21
 cb4:	47 95       	ror	r20
 cb6:	8a 95       	dec	r24
 cb8:	e2 f7       	brpl	.-8      	; 0xcb2 <DIO_enumGetPinValue+0x7e>
 cba:	ca 01       	movw	r24, r20
 cbc:	81 70       	andi	r24, 0x01	; 1
 cbe:	ec 81       	ldd	r30, Y+4	; 0x04
 cc0:	fd 81       	ldd	r31, Y+5	; 0x05
 cc2:	80 83       	st	Z, r24
 cc4:	3b c0       	rjmp	.+118    	; 0xd3c <DIO_enumGetPinValue+0x108>
				break;
			case DIO_PORTB:
				*Copy_pu8Value=READ_BIT(PORTB,Copy_u8PinID);
 cc6:	e8 e3       	ldi	r30, 0x38	; 56
 cc8:	f0 e0       	ldi	r31, 0x00	; 0
 cca:	80 81       	ld	r24, Z
 ccc:	28 2f       	mov	r18, r24
 cce:	30 e0       	ldi	r19, 0x00	; 0
 cd0:	8b 81       	ldd	r24, Y+3	; 0x03
 cd2:	88 2f       	mov	r24, r24
 cd4:	90 e0       	ldi	r25, 0x00	; 0
 cd6:	a9 01       	movw	r20, r18
 cd8:	02 c0       	rjmp	.+4      	; 0xcde <DIO_enumGetPinValue+0xaa>
 cda:	55 95       	asr	r21
 cdc:	47 95       	ror	r20
 cde:	8a 95       	dec	r24
 ce0:	e2 f7       	brpl	.-8      	; 0xcda <DIO_enumGetPinValue+0xa6>
 ce2:	ca 01       	movw	r24, r20
 ce4:	81 70       	andi	r24, 0x01	; 1
 ce6:	ec 81       	ldd	r30, Y+4	; 0x04
 ce8:	fd 81       	ldd	r31, Y+5	; 0x05
 cea:	80 83       	st	Z, r24
 cec:	27 c0       	rjmp	.+78     	; 0xd3c <DIO_enumGetPinValue+0x108>
				break;
			case DIO_PORTC:
				*Copy_pu8Value=READ_BIT(PORTC,Copy_u8PinID);
 cee:	e5 e3       	ldi	r30, 0x35	; 53
 cf0:	f0 e0       	ldi	r31, 0x00	; 0
 cf2:	80 81       	ld	r24, Z
 cf4:	28 2f       	mov	r18, r24
 cf6:	30 e0       	ldi	r19, 0x00	; 0
 cf8:	8b 81       	ldd	r24, Y+3	; 0x03
 cfa:	88 2f       	mov	r24, r24
 cfc:	90 e0       	ldi	r25, 0x00	; 0
 cfe:	a9 01       	movw	r20, r18
 d00:	02 c0       	rjmp	.+4      	; 0xd06 <DIO_enumGetPinValue+0xd2>
 d02:	55 95       	asr	r21
 d04:	47 95       	ror	r20
 d06:	8a 95       	dec	r24
 d08:	e2 f7       	brpl	.-8      	; 0xd02 <DIO_enumGetPinValue+0xce>
 d0a:	ca 01       	movw	r24, r20
 d0c:	81 70       	andi	r24, 0x01	; 1
 d0e:	ec 81       	ldd	r30, Y+4	; 0x04
 d10:	fd 81       	ldd	r31, Y+5	; 0x05
 d12:	80 83       	st	Z, r24
 d14:	13 c0       	rjmp	.+38     	; 0xd3c <DIO_enumGetPinValue+0x108>
				break;
			case DIO_PORTD:
				*Copy_pu8Value=READ_BIT(PORTD,Copy_u8PinID);
 d16:	e2 e3       	ldi	r30, 0x32	; 50
 d18:	f0 e0       	ldi	r31, 0x00	; 0
 d1a:	80 81       	ld	r24, Z
 d1c:	28 2f       	mov	r18, r24
 d1e:	30 e0       	ldi	r19, 0x00	; 0
 d20:	8b 81       	ldd	r24, Y+3	; 0x03
 d22:	88 2f       	mov	r24, r24
 d24:	90 e0       	ldi	r25, 0x00	; 0
 d26:	a9 01       	movw	r20, r18
 d28:	02 c0       	rjmp	.+4      	; 0xd2e <DIO_enumGetPinValue+0xfa>
 d2a:	55 95       	asr	r21
 d2c:	47 95       	ror	r20
 d2e:	8a 95       	dec	r24
 d30:	e2 f7       	brpl	.-8      	; 0xd2a <DIO_enumGetPinValue+0xf6>
 d32:	ca 01       	movw	r24, r20
 d34:	81 70       	andi	r24, 0x01	; 1
 d36:	ec 81       	ldd	r30, Y+4	; 0x04
 d38:	fd 81       	ldd	r31, Y+5	; 0x05
 d3a:	80 83       	st	Z, r24
				break;
		}
		Local_enumErrorState=ES_OK;
 d3c:	19 82       	std	Y+1, r1	; 0x01
 d3e:	02 c0       	rjmp	.+4      	; 0xd44 <DIO_enumGetPinValue+0x110>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
 d40:	83 e0       	ldi	r24, 0x03	; 3
 d42:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
 d44:	89 81       	ldd	r24, Y+1	; 0x01
}
 d46:	27 96       	adiw	r28, 0x07	; 7
 d48:	0f b6       	in	r0, 0x3f	; 63
 d4a:	f8 94       	cli
 d4c:	de bf       	out	0x3e, r29	; 62
 d4e:	0f be       	out	0x3f, r0	; 63
 d50:	cd bf       	out	0x3d, r28	; 61
 d52:	cf 91       	pop	r28
 d54:	df 91       	pop	r29
 d56:	08 95       	ret

00000d58 <main>:
 */
#include "DIO_init.h"
#include "LIB/STDtypes.h"

int main (void)
{
 d58:	df 93       	push	r29
 d5a:	cf 93       	push	r28
 d5c:	0f 92       	push	r0
 d5e:	cd b7       	in	r28, 0x3d	; 61
 d60:	de b7       	in	r29, 0x3e	; 62
	DIO_enumPortInit ();
 d62:	0e 94 81 00 	call	0x102	; 0x102 <DIO_enumPortInit>

	DIO_enumSetPinDirection (DIO_PORTA,DIO_PIN0,INPUT);
 d66:	80 e0       	ldi	r24, 0x00	; 0
 d68:	60 e0       	ldi	r22, 0x00	; 0
 d6a:	40 e0       	ldi	r20, 0x00	; 0
 d6c:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_enumSetPinDirection>
	DIO_enumSetPinDirection (DIO_PORTC,DIO_PIN0,OUTPUT);
 d70:	82 e0       	ldi	r24, 0x02	; 2
 d72:	60 e0       	ldi	r22, 0x00	; 0
 d74:	41 e0       	ldi	r20, 0x01	; 1
 d76:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_enumSetPinDirection>
	DIO_enumSetPinValue (DIO_PORTA,DIO_PIN0,PULL_UP);
 d7a:	80 e0       	ldi	r24, 0x00	; 0
 d7c:	60 e0       	ldi	r22, 0x00	; 0
 d7e:	41 e0       	ldi	r20, 0x01	; 1
 d80:	0e 94 91 03 	call	0x722	; 0x722 <DIO_enumSetPinValue>

	u8 Local_pu8Value;
	while (1)
	{
		DIO_enumSetPinValue (DIO_PORTC,DIO_PIN0,LOW);
 d84:	82 e0       	ldi	r24, 0x02	; 2
 d86:	60 e0       	ldi	r22, 0x00	; 0
 d88:	40 e0       	ldi	r20, 0x00	; 0
 d8a:	0e 94 91 03 	call	0x722	; 0x722 <DIO_enumSetPinValue>
		DIO_enumGetPinValue (DIO_PORTA,DIO_PIN0,&Local_pu8Value);
 d8e:	80 e0       	ldi	r24, 0x00	; 0
 d90:	60 e0       	ldi	r22, 0x00	; 0
 d92:	9e 01       	movw	r18, r28
 d94:	2f 5f       	subi	r18, 0xFF	; 255
 d96:	3f 4f       	sbci	r19, 0xFF	; 255
 d98:	a9 01       	movw	r20, r18
 d9a:	0e 94 1a 06 	call	0xc34	; 0xc34 <DIO_enumGetPinValue>
		if (Local_pu8Value==0)
 d9e:	89 81       	ldd	r24, Y+1	; 0x01
 da0:	88 23       	and	r24, r24
 da2:	81 f7       	brne	.-32     	; 0xd84 <main+0x2c>
		{
			DIO_enumSetPinValue (DIO_PORTC,DIO_PIN0,HIGH);
 da4:	82 e0       	ldi	r24, 0x02	; 2
 da6:	60 e0       	ldi	r22, 0x00	; 0
 da8:	41 e0       	ldi	r20, 0x01	; 1
 daa:	0e 94 91 03 	call	0x722	; 0x722 <DIO_enumSetPinValue>
 dae:	ea cf       	rjmp	.-44     	; 0xd84 <main+0x2c>

00000db0 <_exit>:
 db0:	f8 94       	cli

00000db2 <__stop_program>:
 db2:	ff cf       	rjmp	.-2      	; 0xdb2 <__stop_program>
