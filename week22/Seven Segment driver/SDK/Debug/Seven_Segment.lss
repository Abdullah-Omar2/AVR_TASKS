
Seven_Segment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000497c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005e  00800060  0000497c  000049f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002a6c  00000000  00000000  00004a50  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000011de  00000000  00000000  000074bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  0000869a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  000087da  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  0000894a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000a593  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000b47e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000c22c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000c38c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000c619  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000cde7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e7       	ldi	r30, 0x7C	; 124
      68:	f9 e4       	ldi	r31, 0x49	; 73
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 3b       	cpi	r26, 0xBE	; 190
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 3f 23 	call	0x467e	; 0x467e <main>
      7a:	0c 94 bc 24 	jmp	0x4978	; 0x4978 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 85 24 	jmp	0x490a	; 0x490a <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 a1 24 	jmp	0x4942	; 0x4942 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 91 24 	jmp	0x4922	; 0x4922 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 ad 24 	jmp	0x495a	; 0x495a <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 91 24 	jmp	0x4922	; 0x4922 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 ad 24 	jmp	0x495a	; 0x495a <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 85 24 	jmp	0x490a	; 0x490a <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 a1 24 	jmp	0x4942	; 0x4942 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 91 24 	jmp	0x4922	; 0x4922 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 ad 24 	jmp	0x495a	; 0x495a <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 91 24 	jmp	0x4922	; 0x4922 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 ad 24 	jmp	0x495a	; 0x495a <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 91 24 	jmp	0x4922	; 0x4922 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 ad 24 	jmp	0x495a	; 0x495a <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 95 24 	jmp	0x492a	; 0x492a <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 b1 24 	jmp	0x4962	; 0x4962 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_enumPortInit>:
#include "../include/MCAL/DIO/DIO_config.h"



ES_T DIO_enumPortInit (void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	0f 92       	push	r0
     b3c:	cd b7       	in	r28, 0x3d	; 61
     b3e:	de b7       	in	r29, 0x3e	; 62
	ES_T Local_enumErrorState=ES_NOK;
     b40:	19 82       	std	Y+1, r1	; 0x01

	DDRA=CONC(PA_PIN7_DIR,PA_PIN6_DIR,PA_PIN5_DIR,PA_PIN4_DIR,PA_PIN3_DIR,PA_PIN2_DIR,PA_PIN1_DIR,PA_PIN0_DIR);
     b42:	ea e3       	ldi	r30, 0x3A	; 58
     b44:	f0 e0       	ldi	r31, 0x00	; 0
     b46:	8f ef       	ldi	r24, 0xFF	; 255
     b48:	80 83       	st	Z, r24
	DDRB=CONC(PB_PIN7_DIR,PB_PIN6_DIR,PB_PIN5_DIR,PB_PIN4_DIR,PB_PIN3_DIR,PB_PIN2_DIR,PB_PIN1_DIR,PB_PIN0_DIR);
     b4a:	e7 e3       	ldi	r30, 0x37	; 55
     b4c:	f0 e0       	ldi	r31, 0x00	; 0
     b4e:	8f ef       	ldi	r24, 0xFF	; 255
     b50:	80 83       	st	Z, r24
	DDRC=CONC(PC_PIN7_DIR,PC_PIN6_DIR,PC_PIN5_DIR,PC_PIN4_DIR,PC_PIN3_DIR,PC_PIN2_DIR,PC_PIN1_DIR,PC_PIN0_DIR);
     b52:	e4 e3       	ldi	r30, 0x34	; 52
     b54:	f0 e0       	ldi	r31, 0x00	; 0
     b56:	8f ef       	ldi	r24, 0xFF	; 255
     b58:	80 83       	st	Z, r24
	DDRD=CONC(PD_PIN7_DIR,PD_PIN6_DIR,PD_PIN5_DIR,PD_PIN4_DIR,PD_PIN3_DIR,PD_PIN2_DIR,PD_PIN1_DIR,PD_PIN0_DIR);
     b5a:	e1 e3       	ldi	r30, 0x31	; 49
     b5c:	f0 e0       	ldi	r31, 0x00	; 0
     b5e:	8f ef       	ldi	r24, 0xFF	; 255
     b60:	80 83       	st	Z, r24

	PORTA=CONC(PA_PIN7_VAL,PA_PIN6_VAL,PA_PIN5_VAL,PA_PIN4_VAL,PA_PIN3_VAL,PA_PIN2_VAL,PA_PIN1_VAL,PA_PIN0_VAL);
     b62:	eb e3       	ldi	r30, 0x3B	; 59
     b64:	f0 e0       	ldi	r31, 0x00	; 0
     b66:	10 82       	st	Z, r1
	PORTB=CONC(PB_PIN7_VAL,PB_PIN6_VAL,PB_PIN5_VAL,PB_PIN4_VAL,PB_PIN3_VAL,PB_PIN2_VAL,PB_PIN1_VAL,PB_PIN0_VAL);
     b68:	e8 e3       	ldi	r30, 0x38	; 56
     b6a:	f0 e0       	ldi	r31, 0x00	; 0
     b6c:	10 82       	st	Z, r1
	PORTC=CONC(PC_PIN7_VAL,PC_PIN6_VAL,PC_PIN5_VAL,PC_PIN4_VAL,PC_PIN3_VAL,PC_PIN2_VAL,PC_PIN1_VAL,PC_PIN0_VAL);
     b6e:	e5 e3       	ldi	r30, 0x35	; 53
     b70:	f0 e0       	ldi	r31, 0x00	; 0
     b72:	10 82       	st	Z, r1
	PORTD=CONC(PD_PIN7_VAL,PD_PIN6_VAL,PD_PIN5_VAL,PD_PIN4_VAL,PD_PIN3_VAL,PD_PIN2_VAL,PD_PIN1_VAL,PD_PIN0_VAL);
     b74:	e2 e3       	ldi	r30, 0x32	; 50
     b76:	f0 e0       	ldi	r31, 0x00	; 0
     b78:	10 82       	st	Z, r1

	Local_enumErrorState=ES_OK;
     b7a:	81 e0       	ldi	r24, 0x01	; 1
     b7c:	89 83       	std	Y+1, r24	; 0x01

	return Local_enumErrorState;
     b7e:	89 81       	ldd	r24, Y+1	; 0x01
}
     b80:	0f 90       	pop	r0
     b82:	cf 91       	pop	r28
     b84:	df 91       	pop	r29
     b86:	08 95       	ret

00000b88 <DIO_enumSetPortDirection>:

ES_T DIO_enumSetPortDirection (u8 Copy_u8PortID,u8 Copy_u8Direction)
{
     b88:	df 93       	push	r29
     b8a:	cf 93       	push	r28
     b8c:	00 d0       	rcall	.+0      	; 0xb8e <DIO_enumSetPortDirection+0x6>
     b8e:	00 d0       	rcall	.+0      	; 0xb90 <DIO_enumSetPortDirection+0x8>
     b90:	0f 92       	push	r0
     b92:	cd b7       	in	r28, 0x3d	; 61
     b94:	de b7       	in	r29, 0x3e	; 62
     b96:	8a 83       	std	Y+2, r24	; 0x02
     b98:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
     b9a:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     b9c:	8a 81       	ldd	r24, Y+2	; 0x02
     b9e:	84 30       	cpi	r24, 0x04	; 4
     ba0:	a8 f5       	brcc	.+106    	; 0xc0c <DIO_enumSetPortDirection+0x84>
	{
		switch(Copy_u8PortID)
     ba2:	8a 81       	ldd	r24, Y+2	; 0x02
     ba4:	28 2f       	mov	r18, r24
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	3d 83       	std	Y+5, r19	; 0x05
     baa:	2c 83       	std	Y+4, r18	; 0x04
     bac:	8c 81       	ldd	r24, Y+4	; 0x04
     bae:	9d 81       	ldd	r25, Y+5	; 0x05
     bb0:	81 30       	cpi	r24, 0x01	; 1
     bb2:	91 05       	cpc	r25, r1
     bb4:	d1 f0       	breq	.+52     	; 0xbea <DIO_enumSetPortDirection+0x62>
     bb6:	2c 81       	ldd	r18, Y+4	; 0x04
     bb8:	3d 81       	ldd	r19, Y+5	; 0x05
     bba:	22 30       	cpi	r18, 0x02	; 2
     bbc:	31 05       	cpc	r19, r1
     bbe:	2c f4       	brge	.+10     	; 0xbca <DIO_enumSetPortDirection+0x42>
     bc0:	8c 81       	ldd	r24, Y+4	; 0x04
     bc2:	9d 81       	ldd	r25, Y+5	; 0x05
     bc4:	00 97       	sbiw	r24, 0x00	; 0
     bc6:	61 f0       	breq	.+24     	; 0xbe0 <DIO_enumSetPortDirection+0x58>
     bc8:	1e c0       	rjmp	.+60     	; 0xc06 <DIO_enumSetPortDirection+0x7e>
     bca:	2c 81       	ldd	r18, Y+4	; 0x04
     bcc:	3d 81       	ldd	r19, Y+5	; 0x05
     bce:	22 30       	cpi	r18, 0x02	; 2
     bd0:	31 05       	cpc	r19, r1
     bd2:	81 f0       	breq	.+32     	; 0xbf4 <DIO_enumSetPortDirection+0x6c>
     bd4:	8c 81       	ldd	r24, Y+4	; 0x04
     bd6:	9d 81       	ldd	r25, Y+5	; 0x05
     bd8:	83 30       	cpi	r24, 0x03	; 3
     bda:	91 05       	cpc	r25, r1
     bdc:	81 f0       	breq	.+32     	; 0xbfe <DIO_enumSetPortDirection+0x76>
     bde:	13 c0       	rjmp	.+38     	; 0xc06 <DIO_enumSetPortDirection+0x7e>
		{
			case DIO_PORTA:
				DDRA=Copy_u8Direction;
     be0:	ea e3       	ldi	r30, 0x3A	; 58
     be2:	f0 e0       	ldi	r31, 0x00	; 0
     be4:	8b 81       	ldd	r24, Y+3	; 0x03
     be6:	80 83       	st	Z, r24
     be8:	0e c0       	rjmp	.+28     	; 0xc06 <DIO_enumSetPortDirection+0x7e>
				break;
			case DIO_PORTB:
				DDRB=Copy_u8Direction;
     bea:	e7 e3       	ldi	r30, 0x37	; 55
     bec:	f0 e0       	ldi	r31, 0x00	; 0
     bee:	8b 81       	ldd	r24, Y+3	; 0x03
     bf0:	80 83       	st	Z, r24
     bf2:	09 c0       	rjmp	.+18     	; 0xc06 <DIO_enumSetPortDirection+0x7e>
				break;
			case DIO_PORTC:
				DDRC=Copy_u8Direction;
     bf4:	e4 e3       	ldi	r30, 0x34	; 52
     bf6:	f0 e0       	ldi	r31, 0x00	; 0
     bf8:	8b 81       	ldd	r24, Y+3	; 0x03
     bfa:	80 83       	st	Z, r24
     bfc:	04 c0       	rjmp	.+8      	; 0xc06 <DIO_enumSetPortDirection+0x7e>
				break;
			case DIO_PORTD:
				DDRD=Copy_u8Direction;
     bfe:	e1 e3       	ldi	r30, 0x31	; 49
     c00:	f0 e0       	ldi	r31, 0x00	; 0
     c02:	8b 81       	ldd	r24, Y+3	; 0x03
     c04:	80 83       	st	Z, r24
				break;
		}
		Local_enumErrorState=ES_OK;
     c06:	81 e0       	ldi	r24, 0x01	; 1
     c08:	89 83       	std	Y+1, r24	; 0x01
     c0a:	02 c0       	rjmp	.+4      	; 0xc10 <DIO_enumSetPortDirection+0x88>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     c0c:	83 e0       	ldi	r24, 0x03	; 3
     c0e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     c10:	89 81       	ldd	r24, Y+1	; 0x01
}
     c12:	0f 90       	pop	r0
     c14:	0f 90       	pop	r0
     c16:	0f 90       	pop	r0
     c18:	0f 90       	pop	r0
     c1a:	0f 90       	pop	r0
     c1c:	cf 91       	pop	r28
     c1e:	df 91       	pop	r29
     c20:	08 95       	ret

00000c22 <DIO_enumSetPortValue>:
ES_T DIO_enumSetPortValue (u8 Copy_u8PortID,u8 Copy_u8Value)
{
     c22:	df 93       	push	r29
     c24:	cf 93       	push	r28
     c26:	00 d0       	rcall	.+0      	; 0xc28 <DIO_enumSetPortValue+0x6>
     c28:	00 d0       	rcall	.+0      	; 0xc2a <DIO_enumSetPortValue+0x8>
     c2a:	0f 92       	push	r0
     c2c:	cd b7       	in	r28, 0x3d	; 61
     c2e:	de b7       	in	r29, 0x3e	; 62
     c30:	8a 83       	std	Y+2, r24	; 0x02
     c32:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
     c34:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     c36:	8a 81       	ldd	r24, Y+2	; 0x02
     c38:	84 30       	cpi	r24, 0x04	; 4
     c3a:	a8 f5       	brcc	.+106    	; 0xca6 <DIO_enumSetPortValue+0x84>
	{
		switch(Copy_u8PortID)
     c3c:	8a 81       	ldd	r24, Y+2	; 0x02
     c3e:	28 2f       	mov	r18, r24
     c40:	30 e0       	ldi	r19, 0x00	; 0
     c42:	3d 83       	std	Y+5, r19	; 0x05
     c44:	2c 83       	std	Y+4, r18	; 0x04
     c46:	8c 81       	ldd	r24, Y+4	; 0x04
     c48:	9d 81       	ldd	r25, Y+5	; 0x05
     c4a:	81 30       	cpi	r24, 0x01	; 1
     c4c:	91 05       	cpc	r25, r1
     c4e:	d1 f0       	breq	.+52     	; 0xc84 <DIO_enumSetPortValue+0x62>
     c50:	2c 81       	ldd	r18, Y+4	; 0x04
     c52:	3d 81       	ldd	r19, Y+5	; 0x05
     c54:	22 30       	cpi	r18, 0x02	; 2
     c56:	31 05       	cpc	r19, r1
     c58:	2c f4       	brge	.+10     	; 0xc64 <DIO_enumSetPortValue+0x42>
     c5a:	8c 81       	ldd	r24, Y+4	; 0x04
     c5c:	9d 81       	ldd	r25, Y+5	; 0x05
     c5e:	00 97       	sbiw	r24, 0x00	; 0
     c60:	61 f0       	breq	.+24     	; 0xc7a <DIO_enumSetPortValue+0x58>
     c62:	1e c0       	rjmp	.+60     	; 0xca0 <DIO_enumSetPortValue+0x7e>
     c64:	2c 81       	ldd	r18, Y+4	; 0x04
     c66:	3d 81       	ldd	r19, Y+5	; 0x05
     c68:	22 30       	cpi	r18, 0x02	; 2
     c6a:	31 05       	cpc	r19, r1
     c6c:	81 f0       	breq	.+32     	; 0xc8e <DIO_enumSetPortValue+0x6c>
     c6e:	8c 81       	ldd	r24, Y+4	; 0x04
     c70:	9d 81       	ldd	r25, Y+5	; 0x05
     c72:	83 30       	cpi	r24, 0x03	; 3
     c74:	91 05       	cpc	r25, r1
     c76:	81 f0       	breq	.+32     	; 0xc98 <DIO_enumSetPortValue+0x76>
     c78:	13 c0       	rjmp	.+38     	; 0xca0 <DIO_enumSetPortValue+0x7e>
		{
			case DIO_PORTA:
				PORTA=Copy_u8Value;
     c7a:	eb e3       	ldi	r30, 0x3B	; 59
     c7c:	f0 e0       	ldi	r31, 0x00	; 0
     c7e:	8b 81       	ldd	r24, Y+3	; 0x03
     c80:	80 83       	st	Z, r24
     c82:	0e c0       	rjmp	.+28     	; 0xca0 <DIO_enumSetPortValue+0x7e>
				break;
			case DIO_PORTB:
				PORTB=Copy_u8Value;
     c84:	e8 e3       	ldi	r30, 0x38	; 56
     c86:	f0 e0       	ldi	r31, 0x00	; 0
     c88:	8b 81       	ldd	r24, Y+3	; 0x03
     c8a:	80 83       	st	Z, r24
     c8c:	09 c0       	rjmp	.+18     	; 0xca0 <DIO_enumSetPortValue+0x7e>
				break;
			case DIO_PORTC:
				PORTC=Copy_u8Value;
     c8e:	e5 e3       	ldi	r30, 0x35	; 53
     c90:	f0 e0       	ldi	r31, 0x00	; 0
     c92:	8b 81       	ldd	r24, Y+3	; 0x03
     c94:	80 83       	st	Z, r24
     c96:	04 c0       	rjmp	.+8      	; 0xca0 <DIO_enumSetPortValue+0x7e>
				break;
			case DIO_PORTD:
				PORTD=Copy_u8Value;
     c98:	e2 e3       	ldi	r30, 0x32	; 50
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	8b 81       	ldd	r24, Y+3	; 0x03
     c9e:	80 83       	st	Z, r24
				break;
		}
		Local_enumErrorState=ES_OK;
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	89 83       	std	Y+1, r24	; 0x01
     ca4:	02 c0       	rjmp	.+4      	; 0xcaa <DIO_enumSetPortValue+0x88>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     ca6:	83 e0       	ldi	r24, 0x03	; 3
     ca8:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     caa:	89 81       	ldd	r24, Y+1	; 0x01
}
     cac:	0f 90       	pop	r0
     cae:	0f 90       	pop	r0
     cb0:	0f 90       	pop	r0
     cb2:	0f 90       	pop	r0
     cb4:	0f 90       	pop	r0
     cb6:	cf 91       	pop	r28
     cb8:	df 91       	pop	r29
     cba:	08 95       	ret

00000cbc <DIO_enumTogglePortDirection>:
ES_T DIO_enumTogglePortDirection (u8 Copy_u8PortID)
{
     cbc:	df 93       	push	r29
     cbe:	cf 93       	push	r28
     cc0:	00 d0       	rcall	.+0      	; 0xcc2 <DIO_enumTogglePortDirection+0x6>
     cc2:	00 d0       	rcall	.+0      	; 0xcc4 <DIO_enumTogglePortDirection+0x8>
     cc4:	cd b7       	in	r28, 0x3d	; 61
     cc6:	de b7       	in	r29, 0x3e	; 62
     cc8:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
     cca:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     ccc:	8a 81       	ldd	r24, Y+2	; 0x02
     cce:	84 30       	cpi	r24, 0x04	; 4
     cd0:	08 f0       	brcs	.+2      	; 0xcd4 <DIO_enumTogglePortDirection+0x18>
     cd2:	41 c0       	rjmp	.+130    	; 0xd56 <DIO_enumTogglePortDirection+0x9a>
	{
		switch(Copy_u8PortID)
     cd4:	8a 81       	ldd	r24, Y+2	; 0x02
     cd6:	28 2f       	mov	r18, r24
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	3c 83       	std	Y+4, r19	; 0x04
     cdc:	2b 83       	std	Y+3, r18	; 0x03
     cde:	8b 81       	ldd	r24, Y+3	; 0x03
     ce0:	9c 81       	ldd	r25, Y+4	; 0x04
     ce2:	81 30       	cpi	r24, 0x01	; 1
     ce4:	91 05       	cpc	r25, r1
     ce6:	e9 f0       	breq	.+58     	; 0xd22 <DIO_enumTogglePortDirection+0x66>
     ce8:	2b 81       	ldd	r18, Y+3	; 0x03
     cea:	3c 81       	ldd	r19, Y+4	; 0x04
     cec:	22 30       	cpi	r18, 0x02	; 2
     cee:	31 05       	cpc	r19, r1
     cf0:	2c f4       	brge	.+10     	; 0xcfc <DIO_enumTogglePortDirection+0x40>
     cf2:	8b 81       	ldd	r24, Y+3	; 0x03
     cf4:	9c 81       	ldd	r25, Y+4	; 0x04
     cf6:	00 97       	sbiw	r24, 0x00	; 0
     cf8:	61 f0       	breq	.+24     	; 0xd12 <DIO_enumTogglePortDirection+0x56>
     cfa:	2a c0       	rjmp	.+84     	; 0xd50 <DIO_enumTogglePortDirection+0x94>
     cfc:	2b 81       	ldd	r18, Y+3	; 0x03
     cfe:	3c 81       	ldd	r19, Y+4	; 0x04
     d00:	22 30       	cpi	r18, 0x02	; 2
     d02:	31 05       	cpc	r19, r1
     d04:	b1 f0       	breq	.+44     	; 0xd32 <DIO_enumTogglePortDirection+0x76>
     d06:	8b 81       	ldd	r24, Y+3	; 0x03
     d08:	9c 81       	ldd	r25, Y+4	; 0x04
     d0a:	83 30       	cpi	r24, 0x03	; 3
     d0c:	91 05       	cpc	r25, r1
     d0e:	c9 f0       	breq	.+50     	; 0xd42 <DIO_enumTogglePortDirection+0x86>
     d10:	1f c0       	rjmp	.+62     	; 0xd50 <DIO_enumTogglePortDirection+0x94>
		{
			case DIO_PORTA:
				DDRA=~DDRA;
     d12:	aa e3       	ldi	r26, 0x3A	; 58
     d14:	b0 e0       	ldi	r27, 0x00	; 0
     d16:	ea e3       	ldi	r30, 0x3A	; 58
     d18:	f0 e0       	ldi	r31, 0x00	; 0
     d1a:	80 81       	ld	r24, Z
     d1c:	80 95       	com	r24
     d1e:	8c 93       	st	X, r24
     d20:	17 c0       	rjmp	.+46     	; 0xd50 <DIO_enumTogglePortDirection+0x94>
				break;
			case DIO_PORTB:
				DDRB=~DDRB;
     d22:	a7 e3       	ldi	r26, 0x37	; 55
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	e7 e3       	ldi	r30, 0x37	; 55
     d28:	f0 e0       	ldi	r31, 0x00	; 0
     d2a:	80 81       	ld	r24, Z
     d2c:	80 95       	com	r24
     d2e:	8c 93       	st	X, r24
     d30:	0f c0       	rjmp	.+30     	; 0xd50 <DIO_enumTogglePortDirection+0x94>
				break;
			case DIO_PORTC:
				DDRC=~DDRC;
     d32:	a4 e3       	ldi	r26, 0x34	; 52
     d34:	b0 e0       	ldi	r27, 0x00	; 0
     d36:	e4 e3       	ldi	r30, 0x34	; 52
     d38:	f0 e0       	ldi	r31, 0x00	; 0
     d3a:	80 81       	ld	r24, Z
     d3c:	80 95       	com	r24
     d3e:	8c 93       	st	X, r24
     d40:	07 c0       	rjmp	.+14     	; 0xd50 <DIO_enumTogglePortDirection+0x94>
				break;
			case DIO_PORTD:
				DDRD=~DDRD;
     d42:	a1 e3       	ldi	r26, 0x31	; 49
     d44:	b0 e0       	ldi	r27, 0x00	; 0
     d46:	e1 e3       	ldi	r30, 0x31	; 49
     d48:	f0 e0       	ldi	r31, 0x00	; 0
     d4a:	80 81       	ld	r24, Z
     d4c:	80 95       	com	r24
     d4e:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	89 83       	std	Y+1, r24	; 0x01
     d54:	02 c0       	rjmp	.+4      	; 0xd5a <DIO_enumTogglePortDirection+0x9e>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     d56:	83 e0       	ldi	r24, 0x03	; 3
     d58:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     d5a:	89 81       	ldd	r24, Y+1	; 0x01
}
     d5c:	0f 90       	pop	r0
     d5e:	0f 90       	pop	r0
     d60:	0f 90       	pop	r0
     d62:	0f 90       	pop	r0
     d64:	cf 91       	pop	r28
     d66:	df 91       	pop	r29
     d68:	08 95       	ret

00000d6a <DIO_enumTogglePortValue>:
ES_T DIO_enumTogglePortValue (u8 Copy_u8PortID)
{
     d6a:	df 93       	push	r29
     d6c:	cf 93       	push	r28
     d6e:	00 d0       	rcall	.+0      	; 0xd70 <DIO_enumTogglePortValue+0x6>
     d70:	00 d0       	rcall	.+0      	; 0xd72 <DIO_enumTogglePortValue+0x8>
     d72:	cd b7       	in	r28, 0x3d	; 61
     d74:	de b7       	in	r29, 0x3e	; 62
     d76:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
     d78:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     d7a:	8a 81       	ldd	r24, Y+2	; 0x02
     d7c:	84 30       	cpi	r24, 0x04	; 4
     d7e:	08 f0       	brcs	.+2      	; 0xd82 <DIO_enumTogglePortValue+0x18>
     d80:	41 c0       	rjmp	.+130    	; 0xe04 <DIO_enumTogglePortValue+0x9a>
	{
		switch(Copy_u8PortID)
     d82:	8a 81       	ldd	r24, Y+2	; 0x02
     d84:	28 2f       	mov	r18, r24
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	3c 83       	std	Y+4, r19	; 0x04
     d8a:	2b 83       	std	Y+3, r18	; 0x03
     d8c:	8b 81       	ldd	r24, Y+3	; 0x03
     d8e:	9c 81       	ldd	r25, Y+4	; 0x04
     d90:	81 30       	cpi	r24, 0x01	; 1
     d92:	91 05       	cpc	r25, r1
     d94:	e9 f0       	breq	.+58     	; 0xdd0 <DIO_enumTogglePortValue+0x66>
     d96:	2b 81       	ldd	r18, Y+3	; 0x03
     d98:	3c 81       	ldd	r19, Y+4	; 0x04
     d9a:	22 30       	cpi	r18, 0x02	; 2
     d9c:	31 05       	cpc	r19, r1
     d9e:	2c f4       	brge	.+10     	; 0xdaa <DIO_enumTogglePortValue+0x40>
     da0:	8b 81       	ldd	r24, Y+3	; 0x03
     da2:	9c 81       	ldd	r25, Y+4	; 0x04
     da4:	00 97       	sbiw	r24, 0x00	; 0
     da6:	61 f0       	breq	.+24     	; 0xdc0 <DIO_enumTogglePortValue+0x56>
     da8:	2a c0       	rjmp	.+84     	; 0xdfe <DIO_enumTogglePortValue+0x94>
     daa:	2b 81       	ldd	r18, Y+3	; 0x03
     dac:	3c 81       	ldd	r19, Y+4	; 0x04
     dae:	22 30       	cpi	r18, 0x02	; 2
     db0:	31 05       	cpc	r19, r1
     db2:	b1 f0       	breq	.+44     	; 0xde0 <DIO_enumTogglePortValue+0x76>
     db4:	8b 81       	ldd	r24, Y+3	; 0x03
     db6:	9c 81       	ldd	r25, Y+4	; 0x04
     db8:	83 30       	cpi	r24, 0x03	; 3
     dba:	91 05       	cpc	r25, r1
     dbc:	c9 f0       	breq	.+50     	; 0xdf0 <DIO_enumTogglePortValue+0x86>
     dbe:	1f c0       	rjmp	.+62     	; 0xdfe <DIO_enumTogglePortValue+0x94>
		{
			case DIO_PORTA:
				PORTA=~PORTA;
     dc0:	ab e3       	ldi	r26, 0x3B	; 59
     dc2:	b0 e0       	ldi	r27, 0x00	; 0
     dc4:	eb e3       	ldi	r30, 0x3B	; 59
     dc6:	f0 e0       	ldi	r31, 0x00	; 0
     dc8:	80 81       	ld	r24, Z
     dca:	80 95       	com	r24
     dcc:	8c 93       	st	X, r24
     dce:	17 c0       	rjmp	.+46     	; 0xdfe <DIO_enumTogglePortValue+0x94>
				break;
			case DIO_PORTB:
				PORTB=~PORTB;
     dd0:	a8 e3       	ldi	r26, 0x38	; 56
     dd2:	b0 e0       	ldi	r27, 0x00	; 0
     dd4:	e8 e3       	ldi	r30, 0x38	; 56
     dd6:	f0 e0       	ldi	r31, 0x00	; 0
     dd8:	80 81       	ld	r24, Z
     dda:	80 95       	com	r24
     ddc:	8c 93       	st	X, r24
     dde:	0f c0       	rjmp	.+30     	; 0xdfe <DIO_enumTogglePortValue+0x94>
				break;
			case DIO_PORTC:
				PORTC=~PORTC;
     de0:	a5 e3       	ldi	r26, 0x35	; 53
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	e5 e3       	ldi	r30, 0x35	; 53
     de6:	f0 e0       	ldi	r31, 0x00	; 0
     de8:	80 81       	ld	r24, Z
     dea:	80 95       	com	r24
     dec:	8c 93       	st	X, r24
     dee:	07 c0       	rjmp	.+14     	; 0xdfe <DIO_enumTogglePortValue+0x94>
				break;
			case DIO_PORTD:
				PORTD=~PORTD;
     df0:	a2 e3       	ldi	r26, 0x32	; 50
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	e2 e3       	ldi	r30, 0x32	; 50
     df6:	f0 e0       	ldi	r31, 0x00	; 0
     df8:	80 81       	ld	r24, Z
     dfa:	80 95       	com	r24
     dfc:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	89 83       	std	Y+1, r24	; 0x01
     e02:	02 c0       	rjmp	.+4      	; 0xe08 <DIO_enumTogglePortValue+0x9e>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     e04:	83 e0       	ldi	r24, 0x03	; 3
     e06:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     e08:	89 81       	ldd	r24, Y+1	; 0x01
}
     e0a:	0f 90       	pop	r0
     e0c:	0f 90       	pop	r0
     e0e:	0f 90       	pop	r0
     e10:	0f 90       	pop	r0
     e12:	cf 91       	pop	r28
     e14:	df 91       	pop	r29
     e16:	08 95       	ret

00000e18 <DIO_enumGetPortDirection>:
ES_T DIO_enumGetPortDirection (u8 Copy_u8PortID,u8 *Copy_pu8Direction)
{
     e18:	df 93       	push	r29
     e1a:	cf 93       	push	r28
     e1c:	00 d0       	rcall	.+0      	; 0xe1e <DIO_enumGetPortDirection+0x6>
     e1e:	00 d0       	rcall	.+0      	; 0xe20 <DIO_enumGetPortDirection+0x8>
     e20:	00 d0       	rcall	.+0      	; 0xe22 <DIO_enumGetPortDirection+0xa>
     e22:	cd b7       	in	r28, 0x3d	; 61
     e24:	de b7       	in	r29, 0x3e	; 62
     e26:	8a 83       	std	Y+2, r24	; 0x02
     e28:	7c 83       	std	Y+4, r23	; 0x04
     e2a:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
     e2c:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     e2e:	8a 81       	ldd	r24, Y+2	; 0x02
     e30:	84 30       	cpi	r24, 0x04	; 4
     e32:	08 f0       	brcs	.+2      	; 0xe36 <DIO_enumGetPortDirection+0x1e>
     e34:	44 c0       	rjmp	.+136    	; 0xebe <DIO_enumGetPortDirection+0xa6>
	{
		if (Copy_pu8Direction!=NULL)
     e36:	8b 81       	ldd	r24, Y+3	; 0x03
     e38:	9c 81       	ldd	r25, Y+4	; 0x04
     e3a:	00 97       	sbiw	r24, 0x00	; 0
     e3c:	e9 f1       	breq	.+122    	; 0xeb8 <DIO_enumGetPortDirection+0xa0>
		{
			switch(Copy_u8PortID)
     e3e:	8a 81       	ldd	r24, Y+2	; 0x02
     e40:	28 2f       	mov	r18, r24
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	3e 83       	std	Y+6, r19	; 0x06
     e46:	2d 83       	std	Y+5, r18	; 0x05
     e48:	8d 81       	ldd	r24, Y+5	; 0x05
     e4a:	9e 81       	ldd	r25, Y+6	; 0x06
     e4c:	81 30       	cpi	r24, 0x01	; 1
     e4e:	91 05       	cpc	r25, r1
     e50:	e1 f0       	breq	.+56     	; 0xe8a <DIO_enumGetPortDirection+0x72>
     e52:	2d 81       	ldd	r18, Y+5	; 0x05
     e54:	3e 81       	ldd	r19, Y+6	; 0x06
     e56:	22 30       	cpi	r18, 0x02	; 2
     e58:	31 05       	cpc	r19, r1
     e5a:	2c f4       	brge	.+10     	; 0xe66 <DIO_enumGetPortDirection+0x4e>
     e5c:	8d 81       	ldd	r24, Y+5	; 0x05
     e5e:	9e 81       	ldd	r25, Y+6	; 0x06
     e60:	00 97       	sbiw	r24, 0x00	; 0
     e62:	61 f0       	breq	.+24     	; 0xe7c <DIO_enumGetPortDirection+0x64>
     e64:	26 c0       	rjmp	.+76     	; 0xeb2 <DIO_enumGetPortDirection+0x9a>
     e66:	2d 81       	ldd	r18, Y+5	; 0x05
     e68:	3e 81       	ldd	r19, Y+6	; 0x06
     e6a:	22 30       	cpi	r18, 0x02	; 2
     e6c:	31 05       	cpc	r19, r1
     e6e:	a1 f0       	breq	.+40     	; 0xe98 <DIO_enumGetPortDirection+0x80>
     e70:	8d 81       	ldd	r24, Y+5	; 0x05
     e72:	9e 81       	ldd	r25, Y+6	; 0x06
     e74:	83 30       	cpi	r24, 0x03	; 3
     e76:	91 05       	cpc	r25, r1
     e78:	b1 f0       	breq	.+44     	; 0xea6 <DIO_enumGetPortDirection+0x8e>
     e7a:	1b c0       	rjmp	.+54     	; 0xeb2 <DIO_enumGetPortDirection+0x9a>
			{
				case DIO_PORTA:
					*Copy_pu8Direction=DDRA;
     e7c:	ea e3       	ldi	r30, 0x3A	; 58
     e7e:	f0 e0       	ldi	r31, 0x00	; 0
     e80:	80 81       	ld	r24, Z
     e82:	eb 81       	ldd	r30, Y+3	; 0x03
     e84:	fc 81       	ldd	r31, Y+4	; 0x04
     e86:	80 83       	st	Z, r24
     e88:	14 c0       	rjmp	.+40     	; 0xeb2 <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTB:
					*Copy_pu8Direction=DDRB;
     e8a:	e7 e3       	ldi	r30, 0x37	; 55
     e8c:	f0 e0       	ldi	r31, 0x00	; 0
     e8e:	80 81       	ld	r24, Z
     e90:	eb 81       	ldd	r30, Y+3	; 0x03
     e92:	fc 81       	ldd	r31, Y+4	; 0x04
     e94:	80 83       	st	Z, r24
     e96:	0d c0       	rjmp	.+26     	; 0xeb2 <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTC:
					*Copy_pu8Direction=DDRC;
     e98:	e4 e3       	ldi	r30, 0x34	; 52
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	80 81       	ld	r24, Z
     e9e:	eb 81       	ldd	r30, Y+3	; 0x03
     ea0:	fc 81       	ldd	r31, Y+4	; 0x04
     ea2:	80 83       	st	Z, r24
     ea4:	06 c0       	rjmp	.+12     	; 0xeb2 <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTD:
					*Copy_pu8Direction=DDRD;
     ea6:	e1 e3       	ldi	r30, 0x31	; 49
     ea8:	f0 e0       	ldi	r31, 0x00	; 0
     eaa:	80 81       	ld	r24, Z
     eac:	eb 81       	ldd	r30, Y+3	; 0x03
     eae:	fc 81       	ldd	r31, Y+4	; 0x04
     eb0:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
     eb2:	81 e0       	ldi	r24, 0x01	; 1
     eb4:	89 83       	std	Y+1, r24	; 0x01
     eb6:	05 c0       	rjmp	.+10     	; 0xec2 <DIO_enumGetPortDirection+0xaa>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
     eb8:	82 e0       	ldi	r24, 0x02	; 2
     eba:	89 83       	std	Y+1, r24	; 0x01
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <DIO_enumGetPortDirection+0xaa>
		}

	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     ebe:	83 e0       	ldi	r24, 0x03	; 3
     ec0:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     ec2:	89 81       	ldd	r24, Y+1	; 0x01
}
     ec4:	26 96       	adiw	r28, 0x06	; 6
     ec6:	0f b6       	in	r0, 0x3f	; 63
     ec8:	f8 94       	cli
     eca:	de bf       	out	0x3e, r29	; 62
     ecc:	0f be       	out	0x3f, r0	; 63
     ece:	cd bf       	out	0x3d, r28	; 61
     ed0:	cf 91       	pop	r28
     ed2:	df 91       	pop	r29
     ed4:	08 95       	ret

00000ed6 <DIO_enumGetPortValue>:
ES_T DIO_enumGetPortValue (u8 Copy_u8PortID,u8 *Copy_pu8Value)
{
     ed6:	df 93       	push	r29
     ed8:	cf 93       	push	r28
     eda:	00 d0       	rcall	.+0      	; 0xedc <DIO_enumGetPortValue+0x6>
     edc:	00 d0       	rcall	.+0      	; 0xede <DIO_enumGetPortValue+0x8>
     ede:	00 d0       	rcall	.+0      	; 0xee0 <DIO_enumGetPortValue+0xa>
     ee0:	cd b7       	in	r28, 0x3d	; 61
     ee2:	de b7       	in	r29, 0x3e	; 62
     ee4:	8a 83       	std	Y+2, r24	; 0x02
     ee6:	7c 83       	std	Y+4, r23	; 0x04
     ee8:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
     eea:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     eec:	8a 81       	ldd	r24, Y+2	; 0x02
     eee:	84 30       	cpi	r24, 0x04	; 4
     ef0:	08 f0       	brcs	.+2      	; 0xef4 <DIO_enumGetPortValue+0x1e>
     ef2:	44 c0       	rjmp	.+136    	; 0xf7c <DIO_enumGetPortValue+0xa6>
	{
		if (Copy_pu8Value!=NULL)
     ef4:	8b 81       	ldd	r24, Y+3	; 0x03
     ef6:	9c 81       	ldd	r25, Y+4	; 0x04
     ef8:	00 97       	sbiw	r24, 0x00	; 0
     efa:	e9 f1       	breq	.+122    	; 0xf76 <DIO_enumGetPortValue+0xa0>
		{
			switch(Copy_u8PortID)
     efc:	8a 81       	ldd	r24, Y+2	; 0x02
     efe:	28 2f       	mov	r18, r24
     f00:	30 e0       	ldi	r19, 0x00	; 0
     f02:	3e 83       	std	Y+6, r19	; 0x06
     f04:	2d 83       	std	Y+5, r18	; 0x05
     f06:	8d 81       	ldd	r24, Y+5	; 0x05
     f08:	9e 81       	ldd	r25, Y+6	; 0x06
     f0a:	81 30       	cpi	r24, 0x01	; 1
     f0c:	91 05       	cpc	r25, r1
     f0e:	e1 f0       	breq	.+56     	; 0xf48 <DIO_enumGetPortValue+0x72>
     f10:	2d 81       	ldd	r18, Y+5	; 0x05
     f12:	3e 81       	ldd	r19, Y+6	; 0x06
     f14:	22 30       	cpi	r18, 0x02	; 2
     f16:	31 05       	cpc	r19, r1
     f18:	2c f4       	brge	.+10     	; 0xf24 <DIO_enumGetPortValue+0x4e>
     f1a:	8d 81       	ldd	r24, Y+5	; 0x05
     f1c:	9e 81       	ldd	r25, Y+6	; 0x06
     f1e:	00 97       	sbiw	r24, 0x00	; 0
     f20:	61 f0       	breq	.+24     	; 0xf3a <DIO_enumGetPortValue+0x64>
     f22:	26 c0       	rjmp	.+76     	; 0xf70 <DIO_enumGetPortValue+0x9a>
     f24:	2d 81       	ldd	r18, Y+5	; 0x05
     f26:	3e 81       	ldd	r19, Y+6	; 0x06
     f28:	22 30       	cpi	r18, 0x02	; 2
     f2a:	31 05       	cpc	r19, r1
     f2c:	a1 f0       	breq	.+40     	; 0xf56 <DIO_enumGetPortValue+0x80>
     f2e:	8d 81       	ldd	r24, Y+5	; 0x05
     f30:	9e 81       	ldd	r25, Y+6	; 0x06
     f32:	83 30       	cpi	r24, 0x03	; 3
     f34:	91 05       	cpc	r25, r1
     f36:	b1 f0       	breq	.+44     	; 0xf64 <DIO_enumGetPortValue+0x8e>
     f38:	1b c0       	rjmp	.+54     	; 0xf70 <DIO_enumGetPortValue+0x9a>
			{
				case DIO_PORTA:
					*Copy_pu8Value=PINA;
     f3a:	e9 e3       	ldi	r30, 0x39	; 57
     f3c:	f0 e0       	ldi	r31, 0x00	; 0
     f3e:	80 81       	ld	r24, Z
     f40:	eb 81       	ldd	r30, Y+3	; 0x03
     f42:	fc 81       	ldd	r31, Y+4	; 0x04
     f44:	80 83       	st	Z, r24
     f46:	14 c0       	rjmp	.+40     	; 0xf70 <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTB:
					*Copy_pu8Value=PINB;
     f48:	e6 e3       	ldi	r30, 0x36	; 54
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	80 81       	ld	r24, Z
     f4e:	eb 81       	ldd	r30, Y+3	; 0x03
     f50:	fc 81       	ldd	r31, Y+4	; 0x04
     f52:	80 83       	st	Z, r24
     f54:	0d c0       	rjmp	.+26     	; 0xf70 <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTC:
					*Copy_pu8Value=PINC;
     f56:	e3 e3       	ldi	r30, 0x33	; 51
     f58:	f0 e0       	ldi	r31, 0x00	; 0
     f5a:	80 81       	ld	r24, Z
     f5c:	eb 81       	ldd	r30, Y+3	; 0x03
     f5e:	fc 81       	ldd	r31, Y+4	; 0x04
     f60:	80 83       	st	Z, r24
     f62:	06 c0       	rjmp	.+12     	; 0xf70 <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTD:
					*Copy_pu8Value=PIND;
     f64:	e0 e3       	ldi	r30, 0x30	; 48
     f66:	f0 e0       	ldi	r31, 0x00	; 0
     f68:	80 81       	ld	r24, Z
     f6a:	eb 81       	ldd	r30, Y+3	; 0x03
     f6c:	fc 81       	ldd	r31, Y+4	; 0x04
     f6e:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
     f70:	81 e0       	ldi	r24, 0x01	; 1
     f72:	89 83       	std	Y+1, r24	; 0x01
     f74:	05 c0       	rjmp	.+10     	; 0xf80 <DIO_enumGetPortValue+0xaa>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
     f76:	82 e0       	ldi	r24, 0x02	; 2
     f78:	89 83       	std	Y+1, r24	; 0x01
     f7a:	02 c0       	rjmp	.+4      	; 0xf80 <DIO_enumGetPortValue+0xaa>
		}

	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     f7c:	83 e0       	ldi	r24, 0x03	; 3
     f7e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     f80:	89 81       	ldd	r24, Y+1	; 0x01
}
     f82:	26 96       	adiw	r28, 0x06	; 6
     f84:	0f b6       	in	r0, 0x3f	; 63
     f86:	f8 94       	cli
     f88:	de bf       	out	0x3e, r29	; 62
     f8a:	0f be       	out	0x3f, r0	; 63
     f8c:	cd bf       	out	0x3d, r28	; 61
     f8e:	cf 91       	pop	r28
     f90:	df 91       	pop	r29
     f92:	08 95       	ret

00000f94 <DIO_enumSetPinDirection>:

ES_T DIO_enumSetPinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8Direction)
{
     f94:	df 93       	push	r29
     f96:	cf 93       	push	r28
     f98:	00 d0       	rcall	.+0      	; 0xf9a <DIO_enumSetPinDirection+0x6>
     f9a:	00 d0       	rcall	.+0      	; 0xf9c <DIO_enumSetPinDirection+0x8>
     f9c:	00 d0       	rcall	.+0      	; 0xf9e <DIO_enumSetPinDirection+0xa>
     f9e:	cd b7       	in	r28, 0x3d	; 61
     fa0:	de b7       	in	r29, 0x3e	; 62
     fa2:	8a 83       	std	Y+2, r24	; 0x02
     fa4:	6b 83       	std	Y+3, r22	; 0x03
     fa6:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
     fa8:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&& Copy_u8PinID <= DIO_PIN7 && Copy_u8Direction <= OUTPUT)
     faa:	8a 81       	ldd	r24, Y+2	; 0x02
     fac:	84 30       	cpi	r24, 0x04	; 4
     fae:	08 f0       	brcs	.+2      	; 0xfb2 <DIO_enumSetPinDirection+0x1e>
     fb0:	d1 c0       	rjmp	.+418    	; 0x1154 <DIO_enumSetPinDirection+0x1c0>
     fb2:	8b 81       	ldd	r24, Y+3	; 0x03
     fb4:	88 30       	cpi	r24, 0x08	; 8
     fb6:	08 f0       	brcs	.+2      	; 0xfba <DIO_enumSetPinDirection+0x26>
     fb8:	cd c0       	rjmp	.+410    	; 0x1154 <DIO_enumSetPinDirection+0x1c0>
     fba:	8c 81       	ldd	r24, Y+4	; 0x04
     fbc:	82 30       	cpi	r24, 0x02	; 2
     fbe:	08 f0       	brcs	.+2      	; 0xfc2 <DIO_enumSetPinDirection+0x2e>
     fc0:	c9 c0       	rjmp	.+402    	; 0x1154 <DIO_enumSetPinDirection+0x1c0>
	{
		switch(Copy_u8PortID)
     fc2:	8a 81       	ldd	r24, Y+2	; 0x02
     fc4:	28 2f       	mov	r18, r24
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	3e 83       	std	Y+6, r19	; 0x06
     fca:	2d 83       	std	Y+5, r18	; 0x05
     fcc:	6d 81       	ldd	r22, Y+5	; 0x05
     fce:	7e 81       	ldd	r23, Y+6	; 0x06
     fd0:	61 30       	cpi	r22, 0x01	; 1
     fd2:	71 05       	cpc	r23, r1
     fd4:	09 f4       	brne	.+2      	; 0xfd8 <DIO_enumSetPinDirection+0x44>
     fd6:	41 c0       	rjmp	.+130    	; 0x105a <DIO_enumSetPinDirection+0xc6>
     fd8:	8d 81       	ldd	r24, Y+5	; 0x05
     fda:	9e 81       	ldd	r25, Y+6	; 0x06
     fdc:	82 30       	cpi	r24, 0x02	; 2
     fde:	91 05       	cpc	r25, r1
     fe0:	34 f4       	brge	.+12     	; 0xfee <DIO_enumSetPinDirection+0x5a>
     fe2:	2d 81       	ldd	r18, Y+5	; 0x05
     fe4:	3e 81       	ldd	r19, Y+6	; 0x06
     fe6:	21 15       	cp	r18, r1
     fe8:	31 05       	cpc	r19, r1
     fea:	71 f0       	breq	.+28     	; 0x1008 <DIO_enumSetPinDirection+0x74>
     fec:	b0 c0       	rjmp	.+352    	; 0x114e <DIO_enumSetPinDirection+0x1ba>
     fee:	6d 81       	ldd	r22, Y+5	; 0x05
     ff0:	7e 81       	ldd	r23, Y+6	; 0x06
     ff2:	62 30       	cpi	r22, 0x02	; 2
     ff4:	71 05       	cpc	r23, r1
     ff6:	09 f4       	brne	.+2      	; 0xffa <DIO_enumSetPinDirection+0x66>
     ff8:	59 c0       	rjmp	.+178    	; 0x10ac <DIO_enumSetPinDirection+0x118>
     ffa:	8d 81       	ldd	r24, Y+5	; 0x05
     ffc:	9e 81       	ldd	r25, Y+6	; 0x06
     ffe:	83 30       	cpi	r24, 0x03	; 3
    1000:	91 05       	cpc	r25, r1
    1002:	09 f4       	brne	.+2      	; 0x1006 <DIO_enumSetPinDirection+0x72>
    1004:	7c c0       	rjmp	.+248    	; 0x10fe <DIO_enumSetPinDirection+0x16a>
    1006:	a3 c0       	rjmp	.+326    	; 0x114e <DIO_enumSetPinDirection+0x1ba>
		{
			case DIO_PORTA:
				CLEAR_BIT(DDRA,Copy_u8PinID);
    1008:	aa e3       	ldi	r26, 0x3A	; 58
    100a:	b0 e0       	ldi	r27, 0x00	; 0
    100c:	ea e3       	ldi	r30, 0x3A	; 58
    100e:	f0 e0       	ldi	r31, 0x00	; 0
    1010:	80 81       	ld	r24, Z
    1012:	48 2f       	mov	r20, r24
    1014:	8b 81       	ldd	r24, Y+3	; 0x03
    1016:	28 2f       	mov	r18, r24
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	81 e0       	ldi	r24, 0x01	; 1
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <DIO_enumSetPinDirection+0x90>
    1020:	88 0f       	add	r24, r24
    1022:	99 1f       	adc	r25, r25
    1024:	2a 95       	dec	r18
    1026:	e2 f7       	brpl	.-8      	; 0x1020 <DIO_enumSetPinDirection+0x8c>
    1028:	80 95       	com	r24
    102a:	84 23       	and	r24, r20
    102c:	8c 93       	st	X, r24
				DDRA |= (Copy_u8Direction << Copy_u8PinID);
    102e:	aa e3       	ldi	r26, 0x3A	; 58
    1030:	b0 e0       	ldi	r27, 0x00	; 0
    1032:	ea e3       	ldi	r30, 0x3A	; 58
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	80 81       	ld	r24, Z
    1038:	48 2f       	mov	r20, r24
    103a:	8c 81       	ldd	r24, Y+4	; 0x04
    103c:	28 2f       	mov	r18, r24
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	8b 81       	ldd	r24, Y+3	; 0x03
    1042:	88 2f       	mov	r24, r24
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	b9 01       	movw	r22, r18
    1048:	02 c0       	rjmp	.+4      	; 0x104e <DIO_enumSetPinDirection+0xba>
    104a:	66 0f       	add	r22, r22
    104c:	77 1f       	adc	r23, r23
    104e:	8a 95       	dec	r24
    1050:	e2 f7       	brpl	.-8      	; 0x104a <DIO_enumSetPinDirection+0xb6>
    1052:	cb 01       	movw	r24, r22
    1054:	84 2b       	or	r24, r20
    1056:	8c 93       	st	X, r24
    1058:	7a c0       	rjmp	.+244    	; 0x114e <DIO_enumSetPinDirection+0x1ba>
				break;
			case DIO_PORTB:
				CLEAR_BIT(DDRB,Copy_u8PinID);
    105a:	a7 e3       	ldi	r26, 0x37	; 55
    105c:	b0 e0       	ldi	r27, 0x00	; 0
    105e:	e7 e3       	ldi	r30, 0x37	; 55
    1060:	f0 e0       	ldi	r31, 0x00	; 0
    1062:	80 81       	ld	r24, Z
    1064:	48 2f       	mov	r20, r24
    1066:	8b 81       	ldd	r24, Y+3	; 0x03
    1068:	28 2f       	mov	r18, r24
    106a:	30 e0       	ldi	r19, 0x00	; 0
    106c:	81 e0       	ldi	r24, 0x01	; 1
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	02 c0       	rjmp	.+4      	; 0x1076 <DIO_enumSetPinDirection+0xe2>
    1072:	88 0f       	add	r24, r24
    1074:	99 1f       	adc	r25, r25
    1076:	2a 95       	dec	r18
    1078:	e2 f7       	brpl	.-8      	; 0x1072 <DIO_enumSetPinDirection+0xde>
    107a:	80 95       	com	r24
    107c:	84 23       	and	r24, r20
    107e:	8c 93       	st	X, r24
				DDRB |= (Copy_u8Direction << Copy_u8PinID);
    1080:	a7 e3       	ldi	r26, 0x37	; 55
    1082:	b0 e0       	ldi	r27, 0x00	; 0
    1084:	e7 e3       	ldi	r30, 0x37	; 55
    1086:	f0 e0       	ldi	r31, 0x00	; 0
    1088:	80 81       	ld	r24, Z
    108a:	48 2f       	mov	r20, r24
    108c:	8c 81       	ldd	r24, Y+4	; 0x04
    108e:	28 2f       	mov	r18, r24
    1090:	30 e0       	ldi	r19, 0x00	; 0
    1092:	8b 81       	ldd	r24, Y+3	; 0x03
    1094:	88 2f       	mov	r24, r24
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	b9 01       	movw	r22, r18
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <DIO_enumSetPinDirection+0x10c>
    109c:	66 0f       	add	r22, r22
    109e:	77 1f       	adc	r23, r23
    10a0:	8a 95       	dec	r24
    10a2:	e2 f7       	brpl	.-8      	; 0x109c <DIO_enumSetPinDirection+0x108>
    10a4:	cb 01       	movw	r24, r22
    10a6:	84 2b       	or	r24, r20
    10a8:	8c 93       	st	X, r24
    10aa:	51 c0       	rjmp	.+162    	; 0x114e <DIO_enumSetPinDirection+0x1ba>
				break;
			case DIO_PORTC:
				CLEAR_BIT(DDRC,Copy_u8PinID);
    10ac:	a4 e3       	ldi	r26, 0x34	; 52
    10ae:	b0 e0       	ldi	r27, 0x00	; 0
    10b0:	e4 e3       	ldi	r30, 0x34	; 52
    10b2:	f0 e0       	ldi	r31, 0x00	; 0
    10b4:	80 81       	ld	r24, Z
    10b6:	48 2f       	mov	r20, r24
    10b8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ba:	28 2f       	mov	r18, r24
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	81 e0       	ldi	r24, 0x01	; 1
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	02 c0       	rjmp	.+4      	; 0x10c8 <DIO_enumSetPinDirection+0x134>
    10c4:	88 0f       	add	r24, r24
    10c6:	99 1f       	adc	r25, r25
    10c8:	2a 95       	dec	r18
    10ca:	e2 f7       	brpl	.-8      	; 0x10c4 <DIO_enumSetPinDirection+0x130>
    10cc:	80 95       	com	r24
    10ce:	84 23       	and	r24, r20
    10d0:	8c 93       	st	X, r24
				DDRC |= (Copy_u8Direction << Copy_u8PinID);
    10d2:	a4 e3       	ldi	r26, 0x34	; 52
    10d4:	b0 e0       	ldi	r27, 0x00	; 0
    10d6:	e4 e3       	ldi	r30, 0x34	; 52
    10d8:	f0 e0       	ldi	r31, 0x00	; 0
    10da:	80 81       	ld	r24, Z
    10dc:	48 2f       	mov	r20, r24
    10de:	8c 81       	ldd	r24, Y+4	; 0x04
    10e0:	28 2f       	mov	r18, r24
    10e2:	30 e0       	ldi	r19, 0x00	; 0
    10e4:	8b 81       	ldd	r24, Y+3	; 0x03
    10e6:	88 2f       	mov	r24, r24
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	b9 01       	movw	r22, r18
    10ec:	02 c0       	rjmp	.+4      	; 0x10f2 <DIO_enumSetPinDirection+0x15e>
    10ee:	66 0f       	add	r22, r22
    10f0:	77 1f       	adc	r23, r23
    10f2:	8a 95       	dec	r24
    10f4:	e2 f7       	brpl	.-8      	; 0x10ee <DIO_enumSetPinDirection+0x15a>
    10f6:	cb 01       	movw	r24, r22
    10f8:	84 2b       	or	r24, r20
    10fa:	8c 93       	st	X, r24
    10fc:	28 c0       	rjmp	.+80     	; 0x114e <DIO_enumSetPinDirection+0x1ba>
				break;
			case DIO_PORTD:
				CLEAR_BIT(DDRD,Copy_u8PinID);
    10fe:	a1 e3       	ldi	r26, 0x31	; 49
    1100:	b0 e0       	ldi	r27, 0x00	; 0
    1102:	e1 e3       	ldi	r30, 0x31	; 49
    1104:	f0 e0       	ldi	r31, 0x00	; 0
    1106:	80 81       	ld	r24, Z
    1108:	48 2f       	mov	r20, r24
    110a:	8b 81       	ldd	r24, Y+3	; 0x03
    110c:	28 2f       	mov	r18, r24
    110e:	30 e0       	ldi	r19, 0x00	; 0
    1110:	81 e0       	ldi	r24, 0x01	; 1
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	02 c0       	rjmp	.+4      	; 0x111a <DIO_enumSetPinDirection+0x186>
    1116:	88 0f       	add	r24, r24
    1118:	99 1f       	adc	r25, r25
    111a:	2a 95       	dec	r18
    111c:	e2 f7       	brpl	.-8      	; 0x1116 <DIO_enumSetPinDirection+0x182>
    111e:	80 95       	com	r24
    1120:	84 23       	and	r24, r20
    1122:	8c 93       	st	X, r24
				DDRD |= (Copy_u8Direction << Copy_u8PinID);
    1124:	a1 e3       	ldi	r26, 0x31	; 49
    1126:	b0 e0       	ldi	r27, 0x00	; 0
    1128:	e1 e3       	ldi	r30, 0x31	; 49
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	80 81       	ld	r24, Z
    112e:	48 2f       	mov	r20, r24
    1130:	8c 81       	ldd	r24, Y+4	; 0x04
    1132:	28 2f       	mov	r18, r24
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	8b 81       	ldd	r24, Y+3	; 0x03
    1138:	88 2f       	mov	r24, r24
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	b9 01       	movw	r22, r18
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <DIO_enumSetPinDirection+0x1b0>
    1140:	66 0f       	add	r22, r22
    1142:	77 1f       	adc	r23, r23
    1144:	8a 95       	dec	r24
    1146:	e2 f7       	brpl	.-8      	; 0x1140 <DIO_enumSetPinDirection+0x1ac>
    1148:	cb 01       	movw	r24, r22
    114a:	84 2b       	or	r24, r20
    114c:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    114e:	81 e0       	ldi	r24, 0x01	; 1
    1150:	89 83       	std	Y+1, r24	; 0x01
    1152:	02 c0       	rjmp	.+4      	; 0x1158 <DIO_enumSetPinDirection+0x1c4>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    1154:	83 e0       	ldi	r24, 0x03	; 3
    1156:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    1158:	89 81       	ldd	r24, Y+1	; 0x01
}
    115a:	26 96       	adiw	r28, 0x06	; 6
    115c:	0f b6       	in	r0, 0x3f	; 63
    115e:	f8 94       	cli
    1160:	de bf       	out	0x3e, r29	; 62
    1162:	0f be       	out	0x3f, r0	; 63
    1164:	cd bf       	out	0x3d, r28	; 61
    1166:	cf 91       	pop	r28
    1168:	df 91       	pop	r29
    116a:	08 95       	ret

0000116c <DIO_enumSetPinValue>:
ES_T DIO_enumSetPinValue (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8Value)
{
    116c:	df 93       	push	r29
    116e:	cf 93       	push	r28
    1170:	00 d0       	rcall	.+0      	; 0x1172 <DIO_enumSetPinValue+0x6>
    1172:	00 d0       	rcall	.+0      	; 0x1174 <DIO_enumSetPinValue+0x8>
    1174:	00 d0       	rcall	.+0      	; 0x1176 <DIO_enumSetPinValue+0xa>
    1176:	cd b7       	in	r28, 0x3d	; 61
    1178:	de b7       	in	r29, 0x3e	; 62
    117a:	8a 83       	std	Y+2, r24	; 0x02
    117c:	6b 83       	std	Y+3, r22	; 0x03
    117e:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    1180:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7&&Copy_u8Value<=OUTPUT)
    1182:	8a 81       	ldd	r24, Y+2	; 0x02
    1184:	84 30       	cpi	r24, 0x04	; 4
    1186:	08 f0       	brcs	.+2      	; 0x118a <DIO_enumSetPinValue+0x1e>
    1188:	d1 c0       	rjmp	.+418    	; 0x132c <DIO_enumSetPinValue+0x1c0>
    118a:	8b 81       	ldd	r24, Y+3	; 0x03
    118c:	88 30       	cpi	r24, 0x08	; 8
    118e:	08 f0       	brcs	.+2      	; 0x1192 <DIO_enumSetPinValue+0x26>
    1190:	cd c0       	rjmp	.+410    	; 0x132c <DIO_enumSetPinValue+0x1c0>
    1192:	8c 81       	ldd	r24, Y+4	; 0x04
    1194:	82 30       	cpi	r24, 0x02	; 2
    1196:	08 f0       	brcs	.+2      	; 0x119a <DIO_enumSetPinValue+0x2e>
    1198:	c9 c0       	rjmp	.+402    	; 0x132c <DIO_enumSetPinValue+0x1c0>
	{
		switch(Copy_u8PortID)
    119a:	8a 81       	ldd	r24, Y+2	; 0x02
    119c:	28 2f       	mov	r18, r24
    119e:	30 e0       	ldi	r19, 0x00	; 0
    11a0:	3e 83       	std	Y+6, r19	; 0x06
    11a2:	2d 83       	std	Y+5, r18	; 0x05
    11a4:	6d 81       	ldd	r22, Y+5	; 0x05
    11a6:	7e 81       	ldd	r23, Y+6	; 0x06
    11a8:	61 30       	cpi	r22, 0x01	; 1
    11aa:	71 05       	cpc	r23, r1
    11ac:	09 f4       	brne	.+2      	; 0x11b0 <DIO_enumSetPinValue+0x44>
    11ae:	41 c0       	rjmp	.+130    	; 0x1232 <DIO_enumSetPinValue+0xc6>
    11b0:	8d 81       	ldd	r24, Y+5	; 0x05
    11b2:	9e 81       	ldd	r25, Y+6	; 0x06
    11b4:	82 30       	cpi	r24, 0x02	; 2
    11b6:	91 05       	cpc	r25, r1
    11b8:	34 f4       	brge	.+12     	; 0x11c6 <DIO_enumSetPinValue+0x5a>
    11ba:	2d 81       	ldd	r18, Y+5	; 0x05
    11bc:	3e 81       	ldd	r19, Y+6	; 0x06
    11be:	21 15       	cp	r18, r1
    11c0:	31 05       	cpc	r19, r1
    11c2:	71 f0       	breq	.+28     	; 0x11e0 <DIO_enumSetPinValue+0x74>
    11c4:	b0 c0       	rjmp	.+352    	; 0x1326 <DIO_enumSetPinValue+0x1ba>
    11c6:	6d 81       	ldd	r22, Y+5	; 0x05
    11c8:	7e 81       	ldd	r23, Y+6	; 0x06
    11ca:	62 30       	cpi	r22, 0x02	; 2
    11cc:	71 05       	cpc	r23, r1
    11ce:	09 f4       	brne	.+2      	; 0x11d2 <DIO_enumSetPinValue+0x66>
    11d0:	59 c0       	rjmp	.+178    	; 0x1284 <DIO_enumSetPinValue+0x118>
    11d2:	8d 81       	ldd	r24, Y+5	; 0x05
    11d4:	9e 81       	ldd	r25, Y+6	; 0x06
    11d6:	83 30       	cpi	r24, 0x03	; 3
    11d8:	91 05       	cpc	r25, r1
    11da:	09 f4       	brne	.+2      	; 0x11de <DIO_enumSetPinValue+0x72>
    11dc:	7c c0       	rjmp	.+248    	; 0x12d6 <DIO_enumSetPinValue+0x16a>
    11de:	a3 c0       	rjmp	.+326    	; 0x1326 <DIO_enumSetPinValue+0x1ba>
		{
			case DIO_PORTA:
				CLEAR_BIT(PORTA,Copy_u8PinID);
    11e0:	ab e3       	ldi	r26, 0x3B	; 59
    11e2:	b0 e0       	ldi	r27, 0x00	; 0
    11e4:	eb e3       	ldi	r30, 0x3B	; 59
    11e6:	f0 e0       	ldi	r31, 0x00	; 0
    11e8:	80 81       	ld	r24, Z
    11ea:	48 2f       	mov	r20, r24
    11ec:	8b 81       	ldd	r24, Y+3	; 0x03
    11ee:	28 2f       	mov	r18, r24
    11f0:	30 e0       	ldi	r19, 0x00	; 0
    11f2:	81 e0       	ldi	r24, 0x01	; 1
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	02 c0       	rjmp	.+4      	; 0x11fc <DIO_enumSetPinValue+0x90>
    11f8:	88 0f       	add	r24, r24
    11fa:	99 1f       	adc	r25, r25
    11fc:	2a 95       	dec	r18
    11fe:	e2 f7       	brpl	.-8      	; 0x11f8 <DIO_enumSetPinValue+0x8c>
    1200:	80 95       	com	r24
    1202:	84 23       	and	r24, r20
    1204:	8c 93       	st	X, r24
				PORTA |= (Copy_u8Value << Copy_u8PinID);
    1206:	ab e3       	ldi	r26, 0x3B	; 59
    1208:	b0 e0       	ldi	r27, 0x00	; 0
    120a:	eb e3       	ldi	r30, 0x3B	; 59
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	80 81       	ld	r24, Z
    1210:	48 2f       	mov	r20, r24
    1212:	8c 81       	ldd	r24, Y+4	; 0x04
    1214:	28 2f       	mov	r18, r24
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	8b 81       	ldd	r24, Y+3	; 0x03
    121a:	88 2f       	mov	r24, r24
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	b9 01       	movw	r22, r18
    1220:	02 c0       	rjmp	.+4      	; 0x1226 <DIO_enumSetPinValue+0xba>
    1222:	66 0f       	add	r22, r22
    1224:	77 1f       	adc	r23, r23
    1226:	8a 95       	dec	r24
    1228:	e2 f7       	brpl	.-8      	; 0x1222 <DIO_enumSetPinValue+0xb6>
    122a:	cb 01       	movw	r24, r22
    122c:	84 2b       	or	r24, r20
    122e:	8c 93       	st	X, r24
    1230:	7a c0       	rjmp	.+244    	; 0x1326 <DIO_enumSetPinValue+0x1ba>
				break;
			case DIO_PORTB:
				CLEAR_BIT(PORTB,Copy_u8PinID);
    1232:	a8 e3       	ldi	r26, 0x38	; 56
    1234:	b0 e0       	ldi	r27, 0x00	; 0
    1236:	e8 e3       	ldi	r30, 0x38	; 56
    1238:	f0 e0       	ldi	r31, 0x00	; 0
    123a:	80 81       	ld	r24, Z
    123c:	48 2f       	mov	r20, r24
    123e:	8b 81       	ldd	r24, Y+3	; 0x03
    1240:	28 2f       	mov	r18, r24
    1242:	30 e0       	ldi	r19, 0x00	; 0
    1244:	81 e0       	ldi	r24, 0x01	; 1
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	02 c0       	rjmp	.+4      	; 0x124e <DIO_enumSetPinValue+0xe2>
    124a:	88 0f       	add	r24, r24
    124c:	99 1f       	adc	r25, r25
    124e:	2a 95       	dec	r18
    1250:	e2 f7       	brpl	.-8      	; 0x124a <DIO_enumSetPinValue+0xde>
    1252:	80 95       	com	r24
    1254:	84 23       	and	r24, r20
    1256:	8c 93       	st	X, r24
				PORTB |= (Copy_u8Value << Copy_u8PinID);
    1258:	a8 e3       	ldi	r26, 0x38	; 56
    125a:	b0 e0       	ldi	r27, 0x00	; 0
    125c:	e8 e3       	ldi	r30, 0x38	; 56
    125e:	f0 e0       	ldi	r31, 0x00	; 0
    1260:	80 81       	ld	r24, Z
    1262:	48 2f       	mov	r20, r24
    1264:	8c 81       	ldd	r24, Y+4	; 0x04
    1266:	28 2f       	mov	r18, r24
    1268:	30 e0       	ldi	r19, 0x00	; 0
    126a:	8b 81       	ldd	r24, Y+3	; 0x03
    126c:	88 2f       	mov	r24, r24
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	b9 01       	movw	r22, r18
    1272:	02 c0       	rjmp	.+4      	; 0x1278 <DIO_enumSetPinValue+0x10c>
    1274:	66 0f       	add	r22, r22
    1276:	77 1f       	adc	r23, r23
    1278:	8a 95       	dec	r24
    127a:	e2 f7       	brpl	.-8      	; 0x1274 <DIO_enumSetPinValue+0x108>
    127c:	cb 01       	movw	r24, r22
    127e:	84 2b       	or	r24, r20
    1280:	8c 93       	st	X, r24
    1282:	51 c0       	rjmp	.+162    	; 0x1326 <DIO_enumSetPinValue+0x1ba>
				break;
			case DIO_PORTC:
				CLEAR_BIT(PORTC,Copy_u8PinID);
    1284:	a5 e3       	ldi	r26, 0x35	; 53
    1286:	b0 e0       	ldi	r27, 0x00	; 0
    1288:	e5 e3       	ldi	r30, 0x35	; 53
    128a:	f0 e0       	ldi	r31, 0x00	; 0
    128c:	80 81       	ld	r24, Z
    128e:	48 2f       	mov	r20, r24
    1290:	8b 81       	ldd	r24, Y+3	; 0x03
    1292:	28 2f       	mov	r18, r24
    1294:	30 e0       	ldi	r19, 0x00	; 0
    1296:	81 e0       	ldi	r24, 0x01	; 1
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	02 c0       	rjmp	.+4      	; 0x12a0 <DIO_enumSetPinValue+0x134>
    129c:	88 0f       	add	r24, r24
    129e:	99 1f       	adc	r25, r25
    12a0:	2a 95       	dec	r18
    12a2:	e2 f7       	brpl	.-8      	; 0x129c <DIO_enumSetPinValue+0x130>
    12a4:	80 95       	com	r24
    12a6:	84 23       	and	r24, r20
    12a8:	8c 93       	st	X, r24
				PORTC |= (Copy_u8Value << Copy_u8PinID);
    12aa:	a5 e3       	ldi	r26, 0x35	; 53
    12ac:	b0 e0       	ldi	r27, 0x00	; 0
    12ae:	e5 e3       	ldi	r30, 0x35	; 53
    12b0:	f0 e0       	ldi	r31, 0x00	; 0
    12b2:	80 81       	ld	r24, Z
    12b4:	48 2f       	mov	r20, r24
    12b6:	8c 81       	ldd	r24, Y+4	; 0x04
    12b8:	28 2f       	mov	r18, r24
    12ba:	30 e0       	ldi	r19, 0x00	; 0
    12bc:	8b 81       	ldd	r24, Y+3	; 0x03
    12be:	88 2f       	mov	r24, r24
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	b9 01       	movw	r22, r18
    12c4:	02 c0       	rjmp	.+4      	; 0x12ca <DIO_enumSetPinValue+0x15e>
    12c6:	66 0f       	add	r22, r22
    12c8:	77 1f       	adc	r23, r23
    12ca:	8a 95       	dec	r24
    12cc:	e2 f7       	brpl	.-8      	; 0x12c6 <DIO_enumSetPinValue+0x15a>
    12ce:	cb 01       	movw	r24, r22
    12d0:	84 2b       	or	r24, r20
    12d2:	8c 93       	st	X, r24
    12d4:	28 c0       	rjmp	.+80     	; 0x1326 <DIO_enumSetPinValue+0x1ba>
				break;
			case DIO_PORTD:
				CLEAR_BIT(PORTD,Copy_u8PinID);
    12d6:	a2 e3       	ldi	r26, 0x32	; 50
    12d8:	b0 e0       	ldi	r27, 0x00	; 0
    12da:	e2 e3       	ldi	r30, 0x32	; 50
    12dc:	f0 e0       	ldi	r31, 0x00	; 0
    12de:	80 81       	ld	r24, Z
    12e0:	48 2f       	mov	r20, r24
    12e2:	8b 81       	ldd	r24, Y+3	; 0x03
    12e4:	28 2f       	mov	r18, r24
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	81 e0       	ldi	r24, 0x01	; 1
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	02 c0       	rjmp	.+4      	; 0x12f2 <DIO_enumSetPinValue+0x186>
    12ee:	88 0f       	add	r24, r24
    12f0:	99 1f       	adc	r25, r25
    12f2:	2a 95       	dec	r18
    12f4:	e2 f7       	brpl	.-8      	; 0x12ee <DIO_enumSetPinValue+0x182>
    12f6:	80 95       	com	r24
    12f8:	84 23       	and	r24, r20
    12fa:	8c 93       	st	X, r24
				PORTD |= (Copy_u8Value << Copy_u8PinID);
    12fc:	a2 e3       	ldi	r26, 0x32	; 50
    12fe:	b0 e0       	ldi	r27, 0x00	; 0
    1300:	e2 e3       	ldi	r30, 0x32	; 50
    1302:	f0 e0       	ldi	r31, 0x00	; 0
    1304:	80 81       	ld	r24, Z
    1306:	48 2f       	mov	r20, r24
    1308:	8c 81       	ldd	r24, Y+4	; 0x04
    130a:	28 2f       	mov	r18, r24
    130c:	30 e0       	ldi	r19, 0x00	; 0
    130e:	8b 81       	ldd	r24, Y+3	; 0x03
    1310:	88 2f       	mov	r24, r24
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	b9 01       	movw	r22, r18
    1316:	02 c0       	rjmp	.+4      	; 0x131c <DIO_enumSetPinValue+0x1b0>
    1318:	66 0f       	add	r22, r22
    131a:	77 1f       	adc	r23, r23
    131c:	8a 95       	dec	r24
    131e:	e2 f7       	brpl	.-8      	; 0x1318 <DIO_enumSetPinValue+0x1ac>
    1320:	cb 01       	movw	r24, r22
    1322:	84 2b       	or	r24, r20
    1324:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    1326:	81 e0       	ldi	r24, 0x01	; 1
    1328:	89 83       	std	Y+1, r24	; 0x01
    132a:	02 c0       	rjmp	.+4      	; 0x1330 <DIO_enumSetPinValue+0x1c4>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    132c:	83 e0       	ldi	r24, 0x03	; 3
    132e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    1330:	89 81       	ldd	r24, Y+1	; 0x01
}
    1332:	26 96       	adiw	r28, 0x06	; 6
    1334:	0f b6       	in	r0, 0x3f	; 63
    1336:	f8 94       	cli
    1338:	de bf       	out	0x3e, r29	; 62
    133a:	0f be       	out	0x3f, r0	; 63
    133c:	cd bf       	out	0x3d, r28	; 61
    133e:	cf 91       	pop	r28
    1340:	df 91       	pop	r29
    1342:	08 95       	ret

00001344 <DIO_enumTogglePinDirection>:
ES_T DIO_enumTogglePinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID)
{
    1344:	df 93       	push	r29
    1346:	cf 93       	push	r28
    1348:	00 d0       	rcall	.+0      	; 0x134a <DIO_enumTogglePinDirection+0x6>
    134a:	00 d0       	rcall	.+0      	; 0x134c <DIO_enumTogglePinDirection+0x8>
    134c:	0f 92       	push	r0
    134e:	cd b7       	in	r28, 0x3d	; 61
    1350:	de b7       	in	r29, 0x3e	; 62
    1352:	8a 83       	std	Y+2, r24	; 0x02
    1354:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    1356:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
    1358:	8a 81       	ldd	r24, Y+2	; 0x02
    135a:	84 30       	cpi	r24, 0x04	; 4
    135c:	08 f0       	brcs	.+2      	; 0x1360 <DIO_enumTogglePinDirection+0x1c>
    135e:	75 c0       	rjmp	.+234    	; 0x144a <DIO_enumTogglePinDirection+0x106>
    1360:	8b 81       	ldd	r24, Y+3	; 0x03
    1362:	88 30       	cpi	r24, 0x08	; 8
    1364:	08 f0       	brcs	.+2      	; 0x1368 <DIO_enumTogglePinDirection+0x24>
    1366:	71 c0       	rjmp	.+226    	; 0x144a <DIO_enumTogglePinDirection+0x106>
	{
		switch(Copy_u8PortID)
    1368:	8a 81       	ldd	r24, Y+2	; 0x02
    136a:	28 2f       	mov	r18, r24
    136c:	30 e0       	ldi	r19, 0x00	; 0
    136e:	3d 83       	std	Y+5, r19	; 0x05
    1370:	2c 83       	std	Y+4, r18	; 0x04
    1372:	8c 81       	ldd	r24, Y+4	; 0x04
    1374:	9d 81       	ldd	r25, Y+5	; 0x05
    1376:	81 30       	cpi	r24, 0x01	; 1
    1378:	91 05       	cpc	r25, r1
    137a:	49 f1       	breq	.+82     	; 0x13ce <DIO_enumTogglePinDirection+0x8a>
    137c:	2c 81       	ldd	r18, Y+4	; 0x04
    137e:	3d 81       	ldd	r19, Y+5	; 0x05
    1380:	22 30       	cpi	r18, 0x02	; 2
    1382:	31 05       	cpc	r19, r1
    1384:	2c f4       	brge	.+10     	; 0x1390 <DIO_enumTogglePinDirection+0x4c>
    1386:	8c 81       	ldd	r24, Y+4	; 0x04
    1388:	9d 81       	ldd	r25, Y+5	; 0x05
    138a:	00 97       	sbiw	r24, 0x00	; 0
    138c:	61 f0       	breq	.+24     	; 0x13a6 <DIO_enumTogglePinDirection+0x62>
    138e:	5a c0       	rjmp	.+180    	; 0x1444 <DIO_enumTogglePinDirection+0x100>
    1390:	2c 81       	ldd	r18, Y+4	; 0x04
    1392:	3d 81       	ldd	r19, Y+5	; 0x05
    1394:	22 30       	cpi	r18, 0x02	; 2
    1396:	31 05       	cpc	r19, r1
    1398:	71 f1       	breq	.+92     	; 0x13f6 <DIO_enumTogglePinDirection+0xb2>
    139a:	8c 81       	ldd	r24, Y+4	; 0x04
    139c:	9d 81       	ldd	r25, Y+5	; 0x05
    139e:	83 30       	cpi	r24, 0x03	; 3
    13a0:	91 05       	cpc	r25, r1
    13a2:	e9 f1       	breq	.+122    	; 0x141e <DIO_enumTogglePinDirection+0xda>
    13a4:	4f c0       	rjmp	.+158    	; 0x1444 <DIO_enumTogglePinDirection+0x100>
		{
			case DIO_PORTA:
				TOGGLE_BIT(DDRA,Copy_u8PinID);
    13a6:	aa e3       	ldi	r26, 0x3A	; 58
    13a8:	b0 e0       	ldi	r27, 0x00	; 0
    13aa:	ea e3       	ldi	r30, 0x3A	; 58
    13ac:	f0 e0       	ldi	r31, 0x00	; 0
    13ae:	80 81       	ld	r24, Z
    13b0:	48 2f       	mov	r20, r24
    13b2:	8b 81       	ldd	r24, Y+3	; 0x03
    13b4:	28 2f       	mov	r18, r24
    13b6:	30 e0       	ldi	r19, 0x00	; 0
    13b8:	81 e0       	ldi	r24, 0x01	; 1
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	02 2e       	mov	r0, r18
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <DIO_enumTogglePinDirection+0x80>
    13c0:	88 0f       	add	r24, r24
    13c2:	99 1f       	adc	r25, r25
    13c4:	0a 94       	dec	r0
    13c6:	e2 f7       	brpl	.-8      	; 0x13c0 <DIO_enumTogglePinDirection+0x7c>
    13c8:	84 27       	eor	r24, r20
    13ca:	8c 93       	st	X, r24
    13cc:	3b c0       	rjmp	.+118    	; 0x1444 <DIO_enumTogglePinDirection+0x100>
				break;
			case DIO_PORTB:
				TOGGLE_BIT(DDRB,Copy_u8PinID);
    13ce:	a7 e3       	ldi	r26, 0x37	; 55
    13d0:	b0 e0       	ldi	r27, 0x00	; 0
    13d2:	e7 e3       	ldi	r30, 0x37	; 55
    13d4:	f0 e0       	ldi	r31, 0x00	; 0
    13d6:	80 81       	ld	r24, Z
    13d8:	48 2f       	mov	r20, r24
    13da:	8b 81       	ldd	r24, Y+3	; 0x03
    13dc:	28 2f       	mov	r18, r24
    13de:	30 e0       	ldi	r19, 0x00	; 0
    13e0:	81 e0       	ldi	r24, 0x01	; 1
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	02 2e       	mov	r0, r18
    13e6:	02 c0       	rjmp	.+4      	; 0x13ec <DIO_enumTogglePinDirection+0xa8>
    13e8:	88 0f       	add	r24, r24
    13ea:	99 1f       	adc	r25, r25
    13ec:	0a 94       	dec	r0
    13ee:	e2 f7       	brpl	.-8      	; 0x13e8 <DIO_enumTogglePinDirection+0xa4>
    13f0:	84 27       	eor	r24, r20
    13f2:	8c 93       	st	X, r24
    13f4:	27 c0       	rjmp	.+78     	; 0x1444 <DIO_enumTogglePinDirection+0x100>
				break;
			case DIO_PORTC:
				TOGGLE_BIT(DDRC,Copy_u8PinID);
    13f6:	a4 e3       	ldi	r26, 0x34	; 52
    13f8:	b0 e0       	ldi	r27, 0x00	; 0
    13fa:	e4 e3       	ldi	r30, 0x34	; 52
    13fc:	f0 e0       	ldi	r31, 0x00	; 0
    13fe:	80 81       	ld	r24, Z
    1400:	48 2f       	mov	r20, r24
    1402:	8b 81       	ldd	r24, Y+3	; 0x03
    1404:	28 2f       	mov	r18, r24
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	81 e0       	ldi	r24, 0x01	; 1
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	02 2e       	mov	r0, r18
    140e:	02 c0       	rjmp	.+4      	; 0x1414 <DIO_enumTogglePinDirection+0xd0>
    1410:	88 0f       	add	r24, r24
    1412:	99 1f       	adc	r25, r25
    1414:	0a 94       	dec	r0
    1416:	e2 f7       	brpl	.-8      	; 0x1410 <DIO_enumTogglePinDirection+0xcc>
    1418:	84 27       	eor	r24, r20
    141a:	8c 93       	st	X, r24
    141c:	13 c0       	rjmp	.+38     	; 0x1444 <DIO_enumTogglePinDirection+0x100>
				break;
			case DIO_PORTD:
				TOGGLE_BIT(DDRD,Copy_u8PinID);
    141e:	a1 e3       	ldi	r26, 0x31	; 49
    1420:	b0 e0       	ldi	r27, 0x00	; 0
    1422:	e1 e3       	ldi	r30, 0x31	; 49
    1424:	f0 e0       	ldi	r31, 0x00	; 0
    1426:	80 81       	ld	r24, Z
    1428:	48 2f       	mov	r20, r24
    142a:	8b 81       	ldd	r24, Y+3	; 0x03
    142c:	28 2f       	mov	r18, r24
    142e:	30 e0       	ldi	r19, 0x00	; 0
    1430:	81 e0       	ldi	r24, 0x01	; 1
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	02 2e       	mov	r0, r18
    1436:	02 c0       	rjmp	.+4      	; 0x143c <DIO_enumTogglePinDirection+0xf8>
    1438:	88 0f       	add	r24, r24
    143a:	99 1f       	adc	r25, r25
    143c:	0a 94       	dec	r0
    143e:	e2 f7       	brpl	.-8      	; 0x1438 <DIO_enumTogglePinDirection+0xf4>
    1440:	84 27       	eor	r24, r20
    1442:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    1444:	81 e0       	ldi	r24, 0x01	; 1
    1446:	89 83       	std	Y+1, r24	; 0x01
    1448:	02 c0       	rjmp	.+4      	; 0x144e <DIO_enumTogglePinDirection+0x10a>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    144a:	83 e0       	ldi	r24, 0x03	; 3
    144c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    144e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1450:	0f 90       	pop	r0
    1452:	0f 90       	pop	r0
    1454:	0f 90       	pop	r0
    1456:	0f 90       	pop	r0
    1458:	0f 90       	pop	r0
    145a:	cf 91       	pop	r28
    145c:	df 91       	pop	r29
    145e:	08 95       	ret

00001460 <DIO_enumTogglePinValue>:
ES_T DIO_enumTogglePinValue (u8 Copy_u8PortID,u8 Copy_u8PinID)
{
    1460:	df 93       	push	r29
    1462:	cf 93       	push	r28
    1464:	00 d0       	rcall	.+0      	; 0x1466 <DIO_enumTogglePinValue+0x6>
    1466:	00 d0       	rcall	.+0      	; 0x1468 <DIO_enumTogglePinValue+0x8>
    1468:	0f 92       	push	r0
    146a:	cd b7       	in	r28, 0x3d	; 61
    146c:	de b7       	in	r29, 0x3e	; 62
    146e:	8a 83       	std	Y+2, r24	; 0x02
    1470:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    1472:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
    1474:	8a 81       	ldd	r24, Y+2	; 0x02
    1476:	84 30       	cpi	r24, 0x04	; 4
    1478:	08 f0       	brcs	.+2      	; 0x147c <DIO_enumTogglePinValue+0x1c>
    147a:	75 c0       	rjmp	.+234    	; 0x1566 <DIO_enumTogglePinValue+0x106>
    147c:	8b 81       	ldd	r24, Y+3	; 0x03
    147e:	88 30       	cpi	r24, 0x08	; 8
    1480:	08 f0       	brcs	.+2      	; 0x1484 <DIO_enumTogglePinValue+0x24>
    1482:	71 c0       	rjmp	.+226    	; 0x1566 <DIO_enumTogglePinValue+0x106>
	{
		switch(Copy_u8PortID)
    1484:	8a 81       	ldd	r24, Y+2	; 0x02
    1486:	28 2f       	mov	r18, r24
    1488:	30 e0       	ldi	r19, 0x00	; 0
    148a:	3d 83       	std	Y+5, r19	; 0x05
    148c:	2c 83       	std	Y+4, r18	; 0x04
    148e:	8c 81       	ldd	r24, Y+4	; 0x04
    1490:	9d 81       	ldd	r25, Y+5	; 0x05
    1492:	81 30       	cpi	r24, 0x01	; 1
    1494:	91 05       	cpc	r25, r1
    1496:	49 f1       	breq	.+82     	; 0x14ea <DIO_enumTogglePinValue+0x8a>
    1498:	2c 81       	ldd	r18, Y+4	; 0x04
    149a:	3d 81       	ldd	r19, Y+5	; 0x05
    149c:	22 30       	cpi	r18, 0x02	; 2
    149e:	31 05       	cpc	r19, r1
    14a0:	2c f4       	brge	.+10     	; 0x14ac <DIO_enumTogglePinValue+0x4c>
    14a2:	8c 81       	ldd	r24, Y+4	; 0x04
    14a4:	9d 81       	ldd	r25, Y+5	; 0x05
    14a6:	00 97       	sbiw	r24, 0x00	; 0
    14a8:	61 f0       	breq	.+24     	; 0x14c2 <DIO_enumTogglePinValue+0x62>
    14aa:	5a c0       	rjmp	.+180    	; 0x1560 <DIO_enumTogglePinValue+0x100>
    14ac:	2c 81       	ldd	r18, Y+4	; 0x04
    14ae:	3d 81       	ldd	r19, Y+5	; 0x05
    14b0:	22 30       	cpi	r18, 0x02	; 2
    14b2:	31 05       	cpc	r19, r1
    14b4:	71 f1       	breq	.+92     	; 0x1512 <DIO_enumTogglePinValue+0xb2>
    14b6:	8c 81       	ldd	r24, Y+4	; 0x04
    14b8:	9d 81       	ldd	r25, Y+5	; 0x05
    14ba:	83 30       	cpi	r24, 0x03	; 3
    14bc:	91 05       	cpc	r25, r1
    14be:	e9 f1       	breq	.+122    	; 0x153a <DIO_enumTogglePinValue+0xda>
    14c0:	4f c0       	rjmp	.+158    	; 0x1560 <DIO_enumTogglePinValue+0x100>
		{
			case DIO_PORTA:
				TOGGLE_BIT(PORTA,Copy_u8PinID);
    14c2:	ab e3       	ldi	r26, 0x3B	; 59
    14c4:	b0 e0       	ldi	r27, 0x00	; 0
    14c6:	eb e3       	ldi	r30, 0x3B	; 59
    14c8:	f0 e0       	ldi	r31, 0x00	; 0
    14ca:	80 81       	ld	r24, Z
    14cc:	48 2f       	mov	r20, r24
    14ce:	8b 81       	ldd	r24, Y+3	; 0x03
    14d0:	28 2f       	mov	r18, r24
    14d2:	30 e0       	ldi	r19, 0x00	; 0
    14d4:	81 e0       	ldi	r24, 0x01	; 1
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	02 2e       	mov	r0, r18
    14da:	02 c0       	rjmp	.+4      	; 0x14e0 <DIO_enumTogglePinValue+0x80>
    14dc:	88 0f       	add	r24, r24
    14de:	99 1f       	adc	r25, r25
    14e0:	0a 94       	dec	r0
    14e2:	e2 f7       	brpl	.-8      	; 0x14dc <DIO_enumTogglePinValue+0x7c>
    14e4:	84 27       	eor	r24, r20
    14e6:	8c 93       	st	X, r24
    14e8:	3b c0       	rjmp	.+118    	; 0x1560 <DIO_enumTogglePinValue+0x100>
				break;
			case DIO_PORTB:
				TOGGLE_BIT(PORTB,Copy_u8PinID);
    14ea:	a8 e3       	ldi	r26, 0x38	; 56
    14ec:	b0 e0       	ldi	r27, 0x00	; 0
    14ee:	e8 e3       	ldi	r30, 0x38	; 56
    14f0:	f0 e0       	ldi	r31, 0x00	; 0
    14f2:	80 81       	ld	r24, Z
    14f4:	48 2f       	mov	r20, r24
    14f6:	8b 81       	ldd	r24, Y+3	; 0x03
    14f8:	28 2f       	mov	r18, r24
    14fa:	30 e0       	ldi	r19, 0x00	; 0
    14fc:	81 e0       	ldi	r24, 0x01	; 1
    14fe:	90 e0       	ldi	r25, 0x00	; 0
    1500:	02 2e       	mov	r0, r18
    1502:	02 c0       	rjmp	.+4      	; 0x1508 <DIO_enumTogglePinValue+0xa8>
    1504:	88 0f       	add	r24, r24
    1506:	99 1f       	adc	r25, r25
    1508:	0a 94       	dec	r0
    150a:	e2 f7       	brpl	.-8      	; 0x1504 <DIO_enumTogglePinValue+0xa4>
    150c:	84 27       	eor	r24, r20
    150e:	8c 93       	st	X, r24
    1510:	27 c0       	rjmp	.+78     	; 0x1560 <DIO_enumTogglePinValue+0x100>
				break;
			case DIO_PORTC:
				TOGGLE_BIT(PORTC,Copy_u8PinID);
    1512:	a5 e3       	ldi	r26, 0x35	; 53
    1514:	b0 e0       	ldi	r27, 0x00	; 0
    1516:	e5 e3       	ldi	r30, 0x35	; 53
    1518:	f0 e0       	ldi	r31, 0x00	; 0
    151a:	80 81       	ld	r24, Z
    151c:	48 2f       	mov	r20, r24
    151e:	8b 81       	ldd	r24, Y+3	; 0x03
    1520:	28 2f       	mov	r18, r24
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	81 e0       	ldi	r24, 0x01	; 1
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	02 2e       	mov	r0, r18
    152a:	02 c0       	rjmp	.+4      	; 0x1530 <DIO_enumTogglePinValue+0xd0>
    152c:	88 0f       	add	r24, r24
    152e:	99 1f       	adc	r25, r25
    1530:	0a 94       	dec	r0
    1532:	e2 f7       	brpl	.-8      	; 0x152c <DIO_enumTogglePinValue+0xcc>
    1534:	84 27       	eor	r24, r20
    1536:	8c 93       	st	X, r24
    1538:	13 c0       	rjmp	.+38     	; 0x1560 <DIO_enumTogglePinValue+0x100>
				break;
			case DIO_PORTD:
				TOGGLE_BIT(PORTD,Copy_u8PinID);
    153a:	a2 e3       	ldi	r26, 0x32	; 50
    153c:	b0 e0       	ldi	r27, 0x00	; 0
    153e:	e2 e3       	ldi	r30, 0x32	; 50
    1540:	f0 e0       	ldi	r31, 0x00	; 0
    1542:	80 81       	ld	r24, Z
    1544:	48 2f       	mov	r20, r24
    1546:	8b 81       	ldd	r24, Y+3	; 0x03
    1548:	28 2f       	mov	r18, r24
    154a:	30 e0       	ldi	r19, 0x00	; 0
    154c:	81 e0       	ldi	r24, 0x01	; 1
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	02 2e       	mov	r0, r18
    1552:	02 c0       	rjmp	.+4      	; 0x1558 <DIO_enumTogglePinValue+0xf8>
    1554:	88 0f       	add	r24, r24
    1556:	99 1f       	adc	r25, r25
    1558:	0a 94       	dec	r0
    155a:	e2 f7       	brpl	.-8      	; 0x1554 <DIO_enumTogglePinValue+0xf4>
    155c:	84 27       	eor	r24, r20
    155e:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    1560:	81 e0       	ldi	r24, 0x01	; 1
    1562:	89 83       	std	Y+1, r24	; 0x01
    1564:	02 c0       	rjmp	.+4      	; 0x156a <DIO_enumTogglePinValue+0x10a>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    1566:	83 e0       	ldi	r24, 0x03	; 3
    1568:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    156a:	89 81       	ldd	r24, Y+1	; 0x01
}
    156c:	0f 90       	pop	r0
    156e:	0f 90       	pop	r0
    1570:	0f 90       	pop	r0
    1572:	0f 90       	pop	r0
    1574:	0f 90       	pop	r0
    1576:	cf 91       	pop	r28
    1578:	df 91       	pop	r29
    157a:	08 95       	ret

0000157c <DIO_enumGetPinDirection>:
ES_T DIO_enumGetPinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 *Copy_pu8Direction)
{
    157c:	df 93       	push	r29
    157e:	cf 93       	push	r28
    1580:	cd b7       	in	r28, 0x3d	; 61
    1582:	de b7       	in	r29, 0x3e	; 62
    1584:	27 97       	sbiw	r28, 0x07	; 7
    1586:	0f b6       	in	r0, 0x3f	; 63
    1588:	f8 94       	cli
    158a:	de bf       	out	0x3e, r29	; 62
    158c:	0f be       	out	0x3f, r0	; 63
    158e:	cd bf       	out	0x3d, r28	; 61
    1590:	8a 83       	std	Y+2, r24	; 0x02
    1592:	6b 83       	std	Y+3, r22	; 0x03
    1594:	5d 83       	std	Y+5, r21	; 0x05
    1596:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    1598:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
    159a:	8a 81       	ldd	r24, Y+2	; 0x02
    159c:	84 30       	cpi	r24, 0x04	; 4
    159e:	08 f0       	brcs	.+2      	; 0x15a2 <DIO_enumGetPinDirection+0x26>
    15a0:	7f c0       	rjmp	.+254    	; 0x16a0 <DIO_enumGetPinDirection+0x124>
    15a2:	8b 81       	ldd	r24, Y+3	; 0x03
    15a4:	88 30       	cpi	r24, 0x08	; 8
    15a6:	08 f0       	brcs	.+2      	; 0x15aa <DIO_enumGetPinDirection+0x2e>
    15a8:	7b c0       	rjmp	.+246    	; 0x16a0 <DIO_enumGetPinDirection+0x124>
		{
			if (Copy_pu8Direction!=NULL)
    15aa:	8c 81       	ldd	r24, Y+4	; 0x04
    15ac:	9d 81       	ldd	r25, Y+5	; 0x05
    15ae:	00 97       	sbiw	r24, 0x00	; 0
    15b0:	09 f4       	brne	.+2      	; 0x15b4 <DIO_enumGetPinDirection+0x38>
    15b2:	73 c0       	rjmp	.+230    	; 0x169a <DIO_enumGetPinDirection+0x11e>
			{
				switch(Copy_u8PortID)
    15b4:	8a 81       	ldd	r24, Y+2	; 0x02
    15b6:	28 2f       	mov	r18, r24
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	3f 83       	std	Y+7, r19	; 0x07
    15bc:	2e 83       	std	Y+6, r18	; 0x06
    15be:	4e 81       	ldd	r20, Y+6	; 0x06
    15c0:	5f 81       	ldd	r21, Y+7	; 0x07
    15c2:	41 30       	cpi	r20, 0x01	; 1
    15c4:	51 05       	cpc	r21, r1
    15c6:	59 f1       	breq	.+86     	; 0x161e <DIO_enumGetPinDirection+0xa2>
    15c8:	8e 81       	ldd	r24, Y+6	; 0x06
    15ca:	9f 81       	ldd	r25, Y+7	; 0x07
    15cc:	82 30       	cpi	r24, 0x02	; 2
    15ce:	91 05       	cpc	r25, r1
    15d0:	34 f4       	brge	.+12     	; 0x15de <DIO_enumGetPinDirection+0x62>
    15d2:	2e 81       	ldd	r18, Y+6	; 0x06
    15d4:	3f 81       	ldd	r19, Y+7	; 0x07
    15d6:	21 15       	cp	r18, r1
    15d8:	31 05       	cpc	r19, r1
    15da:	69 f0       	breq	.+26     	; 0x15f6 <DIO_enumGetPinDirection+0x7a>
    15dc:	5b c0       	rjmp	.+182    	; 0x1694 <DIO_enumGetPinDirection+0x118>
    15de:	4e 81       	ldd	r20, Y+6	; 0x06
    15e0:	5f 81       	ldd	r21, Y+7	; 0x07
    15e2:	42 30       	cpi	r20, 0x02	; 2
    15e4:	51 05       	cpc	r21, r1
    15e6:	79 f1       	breq	.+94     	; 0x1646 <DIO_enumGetPinDirection+0xca>
    15e8:	8e 81       	ldd	r24, Y+6	; 0x06
    15ea:	9f 81       	ldd	r25, Y+7	; 0x07
    15ec:	83 30       	cpi	r24, 0x03	; 3
    15ee:	91 05       	cpc	r25, r1
    15f0:	09 f4       	brne	.+2      	; 0x15f4 <DIO_enumGetPinDirection+0x78>
    15f2:	3d c0       	rjmp	.+122    	; 0x166e <DIO_enumGetPinDirection+0xf2>
    15f4:	4f c0       	rjmp	.+158    	; 0x1694 <DIO_enumGetPinDirection+0x118>
				{
					case DIO_PORTA:
						*Copy_pu8Direction=READ_BIT(DDRA,Copy_u8PinID);
    15f6:	ea e3       	ldi	r30, 0x3A	; 58
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
    15fa:	80 81       	ld	r24, Z
    15fc:	28 2f       	mov	r18, r24
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	8b 81       	ldd	r24, Y+3	; 0x03
    1602:	88 2f       	mov	r24, r24
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	a9 01       	movw	r20, r18
    1608:	02 c0       	rjmp	.+4      	; 0x160e <DIO_enumGetPinDirection+0x92>
    160a:	55 95       	asr	r21
    160c:	47 95       	ror	r20
    160e:	8a 95       	dec	r24
    1610:	e2 f7       	brpl	.-8      	; 0x160a <DIO_enumGetPinDirection+0x8e>
    1612:	ca 01       	movw	r24, r20
    1614:	81 70       	andi	r24, 0x01	; 1
    1616:	ec 81       	ldd	r30, Y+4	; 0x04
    1618:	fd 81       	ldd	r31, Y+5	; 0x05
    161a:	80 83       	st	Z, r24
    161c:	3b c0       	rjmp	.+118    	; 0x1694 <DIO_enumGetPinDirection+0x118>
						break;
					case DIO_PORTB:
						*Copy_pu8Direction=READ_BIT(DDRB,Copy_u8PinID);
    161e:	e7 e3       	ldi	r30, 0x37	; 55
    1620:	f0 e0       	ldi	r31, 0x00	; 0
    1622:	80 81       	ld	r24, Z
    1624:	28 2f       	mov	r18, r24
    1626:	30 e0       	ldi	r19, 0x00	; 0
    1628:	8b 81       	ldd	r24, Y+3	; 0x03
    162a:	88 2f       	mov	r24, r24
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	a9 01       	movw	r20, r18
    1630:	02 c0       	rjmp	.+4      	; 0x1636 <DIO_enumGetPinDirection+0xba>
    1632:	55 95       	asr	r21
    1634:	47 95       	ror	r20
    1636:	8a 95       	dec	r24
    1638:	e2 f7       	brpl	.-8      	; 0x1632 <DIO_enumGetPinDirection+0xb6>
    163a:	ca 01       	movw	r24, r20
    163c:	81 70       	andi	r24, 0x01	; 1
    163e:	ec 81       	ldd	r30, Y+4	; 0x04
    1640:	fd 81       	ldd	r31, Y+5	; 0x05
    1642:	80 83       	st	Z, r24
    1644:	27 c0       	rjmp	.+78     	; 0x1694 <DIO_enumGetPinDirection+0x118>
						break;
					case DIO_PORTC:
						*Copy_pu8Direction=READ_BIT(DDRC,Copy_u8PinID);
    1646:	e4 e3       	ldi	r30, 0x34	; 52
    1648:	f0 e0       	ldi	r31, 0x00	; 0
    164a:	80 81       	ld	r24, Z
    164c:	28 2f       	mov	r18, r24
    164e:	30 e0       	ldi	r19, 0x00	; 0
    1650:	8b 81       	ldd	r24, Y+3	; 0x03
    1652:	88 2f       	mov	r24, r24
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	a9 01       	movw	r20, r18
    1658:	02 c0       	rjmp	.+4      	; 0x165e <DIO_enumGetPinDirection+0xe2>
    165a:	55 95       	asr	r21
    165c:	47 95       	ror	r20
    165e:	8a 95       	dec	r24
    1660:	e2 f7       	brpl	.-8      	; 0x165a <DIO_enumGetPinDirection+0xde>
    1662:	ca 01       	movw	r24, r20
    1664:	81 70       	andi	r24, 0x01	; 1
    1666:	ec 81       	ldd	r30, Y+4	; 0x04
    1668:	fd 81       	ldd	r31, Y+5	; 0x05
    166a:	80 83       	st	Z, r24
    166c:	13 c0       	rjmp	.+38     	; 0x1694 <DIO_enumGetPinDirection+0x118>
						break;
					case DIO_PORTD:
						*Copy_pu8Direction=READ_BIT(DDRD,Copy_u8PinID);
    166e:	e1 e3       	ldi	r30, 0x31	; 49
    1670:	f0 e0       	ldi	r31, 0x00	; 0
    1672:	80 81       	ld	r24, Z
    1674:	28 2f       	mov	r18, r24
    1676:	30 e0       	ldi	r19, 0x00	; 0
    1678:	8b 81       	ldd	r24, Y+3	; 0x03
    167a:	88 2f       	mov	r24, r24
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	a9 01       	movw	r20, r18
    1680:	02 c0       	rjmp	.+4      	; 0x1686 <DIO_enumGetPinDirection+0x10a>
    1682:	55 95       	asr	r21
    1684:	47 95       	ror	r20
    1686:	8a 95       	dec	r24
    1688:	e2 f7       	brpl	.-8      	; 0x1682 <DIO_enumGetPinDirection+0x106>
    168a:	ca 01       	movw	r24, r20
    168c:	81 70       	andi	r24, 0x01	; 1
    168e:	ec 81       	ldd	r30, Y+4	; 0x04
    1690:	fd 81       	ldd	r31, Y+5	; 0x05
    1692:	80 83       	st	Z, r24
						break;
				}
				Local_enumErrorState=ES_OK;
    1694:	81 e0       	ldi	r24, 0x01	; 1
    1696:	89 83       	std	Y+1, r24	; 0x01
    1698:	05 c0       	rjmp	.+10     	; 0x16a4 <DIO_enumGetPinDirection+0x128>
			}
			else
			{
				Local_enumErrorState=ES_NULL_POINTER;
    169a:	82 e0       	ldi	r24, 0x02	; 2
    169c:	89 83       	std	Y+1, r24	; 0x01
    169e:	02 c0       	rjmp	.+4      	; 0x16a4 <DIO_enumGetPinDirection+0x128>
			}
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    16a0:	83 e0       	ldi	r24, 0x03	; 3
    16a2:	89 83       	std	Y+1, r24	; 0x01
		}

	return Local_enumErrorState;
    16a4:	89 81       	ldd	r24, Y+1	; 0x01
}
    16a6:	27 96       	adiw	r28, 0x07	; 7
    16a8:	0f b6       	in	r0, 0x3f	; 63
    16aa:	f8 94       	cli
    16ac:	de bf       	out	0x3e, r29	; 62
    16ae:	0f be       	out	0x3f, r0	; 63
    16b0:	cd bf       	out	0x3d, r28	; 61
    16b2:	cf 91       	pop	r28
    16b4:	df 91       	pop	r29
    16b6:	08 95       	ret

000016b8 <DIO_enumGetPinValue>:
ES_T DIO_enumGetPinValue (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 *Copy_pu8Value)
{
    16b8:	df 93       	push	r29
    16ba:	cf 93       	push	r28
    16bc:	cd b7       	in	r28, 0x3d	; 61
    16be:	de b7       	in	r29, 0x3e	; 62
    16c0:	27 97       	sbiw	r28, 0x07	; 7
    16c2:	0f b6       	in	r0, 0x3f	; 63
    16c4:	f8 94       	cli
    16c6:	de bf       	out	0x3e, r29	; 62
    16c8:	0f be       	out	0x3f, r0	; 63
    16ca:	cd bf       	out	0x3d, r28	; 61
    16cc:	8a 83       	std	Y+2, r24	; 0x02
    16ce:	6b 83       	std	Y+3, r22	; 0x03
    16d0:	5d 83       	std	Y+5, r21	; 0x05
    16d2:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    16d4:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
    16d6:	8a 81       	ldd	r24, Y+2	; 0x02
    16d8:	84 30       	cpi	r24, 0x04	; 4
    16da:	08 f0       	brcs	.+2      	; 0x16de <DIO_enumGetPinValue+0x26>
    16dc:	7f c0       	rjmp	.+254    	; 0x17dc <DIO_enumGetPinValue+0x124>
    16de:	8b 81       	ldd	r24, Y+3	; 0x03
    16e0:	88 30       	cpi	r24, 0x08	; 8
    16e2:	08 f0       	brcs	.+2      	; 0x16e6 <DIO_enumGetPinValue+0x2e>
    16e4:	7b c0       	rjmp	.+246    	; 0x17dc <DIO_enumGetPinValue+0x124>
	{
		if (Copy_pu8Value!=NULL)
    16e6:	8c 81       	ldd	r24, Y+4	; 0x04
    16e8:	9d 81       	ldd	r25, Y+5	; 0x05
    16ea:	00 97       	sbiw	r24, 0x00	; 0
    16ec:	09 f4       	brne	.+2      	; 0x16f0 <DIO_enumGetPinValue+0x38>
    16ee:	73 c0       	rjmp	.+230    	; 0x17d6 <DIO_enumGetPinValue+0x11e>
		{
			switch(Copy_u8PortID)
    16f0:	8a 81       	ldd	r24, Y+2	; 0x02
    16f2:	28 2f       	mov	r18, r24
    16f4:	30 e0       	ldi	r19, 0x00	; 0
    16f6:	3f 83       	std	Y+7, r19	; 0x07
    16f8:	2e 83       	std	Y+6, r18	; 0x06
    16fa:	4e 81       	ldd	r20, Y+6	; 0x06
    16fc:	5f 81       	ldd	r21, Y+7	; 0x07
    16fe:	41 30       	cpi	r20, 0x01	; 1
    1700:	51 05       	cpc	r21, r1
    1702:	59 f1       	breq	.+86     	; 0x175a <DIO_enumGetPinValue+0xa2>
    1704:	8e 81       	ldd	r24, Y+6	; 0x06
    1706:	9f 81       	ldd	r25, Y+7	; 0x07
    1708:	82 30       	cpi	r24, 0x02	; 2
    170a:	91 05       	cpc	r25, r1
    170c:	34 f4       	brge	.+12     	; 0x171a <DIO_enumGetPinValue+0x62>
    170e:	2e 81       	ldd	r18, Y+6	; 0x06
    1710:	3f 81       	ldd	r19, Y+7	; 0x07
    1712:	21 15       	cp	r18, r1
    1714:	31 05       	cpc	r19, r1
    1716:	69 f0       	breq	.+26     	; 0x1732 <DIO_enumGetPinValue+0x7a>
    1718:	5b c0       	rjmp	.+182    	; 0x17d0 <DIO_enumGetPinValue+0x118>
    171a:	4e 81       	ldd	r20, Y+6	; 0x06
    171c:	5f 81       	ldd	r21, Y+7	; 0x07
    171e:	42 30       	cpi	r20, 0x02	; 2
    1720:	51 05       	cpc	r21, r1
    1722:	79 f1       	breq	.+94     	; 0x1782 <DIO_enumGetPinValue+0xca>
    1724:	8e 81       	ldd	r24, Y+6	; 0x06
    1726:	9f 81       	ldd	r25, Y+7	; 0x07
    1728:	83 30       	cpi	r24, 0x03	; 3
    172a:	91 05       	cpc	r25, r1
    172c:	09 f4       	brne	.+2      	; 0x1730 <DIO_enumGetPinValue+0x78>
    172e:	3d c0       	rjmp	.+122    	; 0x17aa <DIO_enumGetPinValue+0xf2>
    1730:	4f c0       	rjmp	.+158    	; 0x17d0 <DIO_enumGetPinValue+0x118>
			{
				case DIO_PORTA:
					*Copy_pu8Value=READ_BIT(PINA,Copy_u8PinID);
    1732:	e9 e3       	ldi	r30, 0x39	; 57
    1734:	f0 e0       	ldi	r31, 0x00	; 0
    1736:	80 81       	ld	r24, Z
    1738:	28 2f       	mov	r18, r24
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	8b 81       	ldd	r24, Y+3	; 0x03
    173e:	88 2f       	mov	r24, r24
    1740:	90 e0       	ldi	r25, 0x00	; 0
    1742:	a9 01       	movw	r20, r18
    1744:	02 c0       	rjmp	.+4      	; 0x174a <DIO_enumGetPinValue+0x92>
    1746:	55 95       	asr	r21
    1748:	47 95       	ror	r20
    174a:	8a 95       	dec	r24
    174c:	e2 f7       	brpl	.-8      	; 0x1746 <DIO_enumGetPinValue+0x8e>
    174e:	ca 01       	movw	r24, r20
    1750:	81 70       	andi	r24, 0x01	; 1
    1752:	ec 81       	ldd	r30, Y+4	; 0x04
    1754:	fd 81       	ldd	r31, Y+5	; 0x05
    1756:	80 83       	st	Z, r24
    1758:	3b c0       	rjmp	.+118    	; 0x17d0 <DIO_enumGetPinValue+0x118>
					break;
				case DIO_PORTB:
					*Copy_pu8Value=READ_BIT(PINB,Copy_u8PinID);
    175a:	e6 e3       	ldi	r30, 0x36	; 54
    175c:	f0 e0       	ldi	r31, 0x00	; 0
    175e:	80 81       	ld	r24, Z
    1760:	28 2f       	mov	r18, r24
    1762:	30 e0       	ldi	r19, 0x00	; 0
    1764:	8b 81       	ldd	r24, Y+3	; 0x03
    1766:	88 2f       	mov	r24, r24
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	a9 01       	movw	r20, r18
    176c:	02 c0       	rjmp	.+4      	; 0x1772 <DIO_enumGetPinValue+0xba>
    176e:	55 95       	asr	r21
    1770:	47 95       	ror	r20
    1772:	8a 95       	dec	r24
    1774:	e2 f7       	brpl	.-8      	; 0x176e <DIO_enumGetPinValue+0xb6>
    1776:	ca 01       	movw	r24, r20
    1778:	81 70       	andi	r24, 0x01	; 1
    177a:	ec 81       	ldd	r30, Y+4	; 0x04
    177c:	fd 81       	ldd	r31, Y+5	; 0x05
    177e:	80 83       	st	Z, r24
    1780:	27 c0       	rjmp	.+78     	; 0x17d0 <DIO_enumGetPinValue+0x118>
					break;
				case DIO_PORTC:
					*Copy_pu8Value=READ_BIT(PINC,Copy_u8PinID);
    1782:	e3 e3       	ldi	r30, 0x33	; 51
    1784:	f0 e0       	ldi	r31, 0x00	; 0
    1786:	80 81       	ld	r24, Z
    1788:	28 2f       	mov	r18, r24
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	8b 81       	ldd	r24, Y+3	; 0x03
    178e:	88 2f       	mov	r24, r24
    1790:	90 e0       	ldi	r25, 0x00	; 0
    1792:	a9 01       	movw	r20, r18
    1794:	02 c0       	rjmp	.+4      	; 0x179a <DIO_enumGetPinValue+0xe2>
    1796:	55 95       	asr	r21
    1798:	47 95       	ror	r20
    179a:	8a 95       	dec	r24
    179c:	e2 f7       	brpl	.-8      	; 0x1796 <DIO_enumGetPinValue+0xde>
    179e:	ca 01       	movw	r24, r20
    17a0:	81 70       	andi	r24, 0x01	; 1
    17a2:	ec 81       	ldd	r30, Y+4	; 0x04
    17a4:	fd 81       	ldd	r31, Y+5	; 0x05
    17a6:	80 83       	st	Z, r24
    17a8:	13 c0       	rjmp	.+38     	; 0x17d0 <DIO_enumGetPinValue+0x118>
					break;
				case DIO_PORTD:
					*Copy_pu8Value=READ_BIT(PIND,Copy_u8PinID);
    17aa:	e0 e3       	ldi	r30, 0x30	; 48
    17ac:	f0 e0       	ldi	r31, 0x00	; 0
    17ae:	80 81       	ld	r24, Z
    17b0:	28 2f       	mov	r18, r24
    17b2:	30 e0       	ldi	r19, 0x00	; 0
    17b4:	8b 81       	ldd	r24, Y+3	; 0x03
    17b6:	88 2f       	mov	r24, r24
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	a9 01       	movw	r20, r18
    17bc:	02 c0       	rjmp	.+4      	; 0x17c2 <DIO_enumGetPinValue+0x10a>
    17be:	55 95       	asr	r21
    17c0:	47 95       	ror	r20
    17c2:	8a 95       	dec	r24
    17c4:	e2 f7       	brpl	.-8      	; 0x17be <DIO_enumGetPinValue+0x106>
    17c6:	ca 01       	movw	r24, r20
    17c8:	81 70       	andi	r24, 0x01	; 1
    17ca:	ec 81       	ldd	r30, Y+4	; 0x04
    17cc:	fd 81       	ldd	r31, Y+5	; 0x05
    17ce:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
    17d0:	81 e0       	ldi	r24, 0x01	; 1
    17d2:	89 83       	std	Y+1, r24	; 0x01
    17d4:	05 c0       	rjmp	.+10     	; 0x17e0 <DIO_enumGetPinValue+0x128>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
    17d6:	82 e0       	ldi	r24, 0x02	; 2
    17d8:	89 83       	std	Y+1, r24	; 0x01
    17da:	02 c0       	rjmp	.+4      	; 0x17e0 <DIO_enumGetPinValue+0x128>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    17dc:	83 e0       	ldi	r24, 0x03	; 3
    17de:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    17e0:	89 81       	ldd	r24, Y+1	; 0x01
}
    17e2:	27 96       	adiw	r28, 0x07	; 7
    17e4:	0f b6       	in	r0, 0x3f	; 63
    17e6:	f8 94       	cli
    17e8:	de bf       	out	0x3e, r29	; 62
    17ea:	0f be       	out	0x3f, r0	; 63
    17ec:	cd bf       	out	0x3d, r28	; 61
    17ee:	cf 91       	pop	r28
    17f0:	df 91       	pop	r29
    17f2:	08 95       	ret

000017f4 <LED_enumInit>:
#include "../include/MCAL/DIO/DIO_int.h"
#include "../include/HAL/LED/LED_priv.h"
#include "../include/HAL/LED/LED_config.h"

ES_T LED_enumInit(LED_T* Copy_pstrLeds)
{
    17f4:	df 93       	push	r29
    17f6:	cf 93       	push	r28
    17f8:	00 d0       	rcall	.+0      	; 0x17fa <LED_enumInit+0x6>
    17fa:	00 d0       	rcall	.+0      	; 0x17fc <LED_enumInit+0x8>
    17fc:	cd b7       	in	r28, 0x3d	; 61
    17fe:	de b7       	in	r29, 0x3e	; 62
    1800:	9c 83       	std	Y+4, r25	; 0x04
    1802:	8b 83       	std	Y+3, r24	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    1804:	1a 82       	std	Y+2, r1	; 0x02

	if (Copy_pstrLeds!=NULL)
    1806:	8b 81       	ldd	r24, Y+3	; 0x03
    1808:	9c 81       	ldd	r25, Y+4	; 0x04
    180a:	00 97       	sbiw	r24, 0x00	; 0
    180c:	09 f4       	brne	.+2      	; 0x1810 <LED_enumInit+0x1c>
    180e:	23 c1       	rjmp	.+582    	; 0x1a56 <LED_enumInit+0x262>
	{
		u8 Local_u8Counter=0;
    1810:	19 82       	std	Y+1, r1	; 0x01
		for (Local_u8Counter=0;Local_u8Counter<LED_NUM;Local_u8Counter++)
    1812:	19 82       	std	Y+1, r1	; 0x01
    1814:	1b c1       	rjmp	.+566    	; 0x1a4c <LED_enumInit+0x258>
		{
			Local_enumErrorState=DIO_enumSetPinDirection (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,OUTPUT);
    1816:	89 81       	ldd	r24, Y+1	; 0x01
    1818:	88 2f       	mov	r24, r24
    181a:	90 e0       	ldi	r25, 0x00	; 0
    181c:	9c 01       	movw	r18, r24
    181e:	22 0f       	add	r18, r18
    1820:	33 1f       	adc	r19, r19
    1822:	22 0f       	add	r18, r18
    1824:	33 1f       	adc	r19, r19
    1826:	8b 81       	ldd	r24, Y+3	; 0x03
    1828:	9c 81       	ldd	r25, Y+4	; 0x04
    182a:	fc 01       	movw	r30, r24
    182c:	e2 0f       	add	r30, r18
    182e:	f3 1f       	adc	r31, r19
    1830:	40 81       	ld	r20, Z
    1832:	89 81       	ldd	r24, Y+1	; 0x01
    1834:	88 2f       	mov	r24, r24
    1836:	90 e0       	ldi	r25, 0x00	; 0
    1838:	9c 01       	movw	r18, r24
    183a:	22 0f       	add	r18, r18
    183c:	33 1f       	adc	r19, r19
    183e:	22 0f       	add	r18, r18
    1840:	33 1f       	adc	r19, r19
    1842:	8b 81       	ldd	r24, Y+3	; 0x03
    1844:	9c 81       	ldd	r25, Y+4	; 0x04
    1846:	fc 01       	movw	r30, r24
    1848:	e2 0f       	add	r30, r18
    184a:	f3 1f       	adc	r31, r19
    184c:	91 81       	ldd	r25, Z+1	; 0x01
    184e:	84 2f       	mov	r24, r20
    1850:	69 2f       	mov	r22, r25
    1852:	41 e0       	ldi	r20, 0x01	; 1
    1854:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    1858:	8a 83       	std	Y+2, r24	; 0x02

			if(Copy_pstrLeds[Local_u8Counter].LED_u8Connection==LED_SINK)
    185a:	89 81       	ldd	r24, Y+1	; 0x01
    185c:	88 2f       	mov	r24, r24
    185e:	90 e0       	ldi	r25, 0x00	; 0
    1860:	9c 01       	movw	r18, r24
    1862:	22 0f       	add	r18, r18
    1864:	33 1f       	adc	r19, r19
    1866:	22 0f       	add	r18, r18
    1868:	33 1f       	adc	r19, r19
    186a:	8b 81       	ldd	r24, Y+3	; 0x03
    186c:	9c 81       	ldd	r25, Y+4	; 0x04
    186e:	fc 01       	movw	r30, r24
    1870:	e2 0f       	add	r30, r18
    1872:	f3 1f       	adc	r31, r19
    1874:	82 81       	ldd	r24, Z+2	; 0x02
    1876:	88 23       	and	r24, r24
    1878:	09 f0       	breq	.+2      	; 0x187c <LED_enumInit+0x88>
    187a:	69 c0       	rjmp	.+210    	; 0x194e <LED_enumInit+0x15a>
			{
				if (Copy_pstrLeds[Local_u8Counter].LED_u8InitState==LED_ON)
    187c:	89 81       	ldd	r24, Y+1	; 0x01
    187e:	88 2f       	mov	r24, r24
    1880:	90 e0       	ldi	r25, 0x00	; 0
    1882:	9c 01       	movw	r18, r24
    1884:	22 0f       	add	r18, r18
    1886:	33 1f       	adc	r19, r19
    1888:	22 0f       	add	r18, r18
    188a:	33 1f       	adc	r19, r19
    188c:	8b 81       	ldd	r24, Y+3	; 0x03
    188e:	9c 81       	ldd	r25, Y+4	; 0x04
    1890:	fc 01       	movw	r30, r24
    1892:	e2 0f       	add	r30, r18
    1894:	f3 1f       	adc	r31, r19
    1896:	83 81       	ldd	r24, Z+3	; 0x03
    1898:	88 23       	and	r24, r24
    189a:	19 f5       	brne	.+70     	; 0x18e2 <LED_enumInit+0xee>
				{
					Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,LOW);
    189c:	89 81       	ldd	r24, Y+1	; 0x01
    189e:	88 2f       	mov	r24, r24
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	9c 01       	movw	r18, r24
    18a4:	22 0f       	add	r18, r18
    18a6:	33 1f       	adc	r19, r19
    18a8:	22 0f       	add	r18, r18
    18aa:	33 1f       	adc	r19, r19
    18ac:	8b 81       	ldd	r24, Y+3	; 0x03
    18ae:	9c 81       	ldd	r25, Y+4	; 0x04
    18b0:	fc 01       	movw	r30, r24
    18b2:	e2 0f       	add	r30, r18
    18b4:	f3 1f       	adc	r31, r19
    18b6:	40 81       	ld	r20, Z
    18b8:	89 81       	ldd	r24, Y+1	; 0x01
    18ba:	88 2f       	mov	r24, r24
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	9c 01       	movw	r18, r24
    18c0:	22 0f       	add	r18, r18
    18c2:	33 1f       	adc	r19, r19
    18c4:	22 0f       	add	r18, r18
    18c6:	33 1f       	adc	r19, r19
    18c8:	8b 81       	ldd	r24, Y+3	; 0x03
    18ca:	9c 81       	ldd	r25, Y+4	; 0x04
    18cc:	fc 01       	movw	r30, r24
    18ce:	e2 0f       	add	r30, r18
    18d0:	f3 1f       	adc	r31, r19
    18d2:	91 81       	ldd	r25, Z+1	; 0x01
    18d4:	84 2f       	mov	r24, r20
    18d6:	69 2f       	mov	r22, r25
    18d8:	40 e0       	ldi	r20, 0x00	; 0
    18da:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    18de:	8a 83       	std	Y+2, r24	; 0x02
    18e0:	b2 c0       	rjmp	.+356    	; 0x1a46 <LED_enumInit+0x252>
				}
				else if (Copy_pstrLeds[Local_u8Counter].LED_u8InitState==LED_OFF)
    18e2:	89 81       	ldd	r24, Y+1	; 0x01
    18e4:	88 2f       	mov	r24, r24
    18e6:	90 e0       	ldi	r25, 0x00	; 0
    18e8:	9c 01       	movw	r18, r24
    18ea:	22 0f       	add	r18, r18
    18ec:	33 1f       	adc	r19, r19
    18ee:	22 0f       	add	r18, r18
    18f0:	33 1f       	adc	r19, r19
    18f2:	8b 81       	ldd	r24, Y+3	; 0x03
    18f4:	9c 81       	ldd	r25, Y+4	; 0x04
    18f6:	fc 01       	movw	r30, r24
    18f8:	e2 0f       	add	r30, r18
    18fa:	f3 1f       	adc	r31, r19
    18fc:	83 81       	ldd	r24, Z+3	; 0x03
    18fe:	81 30       	cpi	r24, 0x01	; 1
    1900:	19 f5       	brne	.+70     	; 0x1948 <LED_enumInit+0x154>
				{
					Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,HIGH);
    1902:	89 81       	ldd	r24, Y+1	; 0x01
    1904:	88 2f       	mov	r24, r24
    1906:	90 e0       	ldi	r25, 0x00	; 0
    1908:	9c 01       	movw	r18, r24
    190a:	22 0f       	add	r18, r18
    190c:	33 1f       	adc	r19, r19
    190e:	22 0f       	add	r18, r18
    1910:	33 1f       	adc	r19, r19
    1912:	8b 81       	ldd	r24, Y+3	; 0x03
    1914:	9c 81       	ldd	r25, Y+4	; 0x04
    1916:	fc 01       	movw	r30, r24
    1918:	e2 0f       	add	r30, r18
    191a:	f3 1f       	adc	r31, r19
    191c:	40 81       	ld	r20, Z
    191e:	89 81       	ldd	r24, Y+1	; 0x01
    1920:	88 2f       	mov	r24, r24
    1922:	90 e0       	ldi	r25, 0x00	; 0
    1924:	9c 01       	movw	r18, r24
    1926:	22 0f       	add	r18, r18
    1928:	33 1f       	adc	r19, r19
    192a:	22 0f       	add	r18, r18
    192c:	33 1f       	adc	r19, r19
    192e:	8b 81       	ldd	r24, Y+3	; 0x03
    1930:	9c 81       	ldd	r25, Y+4	; 0x04
    1932:	fc 01       	movw	r30, r24
    1934:	e2 0f       	add	r30, r18
    1936:	f3 1f       	adc	r31, r19
    1938:	91 81       	ldd	r25, Z+1	; 0x01
    193a:	84 2f       	mov	r24, r20
    193c:	69 2f       	mov	r22, r25
    193e:	41 e0       	ldi	r20, 0x01	; 1
    1940:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1944:	8a 83       	std	Y+2, r24	; 0x02
    1946:	7f c0       	rjmp	.+254    	; 0x1a46 <LED_enumInit+0x252>
				}
				else
				{
					Local_u8Counter=ES_OUT_OF_RANGE;
    1948:	83 e0       	ldi	r24, 0x03	; 3
    194a:	89 83       	std	Y+1, r24	; 0x01
    194c:	7c c0       	rjmp	.+248    	; 0x1a46 <LED_enumInit+0x252>
				}
			}
			else if(Copy_pstrLeds[Local_u8Counter].LED_u8Connection==LED_SOURCE)
    194e:	89 81       	ldd	r24, Y+1	; 0x01
    1950:	88 2f       	mov	r24, r24
    1952:	90 e0       	ldi	r25, 0x00	; 0
    1954:	9c 01       	movw	r18, r24
    1956:	22 0f       	add	r18, r18
    1958:	33 1f       	adc	r19, r19
    195a:	22 0f       	add	r18, r18
    195c:	33 1f       	adc	r19, r19
    195e:	8b 81       	ldd	r24, Y+3	; 0x03
    1960:	9c 81       	ldd	r25, Y+4	; 0x04
    1962:	fc 01       	movw	r30, r24
    1964:	e2 0f       	add	r30, r18
    1966:	f3 1f       	adc	r31, r19
    1968:	82 81       	ldd	r24, Z+2	; 0x02
    196a:	81 30       	cpi	r24, 0x01	; 1
    196c:	09 f0       	breq	.+2      	; 0x1970 <LED_enumInit+0x17c>
    196e:	69 c0       	rjmp	.+210    	; 0x1a42 <LED_enumInit+0x24e>
			{
				if (Copy_pstrLeds[Local_u8Counter].LED_u8InitState==LED_ON)
    1970:	89 81       	ldd	r24, Y+1	; 0x01
    1972:	88 2f       	mov	r24, r24
    1974:	90 e0       	ldi	r25, 0x00	; 0
    1976:	9c 01       	movw	r18, r24
    1978:	22 0f       	add	r18, r18
    197a:	33 1f       	adc	r19, r19
    197c:	22 0f       	add	r18, r18
    197e:	33 1f       	adc	r19, r19
    1980:	8b 81       	ldd	r24, Y+3	; 0x03
    1982:	9c 81       	ldd	r25, Y+4	; 0x04
    1984:	fc 01       	movw	r30, r24
    1986:	e2 0f       	add	r30, r18
    1988:	f3 1f       	adc	r31, r19
    198a:	83 81       	ldd	r24, Z+3	; 0x03
    198c:	88 23       	and	r24, r24
    198e:	19 f5       	brne	.+70     	; 0x19d6 <LED_enumInit+0x1e2>
				{
					Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,HIGH);
    1990:	89 81       	ldd	r24, Y+1	; 0x01
    1992:	88 2f       	mov	r24, r24
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	9c 01       	movw	r18, r24
    1998:	22 0f       	add	r18, r18
    199a:	33 1f       	adc	r19, r19
    199c:	22 0f       	add	r18, r18
    199e:	33 1f       	adc	r19, r19
    19a0:	8b 81       	ldd	r24, Y+3	; 0x03
    19a2:	9c 81       	ldd	r25, Y+4	; 0x04
    19a4:	fc 01       	movw	r30, r24
    19a6:	e2 0f       	add	r30, r18
    19a8:	f3 1f       	adc	r31, r19
    19aa:	40 81       	ld	r20, Z
    19ac:	89 81       	ldd	r24, Y+1	; 0x01
    19ae:	88 2f       	mov	r24, r24
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	9c 01       	movw	r18, r24
    19b4:	22 0f       	add	r18, r18
    19b6:	33 1f       	adc	r19, r19
    19b8:	22 0f       	add	r18, r18
    19ba:	33 1f       	adc	r19, r19
    19bc:	8b 81       	ldd	r24, Y+3	; 0x03
    19be:	9c 81       	ldd	r25, Y+4	; 0x04
    19c0:	fc 01       	movw	r30, r24
    19c2:	e2 0f       	add	r30, r18
    19c4:	f3 1f       	adc	r31, r19
    19c6:	91 81       	ldd	r25, Z+1	; 0x01
    19c8:	84 2f       	mov	r24, r20
    19ca:	69 2f       	mov	r22, r25
    19cc:	41 e0       	ldi	r20, 0x01	; 1
    19ce:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    19d2:	8a 83       	std	Y+2, r24	; 0x02
    19d4:	38 c0       	rjmp	.+112    	; 0x1a46 <LED_enumInit+0x252>
				}
				else if (Copy_pstrLeds[Local_u8Counter].LED_u8InitState==LED_OFF)
    19d6:	89 81       	ldd	r24, Y+1	; 0x01
    19d8:	88 2f       	mov	r24, r24
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	9c 01       	movw	r18, r24
    19de:	22 0f       	add	r18, r18
    19e0:	33 1f       	adc	r19, r19
    19e2:	22 0f       	add	r18, r18
    19e4:	33 1f       	adc	r19, r19
    19e6:	8b 81       	ldd	r24, Y+3	; 0x03
    19e8:	9c 81       	ldd	r25, Y+4	; 0x04
    19ea:	fc 01       	movw	r30, r24
    19ec:	e2 0f       	add	r30, r18
    19ee:	f3 1f       	adc	r31, r19
    19f0:	83 81       	ldd	r24, Z+3	; 0x03
    19f2:	81 30       	cpi	r24, 0x01	; 1
    19f4:	19 f5       	brne	.+70     	; 0x1a3c <LED_enumInit+0x248>
				{
					Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,LOW);
    19f6:	89 81       	ldd	r24, Y+1	; 0x01
    19f8:	88 2f       	mov	r24, r24
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	9c 01       	movw	r18, r24
    19fe:	22 0f       	add	r18, r18
    1a00:	33 1f       	adc	r19, r19
    1a02:	22 0f       	add	r18, r18
    1a04:	33 1f       	adc	r19, r19
    1a06:	8b 81       	ldd	r24, Y+3	; 0x03
    1a08:	9c 81       	ldd	r25, Y+4	; 0x04
    1a0a:	fc 01       	movw	r30, r24
    1a0c:	e2 0f       	add	r30, r18
    1a0e:	f3 1f       	adc	r31, r19
    1a10:	40 81       	ld	r20, Z
    1a12:	89 81       	ldd	r24, Y+1	; 0x01
    1a14:	88 2f       	mov	r24, r24
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	9c 01       	movw	r18, r24
    1a1a:	22 0f       	add	r18, r18
    1a1c:	33 1f       	adc	r19, r19
    1a1e:	22 0f       	add	r18, r18
    1a20:	33 1f       	adc	r19, r19
    1a22:	8b 81       	ldd	r24, Y+3	; 0x03
    1a24:	9c 81       	ldd	r25, Y+4	; 0x04
    1a26:	fc 01       	movw	r30, r24
    1a28:	e2 0f       	add	r30, r18
    1a2a:	f3 1f       	adc	r31, r19
    1a2c:	91 81       	ldd	r25, Z+1	; 0x01
    1a2e:	84 2f       	mov	r24, r20
    1a30:	69 2f       	mov	r22, r25
    1a32:	40 e0       	ldi	r20, 0x00	; 0
    1a34:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1a38:	8a 83       	std	Y+2, r24	; 0x02
    1a3a:	05 c0       	rjmp	.+10     	; 0x1a46 <LED_enumInit+0x252>
				}
				else
				{
					Local_enumErrorState=ES_OUT_OF_RANGE;
    1a3c:	83 e0       	ldi	r24, 0x03	; 3
    1a3e:	8a 83       	std	Y+2, r24	; 0x02
    1a40:	02 c0       	rjmp	.+4      	; 0x1a46 <LED_enumInit+0x252>
				}
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    1a42:	83 e0       	ldi	r24, 0x03	; 3
    1a44:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;

	if (Copy_pstrLeds!=NULL)
	{
		u8 Local_u8Counter=0;
		for (Local_u8Counter=0;Local_u8Counter<LED_NUM;Local_u8Counter++)
    1a46:	89 81       	ldd	r24, Y+1	; 0x01
    1a48:	8f 5f       	subi	r24, 0xFF	; 255
    1a4a:	89 83       	std	Y+1, r24	; 0x01
    1a4c:	89 81       	ldd	r24, Y+1	; 0x01
    1a4e:	83 30       	cpi	r24, 0x03	; 3
    1a50:	08 f4       	brcc	.+2      	; 0x1a54 <LED_enumInit+0x260>
    1a52:	e1 ce       	rjmp	.-574    	; 0x1816 <LED_enumInit+0x22>
    1a54:	02 c0       	rjmp	.+4      	; 0x1a5a <LED_enumInit+0x266>
			}
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    1a56:	82 e0       	ldi	r24, 0x02	; 2
    1a58:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enumErrorState;
    1a5a:	8a 81       	ldd	r24, Y+2	; 0x02
}
    1a5c:	0f 90       	pop	r0
    1a5e:	0f 90       	pop	r0
    1a60:	0f 90       	pop	r0
    1a62:	0f 90       	pop	r0
    1a64:	cf 91       	pop	r28
    1a66:	df 91       	pop	r29
    1a68:	08 95       	ret

00001a6a <LED_enumLedOn>:
ES_T LED_enumLedOn(LED_T* Copy_pstrLed)
{
    1a6a:	df 93       	push	r29
    1a6c:	cf 93       	push	r28
    1a6e:	00 d0       	rcall	.+0      	; 0x1a70 <LED_enumLedOn+0x6>
    1a70:	0f 92       	push	r0
    1a72:	cd b7       	in	r28, 0x3d	; 61
    1a74:	de b7       	in	r29, 0x3e	; 62
    1a76:	9b 83       	std	Y+3, r25	; 0x03
    1a78:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    1a7a:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pstrLed!=NULL)
    1a7c:	8a 81       	ldd	r24, Y+2	; 0x02
    1a7e:	9b 81       	ldd	r25, Y+3	; 0x03
    1a80:	00 97       	sbiw	r24, 0x00	; 0
    1a82:	29 f1       	breq	.+74     	; 0x1ace <LED_enumLedOn+0x64>
	{
		if(Copy_pstrLed->LED_u8Connection==LED_SINK)
    1a84:	ea 81       	ldd	r30, Y+2	; 0x02
    1a86:	fb 81       	ldd	r31, Y+3	; 0x03
    1a88:	82 81       	ldd	r24, Z+2	; 0x02
    1a8a:	88 23       	and	r24, r24
    1a8c:	61 f4       	brne	.+24     	; 0x1aa6 <LED_enumLedOn+0x3c>
		{
			Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLed->LED_u8PortID,Copy_pstrLed->LED_u8PinID,LOW);
    1a8e:	ea 81       	ldd	r30, Y+2	; 0x02
    1a90:	fb 81       	ldd	r31, Y+3	; 0x03
    1a92:	80 81       	ld	r24, Z
    1a94:	ea 81       	ldd	r30, Y+2	; 0x02
    1a96:	fb 81       	ldd	r31, Y+3	; 0x03
    1a98:	91 81       	ldd	r25, Z+1	; 0x01
    1a9a:	69 2f       	mov	r22, r25
    1a9c:	40 e0       	ldi	r20, 0x00	; 0
    1a9e:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1aa2:	89 83       	std	Y+1, r24	; 0x01
    1aa4:	16 c0       	rjmp	.+44     	; 0x1ad2 <LED_enumLedOn+0x68>
		}
		else if(Copy_pstrLed->LED_u8Connection==LED_SOURCE)
    1aa6:	ea 81       	ldd	r30, Y+2	; 0x02
    1aa8:	fb 81       	ldd	r31, Y+3	; 0x03
    1aaa:	82 81       	ldd	r24, Z+2	; 0x02
    1aac:	81 30       	cpi	r24, 0x01	; 1
    1aae:	61 f4       	brne	.+24     	; 0x1ac8 <LED_enumLedOn+0x5e>
		{
			Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLed->LED_u8PortID,Copy_pstrLed->LED_u8PinID,HIGH);
    1ab0:	ea 81       	ldd	r30, Y+2	; 0x02
    1ab2:	fb 81       	ldd	r31, Y+3	; 0x03
    1ab4:	80 81       	ld	r24, Z
    1ab6:	ea 81       	ldd	r30, Y+2	; 0x02
    1ab8:	fb 81       	ldd	r31, Y+3	; 0x03
    1aba:	91 81       	ldd	r25, Z+1	; 0x01
    1abc:	69 2f       	mov	r22, r25
    1abe:	41 e0       	ldi	r20, 0x01	; 1
    1ac0:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1ac4:	89 83       	std	Y+1, r24	; 0x01
    1ac6:	05 c0       	rjmp	.+10     	; 0x1ad2 <LED_enumLedOn+0x68>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    1ac8:	83 e0       	ldi	r24, 0x03	; 3
    1aca:	89 83       	std	Y+1, r24	; 0x01
    1acc:	02 c0       	rjmp	.+4      	; 0x1ad2 <LED_enumLedOn+0x68>
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    1ace:	82 e0       	ldi	r24, 0x02	; 2
    1ad0:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    1ad2:	89 81       	ldd	r24, Y+1	; 0x01
}
    1ad4:	0f 90       	pop	r0
    1ad6:	0f 90       	pop	r0
    1ad8:	0f 90       	pop	r0
    1ada:	cf 91       	pop	r28
    1adc:	df 91       	pop	r29
    1ade:	08 95       	ret

00001ae0 <LED_enumLedOff>:
ES_T LED_enumLedOff(LED_T* Copy_pstrLed)
{
    1ae0:	df 93       	push	r29
    1ae2:	cf 93       	push	r28
    1ae4:	00 d0       	rcall	.+0      	; 0x1ae6 <LED_enumLedOff+0x6>
    1ae6:	0f 92       	push	r0
    1ae8:	cd b7       	in	r28, 0x3d	; 61
    1aea:	de b7       	in	r29, 0x3e	; 62
    1aec:	9b 83       	std	Y+3, r25	; 0x03
    1aee:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    1af0:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pstrLed!=NULL)
    1af2:	8a 81       	ldd	r24, Y+2	; 0x02
    1af4:	9b 81       	ldd	r25, Y+3	; 0x03
    1af6:	00 97       	sbiw	r24, 0x00	; 0
    1af8:	29 f1       	breq	.+74     	; 0x1b44 <LED_enumLedOff+0x64>
	{
		if(Copy_pstrLed->LED_u8Connection==LED_SINK)
    1afa:	ea 81       	ldd	r30, Y+2	; 0x02
    1afc:	fb 81       	ldd	r31, Y+3	; 0x03
    1afe:	82 81       	ldd	r24, Z+2	; 0x02
    1b00:	88 23       	and	r24, r24
    1b02:	61 f4       	brne	.+24     	; 0x1b1c <LED_enumLedOff+0x3c>
		{
			Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLed->LED_u8PortID,Copy_pstrLed->LED_u8PinID,HIGH);
    1b04:	ea 81       	ldd	r30, Y+2	; 0x02
    1b06:	fb 81       	ldd	r31, Y+3	; 0x03
    1b08:	80 81       	ld	r24, Z
    1b0a:	ea 81       	ldd	r30, Y+2	; 0x02
    1b0c:	fb 81       	ldd	r31, Y+3	; 0x03
    1b0e:	91 81       	ldd	r25, Z+1	; 0x01
    1b10:	69 2f       	mov	r22, r25
    1b12:	41 e0       	ldi	r20, 0x01	; 1
    1b14:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1b18:	89 83       	std	Y+1, r24	; 0x01
    1b1a:	16 c0       	rjmp	.+44     	; 0x1b48 <LED_enumLedOff+0x68>
		}
		else if(Copy_pstrLed->LED_u8Connection==LED_SOURCE)
    1b1c:	ea 81       	ldd	r30, Y+2	; 0x02
    1b1e:	fb 81       	ldd	r31, Y+3	; 0x03
    1b20:	82 81       	ldd	r24, Z+2	; 0x02
    1b22:	81 30       	cpi	r24, 0x01	; 1
    1b24:	61 f4       	brne	.+24     	; 0x1b3e <LED_enumLedOff+0x5e>
		{
			Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLed->LED_u8PortID,Copy_pstrLed->LED_u8PinID,LOW);
    1b26:	ea 81       	ldd	r30, Y+2	; 0x02
    1b28:	fb 81       	ldd	r31, Y+3	; 0x03
    1b2a:	80 81       	ld	r24, Z
    1b2c:	ea 81       	ldd	r30, Y+2	; 0x02
    1b2e:	fb 81       	ldd	r31, Y+3	; 0x03
    1b30:	91 81       	ldd	r25, Z+1	; 0x01
    1b32:	69 2f       	mov	r22, r25
    1b34:	40 e0       	ldi	r20, 0x00	; 0
    1b36:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1b3a:	89 83       	std	Y+1, r24	; 0x01
    1b3c:	05 c0       	rjmp	.+10     	; 0x1b48 <LED_enumLedOff+0x68>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    1b3e:	83 e0       	ldi	r24, 0x03	; 3
    1b40:	89 83       	std	Y+1, r24	; 0x01
    1b42:	02 c0       	rjmp	.+4      	; 0x1b48 <LED_enumLedOff+0x68>
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    1b44:	82 e0       	ldi	r24, 0x02	; 2
    1b46:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    1b48:	89 81       	ldd	r24, Y+1	; 0x01
}
    1b4a:	0f 90       	pop	r0
    1b4c:	0f 90       	pop	r0
    1b4e:	0f 90       	pop	r0
    1b50:	cf 91       	pop	r28
    1b52:	df 91       	pop	r29
    1b54:	08 95       	ret

00001b56 <SEV_SEG_enumInit>:
#include "../include/HAL/Seven_Segment/SEV_SEG_priv.h"

extern SEV_SEG_T SEV_SEG_AstrSegments [SEV_SEG_NUM];

ES_T SEV_SEG_enumInit(SEV_SEG_T* Copy_pstrSegments)
{
    1b56:	df 93       	push	r29
    1b58:	cf 93       	push	r28
    1b5a:	00 d0       	rcall	.+0      	; 0x1b5c <SEV_SEG_enumInit+0x6>
    1b5c:	00 d0       	rcall	.+0      	; 0x1b5e <SEV_SEG_enumInit+0x8>
    1b5e:	0f 92       	push	r0
    1b60:	cd b7       	in	r28, 0x3d	; 61
    1b62:	de b7       	in	r29, 0x3e	; 62
    1b64:	9c 83       	std	Y+4, r25	; 0x04
    1b66:	8b 83       	std	Y+3, r24	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    1b68:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Counter=0;
    1b6a:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_pstrSegments!=NULL)
    1b6c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b6e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b70:	00 97       	sbiw	r24, 0x00	; 0
    1b72:	09 f4       	brne	.+2      	; 0x1b76 <SEV_SEG_enumInit+0x20>
    1b74:	e1 c7       	rjmp	.+4034   	; 0x2b38 <SEV_SEG_enumInit+0xfe2>
	{
		for (Local_u8Counter=0;Local_u8Counter<SEV_SEG_NUM;Local_u8Counter++)
    1b76:	19 82       	std	Y+1, r1	; 0x01
    1b78:	0c 94 97 15 	jmp	0x2b2e	; 0x2b2e <SEV_SEG_enumInit+0xfd8>
		{
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APin,OUTPUT);
    1b7c:	89 81       	ldd	r24, Y+1	; 0x01
    1b7e:	48 2f       	mov	r20, r24
    1b80:	50 e0       	ldi	r21, 0x00	; 0
    1b82:	ca 01       	movw	r24, r20
    1b84:	88 0f       	add	r24, r24
    1b86:	99 1f       	adc	r25, r25
    1b88:	9c 01       	movw	r18, r24
    1b8a:	22 0f       	add	r18, r18
    1b8c:	33 1f       	adc	r19, r19
    1b8e:	22 0f       	add	r18, r18
    1b90:	33 1f       	adc	r19, r19
    1b92:	22 0f       	add	r18, r18
    1b94:	33 1f       	adc	r19, r19
    1b96:	82 0f       	add	r24, r18
    1b98:	93 1f       	adc	r25, r19
    1b9a:	9c 01       	movw	r18, r24
    1b9c:	24 0f       	add	r18, r20
    1b9e:	35 1f       	adc	r19, r21
    1ba0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ba2:	9c 81       	ldd	r25, Y+4	; 0x04
    1ba4:	fc 01       	movw	r30, r24
    1ba6:	e2 0f       	add	r30, r18
    1ba8:	f3 1f       	adc	r31, r19
    1baa:	60 81       	ld	r22, Z
    1bac:	89 81       	ldd	r24, Y+1	; 0x01
    1bae:	48 2f       	mov	r20, r24
    1bb0:	50 e0       	ldi	r21, 0x00	; 0
    1bb2:	ca 01       	movw	r24, r20
    1bb4:	88 0f       	add	r24, r24
    1bb6:	99 1f       	adc	r25, r25
    1bb8:	9c 01       	movw	r18, r24
    1bba:	22 0f       	add	r18, r18
    1bbc:	33 1f       	adc	r19, r19
    1bbe:	22 0f       	add	r18, r18
    1bc0:	33 1f       	adc	r19, r19
    1bc2:	22 0f       	add	r18, r18
    1bc4:	33 1f       	adc	r19, r19
    1bc6:	82 0f       	add	r24, r18
    1bc8:	93 1f       	adc	r25, r19
    1bca:	9c 01       	movw	r18, r24
    1bcc:	24 0f       	add	r18, r20
    1bce:	35 1f       	adc	r19, r21
    1bd0:	8b 81       	ldd	r24, Y+3	; 0x03
    1bd2:	9c 81       	ldd	r25, Y+4	; 0x04
    1bd4:	fc 01       	movw	r30, r24
    1bd6:	e2 0f       	add	r30, r18
    1bd8:	f3 1f       	adc	r31, r19
    1bda:	91 81       	ldd	r25, Z+1	; 0x01
    1bdc:	86 2f       	mov	r24, r22
    1bde:	69 2f       	mov	r22, r25
    1be0:	41 e0       	ldi	r20, 0x01	; 1
    1be2:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    1be6:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1be8:	8a 81       	ldd	r24, Y+2	; 0x02
    1bea:	81 30       	cpi	r24, 0x01	; 1
    1bec:	21 f0       	breq	.+8      	; 0x1bf6 <SEV_SEG_enumInit+0xa0>
    1bee:	8a 81       	ldd	r24, Y+2	; 0x02
    1bf0:	8d 83       	std	Y+5, r24	; 0x05
    1bf2:	0c 94 a0 15 	jmp	0x2b40	; 0x2b40 <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPin,OUTPUT);
    1bf6:	89 81       	ldd	r24, Y+1	; 0x01
    1bf8:	48 2f       	mov	r20, r24
    1bfa:	50 e0       	ldi	r21, 0x00	; 0
    1bfc:	ca 01       	movw	r24, r20
    1bfe:	88 0f       	add	r24, r24
    1c00:	99 1f       	adc	r25, r25
    1c02:	9c 01       	movw	r18, r24
    1c04:	22 0f       	add	r18, r18
    1c06:	33 1f       	adc	r19, r19
    1c08:	22 0f       	add	r18, r18
    1c0a:	33 1f       	adc	r19, r19
    1c0c:	22 0f       	add	r18, r18
    1c0e:	33 1f       	adc	r19, r19
    1c10:	82 0f       	add	r24, r18
    1c12:	93 1f       	adc	r25, r19
    1c14:	9c 01       	movw	r18, r24
    1c16:	24 0f       	add	r18, r20
    1c18:	35 1f       	adc	r19, r21
    1c1a:	8b 81       	ldd	r24, Y+3	; 0x03
    1c1c:	9c 81       	ldd	r25, Y+4	; 0x04
    1c1e:	fc 01       	movw	r30, r24
    1c20:	e2 0f       	add	r30, r18
    1c22:	f3 1f       	adc	r31, r19
    1c24:	62 81       	ldd	r22, Z+2	; 0x02
    1c26:	89 81       	ldd	r24, Y+1	; 0x01
    1c28:	48 2f       	mov	r20, r24
    1c2a:	50 e0       	ldi	r21, 0x00	; 0
    1c2c:	ca 01       	movw	r24, r20
    1c2e:	88 0f       	add	r24, r24
    1c30:	99 1f       	adc	r25, r25
    1c32:	9c 01       	movw	r18, r24
    1c34:	22 0f       	add	r18, r18
    1c36:	33 1f       	adc	r19, r19
    1c38:	22 0f       	add	r18, r18
    1c3a:	33 1f       	adc	r19, r19
    1c3c:	22 0f       	add	r18, r18
    1c3e:	33 1f       	adc	r19, r19
    1c40:	82 0f       	add	r24, r18
    1c42:	93 1f       	adc	r25, r19
    1c44:	9c 01       	movw	r18, r24
    1c46:	24 0f       	add	r18, r20
    1c48:	35 1f       	adc	r19, r21
    1c4a:	8b 81       	ldd	r24, Y+3	; 0x03
    1c4c:	9c 81       	ldd	r25, Y+4	; 0x04
    1c4e:	fc 01       	movw	r30, r24
    1c50:	e2 0f       	add	r30, r18
    1c52:	f3 1f       	adc	r31, r19
    1c54:	93 81       	ldd	r25, Z+3	; 0x03
    1c56:	86 2f       	mov	r24, r22
    1c58:	69 2f       	mov	r22, r25
    1c5a:	41 e0       	ldi	r20, 0x01	; 1
    1c5c:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    1c60:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1c62:	8a 81       	ldd	r24, Y+2	; 0x02
    1c64:	81 30       	cpi	r24, 0x01	; 1
    1c66:	19 f0       	breq	.+6      	; 0x1c6e <SEV_SEG_enumInit+0x118>
    1c68:	8a 81       	ldd	r24, Y+2	; 0x02
    1c6a:	8d 83       	std	Y+5, r24	; 0x05
    1c6c:	69 c7       	rjmp	.+3794   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPin,OUTPUT);
    1c6e:	89 81       	ldd	r24, Y+1	; 0x01
    1c70:	48 2f       	mov	r20, r24
    1c72:	50 e0       	ldi	r21, 0x00	; 0
    1c74:	ca 01       	movw	r24, r20
    1c76:	88 0f       	add	r24, r24
    1c78:	99 1f       	adc	r25, r25
    1c7a:	9c 01       	movw	r18, r24
    1c7c:	22 0f       	add	r18, r18
    1c7e:	33 1f       	adc	r19, r19
    1c80:	22 0f       	add	r18, r18
    1c82:	33 1f       	adc	r19, r19
    1c84:	22 0f       	add	r18, r18
    1c86:	33 1f       	adc	r19, r19
    1c88:	82 0f       	add	r24, r18
    1c8a:	93 1f       	adc	r25, r19
    1c8c:	9c 01       	movw	r18, r24
    1c8e:	24 0f       	add	r18, r20
    1c90:	35 1f       	adc	r19, r21
    1c92:	8b 81       	ldd	r24, Y+3	; 0x03
    1c94:	9c 81       	ldd	r25, Y+4	; 0x04
    1c96:	fc 01       	movw	r30, r24
    1c98:	e2 0f       	add	r30, r18
    1c9a:	f3 1f       	adc	r31, r19
    1c9c:	64 81       	ldd	r22, Z+4	; 0x04
    1c9e:	89 81       	ldd	r24, Y+1	; 0x01
    1ca0:	48 2f       	mov	r20, r24
    1ca2:	50 e0       	ldi	r21, 0x00	; 0
    1ca4:	ca 01       	movw	r24, r20
    1ca6:	88 0f       	add	r24, r24
    1ca8:	99 1f       	adc	r25, r25
    1caa:	9c 01       	movw	r18, r24
    1cac:	22 0f       	add	r18, r18
    1cae:	33 1f       	adc	r19, r19
    1cb0:	22 0f       	add	r18, r18
    1cb2:	33 1f       	adc	r19, r19
    1cb4:	22 0f       	add	r18, r18
    1cb6:	33 1f       	adc	r19, r19
    1cb8:	82 0f       	add	r24, r18
    1cba:	93 1f       	adc	r25, r19
    1cbc:	9c 01       	movw	r18, r24
    1cbe:	24 0f       	add	r18, r20
    1cc0:	35 1f       	adc	r19, r21
    1cc2:	8b 81       	ldd	r24, Y+3	; 0x03
    1cc4:	9c 81       	ldd	r25, Y+4	; 0x04
    1cc6:	fc 01       	movw	r30, r24
    1cc8:	e2 0f       	add	r30, r18
    1cca:	f3 1f       	adc	r31, r19
    1ccc:	95 81       	ldd	r25, Z+5	; 0x05
    1cce:	86 2f       	mov	r24, r22
    1cd0:	69 2f       	mov	r22, r25
    1cd2:	41 e0       	ldi	r20, 0x01	; 1
    1cd4:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    1cd8:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1cda:	8a 81       	ldd	r24, Y+2	; 0x02
    1cdc:	81 30       	cpi	r24, 0x01	; 1
    1cde:	19 f0       	breq	.+6      	; 0x1ce6 <SEV_SEG_enumInit+0x190>
    1ce0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ce2:	8d 83       	std	Y+5, r24	; 0x05
    1ce4:	2d c7       	rjmp	.+3674   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPin,OUTPUT);
    1ce6:	89 81       	ldd	r24, Y+1	; 0x01
    1ce8:	48 2f       	mov	r20, r24
    1cea:	50 e0       	ldi	r21, 0x00	; 0
    1cec:	ca 01       	movw	r24, r20
    1cee:	88 0f       	add	r24, r24
    1cf0:	99 1f       	adc	r25, r25
    1cf2:	9c 01       	movw	r18, r24
    1cf4:	22 0f       	add	r18, r18
    1cf6:	33 1f       	adc	r19, r19
    1cf8:	22 0f       	add	r18, r18
    1cfa:	33 1f       	adc	r19, r19
    1cfc:	22 0f       	add	r18, r18
    1cfe:	33 1f       	adc	r19, r19
    1d00:	82 0f       	add	r24, r18
    1d02:	93 1f       	adc	r25, r19
    1d04:	9c 01       	movw	r18, r24
    1d06:	24 0f       	add	r18, r20
    1d08:	35 1f       	adc	r19, r21
    1d0a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d0c:	9c 81       	ldd	r25, Y+4	; 0x04
    1d0e:	fc 01       	movw	r30, r24
    1d10:	e2 0f       	add	r30, r18
    1d12:	f3 1f       	adc	r31, r19
    1d14:	66 81       	ldd	r22, Z+6	; 0x06
    1d16:	89 81       	ldd	r24, Y+1	; 0x01
    1d18:	48 2f       	mov	r20, r24
    1d1a:	50 e0       	ldi	r21, 0x00	; 0
    1d1c:	ca 01       	movw	r24, r20
    1d1e:	88 0f       	add	r24, r24
    1d20:	99 1f       	adc	r25, r25
    1d22:	9c 01       	movw	r18, r24
    1d24:	22 0f       	add	r18, r18
    1d26:	33 1f       	adc	r19, r19
    1d28:	22 0f       	add	r18, r18
    1d2a:	33 1f       	adc	r19, r19
    1d2c:	22 0f       	add	r18, r18
    1d2e:	33 1f       	adc	r19, r19
    1d30:	82 0f       	add	r24, r18
    1d32:	93 1f       	adc	r25, r19
    1d34:	9c 01       	movw	r18, r24
    1d36:	24 0f       	add	r18, r20
    1d38:	35 1f       	adc	r19, r21
    1d3a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d3c:	9c 81       	ldd	r25, Y+4	; 0x04
    1d3e:	fc 01       	movw	r30, r24
    1d40:	e2 0f       	add	r30, r18
    1d42:	f3 1f       	adc	r31, r19
    1d44:	97 81       	ldd	r25, Z+7	; 0x07
    1d46:	86 2f       	mov	r24, r22
    1d48:	69 2f       	mov	r22, r25
    1d4a:	41 e0       	ldi	r20, 0x01	; 1
    1d4c:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    1d50:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1d52:	8a 81       	ldd	r24, Y+2	; 0x02
    1d54:	81 30       	cpi	r24, 0x01	; 1
    1d56:	19 f0       	breq	.+6      	; 0x1d5e <SEV_SEG_enumInit+0x208>
    1d58:	8a 81       	ldd	r24, Y+2	; 0x02
    1d5a:	8d 83       	std	Y+5, r24	; 0x05
    1d5c:	f1 c6       	rjmp	.+3554   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPin,OUTPUT);
    1d5e:	89 81       	ldd	r24, Y+1	; 0x01
    1d60:	48 2f       	mov	r20, r24
    1d62:	50 e0       	ldi	r21, 0x00	; 0
    1d64:	ca 01       	movw	r24, r20
    1d66:	88 0f       	add	r24, r24
    1d68:	99 1f       	adc	r25, r25
    1d6a:	9c 01       	movw	r18, r24
    1d6c:	22 0f       	add	r18, r18
    1d6e:	33 1f       	adc	r19, r19
    1d70:	22 0f       	add	r18, r18
    1d72:	33 1f       	adc	r19, r19
    1d74:	22 0f       	add	r18, r18
    1d76:	33 1f       	adc	r19, r19
    1d78:	82 0f       	add	r24, r18
    1d7a:	93 1f       	adc	r25, r19
    1d7c:	9c 01       	movw	r18, r24
    1d7e:	24 0f       	add	r18, r20
    1d80:	35 1f       	adc	r19, r21
    1d82:	8b 81       	ldd	r24, Y+3	; 0x03
    1d84:	9c 81       	ldd	r25, Y+4	; 0x04
    1d86:	fc 01       	movw	r30, r24
    1d88:	e2 0f       	add	r30, r18
    1d8a:	f3 1f       	adc	r31, r19
    1d8c:	60 85       	ldd	r22, Z+8	; 0x08
    1d8e:	89 81       	ldd	r24, Y+1	; 0x01
    1d90:	48 2f       	mov	r20, r24
    1d92:	50 e0       	ldi	r21, 0x00	; 0
    1d94:	ca 01       	movw	r24, r20
    1d96:	88 0f       	add	r24, r24
    1d98:	99 1f       	adc	r25, r25
    1d9a:	9c 01       	movw	r18, r24
    1d9c:	22 0f       	add	r18, r18
    1d9e:	33 1f       	adc	r19, r19
    1da0:	22 0f       	add	r18, r18
    1da2:	33 1f       	adc	r19, r19
    1da4:	22 0f       	add	r18, r18
    1da6:	33 1f       	adc	r19, r19
    1da8:	82 0f       	add	r24, r18
    1daa:	93 1f       	adc	r25, r19
    1dac:	9c 01       	movw	r18, r24
    1dae:	24 0f       	add	r18, r20
    1db0:	35 1f       	adc	r19, r21
    1db2:	8b 81       	ldd	r24, Y+3	; 0x03
    1db4:	9c 81       	ldd	r25, Y+4	; 0x04
    1db6:	fc 01       	movw	r30, r24
    1db8:	e2 0f       	add	r30, r18
    1dba:	f3 1f       	adc	r31, r19
    1dbc:	91 85       	ldd	r25, Z+9	; 0x09
    1dbe:	86 2f       	mov	r24, r22
    1dc0:	69 2f       	mov	r22, r25
    1dc2:	41 e0       	ldi	r20, 0x01	; 1
    1dc4:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    1dc8:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1dca:	8a 81       	ldd	r24, Y+2	; 0x02
    1dcc:	81 30       	cpi	r24, 0x01	; 1
    1dce:	19 f0       	breq	.+6      	; 0x1dd6 <SEV_SEG_enumInit+0x280>
    1dd0:	8a 81       	ldd	r24, Y+2	; 0x02
    1dd2:	8d 83       	std	Y+5, r24	; 0x05
    1dd4:	b5 c6       	rjmp	.+3434   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPin,OUTPUT);
    1dd6:	89 81       	ldd	r24, Y+1	; 0x01
    1dd8:	48 2f       	mov	r20, r24
    1dda:	50 e0       	ldi	r21, 0x00	; 0
    1ddc:	ca 01       	movw	r24, r20
    1dde:	88 0f       	add	r24, r24
    1de0:	99 1f       	adc	r25, r25
    1de2:	9c 01       	movw	r18, r24
    1de4:	22 0f       	add	r18, r18
    1de6:	33 1f       	adc	r19, r19
    1de8:	22 0f       	add	r18, r18
    1dea:	33 1f       	adc	r19, r19
    1dec:	22 0f       	add	r18, r18
    1dee:	33 1f       	adc	r19, r19
    1df0:	82 0f       	add	r24, r18
    1df2:	93 1f       	adc	r25, r19
    1df4:	9c 01       	movw	r18, r24
    1df6:	24 0f       	add	r18, r20
    1df8:	35 1f       	adc	r19, r21
    1dfa:	8b 81       	ldd	r24, Y+3	; 0x03
    1dfc:	9c 81       	ldd	r25, Y+4	; 0x04
    1dfe:	fc 01       	movw	r30, r24
    1e00:	e2 0f       	add	r30, r18
    1e02:	f3 1f       	adc	r31, r19
    1e04:	62 85       	ldd	r22, Z+10	; 0x0a
    1e06:	89 81       	ldd	r24, Y+1	; 0x01
    1e08:	48 2f       	mov	r20, r24
    1e0a:	50 e0       	ldi	r21, 0x00	; 0
    1e0c:	ca 01       	movw	r24, r20
    1e0e:	88 0f       	add	r24, r24
    1e10:	99 1f       	adc	r25, r25
    1e12:	9c 01       	movw	r18, r24
    1e14:	22 0f       	add	r18, r18
    1e16:	33 1f       	adc	r19, r19
    1e18:	22 0f       	add	r18, r18
    1e1a:	33 1f       	adc	r19, r19
    1e1c:	22 0f       	add	r18, r18
    1e1e:	33 1f       	adc	r19, r19
    1e20:	82 0f       	add	r24, r18
    1e22:	93 1f       	adc	r25, r19
    1e24:	9c 01       	movw	r18, r24
    1e26:	24 0f       	add	r18, r20
    1e28:	35 1f       	adc	r19, r21
    1e2a:	8b 81       	ldd	r24, Y+3	; 0x03
    1e2c:	9c 81       	ldd	r25, Y+4	; 0x04
    1e2e:	fc 01       	movw	r30, r24
    1e30:	e2 0f       	add	r30, r18
    1e32:	f3 1f       	adc	r31, r19
    1e34:	93 85       	ldd	r25, Z+11	; 0x0b
    1e36:	86 2f       	mov	r24, r22
    1e38:	69 2f       	mov	r22, r25
    1e3a:	41 e0       	ldi	r20, 0x01	; 1
    1e3c:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    1e40:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1e42:	8a 81       	ldd	r24, Y+2	; 0x02
    1e44:	81 30       	cpi	r24, 0x01	; 1
    1e46:	19 f0       	breq	.+6      	; 0x1e4e <SEV_SEG_enumInit+0x2f8>
    1e48:	8a 81       	ldd	r24, Y+2	; 0x02
    1e4a:	8d 83       	std	Y+5, r24	; 0x05
    1e4c:	79 c6       	rjmp	.+3314   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPin,OUTPUT);
    1e4e:	89 81       	ldd	r24, Y+1	; 0x01
    1e50:	48 2f       	mov	r20, r24
    1e52:	50 e0       	ldi	r21, 0x00	; 0
    1e54:	ca 01       	movw	r24, r20
    1e56:	88 0f       	add	r24, r24
    1e58:	99 1f       	adc	r25, r25
    1e5a:	9c 01       	movw	r18, r24
    1e5c:	22 0f       	add	r18, r18
    1e5e:	33 1f       	adc	r19, r19
    1e60:	22 0f       	add	r18, r18
    1e62:	33 1f       	adc	r19, r19
    1e64:	22 0f       	add	r18, r18
    1e66:	33 1f       	adc	r19, r19
    1e68:	82 0f       	add	r24, r18
    1e6a:	93 1f       	adc	r25, r19
    1e6c:	9c 01       	movw	r18, r24
    1e6e:	24 0f       	add	r18, r20
    1e70:	35 1f       	adc	r19, r21
    1e72:	8b 81       	ldd	r24, Y+3	; 0x03
    1e74:	9c 81       	ldd	r25, Y+4	; 0x04
    1e76:	fc 01       	movw	r30, r24
    1e78:	e2 0f       	add	r30, r18
    1e7a:	f3 1f       	adc	r31, r19
    1e7c:	64 85       	ldd	r22, Z+12	; 0x0c
    1e7e:	89 81       	ldd	r24, Y+1	; 0x01
    1e80:	48 2f       	mov	r20, r24
    1e82:	50 e0       	ldi	r21, 0x00	; 0
    1e84:	ca 01       	movw	r24, r20
    1e86:	88 0f       	add	r24, r24
    1e88:	99 1f       	adc	r25, r25
    1e8a:	9c 01       	movw	r18, r24
    1e8c:	22 0f       	add	r18, r18
    1e8e:	33 1f       	adc	r19, r19
    1e90:	22 0f       	add	r18, r18
    1e92:	33 1f       	adc	r19, r19
    1e94:	22 0f       	add	r18, r18
    1e96:	33 1f       	adc	r19, r19
    1e98:	82 0f       	add	r24, r18
    1e9a:	93 1f       	adc	r25, r19
    1e9c:	9c 01       	movw	r18, r24
    1e9e:	24 0f       	add	r18, r20
    1ea0:	35 1f       	adc	r19, r21
    1ea2:	8b 81       	ldd	r24, Y+3	; 0x03
    1ea4:	9c 81       	ldd	r25, Y+4	; 0x04
    1ea6:	fc 01       	movw	r30, r24
    1ea8:	e2 0f       	add	r30, r18
    1eaa:	f3 1f       	adc	r31, r19
    1eac:	95 85       	ldd	r25, Z+13	; 0x0d
    1eae:	86 2f       	mov	r24, r22
    1eb0:	69 2f       	mov	r22, r25
    1eb2:	41 e0       	ldi	r20, 0x01	; 1
    1eb4:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    1eb8:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1eba:	8a 81       	ldd	r24, Y+2	; 0x02
    1ebc:	81 30       	cpi	r24, 0x01	; 1
    1ebe:	19 f0       	breq	.+6      	; 0x1ec6 <SEV_SEG_enumInit+0x370>
    1ec0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ec2:	8d 83       	std	Y+5, r24	; 0x05
    1ec4:	3d c6       	rjmp	.+3194   	; 0x2b40 <SEV_SEG_enumInit+0xfea>

			if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_CATHODE)
    1ec6:	89 81       	ldd	r24, Y+1	; 0x01
    1ec8:	48 2f       	mov	r20, r24
    1eca:	50 e0       	ldi	r21, 0x00	; 0
    1ecc:	ca 01       	movw	r24, r20
    1ece:	88 0f       	add	r24, r24
    1ed0:	99 1f       	adc	r25, r25
    1ed2:	9c 01       	movw	r18, r24
    1ed4:	22 0f       	add	r18, r18
    1ed6:	33 1f       	adc	r19, r19
    1ed8:	22 0f       	add	r18, r18
    1eda:	33 1f       	adc	r19, r19
    1edc:	22 0f       	add	r18, r18
    1ede:	33 1f       	adc	r19, r19
    1ee0:	82 0f       	add	r24, r18
    1ee2:	93 1f       	adc	r25, r19
    1ee4:	9c 01       	movw	r18, r24
    1ee6:	24 0f       	add	r18, r20
    1ee8:	35 1f       	adc	r19, r21
    1eea:	8b 81       	ldd	r24, Y+3	; 0x03
    1eec:	9c 81       	ldd	r25, Y+4	; 0x04
    1eee:	fc 01       	movw	r30, r24
    1ef0:	e2 0f       	add	r30, r18
    1ef2:	f3 1f       	adc	r31, r19
    1ef4:	82 89       	ldd	r24, Z+18	; 0x12
    1ef6:	81 30       	cpi	r24, 0x01	; 1
    1ef8:	09 f0       	breq	.+2      	; 0x1efc <SEV_SEG_enumInit+0x3a6>
    1efa:	a5 c1       	rjmp	.+842    	; 0x2246 <SEV_SEG_enumInit+0x6f0>
			{
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APin,LOW);
    1efc:	89 81       	ldd	r24, Y+1	; 0x01
    1efe:	48 2f       	mov	r20, r24
    1f00:	50 e0       	ldi	r21, 0x00	; 0
    1f02:	ca 01       	movw	r24, r20
    1f04:	88 0f       	add	r24, r24
    1f06:	99 1f       	adc	r25, r25
    1f08:	9c 01       	movw	r18, r24
    1f0a:	22 0f       	add	r18, r18
    1f0c:	33 1f       	adc	r19, r19
    1f0e:	22 0f       	add	r18, r18
    1f10:	33 1f       	adc	r19, r19
    1f12:	22 0f       	add	r18, r18
    1f14:	33 1f       	adc	r19, r19
    1f16:	82 0f       	add	r24, r18
    1f18:	93 1f       	adc	r25, r19
    1f1a:	9c 01       	movw	r18, r24
    1f1c:	24 0f       	add	r18, r20
    1f1e:	35 1f       	adc	r19, r21
    1f20:	8b 81       	ldd	r24, Y+3	; 0x03
    1f22:	9c 81       	ldd	r25, Y+4	; 0x04
    1f24:	fc 01       	movw	r30, r24
    1f26:	e2 0f       	add	r30, r18
    1f28:	f3 1f       	adc	r31, r19
    1f2a:	60 81       	ld	r22, Z
    1f2c:	89 81       	ldd	r24, Y+1	; 0x01
    1f2e:	48 2f       	mov	r20, r24
    1f30:	50 e0       	ldi	r21, 0x00	; 0
    1f32:	ca 01       	movw	r24, r20
    1f34:	88 0f       	add	r24, r24
    1f36:	99 1f       	adc	r25, r25
    1f38:	9c 01       	movw	r18, r24
    1f3a:	22 0f       	add	r18, r18
    1f3c:	33 1f       	adc	r19, r19
    1f3e:	22 0f       	add	r18, r18
    1f40:	33 1f       	adc	r19, r19
    1f42:	22 0f       	add	r18, r18
    1f44:	33 1f       	adc	r19, r19
    1f46:	82 0f       	add	r24, r18
    1f48:	93 1f       	adc	r25, r19
    1f4a:	9c 01       	movw	r18, r24
    1f4c:	24 0f       	add	r18, r20
    1f4e:	35 1f       	adc	r19, r21
    1f50:	8b 81       	ldd	r24, Y+3	; 0x03
    1f52:	9c 81       	ldd	r25, Y+4	; 0x04
    1f54:	fc 01       	movw	r30, r24
    1f56:	e2 0f       	add	r30, r18
    1f58:	f3 1f       	adc	r31, r19
    1f5a:	91 81       	ldd	r25, Z+1	; 0x01
    1f5c:	86 2f       	mov	r24, r22
    1f5e:	69 2f       	mov	r22, r25
    1f60:	40 e0       	ldi	r20, 0x00	; 0
    1f62:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1f66:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1f68:	8a 81       	ldd	r24, Y+2	; 0x02
    1f6a:	81 30       	cpi	r24, 0x01	; 1
    1f6c:	19 f0       	breq	.+6      	; 0x1f74 <SEV_SEG_enumInit+0x41e>
    1f6e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f70:	8d 83       	std	Y+5, r24	; 0x05
    1f72:	e6 c5       	rjmp	.+3020   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPin,LOW);
    1f74:	89 81       	ldd	r24, Y+1	; 0x01
    1f76:	48 2f       	mov	r20, r24
    1f78:	50 e0       	ldi	r21, 0x00	; 0
    1f7a:	ca 01       	movw	r24, r20
    1f7c:	88 0f       	add	r24, r24
    1f7e:	99 1f       	adc	r25, r25
    1f80:	9c 01       	movw	r18, r24
    1f82:	22 0f       	add	r18, r18
    1f84:	33 1f       	adc	r19, r19
    1f86:	22 0f       	add	r18, r18
    1f88:	33 1f       	adc	r19, r19
    1f8a:	22 0f       	add	r18, r18
    1f8c:	33 1f       	adc	r19, r19
    1f8e:	82 0f       	add	r24, r18
    1f90:	93 1f       	adc	r25, r19
    1f92:	9c 01       	movw	r18, r24
    1f94:	24 0f       	add	r18, r20
    1f96:	35 1f       	adc	r19, r21
    1f98:	8b 81       	ldd	r24, Y+3	; 0x03
    1f9a:	9c 81       	ldd	r25, Y+4	; 0x04
    1f9c:	fc 01       	movw	r30, r24
    1f9e:	e2 0f       	add	r30, r18
    1fa0:	f3 1f       	adc	r31, r19
    1fa2:	62 81       	ldd	r22, Z+2	; 0x02
    1fa4:	89 81       	ldd	r24, Y+1	; 0x01
    1fa6:	48 2f       	mov	r20, r24
    1fa8:	50 e0       	ldi	r21, 0x00	; 0
    1faa:	ca 01       	movw	r24, r20
    1fac:	88 0f       	add	r24, r24
    1fae:	99 1f       	adc	r25, r25
    1fb0:	9c 01       	movw	r18, r24
    1fb2:	22 0f       	add	r18, r18
    1fb4:	33 1f       	adc	r19, r19
    1fb6:	22 0f       	add	r18, r18
    1fb8:	33 1f       	adc	r19, r19
    1fba:	22 0f       	add	r18, r18
    1fbc:	33 1f       	adc	r19, r19
    1fbe:	82 0f       	add	r24, r18
    1fc0:	93 1f       	adc	r25, r19
    1fc2:	9c 01       	movw	r18, r24
    1fc4:	24 0f       	add	r18, r20
    1fc6:	35 1f       	adc	r19, r21
    1fc8:	8b 81       	ldd	r24, Y+3	; 0x03
    1fca:	9c 81       	ldd	r25, Y+4	; 0x04
    1fcc:	fc 01       	movw	r30, r24
    1fce:	e2 0f       	add	r30, r18
    1fd0:	f3 1f       	adc	r31, r19
    1fd2:	93 81       	ldd	r25, Z+3	; 0x03
    1fd4:	86 2f       	mov	r24, r22
    1fd6:	69 2f       	mov	r22, r25
    1fd8:	40 e0       	ldi	r20, 0x00	; 0
    1fda:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1fde:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1fe0:	8a 81       	ldd	r24, Y+2	; 0x02
    1fe2:	81 30       	cpi	r24, 0x01	; 1
    1fe4:	19 f0       	breq	.+6      	; 0x1fec <SEV_SEG_enumInit+0x496>
    1fe6:	8a 81       	ldd	r24, Y+2	; 0x02
    1fe8:	8d 83       	std	Y+5, r24	; 0x05
    1fea:	aa c5       	rjmp	.+2900   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPin,LOW);
    1fec:	89 81       	ldd	r24, Y+1	; 0x01
    1fee:	48 2f       	mov	r20, r24
    1ff0:	50 e0       	ldi	r21, 0x00	; 0
    1ff2:	ca 01       	movw	r24, r20
    1ff4:	88 0f       	add	r24, r24
    1ff6:	99 1f       	adc	r25, r25
    1ff8:	9c 01       	movw	r18, r24
    1ffa:	22 0f       	add	r18, r18
    1ffc:	33 1f       	adc	r19, r19
    1ffe:	22 0f       	add	r18, r18
    2000:	33 1f       	adc	r19, r19
    2002:	22 0f       	add	r18, r18
    2004:	33 1f       	adc	r19, r19
    2006:	82 0f       	add	r24, r18
    2008:	93 1f       	adc	r25, r19
    200a:	9c 01       	movw	r18, r24
    200c:	24 0f       	add	r18, r20
    200e:	35 1f       	adc	r19, r21
    2010:	8b 81       	ldd	r24, Y+3	; 0x03
    2012:	9c 81       	ldd	r25, Y+4	; 0x04
    2014:	fc 01       	movw	r30, r24
    2016:	e2 0f       	add	r30, r18
    2018:	f3 1f       	adc	r31, r19
    201a:	64 81       	ldd	r22, Z+4	; 0x04
    201c:	89 81       	ldd	r24, Y+1	; 0x01
    201e:	48 2f       	mov	r20, r24
    2020:	50 e0       	ldi	r21, 0x00	; 0
    2022:	ca 01       	movw	r24, r20
    2024:	88 0f       	add	r24, r24
    2026:	99 1f       	adc	r25, r25
    2028:	9c 01       	movw	r18, r24
    202a:	22 0f       	add	r18, r18
    202c:	33 1f       	adc	r19, r19
    202e:	22 0f       	add	r18, r18
    2030:	33 1f       	adc	r19, r19
    2032:	22 0f       	add	r18, r18
    2034:	33 1f       	adc	r19, r19
    2036:	82 0f       	add	r24, r18
    2038:	93 1f       	adc	r25, r19
    203a:	9c 01       	movw	r18, r24
    203c:	24 0f       	add	r18, r20
    203e:	35 1f       	adc	r19, r21
    2040:	8b 81       	ldd	r24, Y+3	; 0x03
    2042:	9c 81       	ldd	r25, Y+4	; 0x04
    2044:	fc 01       	movw	r30, r24
    2046:	e2 0f       	add	r30, r18
    2048:	f3 1f       	adc	r31, r19
    204a:	95 81       	ldd	r25, Z+5	; 0x05
    204c:	86 2f       	mov	r24, r22
    204e:	69 2f       	mov	r22, r25
    2050:	40 e0       	ldi	r20, 0x00	; 0
    2052:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2056:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2058:	8a 81       	ldd	r24, Y+2	; 0x02
    205a:	81 30       	cpi	r24, 0x01	; 1
    205c:	19 f0       	breq	.+6      	; 0x2064 <SEV_SEG_enumInit+0x50e>
    205e:	8a 81       	ldd	r24, Y+2	; 0x02
    2060:	8d 83       	std	Y+5, r24	; 0x05
    2062:	6e c5       	rjmp	.+2780   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPin,LOW);
    2064:	89 81       	ldd	r24, Y+1	; 0x01
    2066:	48 2f       	mov	r20, r24
    2068:	50 e0       	ldi	r21, 0x00	; 0
    206a:	ca 01       	movw	r24, r20
    206c:	88 0f       	add	r24, r24
    206e:	99 1f       	adc	r25, r25
    2070:	9c 01       	movw	r18, r24
    2072:	22 0f       	add	r18, r18
    2074:	33 1f       	adc	r19, r19
    2076:	22 0f       	add	r18, r18
    2078:	33 1f       	adc	r19, r19
    207a:	22 0f       	add	r18, r18
    207c:	33 1f       	adc	r19, r19
    207e:	82 0f       	add	r24, r18
    2080:	93 1f       	adc	r25, r19
    2082:	9c 01       	movw	r18, r24
    2084:	24 0f       	add	r18, r20
    2086:	35 1f       	adc	r19, r21
    2088:	8b 81       	ldd	r24, Y+3	; 0x03
    208a:	9c 81       	ldd	r25, Y+4	; 0x04
    208c:	fc 01       	movw	r30, r24
    208e:	e2 0f       	add	r30, r18
    2090:	f3 1f       	adc	r31, r19
    2092:	66 81       	ldd	r22, Z+6	; 0x06
    2094:	89 81       	ldd	r24, Y+1	; 0x01
    2096:	48 2f       	mov	r20, r24
    2098:	50 e0       	ldi	r21, 0x00	; 0
    209a:	ca 01       	movw	r24, r20
    209c:	88 0f       	add	r24, r24
    209e:	99 1f       	adc	r25, r25
    20a0:	9c 01       	movw	r18, r24
    20a2:	22 0f       	add	r18, r18
    20a4:	33 1f       	adc	r19, r19
    20a6:	22 0f       	add	r18, r18
    20a8:	33 1f       	adc	r19, r19
    20aa:	22 0f       	add	r18, r18
    20ac:	33 1f       	adc	r19, r19
    20ae:	82 0f       	add	r24, r18
    20b0:	93 1f       	adc	r25, r19
    20b2:	9c 01       	movw	r18, r24
    20b4:	24 0f       	add	r18, r20
    20b6:	35 1f       	adc	r19, r21
    20b8:	8b 81       	ldd	r24, Y+3	; 0x03
    20ba:	9c 81       	ldd	r25, Y+4	; 0x04
    20bc:	fc 01       	movw	r30, r24
    20be:	e2 0f       	add	r30, r18
    20c0:	f3 1f       	adc	r31, r19
    20c2:	97 81       	ldd	r25, Z+7	; 0x07
    20c4:	86 2f       	mov	r24, r22
    20c6:	69 2f       	mov	r22, r25
    20c8:	40 e0       	ldi	r20, 0x00	; 0
    20ca:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    20ce:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    20d0:	8a 81       	ldd	r24, Y+2	; 0x02
    20d2:	81 30       	cpi	r24, 0x01	; 1
    20d4:	19 f0       	breq	.+6      	; 0x20dc <SEV_SEG_enumInit+0x586>
    20d6:	8a 81       	ldd	r24, Y+2	; 0x02
    20d8:	8d 83       	std	Y+5, r24	; 0x05
    20da:	32 c5       	rjmp	.+2660   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPin,LOW);
    20dc:	89 81       	ldd	r24, Y+1	; 0x01
    20de:	48 2f       	mov	r20, r24
    20e0:	50 e0       	ldi	r21, 0x00	; 0
    20e2:	ca 01       	movw	r24, r20
    20e4:	88 0f       	add	r24, r24
    20e6:	99 1f       	adc	r25, r25
    20e8:	9c 01       	movw	r18, r24
    20ea:	22 0f       	add	r18, r18
    20ec:	33 1f       	adc	r19, r19
    20ee:	22 0f       	add	r18, r18
    20f0:	33 1f       	adc	r19, r19
    20f2:	22 0f       	add	r18, r18
    20f4:	33 1f       	adc	r19, r19
    20f6:	82 0f       	add	r24, r18
    20f8:	93 1f       	adc	r25, r19
    20fa:	9c 01       	movw	r18, r24
    20fc:	24 0f       	add	r18, r20
    20fe:	35 1f       	adc	r19, r21
    2100:	8b 81       	ldd	r24, Y+3	; 0x03
    2102:	9c 81       	ldd	r25, Y+4	; 0x04
    2104:	fc 01       	movw	r30, r24
    2106:	e2 0f       	add	r30, r18
    2108:	f3 1f       	adc	r31, r19
    210a:	60 85       	ldd	r22, Z+8	; 0x08
    210c:	89 81       	ldd	r24, Y+1	; 0x01
    210e:	48 2f       	mov	r20, r24
    2110:	50 e0       	ldi	r21, 0x00	; 0
    2112:	ca 01       	movw	r24, r20
    2114:	88 0f       	add	r24, r24
    2116:	99 1f       	adc	r25, r25
    2118:	9c 01       	movw	r18, r24
    211a:	22 0f       	add	r18, r18
    211c:	33 1f       	adc	r19, r19
    211e:	22 0f       	add	r18, r18
    2120:	33 1f       	adc	r19, r19
    2122:	22 0f       	add	r18, r18
    2124:	33 1f       	adc	r19, r19
    2126:	82 0f       	add	r24, r18
    2128:	93 1f       	adc	r25, r19
    212a:	9c 01       	movw	r18, r24
    212c:	24 0f       	add	r18, r20
    212e:	35 1f       	adc	r19, r21
    2130:	8b 81       	ldd	r24, Y+3	; 0x03
    2132:	9c 81       	ldd	r25, Y+4	; 0x04
    2134:	fc 01       	movw	r30, r24
    2136:	e2 0f       	add	r30, r18
    2138:	f3 1f       	adc	r31, r19
    213a:	91 85       	ldd	r25, Z+9	; 0x09
    213c:	86 2f       	mov	r24, r22
    213e:	69 2f       	mov	r22, r25
    2140:	40 e0       	ldi	r20, 0x00	; 0
    2142:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2146:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2148:	8a 81       	ldd	r24, Y+2	; 0x02
    214a:	81 30       	cpi	r24, 0x01	; 1
    214c:	19 f0       	breq	.+6      	; 0x2154 <SEV_SEG_enumInit+0x5fe>
    214e:	8a 81       	ldd	r24, Y+2	; 0x02
    2150:	8d 83       	std	Y+5, r24	; 0x05
    2152:	f6 c4       	rjmp	.+2540   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPin,LOW);
    2154:	89 81       	ldd	r24, Y+1	; 0x01
    2156:	48 2f       	mov	r20, r24
    2158:	50 e0       	ldi	r21, 0x00	; 0
    215a:	ca 01       	movw	r24, r20
    215c:	88 0f       	add	r24, r24
    215e:	99 1f       	adc	r25, r25
    2160:	9c 01       	movw	r18, r24
    2162:	22 0f       	add	r18, r18
    2164:	33 1f       	adc	r19, r19
    2166:	22 0f       	add	r18, r18
    2168:	33 1f       	adc	r19, r19
    216a:	22 0f       	add	r18, r18
    216c:	33 1f       	adc	r19, r19
    216e:	82 0f       	add	r24, r18
    2170:	93 1f       	adc	r25, r19
    2172:	9c 01       	movw	r18, r24
    2174:	24 0f       	add	r18, r20
    2176:	35 1f       	adc	r19, r21
    2178:	8b 81       	ldd	r24, Y+3	; 0x03
    217a:	9c 81       	ldd	r25, Y+4	; 0x04
    217c:	fc 01       	movw	r30, r24
    217e:	e2 0f       	add	r30, r18
    2180:	f3 1f       	adc	r31, r19
    2182:	62 85       	ldd	r22, Z+10	; 0x0a
    2184:	89 81       	ldd	r24, Y+1	; 0x01
    2186:	48 2f       	mov	r20, r24
    2188:	50 e0       	ldi	r21, 0x00	; 0
    218a:	ca 01       	movw	r24, r20
    218c:	88 0f       	add	r24, r24
    218e:	99 1f       	adc	r25, r25
    2190:	9c 01       	movw	r18, r24
    2192:	22 0f       	add	r18, r18
    2194:	33 1f       	adc	r19, r19
    2196:	22 0f       	add	r18, r18
    2198:	33 1f       	adc	r19, r19
    219a:	22 0f       	add	r18, r18
    219c:	33 1f       	adc	r19, r19
    219e:	82 0f       	add	r24, r18
    21a0:	93 1f       	adc	r25, r19
    21a2:	9c 01       	movw	r18, r24
    21a4:	24 0f       	add	r18, r20
    21a6:	35 1f       	adc	r19, r21
    21a8:	8b 81       	ldd	r24, Y+3	; 0x03
    21aa:	9c 81       	ldd	r25, Y+4	; 0x04
    21ac:	fc 01       	movw	r30, r24
    21ae:	e2 0f       	add	r30, r18
    21b0:	f3 1f       	adc	r31, r19
    21b2:	93 85       	ldd	r25, Z+11	; 0x0b
    21b4:	86 2f       	mov	r24, r22
    21b6:	69 2f       	mov	r22, r25
    21b8:	40 e0       	ldi	r20, 0x00	; 0
    21ba:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    21be:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    21c0:	8a 81       	ldd	r24, Y+2	; 0x02
    21c2:	81 30       	cpi	r24, 0x01	; 1
    21c4:	19 f0       	breq	.+6      	; 0x21cc <SEV_SEG_enumInit+0x676>
    21c6:	8a 81       	ldd	r24, Y+2	; 0x02
    21c8:	8d 83       	std	Y+5, r24	; 0x05
    21ca:	ba c4       	rjmp	.+2420   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPin,LOW);
    21cc:	89 81       	ldd	r24, Y+1	; 0x01
    21ce:	48 2f       	mov	r20, r24
    21d0:	50 e0       	ldi	r21, 0x00	; 0
    21d2:	ca 01       	movw	r24, r20
    21d4:	88 0f       	add	r24, r24
    21d6:	99 1f       	adc	r25, r25
    21d8:	9c 01       	movw	r18, r24
    21da:	22 0f       	add	r18, r18
    21dc:	33 1f       	adc	r19, r19
    21de:	22 0f       	add	r18, r18
    21e0:	33 1f       	adc	r19, r19
    21e2:	22 0f       	add	r18, r18
    21e4:	33 1f       	adc	r19, r19
    21e6:	82 0f       	add	r24, r18
    21e8:	93 1f       	adc	r25, r19
    21ea:	9c 01       	movw	r18, r24
    21ec:	24 0f       	add	r18, r20
    21ee:	35 1f       	adc	r19, r21
    21f0:	8b 81       	ldd	r24, Y+3	; 0x03
    21f2:	9c 81       	ldd	r25, Y+4	; 0x04
    21f4:	fc 01       	movw	r30, r24
    21f6:	e2 0f       	add	r30, r18
    21f8:	f3 1f       	adc	r31, r19
    21fa:	64 85       	ldd	r22, Z+12	; 0x0c
    21fc:	89 81       	ldd	r24, Y+1	; 0x01
    21fe:	48 2f       	mov	r20, r24
    2200:	50 e0       	ldi	r21, 0x00	; 0
    2202:	ca 01       	movw	r24, r20
    2204:	88 0f       	add	r24, r24
    2206:	99 1f       	adc	r25, r25
    2208:	9c 01       	movw	r18, r24
    220a:	22 0f       	add	r18, r18
    220c:	33 1f       	adc	r19, r19
    220e:	22 0f       	add	r18, r18
    2210:	33 1f       	adc	r19, r19
    2212:	22 0f       	add	r18, r18
    2214:	33 1f       	adc	r19, r19
    2216:	82 0f       	add	r24, r18
    2218:	93 1f       	adc	r25, r19
    221a:	9c 01       	movw	r18, r24
    221c:	24 0f       	add	r18, r20
    221e:	35 1f       	adc	r19, r21
    2220:	8b 81       	ldd	r24, Y+3	; 0x03
    2222:	9c 81       	ldd	r25, Y+4	; 0x04
    2224:	fc 01       	movw	r30, r24
    2226:	e2 0f       	add	r30, r18
    2228:	f3 1f       	adc	r31, r19
    222a:	95 85       	ldd	r25, Z+13	; 0x0d
    222c:	86 2f       	mov	r24, r22
    222e:	69 2f       	mov	r22, r25
    2230:	40 e0       	ldi	r20, 0x00	; 0
    2232:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2236:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2238:	8a 81       	ldd	r24, Y+2	; 0x02
    223a:	81 30       	cpi	r24, 0x01	; 1
    223c:	09 f4       	brne	.+2      	; 0x2240 <SEV_SEG_enumInit+0x6ea>
    223e:	c4 c1       	rjmp	.+904    	; 0x25c8 <SEV_SEG_enumInit+0xa72>
    2240:	8a 81       	ldd	r24, Y+2	; 0x02
    2242:	8d 83       	std	Y+5, r24	; 0x05
    2244:	7d c4       	rjmp	.+2298   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
			}
			else if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_ANODE)
    2246:	89 81       	ldd	r24, Y+1	; 0x01
    2248:	48 2f       	mov	r20, r24
    224a:	50 e0       	ldi	r21, 0x00	; 0
    224c:	ca 01       	movw	r24, r20
    224e:	88 0f       	add	r24, r24
    2250:	99 1f       	adc	r25, r25
    2252:	9c 01       	movw	r18, r24
    2254:	22 0f       	add	r18, r18
    2256:	33 1f       	adc	r19, r19
    2258:	22 0f       	add	r18, r18
    225a:	33 1f       	adc	r19, r19
    225c:	22 0f       	add	r18, r18
    225e:	33 1f       	adc	r19, r19
    2260:	82 0f       	add	r24, r18
    2262:	93 1f       	adc	r25, r19
    2264:	9c 01       	movw	r18, r24
    2266:	24 0f       	add	r18, r20
    2268:	35 1f       	adc	r19, r21
    226a:	8b 81       	ldd	r24, Y+3	; 0x03
    226c:	9c 81       	ldd	r25, Y+4	; 0x04
    226e:	fc 01       	movw	r30, r24
    2270:	e2 0f       	add	r30, r18
    2272:	f3 1f       	adc	r31, r19
    2274:	82 89       	ldd	r24, Z+18	; 0x12
    2276:	88 23       	and	r24, r24
    2278:	09 f0       	breq	.+2      	; 0x227c <SEV_SEG_enumInit+0x726>
    227a:	a4 c1       	rjmp	.+840    	; 0x25c4 <SEV_SEG_enumInit+0xa6e>
			{
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APin,HIGH);
    227c:	89 81       	ldd	r24, Y+1	; 0x01
    227e:	48 2f       	mov	r20, r24
    2280:	50 e0       	ldi	r21, 0x00	; 0
    2282:	ca 01       	movw	r24, r20
    2284:	88 0f       	add	r24, r24
    2286:	99 1f       	adc	r25, r25
    2288:	9c 01       	movw	r18, r24
    228a:	22 0f       	add	r18, r18
    228c:	33 1f       	adc	r19, r19
    228e:	22 0f       	add	r18, r18
    2290:	33 1f       	adc	r19, r19
    2292:	22 0f       	add	r18, r18
    2294:	33 1f       	adc	r19, r19
    2296:	82 0f       	add	r24, r18
    2298:	93 1f       	adc	r25, r19
    229a:	9c 01       	movw	r18, r24
    229c:	24 0f       	add	r18, r20
    229e:	35 1f       	adc	r19, r21
    22a0:	8b 81       	ldd	r24, Y+3	; 0x03
    22a2:	9c 81       	ldd	r25, Y+4	; 0x04
    22a4:	fc 01       	movw	r30, r24
    22a6:	e2 0f       	add	r30, r18
    22a8:	f3 1f       	adc	r31, r19
    22aa:	60 81       	ld	r22, Z
    22ac:	89 81       	ldd	r24, Y+1	; 0x01
    22ae:	48 2f       	mov	r20, r24
    22b0:	50 e0       	ldi	r21, 0x00	; 0
    22b2:	ca 01       	movw	r24, r20
    22b4:	88 0f       	add	r24, r24
    22b6:	99 1f       	adc	r25, r25
    22b8:	9c 01       	movw	r18, r24
    22ba:	22 0f       	add	r18, r18
    22bc:	33 1f       	adc	r19, r19
    22be:	22 0f       	add	r18, r18
    22c0:	33 1f       	adc	r19, r19
    22c2:	22 0f       	add	r18, r18
    22c4:	33 1f       	adc	r19, r19
    22c6:	82 0f       	add	r24, r18
    22c8:	93 1f       	adc	r25, r19
    22ca:	9c 01       	movw	r18, r24
    22cc:	24 0f       	add	r18, r20
    22ce:	35 1f       	adc	r19, r21
    22d0:	8b 81       	ldd	r24, Y+3	; 0x03
    22d2:	9c 81       	ldd	r25, Y+4	; 0x04
    22d4:	fc 01       	movw	r30, r24
    22d6:	e2 0f       	add	r30, r18
    22d8:	f3 1f       	adc	r31, r19
    22da:	91 81       	ldd	r25, Z+1	; 0x01
    22dc:	86 2f       	mov	r24, r22
    22de:	69 2f       	mov	r22, r25
    22e0:	41 e0       	ldi	r20, 0x01	; 1
    22e2:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    22e6:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    22e8:	8a 81       	ldd	r24, Y+2	; 0x02
    22ea:	81 30       	cpi	r24, 0x01	; 1
    22ec:	19 f0       	breq	.+6      	; 0x22f4 <SEV_SEG_enumInit+0x79e>
    22ee:	8a 81       	ldd	r24, Y+2	; 0x02
    22f0:	8d 83       	std	Y+5, r24	; 0x05
    22f2:	26 c4       	rjmp	.+2124   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPin,HIGH);
    22f4:	89 81       	ldd	r24, Y+1	; 0x01
    22f6:	48 2f       	mov	r20, r24
    22f8:	50 e0       	ldi	r21, 0x00	; 0
    22fa:	ca 01       	movw	r24, r20
    22fc:	88 0f       	add	r24, r24
    22fe:	99 1f       	adc	r25, r25
    2300:	9c 01       	movw	r18, r24
    2302:	22 0f       	add	r18, r18
    2304:	33 1f       	adc	r19, r19
    2306:	22 0f       	add	r18, r18
    2308:	33 1f       	adc	r19, r19
    230a:	22 0f       	add	r18, r18
    230c:	33 1f       	adc	r19, r19
    230e:	82 0f       	add	r24, r18
    2310:	93 1f       	adc	r25, r19
    2312:	9c 01       	movw	r18, r24
    2314:	24 0f       	add	r18, r20
    2316:	35 1f       	adc	r19, r21
    2318:	8b 81       	ldd	r24, Y+3	; 0x03
    231a:	9c 81       	ldd	r25, Y+4	; 0x04
    231c:	fc 01       	movw	r30, r24
    231e:	e2 0f       	add	r30, r18
    2320:	f3 1f       	adc	r31, r19
    2322:	62 81       	ldd	r22, Z+2	; 0x02
    2324:	89 81       	ldd	r24, Y+1	; 0x01
    2326:	48 2f       	mov	r20, r24
    2328:	50 e0       	ldi	r21, 0x00	; 0
    232a:	ca 01       	movw	r24, r20
    232c:	88 0f       	add	r24, r24
    232e:	99 1f       	adc	r25, r25
    2330:	9c 01       	movw	r18, r24
    2332:	22 0f       	add	r18, r18
    2334:	33 1f       	adc	r19, r19
    2336:	22 0f       	add	r18, r18
    2338:	33 1f       	adc	r19, r19
    233a:	22 0f       	add	r18, r18
    233c:	33 1f       	adc	r19, r19
    233e:	82 0f       	add	r24, r18
    2340:	93 1f       	adc	r25, r19
    2342:	9c 01       	movw	r18, r24
    2344:	24 0f       	add	r18, r20
    2346:	35 1f       	adc	r19, r21
    2348:	8b 81       	ldd	r24, Y+3	; 0x03
    234a:	9c 81       	ldd	r25, Y+4	; 0x04
    234c:	fc 01       	movw	r30, r24
    234e:	e2 0f       	add	r30, r18
    2350:	f3 1f       	adc	r31, r19
    2352:	93 81       	ldd	r25, Z+3	; 0x03
    2354:	86 2f       	mov	r24, r22
    2356:	69 2f       	mov	r22, r25
    2358:	41 e0       	ldi	r20, 0x01	; 1
    235a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    235e:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2360:	8a 81       	ldd	r24, Y+2	; 0x02
    2362:	81 30       	cpi	r24, 0x01	; 1
    2364:	19 f0       	breq	.+6      	; 0x236c <SEV_SEG_enumInit+0x816>
    2366:	8a 81       	ldd	r24, Y+2	; 0x02
    2368:	8d 83       	std	Y+5, r24	; 0x05
    236a:	ea c3       	rjmp	.+2004   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPin,HIGH);
    236c:	89 81       	ldd	r24, Y+1	; 0x01
    236e:	48 2f       	mov	r20, r24
    2370:	50 e0       	ldi	r21, 0x00	; 0
    2372:	ca 01       	movw	r24, r20
    2374:	88 0f       	add	r24, r24
    2376:	99 1f       	adc	r25, r25
    2378:	9c 01       	movw	r18, r24
    237a:	22 0f       	add	r18, r18
    237c:	33 1f       	adc	r19, r19
    237e:	22 0f       	add	r18, r18
    2380:	33 1f       	adc	r19, r19
    2382:	22 0f       	add	r18, r18
    2384:	33 1f       	adc	r19, r19
    2386:	82 0f       	add	r24, r18
    2388:	93 1f       	adc	r25, r19
    238a:	9c 01       	movw	r18, r24
    238c:	24 0f       	add	r18, r20
    238e:	35 1f       	adc	r19, r21
    2390:	8b 81       	ldd	r24, Y+3	; 0x03
    2392:	9c 81       	ldd	r25, Y+4	; 0x04
    2394:	fc 01       	movw	r30, r24
    2396:	e2 0f       	add	r30, r18
    2398:	f3 1f       	adc	r31, r19
    239a:	64 81       	ldd	r22, Z+4	; 0x04
    239c:	89 81       	ldd	r24, Y+1	; 0x01
    239e:	48 2f       	mov	r20, r24
    23a0:	50 e0       	ldi	r21, 0x00	; 0
    23a2:	ca 01       	movw	r24, r20
    23a4:	88 0f       	add	r24, r24
    23a6:	99 1f       	adc	r25, r25
    23a8:	9c 01       	movw	r18, r24
    23aa:	22 0f       	add	r18, r18
    23ac:	33 1f       	adc	r19, r19
    23ae:	22 0f       	add	r18, r18
    23b0:	33 1f       	adc	r19, r19
    23b2:	22 0f       	add	r18, r18
    23b4:	33 1f       	adc	r19, r19
    23b6:	82 0f       	add	r24, r18
    23b8:	93 1f       	adc	r25, r19
    23ba:	9c 01       	movw	r18, r24
    23bc:	24 0f       	add	r18, r20
    23be:	35 1f       	adc	r19, r21
    23c0:	8b 81       	ldd	r24, Y+3	; 0x03
    23c2:	9c 81       	ldd	r25, Y+4	; 0x04
    23c4:	fc 01       	movw	r30, r24
    23c6:	e2 0f       	add	r30, r18
    23c8:	f3 1f       	adc	r31, r19
    23ca:	95 81       	ldd	r25, Z+5	; 0x05
    23cc:	86 2f       	mov	r24, r22
    23ce:	69 2f       	mov	r22, r25
    23d0:	41 e0       	ldi	r20, 0x01	; 1
    23d2:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    23d6:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    23d8:	8a 81       	ldd	r24, Y+2	; 0x02
    23da:	81 30       	cpi	r24, 0x01	; 1
    23dc:	19 f0       	breq	.+6      	; 0x23e4 <SEV_SEG_enumInit+0x88e>
    23de:	8a 81       	ldd	r24, Y+2	; 0x02
    23e0:	8d 83       	std	Y+5, r24	; 0x05
    23e2:	ae c3       	rjmp	.+1884   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPin,HIGH);
    23e4:	89 81       	ldd	r24, Y+1	; 0x01
    23e6:	48 2f       	mov	r20, r24
    23e8:	50 e0       	ldi	r21, 0x00	; 0
    23ea:	ca 01       	movw	r24, r20
    23ec:	88 0f       	add	r24, r24
    23ee:	99 1f       	adc	r25, r25
    23f0:	9c 01       	movw	r18, r24
    23f2:	22 0f       	add	r18, r18
    23f4:	33 1f       	adc	r19, r19
    23f6:	22 0f       	add	r18, r18
    23f8:	33 1f       	adc	r19, r19
    23fa:	22 0f       	add	r18, r18
    23fc:	33 1f       	adc	r19, r19
    23fe:	82 0f       	add	r24, r18
    2400:	93 1f       	adc	r25, r19
    2402:	9c 01       	movw	r18, r24
    2404:	24 0f       	add	r18, r20
    2406:	35 1f       	adc	r19, r21
    2408:	8b 81       	ldd	r24, Y+3	; 0x03
    240a:	9c 81       	ldd	r25, Y+4	; 0x04
    240c:	fc 01       	movw	r30, r24
    240e:	e2 0f       	add	r30, r18
    2410:	f3 1f       	adc	r31, r19
    2412:	66 81       	ldd	r22, Z+6	; 0x06
    2414:	89 81       	ldd	r24, Y+1	; 0x01
    2416:	48 2f       	mov	r20, r24
    2418:	50 e0       	ldi	r21, 0x00	; 0
    241a:	ca 01       	movw	r24, r20
    241c:	88 0f       	add	r24, r24
    241e:	99 1f       	adc	r25, r25
    2420:	9c 01       	movw	r18, r24
    2422:	22 0f       	add	r18, r18
    2424:	33 1f       	adc	r19, r19
    2426:	22 0f       	add	r18, r18
    2428:	33 1f       	adc	r19, r19
    242a:	22 0f       	add	r18, r18
    242c:	33 1f       	adc	r19, r19
    242e:	82 0f       	add	r24, r18
    2430:	93 1f       	adc	r25, r19
    2432:	9c 01       	movw	r18, r24
    2434:	24 0f       	add	r18, r20
    2436:	35 1f       	adc	r19, r21
    2438:	8b 81       	ldd	r24, Y+3	; 0x03
    243a:	9c 81       	ldd	r25, Y+4	; 0x04
    243c:	fc 01       	movw	r30, r24
    243e:	e2 0f       	add	r30, r18
    2440:	f3 1f       	adc	r31, r19
    2442:	97 81       	ldd	r25, Z+7	; 0x07
    2444:	86 2f       	mov	r24, r22
    2446:	69 2f       	mov	r22, r25
    2448:	41 e0       	ldi	r20, 0x01	; 1
    244a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    244e:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2450:	8a 81       	ldd	r24, Y+2	; 0x02
    2452:	81 30       	cpi	r24, 0x01	; 1
    2454:	19 f0       	breq	.+6      	; 0x245c <SEV_SEG_enumInit+0x906>
    2456:	8a 81       	ldd	r24, Y+2	; 0x02
    2458:	8d 83       	std	Y+5, r24	; 0x05
    245a:	72 c3       	rjmp	.+1764   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPin,HIGH);
    245c:	89 81       	ldd	r24, Y+1	; 0x01
    245e:	48 2f       	mov	r20, r24
    2460:	50 e0       	ldi	r21, 0x00	; 0
    2462:	ca 01       	movw	r24, r20
    2464:	88 0f       	add	r24, r24
    2466:	99 1f       	adc	r25, r25
    2468:	9c 01       	movw	r18, r24
    246a:	22 0f       	add	r18, r18
    246c:	33 1f       	adc	r19, r19
    246e:	22 0f       	add	r18, r18
    2470:	33 1f       	adc	r19, r19
    2472:	22 0f       	add	r18, r18
    2474:	33 1f       	adc	r19, r19
    2476:	82 0f       	add	r24, r18
    2478:	93 1f       	adc	r25, r19
    247a:	9c 01       	movw	r18, r24
    247c:	24 0f       	add	r18, r20
    247e:	35 1f       	adc	r19, r21
    2480:	8b 81       	ldd	r24, Y+3	; 0x03
    2482:	9c 81       	ldd	r25, Y+4	; 0x04
    2484:	fc 01       	movw	r30, r24
    2486:	e2 0f       	add	r30, r18
    2488:	f3 1f       	adc	r31, r19
    248a:	60 85       	ldd	r22, Z+8	; 0x08
    248c:	89 81       	ldd	r24, Y+1	; 0x01
    248e:	48 2f       	mov	r20, r24
    2490:	50 e0       	ldi	r21, 0x00	; 0
    2492:	ca 01       	movw	r24, r20
    2494:	88 0f       	add	r24, r24
    2496:	99 1f       	adc	r25, r25
    2498:	9c 01       	movw	r18, r24
    249a:	22 0f       	add	r18, r18
    249c:	33 1f       	adc	r19, r19
    249e:	22 0f       	add	r18, r18
    24a0:	33 1f       	adc	r19, r19
    24a2:	22 0f       	add	r18, r18
    24a4:	33 1f       	adc	r19, r19
    24a6:	82 0f       	add	r24, r18
    24a8:	93 1f       	adc	r25, r19
    24aa:	9c 01       	movw	r18, r24
    24ac:	24 0f       	add	r18, r20
    24ae:	35 1f       	adc	r19, r21
    24b0:	8b 81       	ldd	r24, Y+3	; 0x03
    24b2:	9c 81       	ldd	r25, Y+4	; 0x04
    24b4:	fc 01       	movw	r30, r24
    24b6:	e2 0f       	add	r30, r18
    24b8:	f3 1f       	adc	r31, r19
    24ba:	91 85       	ldd	r25, Z+9	; 0x09
    24bc:	86 2f       	mov	r24, r22
    24be:	69 2f       	mov	r22, r25
    24c0:	41 e0       	ldi	r20, 0x01	; 1
    24c2:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    24c6:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    24c8:	8a 81       	ldd	r24, Y+2	; 0x02
    24ca:	81 30       	cpi	r24, 0x01	; 1
    24cc:	19 f0       	breq	.+6      	; 0x24d4 <SEV_SEG_enumInit+0x97e>
    24ce:	8a 81       	ldd	r24, Y+2	; 0x02
    24d0:	8d 83       	std	Y+5, r24	; 0x05
    24d2:	36 c3       	rjmp	.+1644   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPin,HIGH);
    24d4:	89 81       	ldd	r24, Y+1	; 0x01
    24d6:	48 2f       	mov	r20, r24
    24d8:	50 e0       	ldi	r21, 0x00	; 0
    24da:	ca 01       	movw	r24, r20
    24dc:	88 0f       	add	r24, r24
    24de:	99 1f       	adc	r25, r25
    24e0:	9c 01       	movw	r18, r24
    24e2:	22 0f       	add	r18, r18
    24e4:	33 1f       	adc	r19, r19
    24e6:	22 0f       	add	r18, r18
    24e8:	33 1f       	adc	r19, r19
    24ea:	22 0f       	add	r18, r18
    24ec:	33 1f       	adc	r19, r19
    24ee:	82 0f       	add	r24, r18
    24f0:	93 1f       	adc	r25, r19
    24f2:	9c 01       	movw	r18, r24
    24f4:	24 0f       	add	r18, r20
    24f6:	35 1f       	adc	r19, r21
    24f8:	8b 81       	ldd	r24, Y+3	; 0x03
    24fa:	9c 81       	ldd	r25, Y+4	; 0x04
    24fc:	fc 01       	movw	r30, r24
    24fe:	e2 0f       	add	r30, r18
    2500:	f3 1f       	adc	r31, r19
    2502:	62 85       	ldd	r22, Z+10	; 0x0a
    2504:	89 81       	ldd	r24, Y+1	; 0x01
    2506:	48 2f       	mov	r20, r24
    2508:	50 e0       	ldi	r21, 0x00	; 0
    250a:	ca 01       	movw	r24, r20
    250c:	88 0f       	add	r24, r24
    250e:	99 1f       	adc	r25, r25
    2510:	9c 01       	movw	r18, r24
    2512:	22 0f       	add	r18, r18
    2514:	33 1f       	adc	r19, r19
    2516:	22 0f       	add	r18, r18
    2518:	33 1f       	adc	r19, r19
    251a:	22 0f       	add	r18, r18
    251c:	33 1f       	adc	r19, r19
    251e:	82 0f       	add	r24, r18
    2520:	93 1f       	adc	r25, r19
    2522:	9c 01       	movw	r18, r24
    2524:	24 0f       	add	r18, r20
    2526:	35 1f       	adc	r19, r21
    2528:	8b 81       	ldd	r24, Y+3	; 0x03
    252a:	9c 81       	ldd	r25, Y+4	; 0x04
    252c:	fc 01       	movw	r30, r24
    252e:	e2 0f       	add	r30, r18
    2530:	f3 1f       	adc	r31, r19
    2532:	93 85       	ldd	r25, Z+11	; 0x0b
    2534:	86 2f       	mov	r24, r22
    2536:	69 2f       	mov	r22, r25
    2538:	41 e0       	ldi	r20, 0x01	; 1
    253a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    253e:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2540:	8a 81       	ldd	r24, Y+2	; 0x02
    2542:	81 30       	cpi	r24, 0x01	; 1
    2544:	19 f0       	breq	.+6      	; 0x254c <SEV_SEG_enumInit+0x9f6>
    2546:	8a 81       	ldd	r24, Y+2	; 0x02
    2548:	8d 83       	std	Y+5, r24	; 0x05
    254a:	fa c2       	rjmp	.+1524   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPin,HIGH);
    254c:	89 81       	ldd	r24, Y+1	; 0x01
    254e:	48 2f       	mov	r20, r24
    2550:	50 e0       	ldi	r21, 0x00	; 0
    2552:	ca 01       	movw	r24, r20
    2554:	88 0f       	add	r24, r24
    2556:	99 1f       	adc	r25, r25
    2558:	9c 01       	movw	r18, r24
    255a:	22 0f       	add	r18, r18
    255c:	33 1f       	adc	r19, r19
    255e:	22 0f       	add	r18, r18
    2560:	33 1f       	adc	r19, r19
    2562:	22 0f       	add	r18, r18
    2564:	33 1f       	adc	r19, r19
    2566:	82 0f       	add	r24, r18
    2568:	93 1f       	adc	r25, r19
    256a:	9c 01       	movw	r18, r24
    256c:	24 0f       	add	r18, r20
    256e:	35 1f       	adc	r19, r21
    2570:	8b 81       	ldd	r24, Y+3	; 0x03
    2572:	9c 81       	ldd	r25, Y+4	; 0x04
    2574:	fc 01       	movw	r30, r24
    2576:	e2 0f       	add	r30, r18
    2578:	f3 1f       	adc	r31, r19
    257a:	64 85       	ldd	r22, Z+12	; 0x0c
    257c:	89 81       	ldd	r24, Y+1	; 0x01
    257e:	48 2f       	mov	r20, r24
    2580:	50 e0       	ldi	r21, 0x00	; 0
    2582:	ca 01       	movw	r24, r20
    2584:	88 0f       	add	r24, r24
    2586:	99 1f       	adc	r25, r25
    2588:	9c 01       	movw	r18, r24
    258a:	22 0f       	add	r18, r18
    258c:	33 1f       	adc	r19, r19
    258e:	22 0f       	add	r18, r18
    2590:	33 1f       	adc	r19, r19
    2592:	22 0f       	add	r18, r18
    2594:	33 1f       	adc	r19, r19
    2596:	82 0f       	add	r24, r18
    2598:	93 1f       	adc	r25, r19
    259a:	9c 01       	movw	r18, r24
    259c:	24 0f       	add	r18, r20
    259e:	35 1f       	adc	r19, r21
    25a0:	8b 81       	ldd	r24, Y+3	; 0x03
    25a2:	9c 81       	ldd	r25, Y+4	; 0x04
    25a4:	fc 01       	movw	r30, r24
    25a6:	e2 0f       	add	r30, r18
    25a8:	f3 1f       	adc	r31, r19
    25aa:	95 85       	ldd	r25, Z+13	; 0x0d
    25ac:	86 2f       	mov	r24, r22
    25ae:	69 2f       	mov	r22, r25
    25b0:	41 e0       	ldi	r20, 0x01	; 1
    25b2:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    25b6:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    25b8:	8a 81       	ldd	r24, Y+2	; 0x02
    25ba:	81 30       	cpi	r24, 0x01	; 1
    25bc:	29 f0       	breq	.+10     	; 0x25c8 <SEV_SEG_enumInit+0xa72>
    25be:	8a 81       	ldd	r24, Y+2	; 0x02
    25c0:	8d 83       	std	Y+5, r24	; 0x05
    25c2:	be c2       	rjmp	.+1404   	; 0x2b40 <SEV_SEG_enumInit+0xfea>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    25c4:	83 e0       	ldi	r24, 0x03	; 3
    25c6:	8a 83       	std	Y+2, r24	; 0x02
			}

			if (Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port<=DIO_PORTD
    25c8:	89 81       	ldd	r24, Y+1	; 0x01
    25ca:	48 2f       	mov	r20, r24
    25cc:	50 e0       	ldi	r21, 0x00	; 0
    25ce:	ca 01       	movw	r24, r20
    25d0:	88 0f       	add	r24, r24
    25d2:	99 1f       	adc	r25, r25
    25d4:	9c 01       	movw	r18, r24
    25d6:	22 0f       	add	r18, r18
    25d8:	33 1f       	adc	r19, r19
    25da:	22 0f       	add	r18, r18
    25dc:	33 1f       	adc	r19, r19
    25de:	22 0f       	add	r18, r18
    25e0:	33 1f       	adc	r19, r19
    25e2:	82 0f       	add	r24, r18
    25e4:	93 1f       	adc	r25, r19
    25e6:	9c 01       	movw	r18, r24
    25e8:	24 0f       	add	r18, r20
    25ea:	35 1f       	adc	r19, r21
    25ec:	8b 81       	ldd	r24, Y+3	; 0x03
    25ee:	9c 81       	ldd	r25, Y+4	; 0x04
    25f0:	fc 01       	movw	r30, r24
    25f2:	e2 0f       	add	r30, r18
    25f4:	f3 1f       	adc	r31, r19
    25f6:	86 85       	ldd	r24, Z+14	; 0x0e
    25f8:	84 30       	cpi	r24, 0x04	; 4
    25fa:	08 f0       	brcs	.+2      	; 0x25fe <SEV_SEG_enumInit+0xaa8>
    25fc:	07 c1       	rjmp	.+526    	; 0x280c <SEV_SEG_enumInit+0xcb6>
    25fe:	89 81       	ldd	r24, Y+1	; 0x01
    2600:	48 2f       	mov	r20, r24
    2602:	50 e0       	ldi	r21, 0x00	; 0
    2604:	ca 01       	movw	r24, r20
    2606:	88 0f       	add	r24, r24
    2608:	99 1f       	adc	r25, r25
    260a:	9c 01       	movw	r18, r24
    260c:	22 0f       	add	r18, r18
    260e:	33 1f       	adc	r19, r19
    2610:	22 0f       	add	r18, r18
    2612:	33 1f       	adc	r19, r19
    2614:	22 0f       	add	r18, r18
    2616:	33 1f       	adc	r19, r19
    2618:	82 0f       	add	r24, r18
    261a:	93 1f       	adc	r25, r19
    261c:	9c 01       	movw	r18, r24
    261e:	24 0f       	add	r18, r20
    2620:	35 1f       	adc	r19, r21
    2622:	8b 81       	ldd	r24, Y+3	; 0x03
    2624:	9c 81       	ldd	r25, Y+4	; 0x04
    2626:	fc 01       	movw	r30, r24
    2628:	e2 0f       	add	r30, r18
    262a:	f3 1f       	adc	r31, r19
    262c:	87 85       	ldd	r24, Z+15	; 0x0f
    262e:	88 30       	cpi	r24, 0x08	; 8
    2630:	08 f0       	brcs	.+2      	; 0x2634 <SEV_SEG_enumInit+0xade>
    2632:	ec c0       	rjmp	.+472    	; 0x280c <SEV_SEG_enumInit+0xcb6>
				&&Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Pin<=DIO_PIN7)
			{
				Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Pin,OUTPUT);
    2634:	89 81       	ldd	r24, Y+1	; 0x01
    2636:	48 2f       	mov	r20, r24
    2638:	50 e0       	ldi	r21, 0x00	; 0
    263a:	ca 01       	movw	r24, r20
    263c:	88 0f       	add	r24, r24
    263e:	99 1f       	adc	r25, r25
    2640:	9c 01       	movw	r18, r24
    2642:	22 0f       	add	r18, r18
    2644:	33 1f       	adc	r19, r19
    2646:	22 0f       	add	r18, r18
    2648:	33 1f       	adc	r19, r19
    264a:	22 0f       	add	r18, r18
    264c:	33 1f       	adc	r19, r19
    264e:	82 0f       	add	r24, r18
    2650:	93 1f       	adc	r25, r19
    2652:	9c 01       	movw	r18, r24
    2654:	24 0f       	add	r18, r20
    2656:	35 1f       	adc	r19, r21
    2658:	8b 81       	ldd	r24, Y+3	; 0x03
    265a:	9c 81       	ldd	r25, Y+4	; 0x04
    265c:	fc 01       	movw	r30, r24
    265e:	e2 0f       	add	r30, r18
    2660:	f3 1f       	adc	r31, r19
    2662:	66 85       	ldd	r22, Z+14	; 0x0e
    2664:	89 81       	ldd	r24, Y+1	; 0x01
    2666:	48 2f       	mov	r20, r24
    2668:	50 e0       	ldi	r21, 0x00	; 0
    266a:	ca 01       	movw	r24, r20
    266c:	88 0f       	add	r24, r24
    266e:	99 1f       	adc	r25, r25
    2670:	9c 01       	movw	r18, r24
    2672:	22 0f       	add	r18, r18
    2674:	33 1f       	adc	r19, r19
    2676:	22 0f       	add	r18, r18
    2678:	33 1f       	adc	r19, r19
    267a:	22 0f       	add	r18, r18
    267c:	33 1f       	adc	r19, r19
    267e:	82 0f       	add	r24, r18
    2680:	93 1f       	adc	r25, r19
    2682:	9c 01       	movw	r18, r24
    2684:	24 0f       	add	r18, r20
    2686:	35 1f       	adc	r19, r21
    2688:	8b 81       	ldd	r24, Y+3	; 0x03
    268a:	9c 81       	ldd	r25, Y+4	; 0x04
    268c:	fc 01       	movw	r30, r24
    268e:	e2 0f       	add	r30, r18
    2690:	f3 1f       	adc	r31, r19
    2692:	97 85       	ldd	r25, Z+15	; 0x0f
    2694:	86 2f       	mov	r24, r22
    2696:	69 2f       	mov	r22, r25
    2698:	41 e0       	ldi	r20, 0x01	; 1
    269a:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    269e:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    26a0:	8a 81       	ldd	r24, Y+2	; 0x02
    26a2:	81 30       	cpi	r24, 0x01	; 1
    26a4:	19 f0       	breq	.+6      	; 0x26ac <SEV_SEG_enumInit+0xb56>
    26a6:	8a 81       	ldd	r24, Y+2	; 0x02
    26a8:	8d 83       	std	Y+5, r24	; 0x05
    26aa:	4a c2       	rjmp	.+1172   	; 0x2b40 <SEV_SEG_enumInit+0xfea>

				if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_CATHODE)
    26ac:	89 81       	ldd	r24, Y+1	; 0x01
    26ae:	48 2f       	mov	r20, r24
    26b0:	50 e0       	ldi	r21, 0x00	; 0
    26b2:	ca 01       	movw	r24, r20
    26b4:	88 0f       	add	r24, r24
    26b6:	99 1f       	adc	r25, r25
    26b8:	9c 01       	movw	r18, r24
    26ba:	22 0f       	add	r18, r18
    26bc:	33 1f       	adc	r19, r19
    26be:	22 0f       	add	r18, r18
    26c0:	33 1f       	adc	r19, r19
    26c2:	22 0f       	add	r18, r18
    26c4:	33 1f       	adc	r19, r19
    26c6:	82 0f       	add	r24, r18
    26c8:	93 1f       	adc	r25, r19
    26ca:	9c 01       	movw	r18, r24
    26cc:	24 0f       	add	r18, r20
    26ce:	35 1f       	adc	r19, r21
    26d0:	8b 81       	ldd	r24, Y+3	; 0x03
    26d2:	9c 81       	ldd	r25, Y+4	; 0x04
    26d4:	fc 01       	movw	r30, r24
    26d6:	e2 0f       	add	r30, r18
    26d8:	f3 1f       	adc	r31, r19
    26da:	82 89       	ldd	r24, Z+18	; 0x12
    26dc:	81 30       	cpi	r24, 0x01	; 1
    26de:	e9 f5       	brne	.+122    	; 0x275a <SEV_SEG_enumInit+0xc04>
				{
					Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Pin,LOW);
    26e0:	89 81       	ldd	r24, Y+1	; 0x01
    26e2:	48 2f       	mov	r20, r24
    26e4:	50 e0       	ldi	r21, 0x00	; 0
    26e6:	ca 01       	movw	r24, r20
    26e8:	88 0f       	add	r24, r24
    26ea:	99 1f       	adc	r25, r25
    26ec:	9c 01       	movw	r18, r24
    26ee:	22 0f       	add	r18, r18
    26f0:	33 1f       	adc	r19, r19
    26f2:	22 0f       	add	r18, r18
    26f4:	33 1f       	adc	r19, r19
    26f6:	22 0f       	add	r18, r18
    26f8:	33 1f       	adc	r19, r19
    26fa:	82 0f       	add	r24, r18
    26fc:	93 1f       	adc	r25, r19
    26fe:	9c 01       	movw	r18, r24
    2700:	24 0f       	add	r18, r20
    2702:	35 1f       	adc	r19, r21
    2704:	8b 81       	ldd	r24, Y+3	; 0x03
    2706:	9c 81       	ldd	r25, Y+4	; 0x04
    2708:	fc 01       	movw	r30, r24
    270a:	e2 0f       	add	r30, r18
    270c:	f3 1f       	adc	r31, r19
    270e:	66 85       	ldd	r22, Z+14	; 0x0e
    2710:	89 81       	ldd	r24, Y+1	; 0x01
    2712:	48 2f       	mov	r20, r24
    2714:	50 e0       	ldi	r21, 0x00	; 0
    2716:	ca 01       	movw	r24, r20
    2718:	88 0f       	add	r24, r24
    271a:	99 1f       	adc	r25, r25
    271c:	9c 01       	movw	r18, r24
    271e:	22 0f       	add	r18, r18
    2720:	33 1f       	adc	r19, r19
    2722:	22 0f       	add	r18, r18
    2724:	33 1f       	adc	r19, r19
    2726:	22 0f       	add	r18, r18
    2728:	33 1f       	adc	r19, r19
    272a:	82 0f       	add	r24, r18
    272c:	93 1f       	adc	r25, r19
    272e:	9c 01       	movw	r18, r24
    2730:	24 0f       	add	r18, r20
    2732:	35 1f       	adc	r19, r21
    2734:	8b 81       	ldd	r24, Y+3	; 0x03
    2736:	9c 81       	ldd	r25, Y+4	; 0x04
    2738:	fc 01       	movw	r30, r24
    273a:	e2 0f       	add	r30, r18
    273c:	f3 1f       	adc	r31, r19
    273e:	97 85       	ldd	r25, Z+15	; 0x0f
    2740:	86 2f       	mov	r24, r22
    2742:	69 2f       	mov	r22, r25
    2744:	40 e0       	ldi	r20, 0x00	; 0
    2746:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    274a:	8a 83       	std	Y+2, r24	; 0x02
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    274c:	8a 81       	ldd	r24, Y+2	; 0x02
    274e:	81 30       	cpi	r24, 0x01	; 1
    2750:	09 f4       	brne	.+2      	; 0x2754 <SEV_SEG_enumInit+0xbfe>
    2752:	92 c0       	rjmp	.+292    	; 0x2878 <SEV_SEG_enumInit+0xd22>
    2754:	8a 81       	ldd	r24, Y+2	; 0x02
    2756:	8d 83       	std	Y+5, r24	; 0x05
    2758:	f3 c1       	rjmp	.+998    	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				}
				else if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_ANODE)
    275a:	89 81       	ldd	r24, Y+1	; 0x01
    275c:	48 2f       	mov	r20, r24
    275e:	50 e0       	ldi	r21, 0x00	; 0
    2760:	ca 01       	movw	r24, r20
    2762:	88 0f       	add	r24, r24
    2764:	99 1f       	adc	r25, r25
    2766:	9c 01       	movw	r18, r24
    2768:	22 0f       	add	r18, r18
    276a:	33 1f       	adc	r19, r19
    276c:	22 0f       	add	r18, r18
    276e:	33 1f       	adc	r19, r19
    2770:	22 0f       	add	r18, r18
    2772:	33 1f       	adc	r19, r19
    2774:	82 0f       	add	r24, r18
    2776:	93 1f       	adc	r25, r19
    2778:	9c 01       	movw	r18, r24
    277a:	24 0f       	add	r18, r20
    277c:	35 1f       	adc	r19, r21
    277e:	8b 81       	ldd	r24, Y+3	; 0x03
    2780:	9c 81       	ldd	r25, Y+4	; 0x04
    2782:	fc 01       	movw	r30, r24
    2784:	e2 0f       	add	r30, r18
    2786:	f3 1f       	adc	r31, r19
    2788:	82 89       	ldd	r24, Z+18	; 0x12
    278a:	88 23       	and	r24, r24
    278c:	e1 f5       	brne	.+120    	; 0x2806 <SEV_SEG_enumInit+0xcb0>
				{
					Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Pin,HIGH);
    278e:	89 81       	ldd	r24, Y+1	; 0x01
    2790:	48 2f       	mov	r20, r24
    2792:	50 e0       	ldi	r21, 0x00	; 0
    2794:	ca 01       	movw	r24, r20
    2796:	88 0f       	add	r24, r24
    2798:	99 1f       	adc	r25, r25
    279a:	9c 01       	movw	r18, r24
    279c:	22 0f       	add	r18, r18
    279e:	33 1f       	adc	r19, r19
    27a0:	22 0f       	add	r18, r18
    27a2:	33 1f       	adc	r19, r19
    27a4:	22 0f       	add	r18, r18
    27a6:	33 1f       	adc	r19, r19
    27a8:	82 0f       	add	r24, r18
    27aa:	93 1f       	adc	r25, r19
    27ac:	9c 01       	movw	r18, r24
    27ae:	24 0f       	add	r18, r20
    27b0:	35 1f       	adc	r19, r21
    27b2:	8b 81       	ldd	r24, Y+3	; 0x03
    27b4:	9c 81       	ldd	r25, Y+4	; 0x04
    27b6:	fc 01       	movw	r30, r24
    27b8:	e2 0f       	add	r30, r18
    27ba:	f3 1f       	adc	r31, r19
    27bc:	66 85       	ldd	r22, Z+14	; 0x0e
    27be:	89 81       	ldd	r24, Y+1	; 0x01
    27c0:	48 2f       	mov	r20, r24
    27c2:	50 e0       	ldi	r21, 0x00	; 0
    27c4:	ca 01       	movw	r24, r20
    27c6:	88 0f       	add	r24, r24
    27c8:	99 1f       	adc	r25, r25
    27ca:	9c 01       	movw	r18, r24
    27cc:	22 0f       	add	r18, r18
    27ce:	33 1f       	adc	r19, r19
    27d0:	22 0f       	add	r18, r18
    27d2:	33 1f       	adc	r19, r19
    27d4:	22 0f       	add	r18, r18
    27d6:	33 1f       	adc	r19, r19
    27d8:	82 0f       	add	r24, r18
    27da:	93 1f       	adc	r25, r19
    27dc:	9c 01       	movw	r18, r24
    27de:	24 0f       	add	r18, r20
    27e0:	35 1f       	adc	r19, r21
    27e2:	8b 81       	ldd	r24, Y+3	; 0x03
    27e4:	9c 81       	ldd	r25, Y+4	; 0x04
    27e6:	fc 01       	movw	r30, r24
    27e8:	e2 0f       	add	r30, r18
    27ea:	f3 1f       	adc	r31, r19
    27ec:	97 85       	ldd	r25, Z+15	; 0x0f
    27ee:	86 2f       	mov	r24, r22
    27f0:	69 2f       	mov	r22, r25
    27f2:	41 e0       	ldi	r20, 0x01	; 1
    27f4:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    27f8:	8a 83       	std	Y+2, r24	; 0x02
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    27fa:	8a 81       	ldd	r24, Y+2	; 0x02
    27fc:	81 30       	cpi	r24, 0x01	; 1
    27fe:	e1 f1       	breq	.+120    	; 0x2878 <SEV_SEG_enumInit+0xd22>
    2800:	8a 81       	ldd	r24, Y+2	; 0x02
    2802:	8d 83       	std	Y+5, r24	; 0x05
    2804:	9d c1       	rjmp	.+826    	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				}
				else
				{
					Local_enumErrorState=ES_OUT_OF_RANGE;
    2806:	83 e0       	ldi	r24, 0x03	; 3
    2808:	8a 83       	std	Y+2, r24	; 0x02
    280a:	36 c0       	rjmp	.+108    	; 0x2878 <SEV_SEG_enumInit+0xd22>
				}
			}
			else if (Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    280c:	89 81       	ldd	r24, Y+1	; 0x01
    280e:	48 2f       	mov	r20, r24
    2810:	50 e0       	ldi	r21, 0x00	; 0
    2812:	ca 01       	movw	r24, r20
    2814:	88 0f       	add	r24, r24
    2816:	99 1f       	adc	r25, r25
    2818:	9c 01       	movw	r18, r24
    281a:	22 0f       	add	r18, r18
    281c:	33 1f       	adc	r19, r19
    281e:	22 0f       	add	r18, r18
    2820:	33 1f       	adc	r19, r19
    2822:	22 0f       	add	r18, r18
    2824:	33 1f       	adc	r19, r19
    2826:	82 0f       	add	r24, r18
    2828:	93 1f       	adc	r25, r19
    282a:	9c 01       	movw	r18, r24
    282c:	24 0f       	add	r18, r20
    282e:	35 1f       	adc	r19, r21
    2830:	8b 81       	ldd	r24, Y+3	; 0x03
    2832:	9c 81       	ldd	r25, Y+4	; 0x04
    2834:	fc 01       	movw	r30, r24
    2836:	e2 0f       	add	r30, r18
    2838:	f3 1f       	adc	r31, r19
    283a:	86 85       	ldd	r24, Z+14	; 0x0e
    283c:	88 30       	cpi	r24, 0x08	; 8
    283e:	d1 f4       	brne	.+52     	; 0x2874 <SEV_SEG_enumInit+0xd1e>
    2840:	89 81       	ldd	r24, Y+1	; 0x01
    2842:	48 2f       	mov	r20, r24
    2844:	50 e0       	ldi	r21, 0x00	; 0
    2846:	ca 01       	movw	r24, r20
    2848:	88 0f       	add	r24, r24
    284a:	99 1f       	adc	r25, r25
    284c:	9c 01       	movw	r18, r24
    284e:	22 0f       	add	r18, r18
    2850:	33 1f       	adc	r19, r19
    2852:	22 0f       	add	r18, r18
    2854:	33 1f       	adc	r19, r19
    2856:	22 0f       	add	r18, r18
    2858:	33 1f       	adc	r19, r19
    285a:	82 0f       	add	r24, r18
    285c:	93 1f       	adc	r25, r19
    285e:	9c 01       	movw	r18, r24
    2860:	24 0f       	add	r18, r20
    2862:	35 1f       	adc	r19, r21
    2864:	8b 81       	ldd	r24, Y+3	; 0x03
    2866:	9c 81       	ldd	r25, Y+4	; 0x04
    2868:	fc 01       	movw	r30, r24
    286a:	e2 0f       	add	r30, r18
    286c:	f3 1f       	adc	r31, r19
    286e:	87 85       	ldd	r24, Z+15	; 0x0f
    2870:	88 30       	cpi	r24, 0x08	; 8
    2872:	11 f0       	breq	.+4      	; 0x2878 <SEV_SEG_enumInit+0xd22>
			{

			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    2874:	83 e0       	ldi	r24, 0x03	; 3
    2876:	8a 83       	std	Y+2, r24	; 0x02
			}

			if (Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port<=DIO_PORTD
    2878:	89 81       	ldd	r24, Y+1	; 0x01
    287a:	48 2f       	mov	r20, r24
    287c:	50 e0       	ldi	r21, 0x00	; 0
    287e:	ca 01       	movw	r24, r20
    2880:	88 0f       	add	r24, r24
    2882:	99 1f       	adc	r25, r25
    2884:	9c 01       	movw	r18, r24
    2886:	22 0f       	add	r18, r18
    2888:	33 1f       	adc	r19, r19
    288a:	22 0f       	add	r18, r18
    288c:	33 1f       	adc	r19, r19
    288e:	22 0f       	add	r18, r18
    2890:	33 1f       	adc	r19, r19
    2892:	82 0f       	add	r24, r18
    2894:	93 1f       	adc	r25, r19
    2896:	9c 01       	movw	r18, r24
    2898:	24 0f       	add	r18, r20
    289a:	35 1f       	adc	r19, r21
    289c:	8b 81       	ldd	r24, Y+3	; 0x03
    289e:	9c 81       	ldd	r25, Y+4	; 0x04
    28a0:	fc 01       	movw	r30, r24
    28a2:	e2 0f       	add	r30, r18
    28a4:	f3 1f       	adc	r31, r19
    28a6:	80 89       	ldd	r24, Z+16	; 0x10
    28a8:	84 30       	cpi	r24, 0x04	; 4
    28aa:	08 f0       	brcs	.+2      	; 0x28ae <SEV_SEG_enumInit+0xd58>
    28ac:	07 c1       	rjmp	.+526    	; 0x2abc <SEV_SEG_enumInit+0xf66>
    28ae:	89 81       	ldd	r24, Y+1	; 0x01
    28b0:	48 2f       	mov	r20, r24
    28b2:	50 e0       	ldi	r21, 0x00	; 0
    28b4:	ca 01       	movw	r24, r20
    28b6:	88 0f       	add	r24, r24
    28b8:	99 1f       	adc	r25, r25
    28ba:	9c 01       	movw	r18, r24
    28bc:	22 0f       	add	r18, r18
    28be:	33 1f       	adc	r19, r19
    28c0:	22 0f       	add	r18, r18
    28c2:	33 1f       	adc	r19, r19
    28c4:	22 0f       	add	r18, r18
    28c6:	33 1f       	adc	r19, r19
    28c8:	82 0f       	add	r24, r18
    28ca:	93 1f       	adc	r25, r19
    28cc:	9c 01       	movw	r18, r24
    28ce:	24 0f       	add	r18, r20
    28d0:	35 1f       	adc	r19, r21
    28d2:	8b 81       	ldd	r24, Y+3	; 0x03
    28d4:	9c 81       	ldd	r25, Y+4	; 0x04
    28d6:	fc 01       	movw	r30, r24
    28d8:	e2 0f       	add	r30, r18
    28da:	f3 1f       	adc	r31, r19
    28dc:	81 89       	ldd	r24, Z+17	; 0x11
    28de:	88 30       	cpi	r24, 0x08	; 8
    28e0:	08 f0       	brcs	.+2      	; 0x28e4 <SEV_SEG_enumInit+0xd8e>
    28e2:	ec c0       	rjmp	.+472    	; 0x2abc <SEV_SEG_enumInit+0xf66>
				&&Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
			{
				Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Pin,OUTPUT);
    28e4:	89 81       	ldd	r24, Y+1	; 0x01
    28e6:	48 2f       	mov	r20, r24
    28e8:	50 e0       	ldi	r21, 0x00	; 0
    28ea:	ca 01       	movw	r24, r20
    28ec:	88 0f       	add	r24, r24
    28ee:	99 1f       	adc	r25, r25
    28f0:	9c 01       	movw	r18, r24
    28f2:	22 0f       	add	r18, r18
    28f4:	33 1f       	adc	r19, r19
    28f6:	22 0f       	add	r18, r18
    28f8:	33 1f       	adc	r19, r19
    28fa:	22 0f       	add	r18, r18
    28fc:	33 1f       	adc	r19, r19
    28fe:	82 0f       	add	r24, r18
    2900:	93 1f       	adc	r25, r19
    2902:	9c 01       	movw	r18, r24
    2904:	24 0f       	add	r18, r20
    2906:	35 1f       	adc	r19, r21
    2908:	8b 81       	ldd	r24, Y+3	; 0x03
    290a:	9c 81       	ldd	r25, Y+4	; 0x04
    290c:	fc 01       	movw	r30, r24
    290e:	e2 0f       	add	r30, r18
    2910:	f3 1f       	adc	r31, r19
    2912:	60 89       	ldd	r22, Z+16	; 0x10
    2914:	89 81       	ldd	r24, Y+1	; 0x01
    2916:	48 2f       	mov	r20, r24
    2918:	50 e0       	ldi	r21, 0x00	; 0
    291a:	ca 01       	movw	r24, r20
    291c:	88 0f       	add	r24, r24
    291e:	99 1f       	adc	r25, r25
    2920:	9c 01       	movw	r18, r24
    2922:	22 0f       	add	r18, r18
    2924:	33 1f       	adc	r19, r19
    2926:	22 0f       	add	r18, r18
    2928:	33 1f       	adc	r19, r19
    292a:	22 0f       	add	r18, r18
    292c:	33 1f       	adc	r19, r19
    292e:	82 0f       	add	r24, r18
    2930:	93 1f       	adc	r25, r19
    2932:	9c 01       	movw	r18, r24
    2934:	24 0f       	add	r18, r20
    2936:	35 1f       	adc	r19, r21
    2938:	8b 81       	ldd	r24, Y+3	; 0x03
    293a:	9c 81       	ldd	r25, Y+4	; 0x04
    293c:	fc 01       	movw	r30, r24
    293e:	e2 0f       	add	r30, r18
    2940:	f3 1f       	adc	r31, r19
    2942:	91 89       	ldd	r25, Z+17	; 0x11
    2944:	86 2f       	mov	r24, r22
    2946:	69 2f       	mov	r22, r25
    2948:	41 e0       	ldi	r20, 0x01	; 1
    294a:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    294e:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2950:	8a 81       	ldd	r24, Y+2	; 0x02
    2952:	81 30       	cpi	r24, 0x01	; 1
    2954:	19 f0       	breq	.+6      	; 0x295c <SEV_SEG_enumInit+0xe06>
    2956:	8a 81       	ldd	r24, Y+2	; 0x02
    2958:	8d 83       	std	Y+5, r24	; 0x05
    295a:	f2 c0       	rjmp	.+484    	; 0x2b40 <SEV_SEG_enumInit+0xfea>

				if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_CATHODE)
    295c:	89 81       	ldd	r24, Y+1	; 0x01
    295e:	48 2f       	mov	r20, r24
    2960:	50 e0       	ldi	r21, 0x00	; 0
    2962:	ca 01       	movw	r24, r20
    2964:	88 0f       	add	r24, r24
    2966:	99 1f       	adc	r25, r25
    2968:	9c 01       	movw	r18, r24
    296a:	22 0f       	add	r18, r18
    296c:	33 1f       	adc	r19, r19
    296e:	22 0f       	add	r18, r18
    2970:	33 1f       	adc	r19, r19
    2972:	22 0f       	add	r18, r18
    2974:	33 1f       	adc	r19, r19
    2976:	82 0f       	add	r24, r18
    2978:	93 1f       	adc	r25, r19
    297a:	9c 01       	movw	r18, r24
    297c:	24 0f       	add	r18, r20
    297e:	35 1f       	adc	r19, r21
    2980:	8b 81       	ldd	r24, Y+3	; 0x03
    2982:	9c 81       	ldd	r25, Y+4	; 0x04
    2984:	fc 01       	movw	r30, r24
    2986:	e2 0f       	add	r30, r18
    2988:	f3 1f       	adc	r31, r19
    298a:	82 89       	ldd	r24, Z+18	; 0x12
    298c:	81 30       	cpi	r24, 0x01	; 1
    298e:	e9 f5       	brne	.+122    	; 0x2a0a <SEV_SEG_enumInit+0xeb4>
				{
					Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Pin,LOW);
    2990:	89 81       	ldd	r24, Y+1	; 0x01
    2992:	48 2f       	mov	r20, r24
    2994:	50 e0       	ldi	r21, 0x00	; 0
    2996:	ca 01       	movw	r24, r20
    2998:	88 0f       	add	r24, r24
    299a:	99 1f       	adc	r25, r25
    299c:	9c 01       	movw	r18, r24
    299e:	22 0f       	add	r18, r18
    29a0:	33 1f       	adc	r19, r19
    29a2:	22 0f       	add	r18, r18
    29a4:	33 1f       	adc	r19, r19
    29a6:	22 0f       	add	r18, r18
    29a8:	33 1f       	adc	r19, r19
    29aa:	82 0f       	add	r24, r18
    29ac:	93 1f       	adc	r25, r19
    29ae:	9c 01       	movw	r18, r24
    29b0:	24 0f       	add	r18, r20
    29b2:	35 1f       	adc	r19, r21
    29b4:	8b 81       	ldd	r24, Y+3	; 0x03
    29b6:	9c 81       	ldd	r25, Y+4	; 0x04
    29b8:	fc 01       	movw	r30, r24
    29ba:	e2 0f       	add	r30, r18
    29bc:	f3 1f       	adc	r31, r19
    29be:	60 89       	ldd	r22, Z+16	; 0x10
    29c0:	89 81       	ldd	r24, Y+1	; 0x01
    29c2:	48 2f       	mov	r20, r24
    29c4:	50 e0       	ldi	r21, 0x00	; 0
    29c6:	ca 01       	movw	r24, r20
    29c8:	88 0f       	add	r24, r24
    29ca:	99 1f       	adc	r25, r25
    29cc:	9c 01       	movw	r18, r24
    29ce:	22 0f       	add	r18, r18
    29d0:	33 1f       	adc	r19, r19
    29d2:	22 0f       	add	r18, r18
    29d4:	33 1f       	adc	r19, r19
    29d6:	22 0f       	add	r18, r18
    29d8:	33 1f       	adc	r19, r19
    29da:	82 0f       	add	r24, r18
    29dc:	93 1f       	adc	r25, r19
    29de:	9c 01       	movw	r18, r24
    29e0:	24 0f       	add	r18, r20
    29e2:	35 1f       	adc	r19, r21
    29e4:	8b 81       	ldd	r24, Y+3	; 0x03
    29e6:	9c 81       	ldd	r25, Y+4	; 0x04
    29e8:	fc 01       	movw	r30, r24
    29ea:	e2 0f       	add	r30, r18
    29ec:	f3 1f       	adc	r31, r19
    29ee:	91 89       	ldd	r25, Z+17	; 0x11
    29f0:	86 2f       	mov	r24, r22
    29f2:	69 2f       	mov	r22, r25
    29f4:	40 e0       	ldi	r20, 0x00	; 0
    29f6:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    29fa:	8a 83       	std	Y+2, r24	; 0x02
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    29fc:	8a 81       	ldd	r24, Y+2	; 0x02
    29fe:	81 30       	cpi	r24, 0x01	; 1
    2a00:	09 f4       	brne	.+2      	; 0x2a04 <SEV_SEG_enumInit+0xeae>
    2a02:	92 c0       	rjmp	.+292    	; 0x2b28 <SEV_SEG_enumInit+0xfd2>
    2a04:	8a 81       	ldd	r24, Y+2	; 0x02
    2a06:	8d 83       	std	Y+5, r24	; 0x05
    2a08:	9b c0       	rjmp	.+310    	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				}
				else if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_ANODE)
    2a0a:	89 81       	ldd	r24, Y+1	; 0x01
    2a0c:	48 2f       	mov	r20, r24
    2a0e:	50 e0       	ldi	r21, 0x00	; 0
    2a10:	ca 01       	movw	r24, r20
    2a12:	88 0f       	add	r24, r24
    2a14:	99 1f       	adc	r25, r25
    2a16:	9c 01       	movw	r18, r24
    2a18:	22 0f       	add	r18, r18
    2a1a:	33 1f       	adc	r19, r19
    2a1c:	22 0f       	add	r18, r18
    2a1e:	33 1f       	adc	r19, r19
    2a20:	22 0f       	add	r18, r18
    2a22:	33 1f       	adc	r19, r19
    2a24:	82 0f       	add	r24, r18
    2a26:	93 1f       	adc	r25, r19
    2a28:	9c 01       	movw	r18, r24
    2a2a:	24 0f       	add	r18, r20
    2a2c:	35 1f       	adc	r19, r21
    2a2e:	8b 81       	ldd	r24, Y+3	; 0x03
    2a30:	9c 81       	ldd	r25, Y+4	; 0x04
    2a32:	fc 01       	movw	r30, r24
    2a34:	e2 0f       	add	r30, r18
    2a36:	f3 1f       	adc	r31, r19
    2a38:	82 89       	ldd	r24, Z+18	; 0x12
    2a3a:	88 23       	and	r24, r24
    2a3c:	e1 f5       	brne	.+120    	; 0x2ab6 <SEV_SEG_enumInit+0xf60>
				{
					Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Pin,HIGH);
    2a3e:	89 81       	ldd	r24, Y+1	; 0x01
    2a40:	48 2f       	mov	r20, r24
    2a42:	50 e0       	ldi	r21, 0x00	; 0
    2a44:	ca 01       	movw	r24, r20
    2a46:	88 0f       	add	r24, r24
    2a48:	99 1f       	adc	r25, r25
    2a4a:	9c 01       	movw	r18, r24
    2a4c:	22 0f       	add	r18, r18
    2a4e:	33 1f       	adc	r19, r19
    2a50:	22 0f       	add	r18, r18
    2a52:	33 1f       	adc	r19, r19
    2a54:	22 0f       	add	r18, r18
    2a56:	33 1f       	adc	r19, r19
    2a58:	82 0f       	add	r24, r18
    2a5a:	93 1f       	adc	r25, r19
    2a5c:	9c 01       	movw	r18, r24
    2a5e:	24 0f       	add	r18, r20
    2a60:	35 1f       	adc	r19, r21
    2a62:	8b 81       	ldd	r24, Y+3	; 0x03
    2a64:	9c 81       	ldd	r25, Y+4	; 0x04
    2a66:	fc 01       	movw	r30, r24
    2a68:	e2 0f       	add	r30, r18
    2a6a:	f3 1f       	adc	r31, r19
    2a6c:	60 89       	ldd	r22, Z+16	; 0x10
    2a6e:	89 81       	ldd	r24, Y+1	; 0x01
    2a70:	48 2f       	mov	r20, r24
    2a72:	50 e0       	ldi	r21, 0x00	; 0
    2a74:	ca 01       	movw	r24, r20
    2a76:	88 0f       	add	r24, r24
    2a78:	99 1f       	adc	r25, r25
    2a7a:	9c 01       	movw	r18, r24
    2a7c:	22 0f       	add	r18, r18
    2a7e:	33 1f       	adc	r19, r19
    2a80:	22 0f       	add	r18, r18
    2a82:	33 1f       	adc	r19, r19
    2a84:	22 0f       	add	r18, r18
    2a86:	33 1f       	adc	r19, r19
    2a88:	82 0f       	add	r24, r18
    2a8a:	93 1f       	adc	r25, r19
    2a8c:	9c 01       	movw	r18, r24
    2a8e:	24 0f       	add	r18, r20
    2a90:	35 1f       	adc	r19, r21
    2a92:	8b 81       	ldd	r24, Y+3	; 0x03
    2a94:	9c 81       	ldd	r25, Y+4	; 0x04
    2a96:	fc 01       	movw	r30, r24
    2a98:	e2 0f       	add	r30, r18
    2a9a:	f3 1f       	adc	r31, r19
    2a9c:	91 89       	ldd	r25, Z+17	; 0x11
    2a9e:	86 2f       	mov	r24, r22
    2aa0:	69 2f       	mov	r22, r25
    2aa2:	41 e0       	ldi	r20, 0x01	; 1
    2aa4:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2aa8:	8a 83       	std	Y+2, r24	; 0x02
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2aaa:	8a 81       	ldd	r24, Y+2	; 0x02
    2aac:	81 30       	cpi	r24, 0x01	; 1
    2aae:	e1 f1       	breq	.+120    	; 0x2b28 <SEV_SEG_enumInit+0xfd2>
    2ab0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ab2:	8d 83       	std	Y+5, r24	; 0x05
    2ab4:	45 c0       	rjmp	.+138    	; 0x2b40 <SEV_SEG_enumInit+0xfea>
				}
				else
				{
					Local_enumErrorState=ES_OUT_OF_RANGE;
    2ab6:	83 e0       	ldi	r24, 0x03	; 3
    2ab8:	8a 83       	std	Y+2, r24	; 0x02
    2aba:	36 c0       	rjmp	.+108    	; 0x2b28 <SEV_SEG_enumInit+0xfd2>
				}
			}
			else if (Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port==NOT_CONNECTED
    2abc:	89 81       	ldd	r24, Y+1	; 0x01
    2abe:	48 2f       	mov	r20, r24
    2ac0:	50 e0       	ldi	r21, 0x00	; 0
    2ac2:	ca 01       	movw	r24, r20
    2ac4:	88 0f       	add	r24, r24
    2ac6:	99 1f       	adc	r25, r25
    2ac8:	9c 01       	movw	r18, r24
    2aca:	22 0f       	add	r18, r18
    2acc:	33 1f       	adc	r19, r19
    2ace:	22 0f       	add	r18, r18
    2ad0:	33 1f       	adc	r19, r19
    2ad2:	22 0f       	add	r18, r18
    2ad4:	33 1f       	adc	r19, r19
    2ad6:	82 0f       	add	r24, r18
    2ad8:	93 1f       	adc	r25, r19
    2ada:	9c 01       	movw	r18, r24
    2adc:	24 0f       	add	r18, r20
    2ade:	35 1f       	adc	r19, r21
    2ae0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ae2:	9c 81       	ldd	r25, Y+4	; 0x04
    2ae4:	fc 01       	movw	r30, r24
    2ae6:	e2 0f       	add	r30, r18
    2ae8:	f3 1f       	adc	r31, r19
    2aea:	80 89       	ldd	r24, Z+16	; 0x10
    2aec:	88 30       	cpi	r24, 0x08	; 8
    2aee:	d1 f4       	brne	.+52     	; 0x2b24 <SEV_SEG_enumInit+0xfce>
    2af0:	89 81       	ldd	r24, Y+1	; 0x01
    2af2:	48 2f       	mov	r20, r24
    2af4:	50 e0       	ldi	r21, 0x00	; 0
    2af6:	ca 01       	movw	r24, r20
    2af8:	88 0f       	add	r24, r24
    2afa:	99 1f       	adc	r25, r25
    2afc:	9c 01       	movw	r18, r24
    2afe:	22 0f       	add	r18, r18
    2b00:	33 1f       	adc	r19, r19
    2b02:	22 0f       	add	r18, r18
    2b04:	33 1f       	adc	r19, r19
    2b06:	22 0f       	add	r18, r18
    2b08:	33 1f       	adc	r19, r19
    2b0a:	82 0f       	add	r24, r18
    2b0c:	93 1f       	adc	r25, r19
    2b0e:	9c 01       	movw	r18, r24
    2b10:	24 0f       	add	r18, r20
    2b12:	35 1f       	adc	r19, r21
    2b14:	8b 81       	ldd	r24, Y+3	; 0x03
    2b16:	9c 81       	ldd	r25, Y+4	; 0x04
    2b18:	fc 01       	movw	r30, r24
    2b1a:	e2 0f       	add	r30, r18
    2b1c:	f3 1f       	adc	r31, r19
    2b1e:	81 89       	ldd	r24, Z+17	; 0x11
    2b20:	88 30       	cpi	r24, 0x08	; 8
    2b22:	11 f0       	breq	.+4      	; 0x2b28 <SEV_SEG_enumInit+0xfd2>
			{

			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    2b24:	83 e0       	ldi	r24, 0x03	; 3
    2b26:	8a 83       	std	Y+2, r24	; 0x02
{
	ES_T Local_enumErrorState=ES_NOK;
	u8 Local_u8Counter=0;
	if (Copy_pstrSegments!=NULL)
	{
		for (Local_u8Counter=0;Local_u8Counter<SEV_SEG_NUM;Local_u8Counter++)
    2b28:	89 81       	ldd	r24, Y+1	; 0x01
    2b2a:	8f 5f       	subi	r24, 0xFF	; 255
    2b2c:	89 83       	std	Y+1, r24	; 0x01
    2b2e:	89 81       	ldd	r24, Y+1	; 0x01
    2b30:	82 30       	cpi	r24, 0x02	; 2
    2b32:	08 f4       	brcc	.+2      	; 0x2b36 <SEV_SEG_enumInit+0xfe0>
    2b34:	23 c8       	rjmp	.-4026   	; 0x1b7c <SEV_SEG_enumInit+0x26>
    2b36:	02 c0       	rjmp	.+4      	; 0x2b3c <SEV_SEG_enumInit+0xfe6>
			}
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    2b38:	82 e0       	ldi	r24, 0x02	; 2
    2b3a:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enumErrorState;
    2b3c:	8a 81       	ldd	r24, Y+2	; 0x02
    2b3e:	8d 83       	std	Y+5, r24	; 0x05
    2b40:	8d 81       	ldd	r24, Y+5	; 0x05
}
    2b42:	0f 90       	pop	r0
    2b44:	0f 90       	pop	r0
    2b46:	0f 90       	pop	r0
    2b48:	0f 90       	pop	r0
    2b4a:	0f 90       	pop	r0
    2b4c:	cf 91       	pop	r28
    2b4e:	df 91       	pop	r29
    2b50:	08 95       	ret

00002b52 <SEV_SEG_enumNUMDisplay>:
ES_T SEV_SEG_enumNUMDisplay(u8 Copy_u8SegmentID,u8 Copy_u8Number)
{
    2b52:	df 93       	push	r29
    2b54:	cf 93       	push	r28
    2b56:	cd b7       	in	r28, 0x3d	; 61
    2b58:	de b7       	in	r29, 0x3e	; 62
    2b5a:	69 97       	sbiw	r28, 0x19	; 25
    2b5c:	0f b6       	in	r0, 0x3f	; 63
    2b5e:	f8 94       	cli
    2b60:	de bf       	out	0x3e, r29	; 62
    2b62:	0f be       	out	0x3f, r0	; 63
    2b64:	cd bf       	out	0x3d, r28	; 61
    2b66:	8a 83       	std	Y+2, r24	; 0x02
    2b68:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    2b6a:	19 82       	std	Y+1, r1	; 0x01

	if ((Copy_u8SegmentID<SEV_SEG_NUM)&&((Copy_u8Number>=0&&Copy_u8Number<=9)
    2b6c:	8a 81       	ldd	r24, Y+2	; 0x02
    2b6e:	82 30       	cpi	r24, 0x02	; 2
    2b70:	08 f0       	brcs	.+2      	; 0x2b74 <SEV_SEG_enumNUMDisplay+0x22>
    2b72:	44 c4       	rjmp	.+2184   	; 0x33fc <SEV_SEG_enumNUMDisplay+0x8aa>
    2b74:	8b 81       	ldd	r24, Y+3	; 0x03
    2b76:	8a 30       	cpi	r24, 0x0A	; 10
    2b78:	70 f0       	brcs	.+28     	; 0x2b96 <SEV_SEG_enumNUMDisplay+0x44>
    2b7a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b7c:	81 34       	cpi	r24, 0x41	; 65
    2b7e:	18 f0       	brcs	.+6      	; 0x2b86 <SEV_SEG_enumNUMDisplay+0x34>
    2b80:	8b 81       	ldd	r24, Y+3	; 0x03
    2b82:	87 34       	cpi	r24, 0x47	; 71
    2b84:	40 f0       	brcs	.+16     	; 0x2b96 <SEV_SEG_enumNUMDisplay+0x44>
    2b86:	8b 81       	ldd	r24, Y+3	; 0x03
    2b88:	81 36       	cpi	r24, 0x61	; 97
    2b8a:	08 f4       	brcc	.+2      	; 0x2b8e <SEV_SEG_enumNUMDisplay+0x3c>
    2b8c:	37 c4       	rjmp	.+2158   	; 0x33fc <SEV_SEG_enumNUMDisplay+0x8aa>
    2b8e:	8b 81       	ldd	r24, Y+3	; 0x03
    2b90:	87 36       	cpi	r24, 0x67	; 103
    2b92:	08 f0       	brcs	.+2      	; 0x2b96 <SEV_SEG_enumNUMDisplay+0x44>
    2b94:	33 c4       	rjmp	.+2150   	; 0x33fc <SEV_SEG_enumNUMDisplay+0x8aa>
		||(Copy_u8Number>='A'&&Copy_u8Number<='F')||(Copy_u8Number>='a'&&Copy_u8Number<='f')))
	{
		if (Copy_u8Number=='a'||Copy_u8Number=='A')Copy_u8Number=10;
    2b96:	8b 81       	ldd	r24, Y+3	; 0x03
    2b98:	81 36       	cpi	r24, 0x61	; 97
    2b9a:	19 f0       	breq	.+6      	; 0x2ba2 <SEV_SEG_enumNUMDisplay+0x50>
    2b9c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b9e:	81 34       	cpi	r24, 0x41	; 65
    2ba0:	11 f4       	brne	.+4      	; 0x2ba6 <SEV_SEG_enumNUMDisplay+0x54>
    2ba2:	8a e0       	ldi	r24, 0x0A	; 10
    2ba4:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='b'||Copy_u8Number=='B')Copy_u8Number=11;
    2ba6:	8b 81       	ldd	r24, Y+3	; 0x03
    2ba8:	82 36       	cpi	r24, 0x62	; 98
    2baa:	19 f0       	breq	.+6      	; 0x2bb2 <SEV_SEG_enumNUMDisplay+0x60>
    2bac:	8b 81       	ldd	r24, Y+3	; 0x03
    2bae:	82 34       	cpi	r24, 0x42	; 66
    2bb0:	11 f4       	brne	.+4      	; 0x2bb6 <SEV_SEG_enumNUMDisplay+0x64>
    2bb2:	8b e0       	ldi	r24, 0x0B	; 11
    2bb4:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='c'||Copy_u8Number=='C')Copy_u8Number=12;
    2bb6:	8b 81       	ldd	r24, Y+3	; 0x03
    2bb8:	83 36       	cpi	r24, 0x63	; 99
    2bba:	19 f0       	breq	.+6      	; 0x2bc2 <SEV_SEG_enumNUMDisplay+0x70>
    2bbc:	8b 81       	ldd	r24, Y+3	; 0x03
    2bbe:	83 34       	cpi	r24, 0x43	; 67
    2bc0:	11 f4       	brne	.+4      	; 0x2bc6 <SEV_SEG_enumNUMDisplay+0x74>
    2bc2:	8c e0       	ldi	r24, 0x0C	; 12
    2bc4:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='d'||Copy_u8Number=='D')Copy_u8Number=13;
    2bc6:	8b 81       	ldd	r24, Y+3	; 0x03
    2bc8:	84 36       	cpi	r24, 0x64	; 100
    2bca:	19 f0       	breq	.+6      	; 0x2bd2 <SEV_SEG_enumNUMDisplay+0x80>
    2bcc:	8b 81       	ldd	r24, Y+3	; 0x03
    2bce:	84 34       	cpi	r24, 0x44	; 68
    2bd0:	11 f4       	brne	.+4      	; 0x2bd6 <SEV_SEG_enumNUMDisplay+0x84>
    2bd2:	8d e0       	ldi	r24, 0x0D	; 13
    2bd4:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='e'||Copy_u8Number=='E')Copy_u8Number=14;
    2bd6:	8b 81       	ldd	r24, Y+3	; 0x03
    2bd8:	85 36       	cpi	r24, 0x65	; 101
    2bda:	19 f0       	breq	.+6      	; 0x2be2 <SEV_SEG_enumNUMDisplay+0x90>
    2bdc:	8b 81       	ldd	r24, Y+3	; 0x03
    2bde:	85 34       	cpi	r24, 0x45	; 69
    2be0:	11 f4       	brne	.+4      	; 0x2be6 <SEV_SEG_enumNUMDisplay+0x94>
    2be2:	8e e0       	ldi	r24, 0x0E	; 14
    2be4:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='f'||Copy_u8Number=='F')Copy_u8Number=15;
    2be6:	8b 81       	ldd	r24, Y+3	; 0x03
    2be8:	86 36       	cpi	r24, 0x66	; 102
    2bea:	19 f0       	breq	.+6      	; 0x2bf2 <SEV_SEG_enumNUMDisplay+0xa0>
    2bec:	8b 81       	ldd	r24, Y+3	; 0x03
    2bee:	86 34       	cpi	r24, 0x46	; 70
    2bf0:	11 f4       	brne	.+4      	; 0x2bf6 <SEV_SEG_enumNUMDisplay+0xa4>
    2bf2:	8f e0       	ldi	r24, 0x0F	; 15
    2bf4:	8b 83       	std	Y+3, r24	; 0x03

		if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    2bf6:	8a 81       	ldd	r24, Y+2	; 0x02
    2bf8:	48 2f       	mov	r20, r24
    2bfa:	50 e0       	ldi	r21, 0x00	; 0
    2bfc:	ca 01       	movw	r24, r20
    2bfe:	88 0f       	add	r24, r24
    2c00:	99 1f       	adc	r25, r25
    2c02:	9c 01       	movw	r18, r24
    2c04:	22 0f       	add	r18, r18
    2c06:	33 1f       	adc	r19, r19
    2c08:	22 0f       	add	r18, r18
    2c0a:	33 1f       	adc	r19, r19
    2c0c:	22 0f       	add	r18, r18
    2c0e:	33 1f       	adc	r19, r19
    2c10:	82 0f       	add	r24, r18
    2c12:	93 1f       	adc	r25, r19
    2c14:	84 0f       	add	r24, r20
    2c16:	95 1f       	adc	r25, r21
    2c18:	fc 01       	movw	r30, r24
    2c1a:	ea 56       	subi	r30, 0x6A	; 106
    2c1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c1e:	80 81       	ld	r24, Z
    2c20:	81 30       	cpi	r24, 0x01	; 1
    2c22:	09 f0       	breq	.+2      	; 0x2c26 <SEV_SEG_enumNUMDisplay+0xd4>
    2c24:	c9 c1       	rjmp	.+914    	; 0x2fb8 <SEV_SEG_enumNUMDisplay+0x466>
		{
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],0));
    2c26:	8a 81       	ldd	r24, Y+2	; 0x02
    2c28:	48 2f       	mov	r20, r24
    2c2a:	50 e0       	ldi	r21, 0x00	; 0
    2c2c:	ca 01       	movw	r24, r20
    2c2e:	88 0f       	add	r24, r24
    2c30:	99 1f       	adc	r25, r25
    2c32:	9c 01       	movw	r18, r24
    2c34:	22 0f       	add	r18, r18
    2c36:	33 1f       	adc	r19, r19
    2c38:	22 0f       	add	r18, r18
    2c3a:	33 1f       	adc	r19, r19
    2c3c:	22 0f       	add	r18, r18
    2c3e:	33 1f       	adc	r19, r19
    2c40:	82 0f       	add	r24, r18
    2c42:	93 1f       	adc	r25, r19
    2c44:	84 0f       	add	r24, r20
    2c46:	95 1f       	adc	r25, r21
    2c48:	fc 01       	movw	r30, r24
    2c4a:	ec 57       	subi	r30, 0x7C	; 124
    2c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4e:	60 81       	ld	r22, Z
    2c50:	8a 81       	ldd	r24, Y+2	; 0x02
    2c52:	48 2f       	mov	r20, r24
    2c54:	50 e0       	ldi	r21, 0x00	; 0
    2c56:	ca 01       	movw	r24, r20
    2c58:	88 0f       	add	r24, r24
    2c5a:	99 1f       	adc	r25, r25
    2c5c:	9c 01       	movw	r18, r24
    2c5e:	22 0f       	add	r18, r18
    2c60:	33 1f       	adc	r19, r19
    2c62:	22 0f       	add	r18, r18
    2c64:	33 1f       	adc	r19, r19
    2c66:	22 0f       	add	r18, r18
    2c68:	33 1f       	adc	r19, r19
    2c6a:	82 0f       	add	r24, r18
    2c6c:	93 1f       	adc	r25, r19
    2c6e:	84 0f       	add	r24, r20
    2c70:	95 1f       	adc	r25, r21
    2c72:	fc 01       	movw	r30, r24
    2c74:	eb 57       	subi	r30, 0x7B	; 123
    2c76:	ff 4f       	sbci	r31, 0xFF	; 255
    2c78:	20 81       	ld	r18, Z
    2c7a:	8b 81       	ldd	r24, Y+3	; 0x03
    2c7c:	88 2f       	mov	r24, r24
    2c7e:	90 e0       	ldi	r25, 0x00	; 0
    2c80:	fc 01       	movw	r30, r24
    2c82:	e6 55       	subi	r30, 0x56	; 86
    2c84:	ff 4f       	sbci	r31, 0xFF	; 255
    2c86:	80 81       	ld	r24, Z
    2c88:	98 2f       	mov	r25, r24
    2c8a:	91 70       	andi	r25, 0x01	; 1
    2c8c:	86 2f       	mov	r24, r22
    2c8e:	62 2f       	mov	r22, r18
    2c90:	49 2f       	mov	r20, r25
    2c92:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2c96:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2c98:	89 81       	ldd	r24, Y+1	; 0x01
    2c9a:	81 30       	cpi	r24, 0x01	; 1
    2c9c:	19 f0       	breq	.+6      	; 0x2ca4 <SEV_SEG_enumNUMDisplay+0x152>
    2c9e:	89 81       	ldd	r24, Y+1	; 0x01
    2ca0:	89 8f       	std	Y+25, r24	; 0x19
    2ca2:	b0 c3       	rjmp	.+1888   	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],1));
    2ca4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ca6:	48 2f       	mov	r20, r24
    2ca8:	50 e0       	ldi	r21, 0x00	; 0
    2caa:	ca 01       	movw	r24, r20
    2cac:	88 0f       	add	r24, r24
    2cae:	99 1f       	adc	r25, r25
    2cb0:	9c 01       	movw	r18, r24
    2cb2:	22 0f       	add	r18, r18
    2cb4:	33 1f       	adc	r19, r19
    2cb6:	22 0f       	add	r18, r18
    2cb8:	33 1f       	adc	r19, r19
    2cba:	22 0f       	add	r18, r18
    2cbc:	33 1f       	adc	r19, r19
    2cbe:	82 0f       	add	r24, r18
    2cc0:	93 1f       	adc	r25, r19
    2cc2:	84 0f       	add	r24, r20
    2cc4:	95 1f       	adc	r25, r21
    2cc6:	fc 01       	movw	r30, r24
    2cc8:	ea 57       	subi	r30, 0x7A	; 122
    2cca:	ff 4f       	sbci	r31, 0xFF	; 255
    2ccc:	60 81       	ld	r22, Z
    2cce:	8a 81       	ldd	r24, Y+2	; 0x02
    2cd0:	48 2f       	mov	r20, r24
    2cd2:	50 e0       	ldi	r21, 0x00	; 0
    2cd4:	ca 01       	movw	r24, r20
    2cd6:	88 0f       	add	r24, r24
    2cd8:	99 1f       	adc	r25, r25
    2cda:	9c 01       	movw	r18, r24
    2cdc:	22 0f       	add	r18, r18
    2cde:	33 1f       	adc	r19, r19
    2ce0:	22 0f       	add	r18, r18
    2ce2:	33 1f       	adc	r19, r19
    2ce4:	22 0f       	add	r18, r18
    2ce6:	33 1f       	adc	r19, r19
    2ce8:	82 0f       	add	r24, r18
    2cea:	93 1f       	adc	r25, r19
    2cec:	84 0f       	add	r24, r20
    2cee:	95 1f       	adc	r25, r21
    2cf0:	fc 01       	movw	r30, r24
    2cf2:	e9 57       	subi	r30, 0x79	; 121
    2cf4:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf6:	20 81       	ld	r18, Z
    2cf8:	8b 81       	ldd	r24, Y+3	; 0x03
    2cfa:	88 2f       	mov	r24, r24
    2cfc:	90 e0       	ldi	r25, 0x00	; 0
    2cfe:	fc 01       	movw	r30, r24
    2d00:	e6 55       	subi	r30, 0x56	; 86
    2d02:	ff 4f       	sbci	r31, 0xFF	; 255
    2d04:	80 81       	ld	r24, Z
    2d06:	86 95       	lsr	r24
    2d08:	98 2f       	mov	r25, r24
    2d0a:	91 70       	andi	r25, 0x01	; 1
    2d0c:	86 2f       	mov	r24, r22
    2d0e:	62 2f       	mov	r22, r18
    2d10:	49 2f       	mov	r20, r25
    2d12:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2d16:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2d18:	89 81       	ldd	r24, Y+1	; 0x01
    2d1a:	81 30       	cpi	r24, 0x01	; 1
    2d1c:	19 f0       	breq	.+6      	; 0x2d24 <SEV_SEG_enumNUMDisplay+0x1d2>
    2d1e:	89 81       	ldd	r24, Y+1	; 0x01
    2d20:	89 8f       	std	Y+25, r24	; 0x19
    2d22:	70 c3       	rjmp	.+1760   	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],2));
    2d24:	8a 81       	ldd	r24, Y+2	; 0x02
    2d26:	48 2f       	mov	r20, r24
    2d28:	50 e0       	ldi	r21, 0x00	; 0
    2d2a:	ca 01       	movw	r24, r20
    2d2c:	88 0f       	add	r24, r24
    2d2e:	99 1f       	adc	r25, r25
    2d30:	9c 01       	movw	r18, r24
    2d32:	22 0f       	add	r18, r18
    2d34:	33 1f       	adc	r19, r19
    2d36:	22 0f       	add	r18, r18
    2d38:	33 1f       	adc	r19, r19
    2d3a:	22 0f       	add	r18, r18
    2d3c:	33 1f       	adc	r19, r19
    2d3e:	82 0f       	add	r24, r18
    2d40:	93 1f       	adc	r25, r19
    2d42:	84 0f       	add	r24, r20
    2d44:	95 1f       	adc	r25, r21
    2d46:	fc 01       	movw	r30, r24
    2d48:	e8 57       	subi	r30, 0x78	; 120
    2d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d4c:	60 81       	ld	r22, Z
    2d4e:	8a 81       	ldd	r24, Y+2	; 0x02
    2d50:	48 2f       	mov	r20, r24
    2d52:	50 e0       	ldi	r21, 0x00	; 0
    2d54:	ca 01       	movw	r24, r20
    2d56:	88 0f       	add	r24, r24
    2d58:	99 1f       	adc	r25, r25
    2d5a:	9c 01       	movw	r18, r24
    2d5c:	22 0f       	add	r18, r18
    2d5e:	33 1f       	adc	r19, r19
    2d60:	22 0f       	add	r18, r18
    2d62:	33 1f       	adc	r19, r19
    2d64:	22 0f       	add	r18, r18
    2d66:	33 1f       	adc	r19, r19
    2d68:	82 0f       	add	r24, r18
    2d6a:	93 1f       	adc	r25, r19
    2d6c:	84 0f       	add	r24, r20
    2d6e:	95 1f       	adc	r25, r21
    2d70:	fc 01       	movw	r30, r24
    2d72:	e7 57       	subi	r30, 0x77	; 119
    2d74:	ff 4f       	sbci	r31, 0xFF	; 255
    2d76:	20 81       	ld	r18, Z
    2d78:	8b 81       	ldd	r24, Y+3	; 0x03
    2d7a:	88 2f       	mov	r24, r24
    2d7c:	90 e0       	ldi	r25, 0x00	; 0
    2d7e:	fc 01       	movw	r30, r24
    2d80:	e6 55       	subi	r30, 0x56	; 86
    2d82:	ff 4f       	sbci	r31, 0xFF	; 255
    2d84:	80 81       	ld	r24, Z
    2d86:	86 95       	lsr	r24
    2d88:	86 95       	lsr	r24
    2d8a:	98 2f       	mov	r25, r24
    2d8c:	91 70       	andi	r25, 0x01	; 1
    2d8e:	86 2f       	mov	r24, r22
    2d90:	62 2f       	mov	r22, r18
    2d92:	49 2f       	mov	r20, r25
    2d94:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2d98:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2d9a:	89 81       	ldd	r24, Y+1	; 0x01
    2d9c:	81 30       	cpi	r24, 0x01	; 1
    2d9e:	19 f0       	breq	.+6      	; 0x2da6 <SEV_SEG_enumNUMDisplay+0x254>
    2da0:	89 81       	ldd	r24, Y+1	; 0x01
    2da2:	89 8f       	std	Y+25, r24	; 0x19
    2da4:	2f c3       	rjmp	.+1630   	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],3));
    2da6:	8a 81       	ldd	r24, Y+2	; 0x02
    2da8:	48 2f       	mov	r20, r24
    2daa:	50 e0       	ldi	r21, 0x00	; 0
    2dac:	ca 01       	movw	r24, r20
    2dae:	88 0f       	add	r24, r24
    2db0:	99 1f       	adc	r25, r25
    2db2:	9c 01       	movw	r18, r24
    2db4:	22 0f       	add	r18, r18
    2db6:	33 1f       	adc	r19, r19
    2db8:	22 0f       	add	r18, r18
    2dba:	33 1f       	adc	r19, r19
    2dbc:	22 0f       	add	r18, r18
    2dbe:	33 1f       	adc	r19, r19
    2dc0:	82 0f       	add	r24, r18
    2dc2:	93 1f       	adc	r25, r19
    2dc4:	84 0f       	add	r24, r20
    2dc6:	95 1f       	adc	r25, r21
    2dc8:	fc 01       	movw	r30, r24
    2dca:	e6 57       	subi	r30, 0x76	; 118
    2dcc:	ff 4f       	sbci	r31, 0xFF	; 255
    2dce:	60 81       	ld	r22, Z
    2dd0:	8a 81       	ldd	r24, Y+2	; 0x02
    2dd2:	48 2f       	mov	r20, r24
    2dd4:	50 e0       	ldi	r21, 0x00	; 0
    2dd6:	ca 01       	movw	r24, r20
    2dd8:	88 0f       	add	r24, r24
    2dda:	99 1f       	adc	r25, r25
    2ddc:	9c 01       	movw	r18, r24
    2dde:	22 0f       	add	r18, r18
    2de0:	33 1f       	adc	r19, r19
    2de2:	22 0f       	add	r18, r18
    2de4:	33 1f       	adc	r19, r19
    2de6:	22 0f       	add	r18, r18
    2de8:	33 1f       	adc	r19, r19
    2dea:	82 0f       	add	r24, r18
    2dec:	93 1f       	adc	r25, r19
    2dee:	84 0f       	add	r24, r20
    2df0:	95 1f       	adc	r25, r21
    2df2:	fc 01       	movw	r30, r24
    2df4:	e5 57       	subi	r30, 0x75	; 117
    2df6:	ff 4f       	sbci	r31, 0xFF	; 255
    2df8:	20 81       	ld	r18, Z
    2dfa:	8b 81       	ldd	r24, Y+3	; 0x03
    2dfc:	88 2f       	mov	r24, r24
    2dfe:	90 e0       	ldi	r25, 0x00	; 0
    2e00:	fc 01       	movw	r30, r24
    2e02:	e6 55       	subi	r30, 0x56	; 86
    2e04:	ff 4f       	sbci	r31, 0xFF	; 255
    2e06:	80 81       	ld	r24, Z
    2e08:	86 95       	lsr	r24
    2e0a:	86 95       	lsr	r24
    2e0c:	86 95       	lsr	r24
    2e0e:	98 2f       	mov	r25, r24
    2e10:	91 70       	andi	r25, 0x01	; 1
    2e12:	86 2f       	mov	r24, r22
    2e14:	62 2f       	mov	r22, r18
    2e16:	49 2f       	mov	r20, r25
    2e18:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2e1c:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2e1e:	89 81       	ldd	r24, Y+1	; 0x01
    2e20:	81 30       	cpi	r24, 0x01	; 1
    2e22:	19 f0       	breq	.+6      	; 0x2e2a <SEV_SEG_enumNUMDisplay+0x2d8>
    2e24:	89 81       	ldd	r24, Y+1	; 0x01
    2e26:	89 8f       	std	Y+25, r24	; 0x19
    2e28:	ed c2       	rjmp	.+1498   	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],4));
    2e2a:	8a 81       	ldd	r24, Y+2	; 0x02
    2e2c:	48 2f       	mov	r20, r24
    2e2e:	50 e0       	ldi	r21, 0x00	; 0
    2e30:	ca 01       	movw	r24, r20
    2e32:	88 0f       	add	r24, r24
    2e34:	99 1f       	adc	r25, r25
    2e36:	9c 01       	movw	r18, r24
    2e38:	22 0f       	add	r18, r18
    2e3a:	33 1f       	adc	r19, r19
    2e3c:	22 0f       	add	r18, r18
    2e3e:	33 1f       	adc	r19, r19
    2e40:	22 0f       	add	r18, r18
    2e42:	33 1f       	adc	r19, r19
    2e44:	82 0f       	add	r24, r18
    2e46:	93 1f       	adc	r25, r19
    2e48:	84 0f       	add	r24, r20
    2e4a:	95 1f       	adc	r25, r21
    2e4c:	fc 01       	movw	r30, r24
    2e4e:	e4 57       	subi	r30, 0x74	; 116
    2e50:	ff 4f       	sbci	r31, 0xFF	; 255
    2e52:	60 81       	ld	r22, Z
    2e54:	8a 81       	ldd	r24, Y+2	; 0x02
    2e56:	48 2f       	mov	r20, r24
    2e58:	50 e0       	ldi	r21, 0x00	; 0
    2e5a:	ca 01       	movw	r24, r20
    2e5c:	88 0f       	add	r24, r24
    2e5e:	99 1f       	adc	r25, r25
    2e60:	9c 01       	movw	r18, r24
    2e62:	22 0f       	add	r18, r18
    2e64:	33 1f       	adc	r19, r19
    2e66:	22 0f       	add	r18, r18
    2e68:	33 1f       	adc	r19, r19
    2e6a:	22 0f       	add	r18, r18
    2e6c:	33 1f       	adc	r19, r19
    2e6e:	82 0f       	add	r24, r18
    2e70:	93 1f       	adc	r25, r19
    2e72:	84 0f       	add	r24, r20
    2e74:	95 1f       	adc	r25, r21
    2e76:	fc 01       	movw	r30, r24
    2e78:	e3 57       	subi	r30, 0x73	; 115
    2e7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e7c:	20 81       	ld	r18, Z
    2e7e:	8b 81       	ldd	r24, Y+3	; 0x03
    2e80:	88 2f       	mov	r24, r24
    2e82:	90 e0       	ldi	r25, 0x00	; 0
    2e84:	fc 01       	movw	r30, r24
    2e86:	e6 55       	subi	r30, 0x56	; 86
    2e88:	ff 4f       	sbci	r31, 0xFF	; 255
    2e8a:	80 81       	ld	r24, Z
    2e8c:	82 95       	swap	r24
    2e8e:	8f 70       	andi	r24, 0x0F	; 15
    2e90:	98 2f       	mov	r25, r24
    2e92:	91 70       	andi	r25, 0x01	; 1
    2e94:	86 2f       	mov	r24, r22
    2e96:	62 2f       	mov	r22, r18
    2e98:	49 2f       	mov	r20, r25
    2e9a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2e9e:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2ea0:	89 81       	ldd	r24, Y+1	; 0x01
    2ea2:	81 30       	cpi	r24, 0x01	; 1
    2ea4:	19 f0       	breq	.+6      	; 0x2eac <SEV_SEG_enumNUMDisplay+0x35a>
    2ea6:	89 81       	ldd	r24, Y+1	; 0x01
    2ea8:	89 8f       	std	Y+25, r24	; 0x19
    2eaa:	ac c2       	rjmp	.+1368   	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],5));
    2eac:	8a 81       	ldd	r24, Y+2	; 0x02
    2eae:	48 2f       	mov	r20, r24
    2eb0:	50 e0       	ldi	r21, 0x00	; 0
    2eb2:	ca 01       	movw	r24, r20
    2eb4:	88 0f       	add	r24, r24
    2eb6:	99 1f       	adc	r25, r25
    2eb8:	9c 01       	movw	r18, r24
    2eba:	22 0f       	add	r18, r18
    2ebc:	33 1f       	adc	r19, r19
    2ebe:	22 0f       	add	r18, r18
    2ec0:	33 1f       	adc	r19, r19
    2ec2:	22 0f       	add	r18, r18
    2ec4:	33 1f       	adc	r19, r19
    2ec6:	82 0f       	add	r24, r18
    2ec8:	93 1f       	adc	r25, r19
    2eca:	84 0f       	add	r24, r20
    2ecc:	95 1f       	adc	r25, r21
    2ece:	fc 01       	movw	r30, r24
    2ed0:	e2 57       	subi	r30, 0x72	; 114
    2ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed4:	60 81       	ld	r22, Z
    2ed6:	8a 81       	ldd	r24, Y+2	; 0x02
    2ed8:	48 2f       	mov	r20, r24
    2eda:	50 e0       	ldi	r21, 0x00	; 0
    2edc:	ca 01       	movw	r24, r20
    2ede:	88 0f       	add	r24, r24
    2ee0:	99 1f       	adc	r25, r25
    2ee2:	9c 01       	movw	r18, r24
    2ee4:	22 0f       	add	r18, r18
    2ee6:	33 1f       	adc	r19, r19
    2ee8:	22 0f       	add	r18, r18
    2eea:	33 1f       	adc	r19, r19
    2eec:	22 0f       	add	r18, r18
    2eee:	33 1f       	adc	r19, r19
    2ef0:	82 0f       	add	r24, r18
    2ef2:	93 1f       	adc	r25, r19
    2ef4:	84 0f       	add	r24, r20
    2ef6:	95 1f       	adc	r25, r21
    2ef8:	fc 01       	movw	r30, r24
    2efa:	e1 57       	subi	r30, 0x71	; 113
    2efc:	ff 4f       	sbci	r31, 0xFF	; 255
    2efe:	20 81       	ld	r18, Z
    2f00:	8b 81       	ldd	r24, Y+3	; 0x03
    2f02:	88 2f       	mov	r24, r24
    2f04:	90 e0       	ldi	r25, 0x00	; 0
    2f06:	fc 01       	movw	r30, r24
    2f08:	e6 55       	subi	r30, 0x56	; 86
    2f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f0c:	80 81       	ld	r24, Z
    2f0e:	82 95       	swap	r24
    2f10:	86 95       	lsr	r24
    2f12:	87 70       	andi	r24, 0x07	; 7
    2f14:	98 2f       	mov	r25, r24
    2f16:	91 70       	andi	r25, 0x01	; 1
    2f18:	86 2f       	mov	r24, r22
    2f1a:	62 2f       	mov	r22, r18
    2f1c:	49 2f       	mov	r20, r25
    2f1e:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2f22:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2f24:	89 81       	ldd	r24, Y+1	; 0x01
    2f26:	81 30       	cpi	r24, 0x01	; 1
    2f28:	19 f0       	breq	.+6      	; 0x2f30 <SEV_SEG_enumNUMDisplay+0x3de>
    2f2a:	89 81       	ldd	r24, Y+1	; 0x01
    2f2c:	89 8f       	std	Y+25, r24	; 0x19
    2f2e:	6a c2       	rjmp	.+1236   	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],6));
    2f30:	8a 81       	ldd	r24, Y+2	; 0x02
    2f32:	48 2f       	mov	r20, r24
    2f34:	50 e0       	ldi	r21, 0x00	; 0
    2f36:	ca 01       	movw	r24, r20
    2f38:	88 0f       	add	r24, r24
    2f3a:	99 1f       	adc	r25, r25
    2f3c:	9c 01       	movw	r18, r24
    2f3e:	22 0f       	add	r18, r18
    2f40:	33 1f       	adc	r19, r19
    2f42:	22 0f       	add	r18, r18
    2f44:	33 1f       	adc	r19, r19
    2f46:	22 0f       	add	r18, r18
    2f48:	33 1f       	adc	r19, r19
    2f4a:	82 0f       	add	r24, r18
    2f4c:	93 1f       	adc	r25, r19
    2f4e:	84 0f       	add	r24, r20
    2f50:	95 1f       	adc	r25, r21
    2f52:	fc 01       	movw	r30, r24
    2f54:	e0 57       	subi	r30, 0x70	; 112
    2f56:	ff 4f       	sbci	r31, 0xFF	; 255
    2f58:	60 81       	ld	r22, Z
    2f5a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f5c:	48 2f       	mov	r20, r24
    2f5e:	50 e0       	ldi	r21, 0x00	; 0
    2f60:	ca 01       	movw	r24, r20
    2f62:	88 0f       	add	r24, r24
    2f64:	99 1f       	adc	r25, r25
    2f66:	9c 01       	movw	r18, r24
    2f68:	22 0f       	add	r18, r18
    2f6a:	33 1f       	adc	r19, r19
    2f6c:	22 0f       	add	r18, r18
    2f6e:	33 1f       	adc	r19, r19
    2f70:	22 0f       	add	r18, r18
    2f72:	33 1f       	adc	r19, r19
    2f74:	82 0f       	add	r24, r18
    2f76:	93 1f       	adc	r25, r19
    2f78:	84 0f       	add	r24, r20
    2f7a:	95 1f       	adc	r25, r21
    2f7c:	fc 01       	movw	r30, r24
    2f7e:	ef 56       	subi	r30, 0x6F	; 111
    2f80:	ff 4f       	sbci	r31, 0xFF	; 255
    2f82:	20 81       	ld	r18, Z
    2f84:	8b 81       	ldd	r24, Y+3	; 0x03
    2f86:	88 2f       	mov	r24, r24
    2f88:	90 e0       	ldi	r25, 0x00	; 0
    2f8a:	fc 01       	movw	r30, r24
    2f8c:	e6 55       	subi	r30, 0x56	; 86
    2f8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2f90:	80 81       	ld	r24, Z
    2f92:	82 95       	swap	r24
    2f94:	86 95       	lsr	r24
    2f96:	86 95       	lsr	r24
    2f98:	83 70       	andi	r24, 0x03	; 3
    2f9a:	98 2f       	mov	r25, r24
    2f9c:	91 70       	andi	r25, 0x01	; 1
    2f9e:	86 2f       	mov	r24, r22
    2fa0:	62 2f       	mov	r22, r18
    2fa2:	49 2f       	mov	r20, r25
    2fa4:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2fa8:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2faa:	89 81       	ldd	r24, Y+1	; 0x01
    2fac:	81 30       	cpi	r24, 0x01	; 1
    2fae:	09 f4       	brne	.+2      	; 0x2fb2 <SEV_SEG_enumNUMDisplay+0x460>
    2fb0:	27 c2       	rjmp	.+1102   	; 0x3400 <SEV_SEG_enumNUMDisplay+0x8ae>
    2fb2:	89 81       	ldd	r24, Y+1	; 0x01
    2fb4:	89 8f       	std	Y+25, r24	; 0x19
    2fb6:	26 c2       	rjmp	.+1100   	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    2fb8:	8a 81       	ldd	r24, Y+2	; 0x02
    2fba:	48 2f       	mov	r20, r24
    2fbc:	50 e0       	ldi	r21, 0x00	; 0
    2fbe:	ca 01       	movw	r24, r20
    2fc0:	88 0f       	add	r24, r24
    2fc2:	99 1f       	adc	r25, r25
    2fc4:	9c 01       	movw	r18, r24
    2fc6:	22 0f       	add	r18, r18
    2fc8:	33 1f       	adc	r19, r19
    2fca:	22 0f       	add	r18, r18
    2fcc:	33 1f       	adc	r19, r19
    2fce:	22 0f       	add	r18, r18
    2fd0:	33 1f       	adc	r19, r19
    2fd2:	82 0f       	add	r24, r18
    2fd4:	93 1f       	adc	r25, r19
    2fd6:	84 0f       	add	r24, r20
    2fd8:	95 1f       	adc	r25, r21
    2fda:	fc 01       	movw	r30, r24
    2fdc:	ea 56       	subi	r30, 0x6A	; 106
    2fde:	ff 4f       	sbci	r31, 0xFF	; 255
    2fe0:	80 81       	ld	r24, Z
    2fe2:	88 23       	and	r24, r24
    2fe4:	09 f0       	breq	.+2      	; 0x2fe8 <SEV_SEG_enumNUMDisplay+0x496>
    2fe6:	07 c2       	rjmp	.+1038   	; 0x33f6 <SEV_SEG_enumNUMDisplay+0x8a4>
		{
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],0));
    2fe8:	8a 81       	ldd	r24, Y+2	; 0x02
    2fea:	48 2f       	mov	r20, r24
    2fec:	50 e0       	ldi	r21, 0x00	; 0
    2fee:	ca 01       	movw	r24, r20
    2ff0:	88 0f       	add	r24, r24
    2ff2:	99 1f       	adc	r25, r25
    2ff4:	9c 01       	movw	r18, r24
    2ff6:	22 0f       	add	r18, r18
    2ff8:	33 1f       	adc	r19, r19
    2ffa:	22 0f       	add	r18, r18
    2ffc:	33 1f       	adc	r19, r19
    2ffe:	22 0f       	add	r18, r18
    3000:	33 1f       	adc	r19, r19
    3002:	82 0f       	add	r24, r18
    3004:	93 1f       	adc	r25, r19
    3006:	84 0f       	add	r24, r20
    3008:	95 1f       	adc	r25, r21
    300a:	fc 01       	movw	r30, r24
    300c:	ec 57       	subi	r30, 0x7C	; 124
    300e:	ff 4f       	sbci	r31, 0xFF	; 255
    3010:	80 81       	ld	r24, Z
    3012:	88 8f       	std	Y+24, r24	; 0x18
    3014:	8a 81       	ldd	r24, Y+2	; 0x02
    3016:	48 2f       	mov	r20, r24
    3018:	50 e0       	ldi	r21, 0x00	; 0
    301a:	ca 01       	movw	r24, r20
    301c:	88 0f       	add	r24, r24
    301e:	99 1f       	adc	r25, r25
    3020:	9c 01       	movw	r18, r24
    3022:	22 0f       	add	r18, r18
    3024:	33 1f       	adc	r19, r19
    3026:	22 0f       	add	r18, r18
    3028:	33 1f       	adc	r19, r19
    302a:	22 0f       	add	r18, r18
    302c:	33 1f       	adc	r19, r19
    302e:	82 0f       	add	r24, r18
    3030:	93 1f       	adc	r25, r19
    3032:	84 0f       	add	r24, r20
    3034:	95 1f       	adc	r25, r21
    3036:	fc 01       	movw	r30, r24
    3038:	eb 57       	subi	r30, 0x7B	; 123
    303a:	ff 4f       	sbci	r31, 0xFF	; 255
    303c:	80 81       	ld	r24, Z
    303e:	8f 8b       	std	Y+23, r24	; 0x17
    3040:	8b 81       	ldd	r24, Y+3	; 0x03
    3042:	88 2f       	mov	r24, r24
    3044:	90 e0       	ldi	r25, 0x00	; 0
    3046:	fc 01       	movw	r30, r24
    3048:	e6 55       	subi	r30, 0x56	; 86
    304a:	ff 4f       	sbci	r31, 0xFF	; 255
    304c:	80 81       	ld	r24, Z
    304e:	88 2f       	mov	r24, r24
    3050:	90 e0       	ldi	r25, 0x00	; 0
    3052:	81 70       	andi	r24, 0x01	; 1
    3054:	90 70       	andi	r25, 0x00	; 0
    3056:	1e 8a       	std	Y+22, r1	; 0x16
    3058:	00 97       	sbiw	r24, 0x00	; 0
    305a:	11 f4       	brne	.+4      	; 0x3060 <SEV_SEG_enumNUMDisplay+0x50e>
    305c:	81 e0       	ldi	r24, 0x01	; 1
    305e:	8e 8b       	std	Y+22, r24	; 0x16
    3060:	88 8d       	ldd	r24, Y+24	; 0x18
    3062:	6f 89       	ldd	r22, Y+23	; 0x17
    3064:	4e 89       	ldd	r20, Y+22	; 0x16
    3066:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    306a:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    306c:	89 81       	ldd	r24, Y+1	; 0x01
    306e:	81 30       	cpi	r24, 0x01	; 1
    3070:	19 f0       	breq	.+6      	; 0x3078 <SEV_SEG_enumNUMDisplay+0x526>
    3072:	89 81       	ldd	r24, Y+1	; 0x01
    3074:	89 8f       	std	Y+25, r24	; 0x19
    3076:	c6 c1       	rjmp	.+908    	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],1));
    3078:	8a 81       	ldd	r24, Y+2	; 0x02
    307a:	48 2f       	mov	r20, r24
    307c:	50 e0       	ldi	r21, 0x00	; 0
    307e:	ca 01       	movw	r24, r20
    3080:	88 0f       	add	r24, r24
    3082:	99 1f       	adc	r25, r25
    3084:	9c 01       	movw	r18, r24
    3086:	22 0f       	add	r18, r18
    3088:	33 1f       	adc	r19, r19
    308a:	22 0f       	add	r18, r18
    308c:	33 1f       	adc	r19, r19
    308e:	22 0f       	add	r18, r18
    3090:	33 1f       	adc	r19, r19
    3092:	82 0f       	add	r24, r18
    3094:	93 1f       	adc	r25, r19
    3096:	84 0f       	add	r24, r20
    3098:	95 1f       	adc	r25, r21
    309a:	fc 01       	movw	r30, r24
    309c:	ea 57       	subi	r30, 0x7A	; 122
    309e:	ff 4f       	sbci	r31, 0xFF	; 255
    30a0:	80 81       	ld	r24, Z
    30a2:	8d 8b       	std	Y+21, r24	; 0x15
    30a4:	8a 81       	ldd	r24, Y+2	; 0x02
    30a6:	48 2f       	mov	r20, r24
    30a8:	50 e0       	ldi	r21, 0x00	; 0
    30aa:	ca 01       	movw	r24, r20
    30ac:	88 0f       	add	r24, r24
    30ae:	99 1f       	adc	r25, r25
    30b0:	9c 01       	movw	r18, r24
    30b2:	22 0f       	add	r18, r18
    30b4:	33 1f       	adc	r19, r19
    30b6:	22 0f       	add	r18, r18
    30b8:	33 1f       	adc	r19, r19
    30ba:	22 0f       	add	r18, r18
    30bc:	33 1f       	adc	r19, r19
    30be:	82 0f       	add	r24, r18
    30c0:	93 1f       	adc	r25, r19
    30c2:	84 0f       	add	r24, r20
    30c4:	95 1f       	adc	r25, r21
    30c6:	fc 01       	movw	r30, r24
    30c8:	e9 57       	subi	r30, 0x79	; 121
    30ca:	ff 4f       	sbci	r31, 0xFF	; 255
    30cc:	80 81       	ld	r24, Z
    30ce:	8c 8b       	std	Y+20, r24	; 0x14
    30d0:	8b 81       	ldd	r24, Y+3	; 0x03
    30d2:	88 2f       	mov	r24, r24
    30d4:	90 e0       	ldi	r25, 0x00	; 0
    30d6:	fc 01       	movw	r30, r24
    30d8:	e6 55       	subi	r30, 0x56	; 86
    30da:	ff 4f       	sbci	r31, 0xFF	; 255
    30dc:	80 81       	ld	r24, Z
    30de:	86 95       	lsr	r24
    30e0:	88 2f       	mov	r24, r24
    30e2:	90 e0       	ldi	r25, 0x00	; 0
    30e4:	81 70       	andi	r24, 0x01	; 1
    30e6:	90 70       	andi	r25, 0x00	; 0
    30e8:	1b 8a       	std	Y+19, r1	; 0x13
    30ea:	00 97       	sbiw	r24, 0x00	; 0
    30ec:	11 f4       	brne	.+4      	; 0x30f2 <SEV_SEG_enumNUMDisplay+0x5a0>
    30ee:	81 e0       	ldi	r24, 0x01	; 1
    30f0:	8b 8b       	std	Y+19, r24	; 0x13
    30f2:	8d 89       	ldd	r24, Y+21	; 0x15
    30f4:	6c 89       	ldd	r22, Y+20	; 0x14
    30f6:	4b 89       	ldd	r20, Y+19	; 0x13
    30f8:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    30fc:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    30fe:	89 81       	ldd	r24, Y+1	; 0x01
    3100:	81 30       	cpi	r24, 0x01	; 1
    3102:	19 f0       	breq	.+6      	; 0x310a <SEV_SEG_enumNUMDisplay+0x5b8>
    3104:	89 81       	ldd	r24, Y+1	; 0x01
    3106:	89 8f       	std	Y+25, r24	; 0x19
    3108:	7d c1       	rjmp	.+762    	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],2));
    310a:	8a 81       	ldd	r24, Y+2	; 0x02
    310c:	48 2f       	mov	r20, r24
    310e:	50 e0       	ldi	r21, 0x00	; 0
    3110:	ca 01       	movw	r24, r20
    3112:	88 0f       	add	r24, r24
    3114:	99 1f       	adc	r25, r25
    3116:	9c 01       	movw	r18, r24
    3118:	22 0f       	add	r18, r18
    311a:	33 1f       	adc	r19, r19
    311c:	22 0f       	add	r18, r18
    311e:	33 1f       	adc	r19, r19
    3120:	22 0f       	add	r18, r18
    3122:	33 1f       	adc	r19, r19
    3124:	82 0f       	add	r24, r18
    3126:	93 1f       	adc	r25, r19
    3128:	84 0f       	add	r24, r20
    312a:	95 1f       	adc	r25, r21
    312c:	fc 01       	movw	r30, r24
    312e:	e8 57       	subi	r30, 0x78	; 120
    3130:	ff 4f       	sbci	r31, 0xFF	; 255
    3132:	80 81       	ld	r24, Z
    3134:	8a 8b       	std	Y+18, r24	; 0x12
    3136:	8a 81       	ldd	r24, Y+2	; 0x02
    3138:	48 2f       	mov	r20, r24
    313a:	50 e0       	ldi	r21, 0x00	; 0
    313c:	ca 01       	movw	r24, r20
    313e:	88 0f       	add	r24, r24
    3140:	99 1f       	adc	r25, r25
    3142:	9c 01       	movw	r18, r24
    3144:	22 0f       	add	r18, r18
    3146:	33 1f       	adc	r19, r19
    3148:	22 0f       	add	r18, r18
    314a:	33 1f       	adc	r19, r19
    314c:	22 0f       	add	r18, r18
    314e:	33 1f       	adc	r19, r19
    3150:	82 0f       	add	r24, r18
    3152:	93 1f       	adc	r25, r19
    3154:	84 0f       	add	r24, r20
    3156:	95 1f       	adc	r25, r21
    3158:	fc 01       	movw	r30, r24
    315a:	e7 57       	subi	r30, 0x77	; 119
    315c:	ff 4f       	sbci	r31, 0xFF	; 255
    315e:	80 81       	ld	r24, Z
    3160:	89 8b       	std	Y+17, r24	; 0x11
    3162:	8b 81       	ldd	r24, Y+3	; 0x03
    3164:	88 2f       	mov	r24, r24
    3166:	90 e0       	ldi	r25, 0x00	; 0
    3168:	fc 01       	movw	r30, r24
    316a:	e6 55       	subi	r30, 0x56	; 86
    316c:	ff 4f       	sbci	r31, 0xFF	; 255
    316e:	80 81       	ld	r24, Z
    3170:	86 95       	lsr	r24
    3172:	86 95       	lsr	r24
    3174:	88 2f       	mov	r24, r24
    3176:	90 e0       	ldi	r25, 0x00	; 0
    3178:	81 70       	andi	r24, 0x01	; 1
    317a:	90 70       	andi	r25, 0x00	; 0
    317c:	18 8a       	std	Y+16, r1	; 0x10
    317e:	00 97       	sbiw	r24, 0x00	; 0
    3180:	11 f4       	brne	.+4      	; 0x3186 <SEV_SEG_enumNUMDisplay+0x634>
    3182:	81 e0       	ldi	r24, 0x01	; 1
    3184:	88 8b       	std	Y+16, r24	; 0x10
    3186:	8a 89       	ldd	r24, Y+18	; 0x12
    3188:	69 89       	ldd	r22, Y+17	; 0x11
    318a:	48 89       	ldd	r20, Y+16	; 0x10
    318c:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3190:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3192:	89 81       	ldd	r24, Y+1	; 0x01
    3194:	81 30       	cpi	r24, 0x01	; 1
    3196:	19 f0       	breq	.+6      	; 0x319e <SEV_SEG_enumNUMDisplay+0x64c>
    3198:	89 81       	ldd	r24, Y+1	; 0x01
    319a:	89 8f       	std	Y+25, r24	; 0x19
    319c:	33 c1       	rjmp	.+614    	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],3));
    319e:	8a 81       	ldd	r24, Y+2	; 0x02
    31a0:	48 2f       	mov	r20, r24
    31a2:	50 e0       	ldi	r21, 0x00	; 0
    31a4:	ca 01       	movw	r24, r20
    31a6:	88 0f       	add	r24, r24
    31a8:	99 1f       	adc	r25, r25
    31aa:	9c 01       	movw	r18, r24
    31ac:	22 0f       	add	r18, r18
    31ae:	33 1f       	adc	r19, r19
    31b0:	22 0f       	add	r18, r18
    31b2:	33 1f       	adc	r19, r19
    31b4:	22 0f       	add	r18, r18
    31b6:	33 1f       	adc	r19, r19
    31b8:	82 0f       	add	r24, r18
    31ba:	93 1f       	adc	r25, r19
    31bc:	84 0f       	add	r24, r20
    31be:	95 1f       	adc	r25, r21
    31c0:	fc 01       	movw	r30, r24
    31c2:	e6 57       	subi	r30, 0x76	; 118
    31c4:	ff 4f       	sbci	r31, 0xFF	; 255
    31c6:	80 81       	ld	r24, Z
    31c8:	8f 87       	std	Y+15, r24	; 0x0f
    31ca:	8a 81       	ldd	r24, Y+2	; 0x02
    31cc:	48 2f       	mov	r20, r24
    31ce:	50 e0       	ldi	r21, 0x00	; 0
    31d0:	ca 01       	movw	r24, r20
    31d2:	88 0f       	add	r24, r24
    31d4:	99 1f       	adc	r25, r25
    31d6:	9c 01       	movw	r18, r24
    31d8:	22 0f       	add	r18, r18
    31da:	33 1f       	adc	r19, r19
    31dc:	22 0f       	add	r18, r18
    31de:	33 1f       	adc	r19, r19
    31e0:	22 0f       	add	r18, r18
    31e2:	33 1f       	adc	r19, r19
    31e4:	82 0f       	add	r24, r18
    31e6:	93 1f       	adc	r25, r19
    31e8:	84 0f       	add	r24, r20
    31ea:	95 1f       	adc	r25, r21
    31ec:	fc 01       	movw	r30, r24
    31ee:	e5 57       	subi	r30, 0x75	; 117
    31f0:	ff 4f       	sbci	r31, 0xFF	; 255
    31f2:	80 81       	ld	r24, Z
    31f4:	8e 87       	std	Y+14, r24	; 0x0e
    31f6:	8b 81       	ldd	r24, Y+3	; 0x03
    31f8:	88 2f       	mov	r24, r24
    31fa:	90 e0       	ldi	r25, 0x00	; 0
    31fc:	fc 01       	movw	r30, r24
    31fe:	e6 55       	subi	r30, 0x56	; 86
    3200:	ff 4f       	sbci	r31, 0xFF	; 255
    3202:	80 81       	ld	r24, Z
    3204:	86 95       	lsr	r24
    3206:	86 95       	lsr	r24
    3208:	86 95       	lsr	r24
    320a:	88 2f       	mov	r24, r24
    320c:	90 e0       	ldi	r25, 0x00	; 0
    320e:	81 70       	andi	r24, 0x01	; 1
    3210:	90 70       	andi	r25, 0x00	; 0
    3212:	1d 86       	std	Y+13, r1	; 0x0d
    3214:	00 97       	sbiw	r24, 0x00	; 0
    3216:	11 f4       	brne	.+4      	; 0x321c <SEV_SEG_enumNUMDisplay+0x6ca>
    3218:	81 e0       	ldi	r24, 0x01	; 1
    321a:	8d 87       	std	Y+13, r24	; 0x0d
    321c:	8f 85       	ldd	r24, Y+15	; 0x0f
    321e:	6e 85       	ldd	r22, Y+14	; 0x0e
    3220:	4d 85       	ldd	r20, Y+13	; 0x0d
    3222:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3226:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3228:	89 81       	ldd	r24, Y+1	; 0x01
    322a:	81 30       	cpi	r24, 0x01	; 1
    322c:	19 f0       	breq	.+6      	; 0x3234 <SEV_SEG_enumNUMDisplay+0x6e2>
    322e:	89 81       	ldd	r24, Y+1	; 0x01
    3230:	89 8f       	std	Y+25, r24	; 0x19
    3232:	e8 c0       	rjmp	.+464    	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],4));
    3234:	8a 81       	ldd	r24, Y+2	; 0x02
    3236:	48 2f       	mov	r20, r24
    3238:	50 e0       	ldi	r21, 0x00	; 0
    323a:	ca 01       	movw	r24, r20
    323c:	88 0f       	add	r24, r24
    323e:	99 1f       	adc	r25, r25
    3240:	9c 01       	movw	r18, r24
    3242:	22 0f       	add	r18, r18
    3244:	33 1f       	adc	r19, r19
    3246:	22 0f       	add	r18, r18
    3248:	33 1f       	adc	r19, r19
    324a:	22 0f       	add	r18, r18
    324c:	33 1f       	adc	r19, r19
    324e:	82 0f       	add	r24, r18
    3250:	93 1f       	adc	r25, r19
    3252:	84 0f       	add	r24, r20
    3254:	95 1f       	adc	r25, r21
    3256:	fc 01       	movw	r30, r24
    3258:	e4 57       	subi	r30, 0x74	; 116
    325a:	ff 4f       	sbci	r31, 0xFF	; 255
    325c:	80 81       	ld	r24, Z
    325e:	8c 87       	std	Y+12, r24	; 0x0c
    3260:	8a 81       	ldd	r24, Y+2	; 0x02
    3262:	48 2f       	mov	r20, r24
    3264:	50 e0       	ldi	r21, 0x00	; 0
    3266:	ca 01       	movw	r24, r20
    3268:	88 0f       	add	r24, r24
    326a:	99 1f       	adc	r25, r25
    326c:	9c 01       	movw	r18, r24
    326e:	22 0f       	add	r18, r18
    3270:	33 1f       	adc	r19, r19
    3272:	22 0f       	add	r18, r18
    3274:	33 1f       	adc	r19, r19
    3276:	22 0f       	add	r18, r18
    3278:	33 1f       	adc	r19, r19
    327a:	82 0f       	add	r24, r18
    327c:	93 1f       	adc	r25, r19
    327e:	84 0f       	add	r24, r20
    3280:	95 1f       	adc	r25, r21
    3282:	fc 01       	movw	r30, r24
    3284:	e3 57       	subi	r30, 0x73	; 115
    3286:	ff 4f       	sbci	r31, 0xFF	; 255
    3288:	80 81       	ld	r24, Z
    328a:	8b 87       	std	Y+11, r24	; 0x0b
    328c:	8b 81       	ldd	r24, Y+3	; 0x03
    328e:	88 2f       	mov	r24, r24
    3290:	90 e0       	ldi	r25, 0x00	; 0
    3292:	fc 01       	movw	r30, r24
    3294:	e6 55       	subi	r30, 0x56	; 86
    3296:	ff 4f       	sbci	r31, 0xFF	; 255
    3298:	80 81       	ld	r24, Z
    329a:	82 95       	swap	r24
    329c:	8f 70       	andi	r24, 0x0F	; 15
    329e:	88 2f       	mov	r24, r24
    32a0:	90 e0       	ldi	r25, 0x00	; 0
    32a2:	81 70       	andi	r24, 0x01	; 1
    32a4:	90 70       	andi	r25, 0x00	; 0
    32a6:	1a 86       	std	Y+10, r1	; 0x0a
    32a8:	00 97       	sbiw	r24, 0x00	; 0
    32aa:	11 f4       	brne	.+4      	; 0x32b0 <SEV_SEG_enumNUMDisplay+0x75e>
    32ac:	81 e0       	ldi	r24, 0x01	; 1
    32ae:	8a 87       	std	Y+10, r24	; 0x0a
    32b0:	8c 85       	ldd	r24, Y+12	; 0x0c
    32b2:	6b 85       	ldd	r22, Y+11	; 0x0b
    32b4:	4a 85       	ldd	r20, Y+10	; 0x0a
    32b6:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    32ba:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    32bc:	89 81       	ldd	r24, Y+1	; 0x01
    32be:	81 30       	cpi	r24, 0x01	; 1
    32c0:	19 f0       	breq	.+6      	; 0x32c8 <SEV_SEG_enumNUMDisplay+0x776>
    32c2:	89 81       	ldd	r24, Y+1	; 0x01
    32c4:	89 8f       	std	Y+25, r24	; 0x19
    32c6:	9e c0       	rjmp	.+316    	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],5));
    32c8:	8a 81       	ldd	r24, Y+2	; 0x02
    32ca:	48 2f       	mov	r20, r24
    32cc:	50 e0       	ldi	r21, 0x00	; 0
    32ce:	ca 01       	movw	r24, r20
    32d0:	88 0f       	add	r24, r24
    32d2:	99 1f       	adc	r25, r25
    32d4:	9c 01       	movw	r18, r24
    32d6:	22 0f       	add	r18, r18
    32d8:	33 1f       	adc	r19, r19
    32da:	22 0f       	add	r18, r18
    32dc:	33 1f       	adc	r19, r19
    32de:	22 0f       	add	r18, r18
    32e0:	33 1f       	adc	r19, r19
    32e2:	82 0f       	add	r24, r18
    32e4:	93 1f       	adc	r25, r19
    32e6:	84 0f       	add	r24, r20
    32e8:	95 1f       	adc	r25, r21
    32ea:	fc 01       	movw	r30, r24
    32ec:	e2 57       	subi	r30, 0x72	; 114
    32ee:	ff 4f       	sbci	r31, 0xFF	; 255
    32f0:	80 81       	ld	r24, Z
    32f2:	89 87       	std	Y+9, r24	; 0x09
    32f4:	8a 81       	ldd	r24, Y+2	; 0x02
    32f6:	48 2f       	mov	r20, r24
    32f8:	50 e0       	ldi	r21, 0x00	; 0
    32fa:	ca 01       	movw	r24, r20
    32fc:	88 0f       	add	r24, r24
    32fe:	99 1f       	adc	r25, r25
    3300:	9c 01       	movw	r18, r24
    3302:	22 0f       	add	r18, r18
    3304:	33 1f       	adc	r19, r19
    3306:	22 0f       	add	r18, r18
    3308:	33 1f       	adc	r19, r19
    330a:	22 0f       	add	r18, r18
    330c:	33 1f       	adc	r19, r19
    330e:	82 0f       	add	r24, r18
    3310:	93 1f       	adc	r25, r19
    3312:	84 0f       	add	r24, r20
    3314:	95 1f       	adc	r25, r21
    3316:	fc 01       	movw	r30, r24
    3318:	e1 57       	subi	r30, 0x71	; 113
    331a:	ff 4f       	sbci	r31, 0xFF	; 255
    331c:	80 81       	ld	r24, Z
    331e:	88 87       	std	Y+8, r24	; 0x08
    3320:	8b 81       	ldd	r24, Y+3	; 0x03
    3322:	88 2f       	mov	r24, r24
    3324:	90 e0       	ldi	r25, 0x00	; 0
    3326:	fc 01       	movw	r30, r24
    3328:	e6 55       	subi	r30, 0x56	; 86
    332a:	ff 4f       	sbci	r31, 0xFF	; 255
    332c:	80 81       	ld	r24, Z
    332e:	82 95       	swap	r24
    3330:	86 95       	lsr	r24
    3332:	87 70       	andi	r24, 0x07	; 7
    3334:	88 2f       	mov	r24, r24
    3336:	90 e0       	ldi	r25, 0x00	; 0
    3338:	81 70       	andi	r24, 0x01	; 1
    333a:	90 70       	andi	r25, 0x00	; 0
    333c:	1f 82       	std	Y+7, r1	; 0x07
    333e:	00 97       	sbiw	r24, 0x00	; 0
    3340:	11 f4       	brne	.+4      	; 0x3346 <SEV_SEG_enumNUMDisplay+0x7f4>
    3342:	81 e0       	ldi	r24, 0x01	; 1
    3344:	8f 83       	std	Y+7, r24	; 0x07
    3346:	89 85       	ldd	r24, Y+9	; 0x09
    3348:	68 85       	ldd	r22, Y+8	; 0x08
    334a:	4f 81       	ldd	r20, Y+7	; 0x07
    334c:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3350:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3352:	89 81       	ldd	r24, Y+1	; 0x01
    3354:	81 30       	cpi	r24, 0x01	; 1
    3356:	19 f0       	breq	.+6      	; 0x335e <SEV_SEG_enumNUMDisplay+0x80c>
    3358:	89 81       	ldd	r24, Y+1	; 0x01
    335a:	89 8f       	std	Y+25, r24	; 0x19
    335c:	53 c0       	rjmp	.+166    	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],6));
    335e:	8a 81       	ldd	r24, Y+2	; 0x02
    3360:	48 2f       	mov	r20, r24
    3362:	50 e0       	ldi	r21, 0x00	; 0
    3364:	ca 01       	movw	r24, r20
    3366:	88 0f       	add	r24, r24
    3368:	99 1f       	adc	r25, r25
    336a:	9c 01       	movw	r18, r24
    336c:	22 0f       	add	r18, r18
    336e:	33 1f       	adc	r19, r19
    3370:	22 0f       	add	r18, r18
    3372:	33 1f       	adc	r19, r19
    3374:	22 0f       	add	r18, r18
    3376:	33 1f       	adc	r19, r19
    3378:	82 0f       	add	r24, r18
    337a:	93 1f       	adc	r25, r19
    337c:	84 0f       	add	r24, r20
    337e:	95 1f       	adc	r25, r21
    3380:	fc 01       	movw	r30, r24
    3382:	e0 57       	subi	r30, 0x70	; 112
    3384:	ff 4f       	sbci	r31, 0xFF	; 255
    3386:	80 81       	ld	r24, Z
    3388:	8e 83       	std	Y+6, r24	; 0x06
    338a:	8a 81       	ldd	r24, Y+2	; 0x02
    338c:	48 2f       	mov	r20, r24
    338e:	50 e0       	ldi	r21, 0x00	; 0
    3390:	ca 01       	movw	r24, r20
    3392:	88 0f       	add	r24, r24
    3394:	99 1f       	adc	r25, r25
    3396:	9c 01       	movw	r18, r24
    3398:	22 0f       	add	r18, r18
    339a:	33 1f       	adc	r19, r19
    339c:	22 0f       	add	r18, r18
    339e:	33 1f       	adc	r19, r19
    33a0:	22 0f       	add	r18, r18
    33a2:	33 1f       	adc	r19, r19
    33a4:	82 0f       	add	r24, r18
    33a6:	93 1f       	adc	r25, r19
    33a8:	84 0f       	add	r24, r20
    33aa:	95 1f       	adc	r25, r21
    33ac:	fc 01       	movw	r30, r24
    33ae:	ef 56       	subi	r30, 0x6F	; 111
    33b0:	ff 4f       	sbci	r31, 0xFF	; 255
    33b2:	80 81       	ld	r24, Z
    33b4:	8d 83       	std	Y+5, r24	; 0x05
    33b6:	8b 81       	ldd	r24, Y+3	; 0x03
    33b8:	88 2f       	mov	r24, r24
    33ba:	90 e0       	ldi	r25, 0x00	; 0
    33bc:	fc 01       	movw	r30, r24
    33be:	e6 55       	subi	r30, 0x56	; 86
    33c0:	ff 4f       	sbci	r31, 0xFF	; 255
    33c2:	80 81       	ld	r24, Z
    33c4:	82 95       	swap	r24
    33c6:	86 95       	lsr	r24
    33c8:	86 95       	lsr	r24
    33ca:	83 70       	andi	r24, 0x03	; 3
    33cc:	88 2f       	mov	r24, r24
    33ce:	90 e0       	ldi	r25, 0x00	; 0
    33d0:	81 70       	andi	r24, 0x01	; 1
    33d2:	90 70       	andi	r25, 0x00	; 0
    33d4:	1c 82       	std	Y+4, r1	; 0x04
    33d6:	00 97       	sbiw	r24, 0x00	; 0
    33d8:	11 f4       	brne	.+4      	; 0x33de <SEV_SEG_enumNUMDisplay+0x88c>
    33da:	81 e0       	ldi	r24, 0x01	; 1
    33dc:	8c 83       	std	Y+4, r24	; 0x04
    33de:	8e 81       	ldd	r24, Y+6	; 0x06
    33e0:	6d 81       	ldd	r22, Y+5	; 0x05
    33e2:	4c 81       	ldd	r20, Y+4	; 0x04
    33e4:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    33e8:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    33ea:	89 81       	ldd	r24, Y+1	; 0x01
    33ec:	81 30       	cpi	r24, 0x01	; 1
    33ee:	41 f0       	breq	.+16     	; 0x3400 <SEV_SEG_enumNUMDisplay+0x8ae>
    33f0:	89 81       	ldd	r24, Y+1	; 0x01
    33f2:	89 8f       	std	Y+25, r24	; 0x19
    33f4:	07 c0       	rjmp	.+14     	; 0x3404 <SEV_SEG_enumNUMDisplay+0x8b2>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    33f6:	83 e0       	ldi	r24, 0x03	; 3
    33f8:	89 83       	std	Y+1, r24	; 0x01
    33fa:	02 c0       	rjmp	.+4      	; 0x3400 <SEV_SEG_enumNUMDisplay+0x8ae>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    33fc:	83 e0       	ldi	r24, 0x03	; 3
    33fe:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    3400:	89 81       	ldd	r24, Y+1	; 0x01
    3402:	89 8f       	std	Y+25, r24	; 0x19
    3404:	89 8d       	ldd	r24, Y+25	; 0x19
}
    3406:	69 96       	adiw	r28, 0x19	; 25
    3408:	0f b6       	in	r0, 0x3f	; 63
    340a:	f8 94       	cli
    340c:	de bf       	out	0x3e, r29	; 62
    340e:	0f be       	out	0x3f, r0	; 63
    3410:	cd bf       	out	0x3d, r28	; 61
    3412:	cf 91       	pop	r28
    3414:	df 91       	pop	r29
    3416:	08 95       	ret

00003418 <SEV_SEG_enumCMNEnable>:
ES_T SEV_SEG_enumCMNEnable(u8 Copy_u8SegmentID)
{
    3418:	df 93       	push	r29
    341a:	cf 93       	push	r28
    341c:	00 d0       	rcall	.+0      	; 0x341e <SEV_SEG_enumCMNEnable+0x6>
    341e:	cd b7       	in	r28, 0x3d	; 61
    3420:	de b7       	in	r29, 0x3e	; 62
    3422:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    3424:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    3426:	8a 81       	ldd	r24, Y+2	; 0x02
    3428:	82 30       	cpi	r24, 0x02	; 2
    342a:	08 f0       	brcs	.+2      	; 0x342e <SEV_SEG_enumCMNEnable+0x16>
    342c:	f6 c0       	rjmp	.+492    	; 0x361a <SEV_SEG_enumCMNEnable+0x202>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port<=DIO_PORTD
    342e:	8a 81       	ldd	r24, Y+2	; 0x02
    3430:	48 2f       	mov	r20, r24
    3432:	50 e0       	ldi	r21, 0x00	; 0
    3434:	ca 01       	movw	r24, r20
    3436:	88 0f       	add	r24, r24
    3438:	99 1f       	adc	r25, r25
    343a:	9c 01       	movw	r18, r24
    343c:	22 0f       	add	r18, r18
    343e:	33 1f       	adc	r19, r19
    3440:	22 0f       	add	r18, r18
    3442:	33 1f       	adc	r19, r19
    3444:	22 0f       	add	r18, r18
    3446:	33 1f       	adc	r19, r19
    3448:	82 0f       	add	r24, r18
    344a:	93 1f       	adc	r25, r19
    344c:	84 0f       	add	r24, r20
    344e:	95 1f       	adc	r25, r21
    3450:	fc 01       	movw	r30, r24
    3452:	ee 56       	subi	r30, 0x6E	; 110
    3454:	ff 4f       	sbci	r31, 0xFF	; 255
    3456:	80 81       	ld	r24, Z
    3458:	84 30       	cpi	r24, 0x04	; 4
    345a:	08 f0       	brcs	.+2      	; 0x345e <SEV_SEG_enumCMNEnable+0x46>
    345c:	ab c0       	rjmp	.+342    	; 0x35b4 <SEV_SEG_enumCMNEnable+0x19c>
    345e:	8a 81       	ldd	r24, Y+2	; 0x02
    3460:	48 2f       	mov	r20, r24
    3462:	50 e0       	ldi	r21, 0x00	; 0
    3464:	ca 01       	movw	r24, r20
    3466:	88 0f       	add	r24, r24
    3468:	99 1f       	adc	r25, r25
    346a:	9c 01       	movw	r18, r24
    346c:	22 0f       	add	r18, r18
    346e:	33 1f       	adc	r19, r19
    3470:	22 0f       	add	r18, r18
    3472:	33 1f       	adc	r19, r19
    3474:	22 0f       	add	r18, r18
    3476:	33 1f       	adc	r19, r19
    3478:	82 0f       	add	r24, r18
    347a:	93 1f       	adc	r25, r19
    347c:	84 0f       	add	r24, r20
    347e:	95 1f       	adc	r25, r21
    3480:	fc 01       	movw	r30, r24
    3482:	ed 56       	subi	r30, 0x6D	; 109
    3484:	ff 4f       	sbci	r31, 0xFF	; 255
    3486:	80 81       	ld	r24, Z
    3488:	88 30       	cpi	r24, 0x08	; 8
    348a:	08 f0       	brcs	.+2      	; 0x348e <SEV_SEG_enumCMNEnable+0x76>
    348c:	93 c0       	rjmp	.+294    	; 0x35b4 <SEV_SEG_enumCMNEnable+0x19c>
			&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin<=DIO_PIN7)
		{
			if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    348e:	8a 81       	ldd	r24, Y+2	; 0x02
    3490:	48 2f       	mov	r20, r24
    3492:	50 e0       	ldi	r21, 0x00	; 0
    3494:	ca 01       	movw	r24, r20
    3496:	88 0f       	add	r24, r24
    3498:	99 1f       	adc	r25, r25
    349a:	9c 01       	movw	r18, r24
    349c:	22 0f       	add	r18, r18
    349e:	33 1f       	adc	r19, r19
    34a0:	22 0f       	add	r18, r18
    34a2:	33 1f       	adc	r19, r19
    34a4:	22 0f       	add	r18, r18
    34a6:	33 1f       	adc	r19, r19
    34a8:	82 0f       	add	r24, r18
    34aa:	93 1f       	adc	r25, r19
    34ac:	84 0f       	add	r24, r20
    34ae:	95 1f       	adc	r25, r21
    34b0:	fc 01       	movw	r30, r24
    34b2:	ea 56       	subi	r30, 0x6A	; 106
    34b4:	ff 4f       	sbci	r31, 0xFF	; 255
    34b6:	80 81       	ld	r24, Z
    34b8:	81 30       	cpi	r24, 0x01	; 1
    34ba:	89 f5       	brne	.+98     	; 0x351e <SEV_SEG_enumCMNEnable+0x106>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,LOW);
    34bc:	8a 81       	ldd	r24, Y+2	; 0x02
    34be:	48 2f       	mov	r20, r24
    34c0:	50 e0       	ldi	r21, 0x00	; 0
    34c2:	ca 01       	movw	r24, r20
    34c4:	88 0f       	add	r24, r24
    34c6:	99 1f       	adc	r25, r25
    34c8:	9c 01       	movw	r18, r24
    34ca:	22 0f       	add	r18, r18
    34cc:	33 1f       	adc	r19, r19
    34ce:	22 0f       	add	r18, r18
    34d0:	33 1f       	adc	r19, r19
    34d2:	22 0f       	add	r18, r18
    34d4:	33 1f       	adc	r19, r19
    34d6:	82 0f       	add	r24, r18
    34d8:	93 1f       	adc	r25, r19
    34da:	84 0f       	add	r24, r20
    34dc:	95 1f       	adc	r25, r21
    34de:	fc 01       	movw	r30, r24
    34e0:	ee 56       	subi	r30, 0x6E	; 110
    34e2:	ff 4f       	sbci	r31, 0xFF	; 255
    34e4:	60 81       	ld	r22, Z
    34e6:	8a 81       	ldd	r24, Y+2	; 0x02
    34e8:	48 2f       	mov	r20, r24
    34ea:	50 e0       	ldi	r21, 0x00	; 0
    34ec:	ca 01       	movw	r24, r20
    34ee:	88 0f       	add	r24, r24
    34f0:	99 1f       	adc	r25, r25
    34f2:	9c 01       	movw	r18, r24
    34f4:	22 0f       	add	r18, r18
    34f6:	33 1f       	adc	r19, r19
    34f8:	22 0f       	add	r18, r18
    34fa:	33 1f       	adc	r19, r19
    34fc:	22 0f       	add	r18, r18
    34fe:	33 1f       	adc	r19, r19
    3500:	82 0f       	add	r24, r18
    3502:	93 1f       	adc	r25, r19
    3504:	84 0f       	add	r24, r20
    3506:	95 1f       	adc	r25, r21
    3508:	fc 01       	movw	r30, r24
    350a:	ed 56       	subi	r30, 0x6D	; 109
    350c:	ff 4f       	sbci	r31, 0xFF	; 255
    350e:	90 81       	ld	r25, Z
    3510:	86 2f       	mov	r24, r22
    3512:	69 2f       	mov	r22, r25
    3514:	40 e0       	ldi	r20, 0x00	; 0
    3516:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    351a:	89 83       	std	Y+1, r24	; 0x01
    351c:	80 c0       	rjmp	.+256    	; 0x361e <SEV_SEG_enumCMNEnable+0x206>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    351e:	8a 81       	ldd	r24, Y+2	; 0x02
    3520:	48 2f       	mov	r20, r24
    3522:	50 e0       	ldi	r21, 0x00	; 0
    3524:	ca 01       	movw	r24, r20
    3526:	88 0f       	add	r24, r24
    3528:	99 1f       	adc	r25, r25
    352a:	9c 01       	movw	r18, r24
    352c:	22 0f       	add	r18, r18
    352e:	33 1f       	adc	r19, r19
    3530:	22 0f       	add	r18, r18
    3532:	33 1f       	adc	r19, r19
    3534:	22 0f       	add	r18, r18
    3536:	33 1f       	adc	r19, r19
    3538:	82 0f       	add	r24, r18
    353a:	93 1f       	adc	r25, r19
    353c:	84 0f       	add	r24, r20
    353e:	95 1f       	adc	r25, r21
    3540:	fc 01       	movw	r30, r24
    3542:	ea 56       	subi	r30, 0x6A	; 106
    3544:	ff 4f       	sbci	r31, 0xFF	; 255
    3546:	80 81       	ld	r24, Z
    3548:	88 23       	and	r24, r24
    354a:	89 f5       	brne	.+98     	; 0x35ae <SEV_SEG_enumCMNEnable+0x196>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,HIGH);
    354c:	8a 81       	ldd	r24, Y+2	; 0x02
    354e:	48 2f       	mov	r20, r24
    3550:	50 e0       	ldi	r21, 0x00	; 0
    3552:	ca 01       	movw	r24, r20
    3554:	88 0f       	add	r24, r24
    3556:	99 1f       	adc	r25, r25
    3558:	9c 01       	movw	r18, r24
    355a:	22 0f       	add	r18, r18
    355c:	33 1f       	adc	r19, r19
    355e:	22 0f       	add	r18, r18
    3560:	33 1f       	adc	r19, r19
    3562:	22 0f       	add	r18, r18
    3564:	33 1f       	adc	r19, r19
    3566:	82 0f       	add	r24, r18
    3568:	93 1f       	adc	r25, r19
    356a:	84 0f       	add	r24, r20
    356c:	95 1f       	adc	r25, r21
    356e:	fc 01       	movw	r30, r24
    3570:	ee 56       	subi	r30, 0x6E	; 110
    3572:	ff 4f       	sbci	r31, 0xFF	; 255
    3574:	60 81       	ld	r22, Z
    3576:	8a 81       	ldd	r24, Y+2	; 0x02
    3578:	48 2f       	mov	r20, r24
    357a:	50 e0       	ldi	r21, 0x00	; 0
    357c:	ca 01       	movw	r24, r20
    357e:	88 0f       	add	r24, r24
    3580:	99 1f       	adc	r25, r25
    3582:	9c 01       	movw	r18, r24
    3584:	22 0f       	add	r18, r18
    3586:	33 1f       	adc	r19, r19
    3588:	22 0f       	add	r18, r18
    358a:	33 1f       	adc	r19, r19
    358c:	22 0f       	add	r18, r18
    358e:	33 1f       	adc	r19, r19
    3590:	82 0f       	add	r24, r18
    3592:	93 1f       	adc	r25, r19
    3594:	84 0f       	add	r24, r20
    3596:	95 1f       	adc	r25, r21
    3598:	fc 01       	movw	r30, r24
    359a:	ed 56       	subi	r30, 0x6D	; 109
    359c:	ff 4f       	sbci	r31, 0xFF	; 255
    359e:	90 81       	ld	r25, Z
    35a0:	86 2f       	mov	r24, r22
    35a2:	69 2f       	mov	r22, r25
    35a4:	41 e0       	ldi	r20, 0x01	; 1
    35a6:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    35aa:	89 83       	std	Y+1, r24	; 0x01
    35ac:	38 c0       	rjmp	.+112    	; 0x361e <SEV_SEG_enumCMNEnable+0x206>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    35ae:	83 e0       	ldi	r24, 0x03	; 3
    35b0:	89 83       	std	Y+1, r24	; 0x01
    35b2:	35 c0       	rjmp	.+106    	; 0x361e <SEV_SEG_enumCMNEnable+0x206>
			}
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    35b4:	8a 81       	ldd	r24, Y+2	; 0x02
    35b6:	48 2f       	mov	r20, r24
    35b8:	50 e0       	ldi	r21, 0x00	; 0
    35ba:	ca 01       	movw	r24, r20
    35bc:	88 0f       	add	r24, r24
    35be:	99 1f       	adc	r25, r25
    35c0:	9c 01       	movw	r18, r24
    35c2:	22 0f       	add	r18, r18
    35c4:	33 1f       	adc	r19, r19
    35c6:	22 0f       	add	r18, r18
    35c8:	33 1f       	adc	r19, r19
    35ca:	22 0f       	add	r18, r18
    35cc:	33 1f       	adc	r19, r19
    35ce:	82 0f       	add	r24, r18
    35d0:	93 1f       	adc	r25, r19
    35d2:	84 0f       	add	r24, r20
    35d4:	95 1f       	adc	r25, r21
    35d6:	fc 01       	movw	r30, r24
    35d8:	ee 56       	subi	r30, 0x6E	; 110
    35da:	ff 4f       	sbci	r31, 0xFF	; 255
    35dc:	80 81       	ld	r24, Z
    35de:	88 30       	cpi	r24, 0x08	; 8
    35e0:	c9 f4       	brne	.+50     	; 0x3614 <SEV_SEG_enumCMNEnable+0x1fc>
    35e2:	8a 81       	ldd	r24, Y+2	; 0x02
    35e4:	48 2f       	mov	r20, r24
    35e6:	50 e0       	ldi	r21, 0x00	; 0
    35e8:	ca 01       	movw	r24, r20
    35ea:	88 0f       	add	r24, r24
    35ec:	99 1f       	adc	r25, r25
    35ee:	9c 01       	movw	r18, r24
    35f0:	22 0f       	add	r18, r18
    35f2:	33 1f       	adc	r19, r19
    35f4:	22 0f       	add	r18, r18
    35f6:	33 1f       	adc	r19, r19
    35f8:	22 0f       	add	r18, r18
    35fa:	33 1f       	adc	r19, r19
    35fc:	82 0f       	add	r24, r18
    35fe:	93 1f       	adc	r25, r19
    3600:	84 0f       	add	r24, r20
    3602:	95 1f       	adc	r25, r21
    3604:	fc 01       	movw	r30, r24
    3606:	ed 56       	subi	r30, 0x6D	; 109
    3608:	ff 4f       	sbci	r31, 0xFF	; 255
    360a:	80 81       	ld	r24, Z
    360c:	88 30       	cpi	r24, 0x08	; 8
    360e:	11 f4       	brne	.+4      	; 0x3614 <SEV_SEG_enumCMNEnable+0x1fc>
				&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin==NOT_CONNECTED)
		{
			Local_enumErrorState=ES_NOK;
    3610:	19 82       	std	Y+1, r1	; 0x01
    3612:	05 c0       	rjmp	.+10     	; 0x361e <SEV_SEG_enumCMNEnable+0x206>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    3614:	83 e0       	ldi	r24, 0x03	; 3
    3616:	89 83       	std	Y+1, r24	; 0x01
    3618:	02 c0       	rjmp	.+4      	; 0x361e <SEV_SEG_enumCMNEnable+0x206>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    361a:	83 e0       	ldi	r24, 0x03	; 3
    361c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    361e:	89 81       	ldd	r24, Y+1	; 0x01
}
    3620:	0f 90       	pop	r0
    3622:	0f 90       	pop	r0
    3624:	cf 91       	pop	r28
    3626:	df 91       	pop	r29
    3628:	08 95       	ret

0000362a <SEV_SEG_enumCMNDisable>:
ES_T SEV_SEG_enumCMNDisable(u8 Copy_u8SegmentID)
{
    362a:	df 93       	push	r29
    362c:	cf 93       	push	r28
    362e:	00 d0       	rcall	.+0      	; 0x3630 <SEV_SEG_enumCMNDisable+0x6>
    3630:	cd b7       	in	r28, 0x3d	; 61
    3632:	de b7       	in	r29, 0x3e	; 62
    3634:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    3636:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    3638:	8a 81       	ldd	r24, Y+2	; 0x02
    363a:	82 30       	cpi	r24, 0x02	; 2
    363c:	08 f0       	brcs	.+2      	; 0x3640 <SEV_SEG_enumCMNDisable+0x16>
    363e:	f6 c0       	rjmp	.+492    	; 0x382c <SEV_SEG_enumCMNDisable+0x202>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port<=DIO_PORTD
    3640:	8a 81       	ldd	r24, Y+2	; 0x02
    3642:	48 2f       	mov	r20, r24
    3644:	50 e0       	ldi	r21, 0x00	; 0
    3646:	ca 01       	movw	r24, r20
    3648:	88 0f       	add	r24, r24
    364a:	99 1f       	adc	r25, r25
    364c:	9c 01       	movw	r18, r24
    364e:	22 0f       	add	r18, r18
    3650:	33 1f       	adc	r19, r19
    3652:	22 0f       	add	r18, r18
    3654:	33 1f       	adc	r19, r19
    3656:	22 0f       	add	r18, r18
    3658:	33 1f       	adc	r19, r19
    365a:	82 0f       	add	r24, r18
    365c:	93 1f       	adc	r25, r19
    365e:	84 0f       	add	r24, r20
    3660:	95 1f       	adc	r25, r21
    3662:	fc 01       	movw	r30, r24
    3664:	ee 56       	subi	r30, 0x6E	; 110
    3666:	ff 4f       	sbci	r31, 0xFF	; 255
    3668:	80 81       	ld	r24, Z
    366a:	84 30       	cpi	r24, 0x04	; 4
    366c:	08 f0       	brcs	.+2      	; 0x3670 <SEV_SEG_enumCMNDisable+0x46>
    366e:	ab c0       	rjmp	.+342    	; 0x37c6 <SEV_SEG_enumCMNDisable+0x19c>
    3670:	8a 81       	ldd	r24, Y+2	; 0x02
    3672:	48 2f       	mov	r20, r24
    3674:	50 e0       	ldi	r21, 0x00	; 0
    3676:	ca 01       	movw	r24, r20
    3678:	88 0f       	add	r24, r24
    367a:	99 1f       	adc	r25, r25
    367c:	9c 01       	movw	r18, r24
    367e:	22 0f       	add	r18, r18
    3680:	33 1f       	adc	r19, r19
    3682:	22 0f       	add	r18, r18
    3684:	33 1f       	adc	r19, r19
    3686:	22 0f       	add	r18, r18
    3688:	33 1f       	adc	r19, r19
    368a:	82 0f       	add	r24, r18
    368c:	93 1f       	adc	r25, r19
    368e:	84 0f       	add	r24, r20
    3690:	95 1f       	adc	r25, r21
    3692:	fc 01       	movw	r30, r24
    3694:	ed 56       	subi	r30, 0x6D	; 109
    3696:	ff 4f       	sbci	r31, 0xFF	; 255
    3698:	80 81       	ld	r24, Z
    369a:	88 30       	cpi	r24, 0x08	; 8
    369c:	08 f0       	brcs	.+2      	; 0x36a0 <SEV_SEG_enumCMNDisable+0x76>
    369e:	93 c0       	rjmp	.+294    	; 0x37c6 <SEV_SEG_enumCMNDisable+0x19c>
			&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin<=DIO_PIN7)
		{
			if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    36a0:	8a 81       	ldd	r24, Y+2	; 0x02
    36a2:	48 2f       	mov	r20, r24
    36a4:	50 e0       	ldi	r21, 0x00	; 0
    36a6:	ca 01       	movw	r24, r20
    36a8:	88 0f       	add	r24, r24
    36aa:	99 1f       	adc	r25, r25
    36ac:	9c 01       	movw	r18, r24
    36ae:	22 0f       	add	r18, r18
    36b0:	33 1f       	adc	r19, r19
    36b2:	22 0f       	add	r18, r18
    36b4:	33 1f       	adc	r19, r19
    36b6:	22 0f       	add	r18, r18
    36b8:	33 1f       	adc	r19, r19
    36ba:	82 0f       	add	r24, r18
    36bc:	93 1f       	adc	r25, r19
    36be:	84 0f       	add	r24, r20
    36c0:	95 1f       	adc	r25, r21
    36c2:	fc 01       	movw	r30, r24
    36c4:	ea 56       	subi	r30, 0x6A	; 106
    36c6:	ff 4f       	sbci	r31, 0xFF	; 255
    36c8:	80 81       	ld	r24, Z
    36ca:	81 30       	cpi	r24, 0x01	; 1
    36cc:	89 f5       	brne	.+98     	; 0x3730 <SEV_SEG_enumCMNDisable+0x106>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,HIGH);
    36ce:	8a 81       	ldd	r24, Y+2	; 0x02
    36d0:	48 2f       	mov	r20, r24
    36d2:	50 e0       	ldi	r21, 0x00	; 0
    36d4:	ca 01       	movw	r24, r20
    36d6:	88 0f       	add	r24, r24
    36d8:	99 1f       	adc	r25, r25
    36da:	9c 01       	movw	r18, r24
    36dc:	22 0f       	add	r18, r18
    36de:	33 1f       	adc	r19, r19
    36e0:	22 0f       	add	r18, r18
    36e2:	33 1f       	adc	r19, r19
    36e4:	22 0f       	add	r18, r18
    36e6:	33 1f       	adc	r19, r19
    36e8:	82 0f       	add	r24, r18
    36ea:	93 1f       	adc	r25, r19
    36ec:	84 0f       	add	r24, r20
    36ee:	95 1f       	adc	r25, r21
    36f0:	fc 01       	movw	r30, r24
    36f2:	ee 56       	subi	r30, 0x6E	; 110
    36f4:	ff 4f       	sbci	r31, 0xFF	; 255
    36f6:	60 81       	ld	r22, Z
    36f8:	8a 81       	ldd	r24, Y+2	; 0x02
    36fa:	48 2f       	mov	r20, r24
    36fc:	50 e0       	ldi	r21, 0x00	; 0
    36fe:	ca 01       	movw	r24, r20
    3700:	88 0f       	add	r24, r24
    3702:	99 1f       	adc	r25, r25
    3704:	9c 01       	movw	r18, r24
    3706:	22 0f       	add	r18, r18
    3708:	33 1f       	adc	r19, r19
    370a:	22 0f       	add	r18, r18
    370c:	33 1f       	adc	r19, r19
    370e:	22 0f       	add	r18, r18
    3710:	33 1f       	adc	r19, r19
    3712:	82 0f       	add	r24, r18
    3714:	93 1f       	adc	r25, r19
    3716:	84 0f       	add	r24, r20
    3718:	95 1f       	adc	r25, r21
    371a:	fc 01       	movw	r30, r24
    371c:	ed 56       	subi	r30, 0x6D	; 109
    371e:	ff 4f       	sbci	r31, 0xFF	; 255
    3720:	90 81       	ld	r25, Z
    3722:	86 2f       	mov	r24, r22
    3724:	69 2f       	mov	r22, r25
    3726:	41 e0       	ldi	r20, 0x01	; 1
    3728:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    372c:	89 83       	std	Y+1, r24	; 0x01
    372e:	80 c0       	rjmp	.+256    	; 0x3830 <SEV_SEG_enumCMNDisable+0x206>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    3730:	8a 81       	ldd	r24, Y+2	; 0x02
    3732:	48 2f       	mov	r20, r24
    3734:	50 e0       	ldi	r21, 0x00	; 0
    3736:	ca 01       	movw	r24, r20
    3738:	88 0f       	add	r24, r24
    373a:	99 1f       	adc	r25, r25
    373c:	9c 01       	movw	r18, r24
    373e:	22 0f       	add	r18, r18
    3740:	33 1f       	adc	r19, r19
    3742:	22 0f       	add	r18, r18
    3744:	33 1f       	adc	r19, r19
    3746:	22 0f       	add	r18, r18
    3748:	33 1f       	adc	r19, r19
    374a:	82 0f       	add	r24, r18
    374c:	93 1f       	adc	r25, r19
    374e:	84 0f       	add	r24, r20
    3750:	95 1f       	adc	r25, r21
    3752:	fc 01       	movw	r30, r24
    3754:	ea 56       	subi	r30, 0x6A	; 106
    3756:	ff 4f       	sbci	r31, 0xFF	; 255
    3758:	80 81       	ld	r24, Z
    375a:	88 23       	and	r24, r24
    375c:	89 f5       	brne	.+98     	; 0x37c0 <SEV_SEG_enumCMNDisable+0x196>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,LOW);
    375e:	8a 81       	ldd	r24, Y+2	; 0x02
    3760:	48 2f       	mov	r20, r24
    3762:	50 e0       	ldi	r21, 0x00	; 0
    3764:	ca 01       	movw	r24, r20
    3766:	88 0f       	add	r24, r24
    3768:	99 1f       	adc	r25, r25
    376a:	9c 01       	movw	r18, r24
    376c:	22 0f       	add	r18, r18
    376e:	33 1f       	adc	r19, r19
    3770:	22 0f       	add	r18, r18
    3772:	33 1f       	adc	r19, r19
    3774:	22 0f       	add	r18, r18
    3776:	33 1f       	adc	r19, r19
    3778:	82 0f       	add	r24, r18
    377a:	93 1f       	adc	r25, r19
    377c:	84 0f       	add	r24, r20
    377e:	95 1f       	adc	r25, r21
    3780:	fc 01       	movw	r30, r24
    3782:	ee 56       	subi	r30, 0x6E	; 110
    3784:	ff 4f       	sbci	r31, 0xFF	; 255
    3786:	60 81       	ld	r22, Z
    3788:	8a 81       	ldd	r24, Y+2	; 0x02
    378a:	48 2f       	mov	r20, r24
    378c:	50 e0       	ldi	r21, 0x00	; 0
    378e:	ca 01       	movw	r24, r20
    3790:	88 0f       	add	r24, r24
    3792:	99 1f       	adc	r25, r25
    3794:	9c 01       	movw	r18, r24
    3796:	22 0f       	add	r18, r18
    3798:	33 1f       	adc	r19, r19
    379a:	22 0f       	add	r18, r18
    379c:	33 1f       	adc	r19, r19
    379e:	22 0f       	add	r18, r18
    37a0:	33 1f       	adc	r19, r19
    37a2:	82 0f       	add	r24, r18
    37a4:	93 1f       	adc	r25, r19
    37a6:	84 0f       	add	r24, r20
    37a8:	95 1f       	adc	r25, r21
    37aa:	fc 01       	movw	r30, r24
    37ac:	ed 56       	subi	r30, 0x6D	; 109
    37ae:	ff 4f       	sbci	r31, 0xFF	; 255
    37b0:	90 81       	ld	r25, Z
    37b2:	86 2f       	mov	r24, r22
    37b4:	69 2f       	mov	r22, r25
    37b6:	40 e0       	ldi	r20, 0x00	; 0
    37b8:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    37bc:	89 83       	std	Y+1, r24	; 0x01
    37be:	38 c0       	rjmp	.+112    	; 0x3830 <SEV_SEG_enumCMNDisable+0x206>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    37c0:	83 e0       	ldi	r24, 0x03	; 3
    37c2:	89 83       	std	Y+1, r24	; 0x01
    37c4:	35 c0       	rjmp	.+106    	; 0x3830 <SEV_SEG_enumCMNDisable+0x206>
			}
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    37c6:	8a 81       	ldd	r24, Y+2	; 0x02
    37c8:	48 2f       	mov	r20, r24
    37ca:	50 e0       	ldi	r21, 0x00	; 0
    37cc:	ca 01       	movw	r24, r20
    37ce:	88 0f       	add	r24, r24
    37d0:	99 1f       	adc	r25, r25
    37d2:	9c 01       	movw	r18, r24
    37d4:	22 0f       	add	r18, r18
    37d6:	33 1f       	adc	r19, r19
    37d8:	22 0f       	add	r18, r18
    37da:	33 1f       	adc	r19, r19
    37dc:	22 0f       	add	r18, r18
    37de:	33 1f       	adc	r19, r19
    37e0:	82 0f       	add	r24, r18
    37e2:	93 1f       	adc	r25, r19
    37e4:	84 0f       	add	r24, r20
    37e6:	95 1f       	adc	r25, r21
    37e8:	fc 01       	movw	r30, r24
    37ea:	ee 56       	subi	r30, 0x6E	; 110
    37ec:	ff 4f       	sbci	r31, 0xFF	; 255
    37ee:	80 81       	ld	r24, Z
    37f0:	88 30       	cpi	r24, 0x08	; 8
    37f2:	c9 f4       	brne	.+50     	; 0x3826 <SEV_SEG_enumCMNDisable+0x1fc>
    37f4:	8a 81       	ldd	r24, Y+2	; 0x02
    37f6:	48 2f       	mov	r20, r24
    37f8:	50 e0       	ldi	r21, 0x00	; 0
    37fa:	ca 01       	movw	r24, r20
    37fc:	88 0f       	add	r24, r24
    37fe:	99 1f       	adc	r25, r25
    3800:	9c 01       	movw	r18, r24
    3802:	22 0f       	add	r18, r18
    3804:	33 1f       	adc	r19, r19
    3806:	22 0f       	add	r18, r18
    3808:	33 1f       	adc	r19, r19
    380a:	22 0f       	add	r18, r18
    380c:	33 1f       	adc	r19, r19
    380e:	82 0f       	add	r24, r18
    3810:	93 1f       	adc	r25, r19
    3812:	84 0f       	add	r24, r20
    3814:	95 1f       	adc	r25, r21
    3816:	fc 01       	movw	r30, r24
    3818:	ed 56       	subi	r30, 0x6D	; 109
    381a:	ff 4f       	sbci	r31, 0xFF	; 255
    381c:	80 81       	ld	r24, Z
    381e:	88 30       	cpi	r24, 0x08	; 8
    3820:	11 f4       	brne	.+4      	; 0x3826 <SEV_SEG_enumCMNDisable+0x1fc>
				&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin==NOT_CONNECTED)
		{
			Local_enumErrorState=ES_NOK;
    3822:	19 82       	std	Y+1, r1	; 0x01
    3824:	05 c0       	rjmp	.+10     	; 0x3830 <SEV_SEG_enumCMNDisable+0x206>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    3826:	83 e0       	ldi	r24, 0x03	; 3
    3828:	89 83       	std	Y+1, r24	; 0x01
    382a:	02 c0       	rjmp	.+4      	; 0x3830 <SEV_SEG_enumCMNDisable+0x206>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    382c:	83 e0       	ldi	r24, 0x03	; 3
    382e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    3830:	89 81       	ldd	r24, Y+1	; 0x01
}
    3832:	0f 90       	pop	r0
    3834:	0f 90       	pop	r0
    3836:	cf 91       	pop	r28
    3838:	df 91       	pop	r29
    383a:	08 95       	ret

0000383c <SEV_SEG_enumDOTEnable>:
ES_T SEV_SEG_enumDOTEnable(u8 Copy_u8SegmentID)
{
    383c:	df 93       	push	r29
    383e:	cf 93       	push	r28
    3840:	00 d0       	rcall	.+0      	; 0x3842 <SEV_SEG_enumDOTEnable+0x6>
    3842:	cd b7       	in	r28, 0x3d	; 61
    3844:	de b7       	in	r29, 0x3e	; 62
    3846:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    3848:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    384a:	8a 81       	ldd	r24, Y+2	; 0x02
    384c:	82 30       	cpi	r24, 0x02	; 2
    384e:	08 f0       	brcs	.+2      	; 0x3852 <SEV_SEG_enumDOTEnable+0x16>
    3850:	f6 c0       	rjmp	.+492    	; 0x3a3e <SEV_SEG_enumDOTEnable+0x202>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port<=DIO_PORTD
    3852:	8a 81       	ldd	r24, Y+2	; 0x02
    3854:	48 2f       	mov	r20, r24
    3856:	50 e0       	ldi	r21, 0x00	; 0
    3858:	ca 01       	movw	r24, r20
    385a:	88 0f       	add	r24, r24
    385c:	99 1f       	adc	r25, r25
    385e:	9c 01       	movw	r18, r24
    3860:	22 0f       	add	r18, r18
    3862:	33 1f       	adc	r19, r19
    3864:	22 0f       	add	r18, r18
    3866:	33 1f       	adc	r19, r19
    3868:	22 0f       	add	r18, r18
    386a:	33 1f       	adc	r19, r19
    386c:	82 0f       	add	r24, r18
    386e:	93 1f       	adc	r25, r19
    3870:	84 0f       	add	r24, r20
    3872:	95 1f       	adc	r25, r21
    3874:	fc 01       	movw	r30, r24
    3876:	ec 56       	subi	r30, 0x6C	; 108
    3878:	ff 4f       	sbci	r31, 0xFF	; 255
    387a:	80 81       	ld	r24, Z
    387c:	84 30       	cpi	r24, 0x04	; 4
    387e:	08 f0       	brcs	.+2      	; 0x3882 <SEV_SEG_enumDOTEnable+0x46>
    3880:	ab c0       	rjmp	.+342    	; 0x39d8 <SEV_SEG_enumDOTEnable+0x19c>
    3882:	8a 81       	ldd	r24, Y+2	; 0x02
    3884:	48 2f       	mov	r20, r24
    3886:	50 e0       	ldi	r21, 0x00	; 0
    3888:	ca 01       	movw	r24, r20
    388a:	88 0f       	add	r24, r24
    388c:	99 1f       	adc	r25, r25
    388e:	9c 01       	movw	r18, r24
    3890:	22 0f       	add	r18, r18
    3892:	33 1f       	adc	r19, r19
    3894:	22 0f       	add	r18, r18
    3896:	33 1f       	adc	r19, r19
    3898:	22 0f       	add	r18, r18
    389a:	33 1f       	adc	r19, r19
    389c:	82 0f       	add	r24, r18
    389e:	93 1f       	adc	r25, r19
    38a0:	84 0f       	add	r24, r20
    38a2:	95 1f       	adc	r25, r21
    38a4:	fc 01       	movw	r30, r24
    38a6:	eb 56       	subi	r30, 0x6B	; 107
    38a8:	ff 4f       	sbci	r31, 0xFF	; 255
    38aa:	80 81       	ld	r24, Z
    38ac:	88 30       	cpi	r24, 0x08	; 8
    38ae:	08 f0       	brcs	.+2      	; 0x38b2 <SEV_SEG_enumDOTEnable+0x76>
    38b0:	93 c0       	rjmp	.+294    	; 0x39d8 <SEV_SEG_enumDOTEnable+0x19c>
			&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
		{
			if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    38b2:	8a 81       	ldd	r24, Y+2	; 0x02
    38b4:	48 2f       	mov	r20, r24
    38b6:	50 e0       	ldi	r21, 0x00	; 0
    38b8:	ca 01       	movw	r24, r20
    38ba:	88 0f       	add	r24, r24
    38bc:	99 1f       	adc	r25, r25
    38be:	9c 01       	movw	r18, r24
    38c0:	22 0f       	add	r18, r18
    38c2:	33 1f       	adc	r19, r19
    38c4:	22 0f       	add	r18, r18
    38c6:	33 1f       	adc	r19, r19
    38c8:	22 0f       	add	r18, r18
    38ca:	33 1f       	adc	r19, r19
    38cc:	82 0f       	add	r24, r18
    38ce:	93 1f       	adc	r25, r19
    38d0:	84 0f       	add	r24, r20
    38d2:	95 1f       	adc	r25, r21
    38d4:	fc 01       	movw	r30, r24
    38d6:	ea 56       	subi	r30, 0x6A	; 106
    38d8:	ff 4f       	sbci	r31, 0xFF	; 255
    38da:	80 81       	ld	r24, Z
    38dc:	81 30       	cpi	r24, 0x01	; 1
    38de:	89 f5       	brne	.+98     	; 0x3942 <SEV_SEG_enumDOTEnable+0x106>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin,HIGH);
    38e0:	8a 81       	ldd	r24, Y+2	; 0x02
    38e2:	48 2f       	mov	r20, r24
    38e4:	50 e0       	ldi	r21, 0x00	; 0
    38e6:	ca 01       	movw	r24, r20
    38e8:	88 0f       	add	r24, r24
    38ea:	99 1f       	adc	r25, r25
    38ec:	9c 01       	movw	r18, r24
    38ee:	22 0f       	add	r18, r18
    38f0:	33 1f       	adc	r19, r19
    38f2:	22 0f       	add	r18, r18
    38f4:	33 1f       	adc	r19, r19
    38f6:	22 0f       	add	r18, r18
    38f8:	33 1f       	adc	r19, r19
    38fa:	82 0f       	add	r24, r18
    38fc:	93 1f       	adc	r25, r19
    38fe:	84 0f       	add	r24, r20
    3900:	95 1f       	adc	r25, r21
    3902:	fc 01       	movw	r30, r24
    3904:	ec 56       	subi	r30, 0x6C	; 108
    3906:	ff 4f       	sbci	r31, 0xFF	; 255
    3908:	60 81       	ld	r22, Z
    390a:	8a 81       	ldd	r24, Y+2	; 0x02
    390c:	48 2f       	mov	r20, r24
    390e:	50 e0       	ldi	r21, 0x00	; 0
    3910:	ca 01       	movw	r24, r20
    3912:	88 0f       	add	r24, r24
    3914:	99 1f       	adc	r25, r25
    3916:	9c 01       	movw	r18, r24
    3918:	22 0f       	add	r18, r18
    391a:	33 1f       	adc	r19, r19
    391c:	22 0f       	add	r18, r18
    391e:	33 1f       	adc	r19, r19
    3920:	22 0f       	add	r18, r18
    3922:	33 1f       	adc	r19, r19
    3924:	82 0f       	add	r24, r18
    3926:	93 1f       	adc	r25, r19
    3928:	84 0f       	add	r24, r20
    392a:	95 1f       	adc	r25, r21
    392c:	fc 01       	movw	r30, r24
    392e:	eb 56       	subi	r30, 0x6B	; 107
    3930:	ff 4f       	sbci	r31, 0xFF	; 255
    3932:	90 81       	ld	r25, Z
    3934:	86 2f       	mov	r24, r22
    3936:	69 2f       	mov	r22, r25
    3938:	41 e0       	ldi	r20, 0x01	; 1
    393a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    393e:	89 83       	std	Y+1, r24	; 0x01
    3940:	80 c0       	rjmp	.+256    	; 0x3a42 <SEV_SEG_enumDOTEnable+0x206>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    3942:	8a 81       	ldd	r24, Y+2	; 0x02
    3944:	48 2f       	mov	r20, r24
    3946:	50 e0       	ldi	r21, 0x00	; 0
    3948:	ca 01       	movw	r24, r20
    394a:	88 0f       	add	r24, r24
    394c:	99 1f       	adc	r25, r25
    394e:	9c 01       	movw	r18, r24
    3950:	22 0f       	add	r18, r18
    3952:	33 1f       	adc	r19, r19
    3954:	22 0f       	add	r18, r18
    3956:	33 1f       	adc	r19, r19
    3958:	22 0f       	add	r18, r18
    395a:	33 1f       	adc	r19, r19
    395c:	82 0f       	add	r24, r18
    395e:	93 1f       	adc	r25, r19
    3960:	84 0f       	add	r24, r20
    3962:	95 1f       	adc	r25, r21
    3964:	fc 01       	movw	r30, r24
    3966:	ea 56       	subi	r30, 0x6A	; 106
    3968:	ff 4f       	sbci	r31, 0xFF	; 255
    396a:	80 81       	ld	r24, Z
    396c:	88 23       	and	r24, r24
    396e:	89 f5       	brne	.+98     	; 0x39d2 <SEV_SEG_enumDOTEnable+0x196>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,LOW);
    3970:	8a 81       	ldd	r24, Y+2	; 0x02
    3972:	48 2f       	mov	r20, r24
    3974:	50 e0       	ldi	r21, 0x00	; 0
    3976:	ca 01       	movw	r24, r20
    3978:	88 0f       	add	r24, r24
    397a:	99 1f       	adc	r25, r25
    397c:	9c 01       	movw	r18, r24
    397e:	22 0f       	add	r18, r18
    3980:	33 1f       	adc	r19, r19
    3982:	22 0f       	add	r18, r18
    3984:	33 1f       	adc	r19, r19
    3986:	22 0f       	add	r18, r18
    3988:	33 1f       	adc	r19, r19
    398a:	82 0f       	add	r24, r18
    398c:	93 1f       	adc	r25, r19
    398e:	84 0f       	add	r24, r20
    3990:	95 1f       	adc	r25, r21
    3992:	fc 01       	movw	r30, r24
    3994:	ee 56       	subi	r30, 0x6E	; 110
    3996:	ff 4f       	sbci	r31, 0xFF	; 255
    3998:	60 81       	ld	r22, Z
    399a:	8a 81       	ldd	r24, Y+2	; 0x02
    399c:	48 2f       	mov	r20, r24
    399e:	50 e0       	ldi	r21, 0x00	; 0
    39a0:	ca 01       	movw	r24, r20
    39a2:	88 0f       	add	r24, r24
    39a4:	99 1f       	adc	r25, r25
    39a6:	9c 01       	movw	r18, r24
    39a8:	22 0f       	add	r18, r18
    39aa:	33 1f       	adc	r19, r19
    39ac:	22 0f       	add	r18, r18
    39ae:	33 1f       	adc	r19, r19
    39b0:	22 0f       	add	r18, r18
    39b2:	33 1f       	adc	r19, r19
    39b4:	82 0f       	add	r24, r18
    39b6:	93 1f       	adc	r25, r19
    39b8:	84 0f       	add	r24, r20
    39ba:	95 1f       	adc	r25, r21
    39bc:	fc 01       	movw	r30, r24
    39be:	ed 56       	subi	r30, 0x6D	; 109
    39c0:	ff 4f       	sbci	r31, 0xFF	; 255
    39c2:	90 81       	ld	r25, Z
    39c4:	86 2f       	mov	r24, r22
    39c6:	69 2f       	mov	r22, r25
    39c8:	40 e0       	ldi	r20, 0x00	; 0
    39ca:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    39ce:	89 83       	std	Y+1, r24	; 0x01
    39d0:	38 c0       	rjmp	.+112    	; 0x3a42 <SEV_SEG_enumDOTEnable+0x206>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    39d2:	83 e0       	ldi	r24, 0x03	; 3
    39d4:	89 83       	std	Y+1, r24	; 0x01
    39d6:	35 c0       	rjmp	.+106    	; 0x3a42 <SEV_SEG_enumDOTEnable+0x206>
			}
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    39d8:	8a 81       	ldd	r24, Y+2	; 0x02
    39da:	48 2f       	mov	r20, r24
    39dc:	50 e0       	ldi	r21, 0x00	; 0
    39de:	ca 01       	movw	r24, r20
    39e0:	88 0f       	add	r24, r24
    39e2:	99 1f       	adc	r25, r25
    39e4:	9c 01       	movw	r18, r24
    39e6:	22 0f       	add	r18, r18
    39e8:	33 1f       	adc	r19, r19
    39ea:	22 0f       	add	r18, r18
    39ec:	33 1f       	adc	r19, r19
    39ee:	22 0f       	add	r18, r18
    39f0:	33 1f       	adc	r19, r19
    39f2:	82 0f       	add	r24, r18
    39f4:	93 1f       	adc	r25, r19
    39f6:	84 0f       	add	r24, r20
    39f8:	95 1f       	adc	r25, r21
    39fa:	fc 01       	movw	r30, r24
    39fc:	ee 56       	subi	r30, 0x6E	; 110
    39fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3a00:	80 81       	ld	r24, Z
    3a02:	88 30       	cpi	r24, 0x08	; 8
    3a04:	c9 f4       	brne	.+50     	; 0x3a38 <SEV_SEG_enumDOTEnable+0x1fc>
    3a06:	8a 81       	ldd	r24, Y+2	; 0x02
    3a08:	48 2f       	mov	r20, r24
    3a0a:	50 e0       	ldi	r21, 0x00	; 0
    3a0c:	ca 01       	movw	r24, r20
    3a0e:	88 0f       	add	r24, r24
    3a10:	99 1f       	adc	r25, r25
    3a12:	9c 01       	movw	r18, r24
    3a14:	22 0f       	add	r18, r18
    3a16:	33 1f       	adc	r19, r19
    3a18:	22 0f       	add	r18, r18
    3a1a:	33 1f       	adc	r19, r19
    3a1c:	22 0f       	add	r18, r18
    3a1e:	33 1f       	adc	r19, r19
    3a20:	82 0f       	add	r24, r18
    3a22:	93 1f       	adc	r25, r19
    3a24:	84 0f       	add	r24, r20
    3a26:	95 1f       	adc	r25, r21
    3a28:	fc 01       	movw	r30, r24
    3a2a:	ed 56       	subi	r30, 0x6D	; 109
    3a2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a2e:	80 81       	ld	r24, Z
    3a30:	88 30       	cpi	r24, 0x08	; 8
    3a32:	11 f4       	brne	.+4      	; 0x3a38 <SEV_SEG_enumDOTEnable+0x1fc>
				&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin==NOT_CONNECTED)
		{
			Local_enumErrorState=ES_NOK;
    3a34:	19 82       	std	Y+1, r1	; 0x01
    3a36:	05 c0       	rjmp	.+10     	; 0x3a42 <SEV_SEG_enumDOTEnable+0x206>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    3a38:	83 e0       	ldi	r24, 0x03	; 3
    3a3a:	89 83       	std	Y+1, r24	; 0x01
    3a3c:	02 c0       	rjmp	.+4      	; 0x3a42 <SEV_SEG_enumDOTEnable+0x206>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    3a3e:	83 e0       	ldi	r24, 0x03	; 3
    3a40:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    3a42:	89 81       	ldd	r24, Y+1	; 0x01
}
    3a44:	0f 90       	pop	r0
    3a46:	0f 90       	pop	r0
    3a48:	cf 91       	pop	r28
    3a4a:	df 91       	pop	r29
    3a4c:	08 95       	ret

00003a4e <SEV_SEG_enumDOTDisable>:
ES_T SEV_SEG_enumDOTDisable(u8 Copy_u8SegmentID)
{
    3a4e:	df 93       	push	r29
    3a50:	cf 93       	push	r28
    3a52:	00 d0       	rcall	.+0      	; 0x3a54 <SEV_SEG_enumDOTDisable+0x6>
    3a54:	cd b7       	in	r28, 0x3d	; 61
    3a56:	de b7       	in	r29, 0x3e	; 62
    3a58:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    3a5a:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    3a5c:	8a 81       	ldd	r24, Y+2	; 0x02
    3a5e:	82 30       	cpi	r24, 0x02	; 2
    3a60:	08 f0       	brcs	.+2      	; 0x3a64 <SEV_SEG_enumDOTDisable+0x16>
    3a62:	f6 c0       	rjmp	.+492    	; 0x3c50 <SEV_SEG_enumDOTDisable+0x202>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port<=DIO_PORTD
    3a64:	8a 81       	ldd	r24, Y+2	; 0x02
    3a66:	48 2f       	mov	r20, r24
    3a68:	50 e0       	ldi	r21, 0x00	; 0
    3a6a:	ca 01       	movw	r24, r20
    3a6c:	88 0f       	add	r24, r24
    3a6e:	99 1f       	adc	r25, r25
    3a70:	9c 01       	movw	r18, r24
    3a72:	22 0f       	add	r18, r18
    3a74:	33 1f       	adc	r19, r19
    3a76:	22 0f       	add	r18, r18
    3a78:	33 1f       	adc	r19, r19
    3a7a:	22 0f       	add	r18, r18
    3a7c:	33 1f       	adc	r19, r19
    3a7e:	82 0f       	add	r24, r18
    3a80:	93 1f       	adc	r25, r19
    3a82:	84 0f       	add	r24, r20
    3a84:	95 1f       	adc	r25, r21
    3a86:	fc 01       	movw	r30, r24
    3a88:	ec 56       	subi	r30, 0x6C	; 108
    3a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    3a8c:	80 81       	ld	r24, Z
    3a8e:	84 30       	cpi	r24, 0x04	; 4
    3a90:	08 f0       	brcs	.+2      	; 0x3a94 <SEV_SEG_enumDOTDisable+0x46>
    3a92:	ab c0       	rjmp	.+342    	; 0x3bea <SEV_SEG_enumDOTDisable+0x19c>
    3a94:	8a 81       	ldd	r24, Y+2	; 0x02
    3a96:	48 2f       	mov	r20, r24
    3a98:	50 e0       	ldi	r21, 0x00	; 0
    3a9a:	ca 01       	movw	r24, r20
    3a9c:	88 0f       	add	r24, r24
    3a9e:	99 1f       	adc	r25, r25
    3aa0:	9c 01       	movw	r18, r24
    3aa2:	22 0f       	add	r18, r18
    3aa4:	33 1f       	adc	r19, r19
    3aa6:	22 0f       	add	r18, r18
    3aa8:	33 1f       	adc	r19, r19
    3aaa:	22 0f       	add	r18, r18
    3aac:	33 1f       	adc	r19, r19
    3aae:	82 0f       	add	r24, r18
    3ab0:	93 1f       	adc	r25, r19
    3ab2:	84 0f       	add	r24, r20
    3ab4:	95 1f       	adc	r25, r21
    3ab6:	fc 01       	movw	r30, r24
    3ab8:	eb 56       	subi	r30, 0x6B	; 107
    3aba:	ff 4f       	sbci	r31, 0xFF	; 255
    3abc:	80 81       	ld	r24, Z
    3abe:	88 30       	cpi	r24, 0x08	; 8
    3ac0:	08 f0       	brcs	.+2      	; 0x3ac4 <SEV_SEG_enumDOTDisable+0x76>
    3ac2:	93 c0       	rjmp	.+294    	; 0x3bea <SEV_SEG_enumDOTDisable+0x19c>
			&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
		{
			if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    3ac4:	8a 81       	ldd	r24, Y+2	; 0x02
    3ac6:	48 2f       	mov	r20, r24
    3ac8:	50 e0       	ldi	r21, 0x00	; 0
    3aca:	ca 01       	movw	r24, r20
    3acc:	88 0f       	add	r24, r24
    3ace:	99 1f       	adc	r25, r25
    3ad0:	9c 01       	movw	r18, r24
    3ad2:	22 0f       	add	r18, r18
    3ad4:	33 1f       	adc	r19, r19
    3ad6:	22 0f       	add	r18, r18
    3ad8:	33 1f       	adc	r19, r19
    3ada:	22 0f       	add	r18, r18
    3adc:	33 1f       	adc	r19, r19
    3ade:	82 0f       	add	r24, r18
    3ae0:	93 1f       	adc	r25, r19
    3ae2:	84 0f       	add	r24, r20
    3ae4:	95 1f       	adc	r25, r21
    3ae6:	fc 01       	movw	r30, r24
    3ae8:	ea 56       	subi	r30, 0x6A	; 106
    3aea:	ff 4f       	sbci	r31, 0xFF	; 255
    3aec:	80 81       	ld	r24, Z
    3aee:	81 30       	cpi	r24, 0x01	; 1
    3af0:	89 f5       	brne	.+98     	; 0x3b54 <SEV_SEG_enumDOTDisable+0x106>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin,LOW);
    3af2:	8a 81       	ldd	r24, Y+2	; 0x02
    3af4:	48 2f       	mov	r20, r24
    3af6:	50 e0       	ldi	r21, 0x00	; 0
    3af8:	ca 01       	movw	r24, r20
    3afa:	88 0f       	add	r24, r24
    3afc:	99 1f       	adc	r25, r25
    3afe:	9c 01       	movw	r18, r24
    3b00:	22 0f       	add	r18, r18
    3b02:	33 1f       	adc	r19, r19
    3b04:	22 0f       	add	r18, r18
    3b06:	33 1f       	adc	r19, r19
    3b08:	22 0f       	add	r18, r18
    3b0a:	33 1f       	adc	r19, r19
    3b0c:	82 0f       	add	r24, r18
    3b0e:	93 1f       	adc	r25, r19
    3b10:	84 0f       	add	r24, r20
    3b12:	95 1f       	adc	r25, r21
    3b14:	fc 01       	movw	r30, r24
    3b16:	ec 56       	subi	r30, 0x6C	; 108
    3b18:	ff 4f       	sbci	r31, 0xFF	; 255
    3b1a:	60 81       	ld	r22, Z
    3b1c:	8a 81       	ldd	r24, Y+2	; 0x02
    3b1e:	48 2f       	mov	r20, r24
    3b20:	50 e0       	ldi	r21, 0x00	; 0
    3b22:	ca 01       	movw	r24, r20
    3b24:	88 0f       	add	r24, r24
    3b26:	99 1f       	adc	r25, r25
    3b28:	9c 01       	movw	r18, r24
    3b2a:	22 0f       	add	r18, r18
    3b2c:	33 1f       	adc	r19, r19
    3b2e:	22 0f       	add	r18, r18
    3b30:	33 1f       	adc	r19, r19
    3b32:	22 0f       	add	r18, r18
    3b34:	33 1f       	adc	r19, r19
    3b36:	82 0f       	add	r24, r18
    3b38:	93 1f       	adc	r25, r19
    3b3a:	84 0f       	add	r24, r20
    3b3c:	95 1f       	adc	r25, r21
    3b3e:	fc 01       	movw	r30, r24
    3b40:	eb 56       	subi	r30, 0x6B	; 107
    3b42:	ff 4f       	sbci	r31, 0xFF	; 255
    3b44:	90 81       	ld	r25, Z
    3b46:	86 2f       	mov	r24, r22
    3b48:	69 2f       	mov	r22, r25
    3b4a:	40 e0       	ldi	r20, 0x00	; 0
    3b4c:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3b50:	89 83       	std	Y+1, r24	; 0x01
    3b52:	80 c0       	rjmp	.+256    	; 0x3c54 <SEV_SEG_enumDOTDisable+0x206>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    3b54:	8a 81       	ldd	r24, Y+2	; 0x02
    3b56:	48 2f       	mov	r20, r24
    3b58:	50 e0       	ldi	r21, 0x00	; 0
    3b5a:	ca 01       	movw	r24, r20
    3b5c:	88 0f       	add	r24, r24
    3b5e:	99 1f       	adc	r25, r25
    3b60:	9c 01       	movw	r18, r24
    3b62:	22 0f       	add	r18, r18
    3b64:	33 1f       	adc	r19, r19
    3b66:	22 0f       	add	r18, r18
    3b68:	33 1f       	adc	r19, r19
    3b6a:	22 0f       	add	r18, r18
    3b6c:	33 1f       	adc	r19, r19
    3b6e:	82 0f       	add	r24, r18
    3b70:	93 1f       	adc	r25, r19
    3b72:	84 0f       	add	r24, r20
    3b74:	95 1f       	adc	r25, r21
    3b76:	fc 01       	movw	r30, r24
    3b78:	ea 56       	subi	r30, 0x6A	; 106
    3b7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b7c:	80 81       	ld	r24, Z
    3b7e:	88 23       	and	r24, r24
    3b80:	89 f5       	brne	.+98     	; 0x3be4 <SEV_SEG_enumDOTDisable+0x196>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,HIGH);
    3b82:	8a 81       	ldd	r24, Y+2	; 0x02
    3b84:	48 2f       	mov	r20, r24
    3b86:	50 e0       	ldi	r21, 0x00	; 0
    3b88:	ca 01       	movw	r24, r20
    3b8a:	88 0f       	add	r24, r24
    3b8c:	99 1f       	adc	r25, r25
    3b8e:	9c 01       	movw	r18, r24
    3b90:	22 0f       	add	r18, r18
    3b92:	33 1f       	adc	r19, r19
    3b94:	22 0f       	add	r18, r18
    3b96:	33 1f       	adc	r19, r19
    3b98:	22 0f       	add	r18, r18
    3b9a:	33 1f       	adc	r19, r19
    3b9c:	82 0f       	add	r24, r18
    3b9e:	93 1f       	adc	r25, r19
    3ba0:	84 0f       	add	r24, r20
    3ba2:	95 1f       	adc	r25, r21
    3ba4:	fc 01       	movw	r30, r24
    3ba6:	ee 56       	subi	r30, 0x6E	; 110
    3ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    3baa:	60 81       	ld	r22, Z
    3bac:	8a 81       	ldd	r24, Y+2	; 0x02
    3bae:	48 2f       	mov	r20, r24
    3bb0:	50 e0       	ldi	r21, 0x00	; 0
    3bb2:	ca 01       	movw	r24, r20
    3bb4:	88 0f       	add	r24, r24
    3bb6:	99 1f       	adc	r25, r25
    3bb8:	9c 01       	movw	r18, r24
    3bba:	22 0f       	add	r18, r18
    3bbc:	33 1f       	adc	r19, r19
    3bbe:	22 0f       	add	r18, r18
    3bc0:	33 1f       	adc	r19, r19
    3bc2:	22 0f       	add	r18, r18
    3bc4:	33 1f       	adc	r19, r19
    3bc6:	82 0f       	add	r24, r18
    3bc8:	93 1f       	adc	r25, r19
    3bca:	84 0f       	add	r24, r20
    3bcc:	95 1f       	adc	r25, r21
    3bce:	fc 01       	movw	r30, r24
    3bd0:	ed 56       	subi	r30, 0x6D	; 109
    3bd2:	ff 4f       	sbci	r31, 0xFF	; 255
    3bd4:	90 81       	ld	r25, Z
    3bd6:	86 2f       	mov	r24, r22
    3bd8:	69 2f       	mov	r22, r25
    3bda:	41 e0       	ldi	r20, 0x01	; 1
    3bdc:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3be0:	89 83       	std	Y+1, r24	; 0x01
    3be2:	38 c0       	rjmp	.+112    	; 0x3c54 <SEV_SEG_enumDOTDisable+0x206>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    3be4:	83 e0       	ldi	r24, 0x03	; 3
    3be6:	89 83       	std	Y+1, r24	; 0x01
    3be8:	35 c0       	rjmp	.+106    	; 0x3c54 <SEV_SEG_enumDOTDisable+0x206>
			}
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    3bea:	8a 81       	ldd	r24, Y+2	; 0x02
    3bec:	48 2f       	mov	r20, r24
    3bee:	50 e0       	ldi	r21, 0x00	; 0
    3bf0:	ca 01       	movw	r24, r20
    3bf2:	88 0f       	add	r24, r24
    3bf4:	99 1f       	adc	r25, r25
    3bf6:	9c 01       	movw	r18, r24
    3bf8:	22 0f       	add	r18, r18
    3bfa:	33 1f       	adc	r19, r19
    3bfc:	22 0f       	add	r18, r18
    3bfe:	33 1f       	adc	r19, r19
    3c00:	22 0f       	add	r18, r18
    3c02:	33 1f       	adc	r19, r19
    3c04:	82 0f       	add	r24, r18
    3c06:	93 1f       	adc	r25, r19
    3c08:	84 0f       	add	r24, r20
    3c0a:	95 1f       	adc	r25, r21
    3c0c:	fc 01       	movw	r30, r24
    3c0e:	ee 56       	subi	r30, 0x6E	; 110
    3c10:	ff 4f       	sbci	r31, 0xFF	; 255
    3c12:	80 81       	ld	r24, Z
    3c14:	88 30       	cpi	r24, 0x08	; 8
    3c16:	c9 f4       	brne	.+50     	; 0x3c4a <SEV_SEG_enumDOTDisable+0x1fc>
    3c18:	8a 81       	ldd	r24, Y+2	; 0x02
    3c1a:	48 2f       	mov	r20, r24
    3c1c:	50 e0       	ldi	r21, 0x00	; 0
    3c1e:	ca 01       	movw	r24, r20
    3c20:	88 0f       	add	r24, r24
    3c22:	99 1f       	adc	r25, r25
    3c24:	9c 01       	movw	r18, r24
    3c26:	22 0f       	add	r18, r18
    3c28:	33 1f       	adc	r19, r19
    3c2a:	22 0f       	add	r18, r18
    3c2c:	33 1f       	adc	r19, r19
    3c2e:	22 0f       	add	r18, r18
    3c30:	33 1f       	adc	r19, r19
    3c32:	82 0f       	add	r24, r18
    3c34:	93 1f       	adc	r25, r19
    3c36:	84 0f       	add	r24, r20
    3c38:	95 1f       	adc	r25, r21
    3c3a:	fc 01       	movw	r30, r24
    3c3c:	ed 56       	subi	r30, 0x6D	; 109
    3c3e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c40:	80 81       	ld	r24, Z
    3c42:	88 30       	cpi	r24, 0x08	; 8
    3c44:	11 f4       	brne	.+4      	; 0x3c4a <SEV_SEG_enumDOTDisable+0x1fc>
				&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin==NOT_CONNECTED)
		{
			Local_enumErrorState=ES_NOK;
    3c46:	19 82       	std	Y+1, r1	; 0x01
    3c48:	05 c0       	rjmp	.+10     	; 0x3c54 <SEV_SEG_enumDOTDisable+0x206>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    3c4a:	83 e0       	ldi	r24, 0x03	; 3
    3c4c:	89 83       	std	Y+1, r24	; 0x01
    3c4e:	02 c0       	rjmp	.+4      	; 0x3c54 <SEV_SEG_enumDOTDisable+0x206>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    3c50:	83 e0       	ldi	r24, 0x03	; 3
    3c52:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    3c54:	89 81       	ldd	r24, Y+1	; 0x01
}
    3c56:	0f 90       	pop	r0
    3c58:	0f 90       	pop	r0
    3c5a:	cf 91       	pop	r28
    3c5c:	df 91       	pop	r29
    3c5e:	08 95       	ret

00003c60 <SEV_SEG_enumSEGClear>:
ES_T SEV_SEG_enumSEGClear(u8 Copy_u8SegmentID)
{
    3c60:	df 93       	push	r29
    3c62:	cf 93       	push	r28
    3c64:	00 d0       	rcall	.+0      	; 0x3c66 <SEV_SEG_enumSEGClear+0x6>
    3c66:	0f 92       	push	r0
    3c68:	cd b7       	in	r28, 0x3d	; 61
    3c6a:	de b7       	in	r29, 0x3e	; 62
    3c6c:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    3c6e:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    3c70:	8a 81       	ldd	r24, Y+2	; 0x02
    3c72:	82 30       	cpi	r24, 0x02	; 2
    3c74:	08 f0       	brcs	.+2      	; 0x3c78 <SEV_SEG_enumSEGClear+0x18>
    3c76:	55 c4       	rjmp	.+2218   	; 0x4522 <SEV_SEG_enumSEGClear+0x8c2>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    3c78:	8a 81       	ldd	r24, Y+2	; 0x02
    3c7a:	48 2f       	mov	r20, r24
    3c7c:	50 e0       	ldi	r21, 0x00	; 0
    3c7e:	ca 01       	movw	r24, r20
    3c80:	88 0f       	add	r24, r24
    3c82:	99 1f       	adc	r25, r25
    3c84:	9c 01       	movw	r18, r24
    3c86:	22 0f       	add	r18, r18
    3c88:	33 1f       	adc	r19, r19
    3c8a:	22 0f       	add	r18, r18
    3c8c:	33 1f       	adc	r19, r19
    3c8e:	22 0f       	add	r18, r18
    3c90:	33 1f       	adc	r19, r19
    3c92:	82 0f       	add	r24, r18
    3c94:	93 1f       	adc	r25, r19
    3c96:	84 0f       	add	r24, r20
    3c98:	95 1f       	adc	r25, r21
    3c9a:	fc 01       	movw	r30, r24
    3c9c:	ea 56       	subi	r30, 0x6A	; 106
    3c9e:	ff 4f       	sbci	r31, 0xFF	; 255
    3ca0:	80 81       	ld	r24, Z
    3ca2:	81 30       	cpi	r24, 0x01	; 1
    3ca4:	09 f0       	breq	.+2      	; 0x3ca8 <SEV_SEG_enumSEGClear+0x48>
    3ca6:	12 c2       	rjmp	.+1060   	; 0x40cc <SEV_SEG_enumSEGClear+0x46c>
		{
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APin,LOW);
    3ca8:	8a 81       	ldd	r24, Y+2	; 0x02
    3caa:	48 2f       	mov	r20, r24
    3cac:	50 e0       	ldi	r21, 0x00	; 0
    3cae:	ca 01       	movw	r24, r20
    3cb0:	88 0f       	add	r24, r24
    3cb2:	99 1f       	adc	r25, r25
    3cb4:	9c 01       	movw	r18, r24
    3cb6:	22 0f       	add	r18, r18
    3cb8:	33 1f       	adc	r19, r19
    3cba:	22 0f       	add	r18, r18
    3cbc:	33 1f       	adc	r19, r19
    3cbe:	22 0f       	add	r18, r18
    3cc0:	33 1f       	adc	r19, r19
    3cc2:	82 0f       	add	r24, r18
    3cc4:	93 1f       	adc	r25, r19
    3cc6:	84 0f       	add	r24, r20
    3cc8:	95 1f       	adc	r25, r21
    3cca:	fc 01       	movw	r30, r24
    3ccc:	ec 57       	subi	r30, 0x7C	; 124
    3cce:	ff 4f       	sbci	r31, 0xFF	; 255
    3cd0:	60 81       	ld	r22, Z
    3cd2:	8a 81       	ldd	r24, Y+2	; 0x02
    3cd4:	48 2f       	mov	r20, r24
    3cd6:	50 e0       	ldi	r21, 0x00	; 0
    3cd8:	ca 01       	movw	r24, r20
    3cda:	88 0f       	add	r24, r24
    3cdc:	99 1f       	adc	r25, r25
    3cde:	9c 01       	movw	r18, r24
    3ce0:	22 0f       	add	r18, r18
    3ce2:	33 1f       	adc	r19, r19
    3ce4:	22 0f       	add	r18, r18
    3ce6:	33 1f       	adc	r19, r19
    3ce8:	22 0f       	add	r18, r18
    3cea:	33 1f       	adc	r19, r19
    3cec:	82 0f       	add	r24, r18
    3cee:	93 1f       	adc	r25, r19
    3cf0:	84 0f       	add	r24, r20
    3cf2:	95 1f       	adc	r25, r21
    3cf4:	fc 01       	movw	r30, r24
    3cf6:	eb 57       	subi	r30, 0x7B	; 123
    3cf8:	ff 4f       	sbci	r31, 0xFF	; 255
    3cfa:	90 81       	ld	r25, Z
    3cfc:	86 2f       	mov	r24, r22
    3cfe:	69 2f       	mov	r22, r25
    3d00:	40 e0       	ldi	r20, 0x00	; 0
    3d02:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3d06:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3d08:	89 81       	ldd	r24, Y+1	; 0x01
    3d0a:	81 30       	cpi	r24, 0x01	; 1
    3d0c:	19 f0       	breq	.+6      	; 0x3d14 <SEV_SEG_enumSEGClear+0xb4>
    3d0e:	89 81       	ldd	r24, Y+1	; 0x01
    3d10:	8b 83       	std	Y+3, r24	; 0x03
    3d12:	0b c4       	rjmp	.+2070   	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPin,LOW);
    3d14:	8a 81       	ldd	r24, Y+2	; 0x02
    3d16:	48 2f       	mov	r20, r24
    3d18:	50 e0       	ldi	r21, 0x00	; 0
    3d1a:	ca 01       	movw	r24, r20
    3d1c:	88 0f       	add	r24, r24
    3d1e:	99 1f       	adc	r25, r25
    3d20:	9c 01       	movw	r18, r24
    3d22:	22 0f       	add	r18, r18
    3d24:	33 1f       	adc	r19, r19
    3d26:	22 0f       	add	r18, r18
    3d28:	33 1f       	adc	r19, r19
    3d2a:	22 0f       	add	r18, r18
    3d2c:	33 1f       	adc	r19, r19
    3d2e:	82 0f       	add	r24, r18
    3d30:	93 1f       	adc	r25, r19
    3d32:	84 0f       	add	r24, r20
    3d34:	95 1f       	adc	r25, r21
    3d36:	fc 01       	movw	r30, r24
    3d38:	ea 57       	subi	r30, 0x7A	; 122
    3d3a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d3c:	60 81       	ld	r22, Z
    3d3e:	8a 81       	ldd	r24, Y+2	; 0x02
    3d40:	48 2f       	mov	r20, r24
    3d42:	50 e0       	ldi	r21, 0x00	; 0
    3d44:	ca 01       	movw	r24, r20
    3d46:	88 0f       	add	r24, r24
    3d48:	99 1f       	adc	r25, r25
    3d4a:	9c 01       	movw	r18, r24
    3d4c:	22 0f       	add	r18, r18
    3d4e:	33 1f       	adc	r19, r19
    3d50:	22 0f       	add	r18, r18
    3d52:	33 1f       	adc	r19, r19
    3d54:	22 0f       	add	r18, r18
    3d56:	33 1f       	adc	r19, r19
    3d58:	82 0f       	add	r24, r18
    3d5a:	93 1f       	adc	r25, r19
    3d5c:	84 0f       	add	r24, r20
    3d5e:	95 1f       	adc	r25, r21
    3d60:	fc 01       	movw	r30, r24
    3d62:	e9 57       	subi	r30, 0x79	; 121
    3d64:	ff 4f       	sbci	r31, 0xFF	; 255
    3d66:	90 81       	ld	r25, Z
    3d68:	86 2f       	mov	r24, r22
    3d6a:	69 2f       	mov	r22, r25
    3d6c:	40 e0       	ldi	r20, 0x00	; 0
    3d6e:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3d72:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3d74:	89 81       	ldd	r24, Y+1	; 0x01
    3d76:	81 30       	cpi	r24, 0x01	; 1
    3d78:	19 f0       	breq	.+6      	; 0x3d80 <SEV_SEG_enumSEGClear+0x120>
    3d7a:	89 81       	ldd	r24, Y+1	; 0x01
    3d7c:	8b 83       	std	Y+3, r24	; 0x03
    3d7e:	d5 c3       	rjmp	.+1962   	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPin,LOW);
    3d80:	8a 81       	ldd	r24, Y+2	; 0x02
    3d82:	48 2f       	mov	r20, r24
    3d84:	50 e0       	ldi	r21, 0x00	; 0
    3d86:	ca 01       	movw	r24, r20
    3d88:	88 0f       	add	r24, r24
    3d8a:	99 1f       	adc	r25, r25
    3d8c:	9c 01       	movw	r18, r24
    3d8e:	22 0f       	add	r18, r18
    3d90:	33 1f       	adc	r19, r19
    3d92:	22 0f       	add	r18, r18
    3d94:	33 1f       	adc	r19, r19
    3d96:	22 0f       	add	r18, r18
    3d98:	33 1f       	adc	r19, r19
    3d9a:	82 0f       	add	r24, r18
    3d9c:	93 1f       	adc	r25, r19
    3d9e:	84 0f       	add	r24, r20
    3da0:	95 1f       	adc	r25, r21
    3da2:	fc 01       	movw	r30, r24
    3da4:	e8 57       	subi	r30, 0x78	; 120
    3da6:	ff 4f       	sbci	r31, 0xFF	; 255
    3da8:	60 81       	ld	r22, Z
    3daa:	8a 81       	ldd	r24, Y+2	; 0x02
    3dac:	48 2f       	mov	r20, r24
    3dae:	50 e0       	ldi	r21, 0x00	; 0
    3db0:	ca 01       	movw	r24, r20
    3db2:	88 0f       	add	r24, r24
    3db4:	99 1f       	adc	r25, r25
    3db6:	9c 01       	movw	r18, r24
    3db8:	22 0f       	add	r18, r18
    3dba:	33 1f       	adc	r19, r19
    3dbc:	22 0f       	add	r18, r18
    3dbe:	33 1f       	adc	r19, r19
    3dc0:	22 0f       	add	r18, r18
    3dc2:	33 1f       	adc	r19, r19
    3dc4:	82 0f       	add	r24, r18
    3dc6:	93 1f       	adc	r25, r19
    3dc8:	84 0f       	add	r24, r20
    3dca:	95 1f       	adc	r25, r21
    3dcc:	fc 01       	movw	r30, r24
    3dce:	e7 57       	subi	r30, 0x77	; 119
    3dd0:	ff 4f       	sbci	r31, 0xFF	; 255
    3dd2:	90 81       	ld	r25, Z
    3dd4:	86 2f       	mov	r24, r22
    3dd6:	69 2f       	mov	r22, r25
    3dd8:	40 e0       	ldi	r20, 0x00	; 0
    3dda:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3dde:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3de0:	89 81       	ldd	r24, Y+1	; 0x01
    3de2:	81 30       	cpi	r24, 0x01	; 1
    3de4:	19 f0       	breq	.+6      	; 0x3dec <SEV_SEG_enumSEGClear+0x18c>
    3de6:	89 81       	ldd	r24, Y+1	; 0x01
    3de8:	8b 83       	std	Y+3, r24	; 0x03
    3dea:	9f c3       	rjmp	.+1854   	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPin,LOW);
    3dec:	8a 81       	ldd	r24, Y+2	; 0x02
    3dee:	48 2f       	mov	r20, r24
    3df0:	50 e0       	ldi	r21, 0x00	; 0
    3df2:	ca 01       	movw	r24, r20
    3df4:	88 0f       	add	r24, r24
    3df6:	99 1f       	adc	r25, r25
    3df8:	9c 01       	movw	r18, r24
    3dfa:	22 0f       	add	r18, r18
    3dfc:	33 1f       	adc	r19, r19
    3dfe:	22 0f       	add	r18, r18
    3e00:	33 1f       	adc	r19, r19
    3e02:	22 0f       	add	r18, r18
    3e04:	33 1f       	adc	r19, r19
    3e06:	82 0f       	add	r24, r18
    3e08:	93 1f       	adc	r25, r19
    3e0a:	84 0f       	add	r24, r20
    3e0c:	95 1f       	adc	r25, r21
    3e0e:	fc 01       	movw	r30, r24
    3e10:	e6 57       	subi	r30, 0x76	; 118
    3e12:	ff 4f       	sbci	r31, 0xFF	; 255
    3e14:	60 81       	ld	r22, Z
    3e16:	8a 81       	ldd	r24, Y+2	; 0x02
    3e18:	48 2f       	mov	r20, r24
    3e1a:	50 e0       	ldi	r21, 0x00	; 0
    3e1c:	ca 01       	movw	r24, r20
    3e1e:	88 0f       	add	r24, r24
    3e20:	99 1f       	adc	r25, r25
    3e22:	9c 01       	movw	r18, r24
    3e24:	22 0f       	add	r18, r18
    3e26:	33 1f       	adc	r19, r19
    3e28:	22 0f       	add	r18, r18
    3e2a:	33 1f       	adc	r19, r19
    3e2c:	22 0f       	add	r18, r18
    3e2e:	33 1f       	adc	r19, r19
    3e30:	82 0f       	add	r24, r18
    3e32:	93 1f       	adc	r25, r19
    3e34:	84 0f       	add	r24, r20
    3e36:	95 1f       	adc	r25, r21
    3e38:	fc 01       	movw	r30, r24
    3e3a:	e5 57       	subi	r30, 0x75	; 117
    3e3c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e3e:	90 81       	ld	r25, Z
    3e40:	86 2f       	mov	r24, r22
    3e42:	69 2f       	mov	r22, r25
    3e44:	40 e0       	ldi	r20, 0x00	; 0
    3e46:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3e4a:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3e4c:	89 81       	ldd	r24, Y+1	; 0x01
    3e4e:	81 30       	cpi	r24, 0x01	; 1
    3e50:	19 f0       	breq	.+6      	; 0x3e58 <SEV_SEG_enumSEGClear+0x1f8>
    3e52:	89 81       	ldd	r24, Y+1	; 0x01
    3e54:	8b 83       	std	Y+3, r24	; 0x03
    3e56:	69 c3       	rjmp	.+1746   	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPin,LOW);
    3e58:	8a 81       	ldd	r24, Y+2	; 0x02
    3e5a:	48 2f       	mov	r20, r24
    3e5c:	50 e0       	ldi	r21, 0x00	; 0
    3e5e:	ca 01       	movw	r24, r20
    3e60:	88 0f       	add	r24, r24
    3e62:	99 1f       	adc	r25, r25
    3e64:	9c 01       	movw	r18, r24
    3e66:	22 0f       	add	r18, r18
    3e68:	33 1f       	adc	r19, r19
    3e6a:	22 0f       	add	r18, r18
    3e6c:	33 1f       	adc	r19, r19
    3e6e:	22 0f       	add	r18, r18
    3e70:	33 1f       	adc	r19, r19
    3e72:	82 0f       	add	r24, r18
    3e74:	93 1f       	adc	r25, r19
    3e76:	84 0f       	add	r24, r20
    3e78:	95 1f       	adc	r25, r21
    3e7a:	fc 01       	movw	r30, r24
    3e7c:	e4 57       	subi	r30, 0x74	; 116
    3e7e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e80:	60 81       	ld	r22, Z
    3e82:	8a 81       	ldd	r24, Y+2	; 0x02
    3e84:	48 2f       	mov	r20, r24
    3e86:	50 e0       	ldi	r21, 0x00	; 0
    3e88:	ca 01       	movw	r24, r20
    3e8a:	88 0f       	add	r24, r24
    3e8c:	99 1f       	adc	r25, r25
    3e8e:	9c 01       	movw	r18, r24
    3e90:	22 0f       	add	r18, r18
    3e92:	33 1f       	adc	r19, r19
    3e94:	22 0f       	add	r18, r18
    3e96:	33 1f       	adc	r19, r19
    3e98:	22 0f       	add	r18, r18
    3e9a:	33 1f       	adc	r19, r19
    3e9c:	82 0f       	add	r24, r18
    3e9e:	93 1f       	adc	r25, r19
    3ea0:	84 0f       	add	r24, r20
    3ea2:	95 1f       	adc	r25, r21
    3ea4:	fc 01       	movw	r30, r24
    3ea6:	e3 57       	subi	r30, 0x73	; 115
    3ea8:	ff 4f       	sbci	r31, 0xFF	; 255
    3eaa:	90 81       	ld	r25, Z
    3eac:	86 2f       	mov	r24, r22
    3eae:	69 2f       	mov	r22, r25
    3eb0:	40 e0       	ldi	r20, 0x00	; 0
    3eb2:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3eb6:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3eb8:	89 81       	ldd	r24, Y+1	; 0x01
    3eba:	81 30       	cpi	r24, 0x01	; 1
    3ebc:	19 f0       	breq	.+6      	; 0x3ec4 <SEV_SEG_enumSEGClear+0x264>
    3ebe:	89 81       	ldd	r24, Y+1	; 0x01
    3ec0:	8b 83       	std	Y+3, r24	; 0x03
    3ec2:	33 c3       	rjmp	.+1638   	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPin,LOW);
    3ec4:	8a 81       	ldd	r24, Y+2	; 0x02
    3ec6:	48 2f       	mov	r20, r24
    3ec8:	50 e0       	ldi	r21, 0x00	; 0
    3eca:	ca 01       	movw	r24, r20
    3ecc:	88 0f       	add	r24, r24
    3ece:	99 1f       	adc	r25, r25
    3ed0:	9c 01       	movw	r18, r24
    3ed2:	22 0f       	add	r18, r18
    3ed4:	33 1f       	adc	r19, r19
    3ed6:	22 0f       	add	r18, r18
    3ed8:	33 1f       	adc	r19, r19
    3eda:	22 0f       	add	r18, r18
    3edc:	33 1f       	adc	r19, r19
    3ede:	82 0f       	add	r24, r18
    3ee0:	93 1f       	adc	r25, r19
    3ee2:	84 0f       	add	r24, r20
    3ee4:	95 1f       	adc	r25, r21
    3ee6:	fc 01       	movw	r30, r24
    3ee8:	e2 57       	subi	r30, 0x72	; 114
    3eea:	ff 4f       	sbci	r31, 0xFF	; 255
    3eec:	60 81       	ld	r22, Z
    3eee:	8a 81       	ldd	r24, Y+2	; 0x02
    3ef0:	48 2f       	mov	r20, r24
    3ef2:	50 e0       	ldi	r21, 0x00	; 0
    3ef4:	ca 01       	movw	r24, r20
    3ef6:	88 0f       	add	r24, r24
    3ef8:	99 1f       	adc	r25, r25
    3efa:	9c 01       	movw	r18, r24
    3efc:	22 0f       	add	r18, r18
    3efe:	33 1f       	adc	r19, r19
    3f00:	22 0f       	add	r18, r18
    3f02:	33 1f       	adc	r19, r19
    3f04:	22 0f       	add	r18, r18
    3f06:	33 1f       	adc	r19, r19
    3f08:	82 0f       	add	r24, r18
    3f0a:	93 1f       	adc	r25, r19
    3f0c:	84 0f       	add	r24, r20
    3f0e:	95 1f       	adc	r25, r21
    3f10:	fc 01       	movw	r30, r24
    3f12:	e1 57       	subi	r30, 0x71	; 113
    3f14:	ff 4f       	sbci	r31, 0xFF	; 255
    3f16:	90 81       	ld	r25, Z
    3f18:	86 2f       	mov	r24, r22
    3f1a:	69 2f       	mov	r22, r25
    3f1c:	40 e0       	ldi	r20, 0x00	; 0
    3f1e:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3f22:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3f24:	89 81       	ldd	r24, Y+1	; 0x01
    3f26:	81 30       	cpi	r24, 0x01	; 1
    3f28:	19 f0       	breq	.+6      	; 0x3f30 <SEV_SEG_enumSEGClear+0x2d0>
    3f2a:	89 81       	ldd	r24, Y+1	; 0x01
    3f2c:	8b 83       	std	Y+3, r24	; 0x03
    3f2e:	fd c2       	rjmp	.+1530   	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPin,LOW);
    3f30:	8a 81       	ldd	r24, Y+2	; 0x02
    3f32:	48 2f       	mov	r20, r24
    3f34:	50 e0       	ldi	r21, 0x00	; 0
    3f36:	ca 01       	movw	r24, r20
    3f38:	88 0f       	add	r24, r24
    3f3a:	99 1f       	adc	r25, r25
    3f3c:	9c 01       	movw	r18, r24
    3f3e:	22 0f       	add	r18, r18
    3f40:	33 1f       	adc	r19, r19
    3f42:	22 0f       	add	r18, r18
    3f44:	33 1f       	adc	r19, r19
    3f46:	22 0f       	add	r18, r18
    3f48:	33 1f       	adc	r19, r19
    3f4a:	82 0f       	add	r24, r18
    3f4c:	93 1f       	adc	r25, r19
    3f4e:	84 0f       	add	r24, r20
    3f50:	95 1f       	adc	r25, r21
    3f52:	fc 01       	movw	r30, r24
    3f54:	e0 57       	subi	r30, 0x70	; 112
    3f56:	ff 4f       	sbci	r31, 0xFF	; 255
    3f58:	60 81       	ld	r22, Z
    3f5a:	8a 81       	ldd	r24, Y+2	; 0x02
    3f5c:	48 2f       	mov	r20, r24
    3f5e:	50 e0       	ldi	r21, 0x00	; 0
    3f60:	ca 01       	movw	r24, r20
    3f62:	88 0f       	add	r24, r24
    3f64:	99 1f       	adc	r25, r25
    3f66:	9c 01       	movw	r18, r24
    3f68:	22 0f       	add	r18, r18
    3f6a:	33 1f       	adc	r19, r19
    3f6c:	22 0f       	add	r18, r18
    3f6e:	33 1f       	adc	r19, r19
    3f70:	22 0f       	add	r18, r18
    3f72:	33 1f       	adc	r19, r19
    3f74:	82 0f       	add	r24, r18
    3f76:	93 1f       	adc	r25, r19
    3f78:	84 0f       	add	r24, r20
    3f7a:	95 1f       	adc	r25, r21
    3f7c:	fc 01       	movw	r30, r24
    3f7e:	ef 56       	subi	r30, 0x6F	; 111
    3f80:	ff 4f       	sbci	r31, 0xFF	; 255
    3f82:	90 81       	ld	r25, Z
    3f84:	86 2f       	mov	r24, r22
    3f86:	69 2f       	mov	r22, r25
    3f88:	40 e0       	ldi	r20, 0x00	; 0
    3f8a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3f8e:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3f90:	89 81       	ldd	r24, Y+1	; 0x01
    3f92:	81 30       	cpi	r24, 0x01	; 1
    3f94:	19 f0       	breq	.+6      	; 0x3f9c <SEV_SEG_enumSEGClear+0x33c>
    3f96:	89 81       	ldd	r24, Y+1	; 0x01
    3f98:	8b 83       	std	Y+3, r24	; 0x03
    3f9a:	c7 c2       	rjmp	.+1422   	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>

			if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port<=DIO_PORTD
    3f9c:	8a 81       	ldd	r24, Y+2	; 0x02
    3f9e:	48 2f       	mov	r20, r24
    3fa0:	50 e0       	ldi	r21, 0x00	; 0
    3fa2:	ca 01       	movw	r24, r20
    3fa4:	88 0f       	add	r24, r24
    3fa6:	99 1f       	adc	r25, r25
    3fa8:	9c 01       	movw	r18, r24
    3faa:	22 0f       	add	r18, r18
    3fac:	33 1f       	adc	r19, r19
    3fae:	22 0f       	add	r18, r18
    3fb0:	33 1f       	adc	r19, r19
    3fb2:	22 0f       	add	r18, r18
    3fb4:	33 1f       	adc	r19, r19
    3fb6:	82 0f       	add	r24, r18
    3fb8:	93 1f       	adc	r25, r19
    3fba:	84 0f       	add	r24, r20
    3fbc:	95 1f       	adc	r25, r21
    3fbe:	fc 01       	movw	r30, r24
    3fc0:	ec 56       	subi	r30, 0x6C	; 108
    3fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    3fc4:	80 81       	ld	r24, Z
    3fc6:	84 30       	cpi	r24, 0x04	; 4
    3fc8:	08 f0       	brcs	.+2      	; 0x3fcc <SEV_SEG_enumSEGClear+0x36c>
    3fca:	4e c0       	rjmp	.+156    	; 0x4068 <SEV_SEG_enumSEGClear+0x408>
    3fcc:	8a 81       	ldd	r24, Y+2	; 0x02
    3fce:	48 2f       	mov	r20, r24
    3fd0:	50 e0       	ldi	r21, 0x00	; 0
    3fd2:	ca 01       	movw	r24, r20
    3fd4:	88 0f       	add	r24, r24
    3fd6:	99 1f       	adc	r25, r25
    3fd8:	9c 01       	movw	r18, r24
    3fda:	22 0f       	add	r18, r18
    3fdc:	33 1f       	adc	r19, r19
    3fde:	22 0f       	add	r18, r18
    3fe0:	33 1f       	adc	r19, r19
    3fe2:	22 0f       	add	r18, r18
    3fe4:	33 1f       	adc	r19, r19
    3fe6:	82 0f       	add	r24, r18
    3fe8:	93 1f       	adc	r25, r19
    3fea:	84 0f       	add	r24, r20
    3fec:	95 1f       	adc	r25, r21
    3fee:	fc 01       	movw	r30, r24
    3ff0:	eb 56       	subi	r30, 0x6B	; 107
    3ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ff4:	80 81       	ld	r24, Z
    3ff6:	88 30       	cpi	r24, 0x08	; 8
    3ff8:	b8 f5       	brcc	.+110    	; 0x4068 <SEV_SEG_enumSEGClear+0x408>
			   &&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin,LOW);
    3ffa:	8a 81       	ldd	r24, Y+2	; 0x02
    3ffc:	48 2f       	mov	r20, r24
    3ffe:	50 e0       	ldi	r21, 0x00	; 0
    4000:	ca 01       	movw	r24, r20
    4002:	88 0f       	add	r24, r24
    4004:	99 1f       	adc	r25, r25
    4006:	9c 01       	movw	r18, r24
    4008:	22 0f       	add	r18, r18
    400a:	33 1f       	adc	r19, r19
    400c:	22 0f       	add	r18, r18
    400e:	33 1f       	adc	r19, r19
    4010:	22 0f       	add	r18, r18
    4012:	33 1f       	adc	r19, r19
    4014:	82 0f       	add	r24, r18
    4016:	93 1f       	adc	r25, r19
    4018:	84 0f       	add	r24, r20
    401a:	95 1f       	adc	r25, r21
    401c:	fc 01       	movw	r30, r24
    401e:	ec 56       	subi	r30, 0x6C	; 108
    4020:	ff 4f       	sbci	r31, 0xFF	; 255
    4022:	60 81       	ld	r22, Z
    4024:	8a 81       	ldd	r24, Y+2	; 0x02
    4026:	48 2f       	mov	r20, r24
    4028:	50 e0       	ldi	r21, 0x00	; 0
    402a:	ca 01       	movw	r24, r20
    402c:	88 0f       	add	r24, r24
    402e:	99 1f       	adc	r25, r25
    4030:	9c 01       	movw	r18, r24
    4032:	22 0f       	add	r18, r18
    4034:	33 1f       	adc	r19, r19
    4036:	22 0f       	add	r18, r18
    4038:	33 1f       	adc	r19, r19
    403a:	22 0f       	add	r18, r18
    403c:	33 1f       	adc	r19, r19
    403e:	82 0f       	add	r24, r18
    4040:	93 1f       	adc	r25, r19
    4042:	84 0f       	add	r24, r20
    4044:	95 1f       	adc	r25, r21
    4046:	fc 01       	movw	r30, r24
    4048:	eb 56       	subi	r30, 0x6B	; 107
    404a:	ff 4f       	sbci	r31, 0xFF	; 255
    404c:	90 81       	ld	r25, Z
    404e:	86 2f       	mov	r24, r22
    4050:	69 2f       	mov	r22, r25
    4052:	40 e0       	ldi	r20, 0x00	; 0
    4054:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4058:	89 83       	std	Y+1, r24	; 0x01
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    405a:	89 81       	ldd	r24, Y+1	; 0x01
    405c:	81 30       	cpi	r24, 0x01	; 1
    405e:	09 f4       	brne	.+2      	; 0x4062 <SEV_SEG_enumSEGClear+0x402>
    4060:	62 c2       	rjmp	.+1220   	; 0x4526 <SEV_SEG_enumSEGClear+0x8c6>
    4062:	89 81       	ldd	r24, Y+1	; 0x01
    4064:	8b 83       	std	Y+3, r24	; 0x03
    4066:	61 c2       	rjmp	.+1218   	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port==NOT_CONNECTED
    4068:	8a 81       	ldd	r24, Y+2	; 0x02
    406a:	48 2f       	mov	r20, r24
    406c:	50 e0       	ldi	r21, 0x00	; 0
    406e:	ca 01       	movw	r24, r20
    4070:	88 0f       	add	r24, r24
    4072:	99 1f       	adc	r25, r25
    4074:	9c 01       	movw	r18, r24
    4076:	22 0f       	add	r18, r18
    4078:	33 1f       	adc	r19, r19
    407a:	22 0f       	add	r18, r18
    407c:	33 1f       	adc	r19, r19
    407e:	22 0f       	add	r18, r18
    4080:	33 1f       	adc	r19, r19
    4082:	82 0f       	add	r24, r18
    4084:	93 1f       	adc	r25, r19
    4086:	84 0f       	add	r24, r20
    4088:	95 1f       	adc	r25, r21
    408a:	fc 01       	movw	r30, r24
    408c:	ec 56       	subi	r30, 0x6C	; 108
    408e:	ff 4f       	sbci	r31, 0xFF	; 255
    4090:	80 81       	ld	r24, Z
    4092:	88 30       	cpi	r24, 0x08	; 8
    4094:	c1 f4       	brne	.+48     	; 0x40c6 <SEV_SEG_enumSEGClear+0x466>
    4096:	8a 81       	ldd	r24, Y+2	; 0x02
    4098:	48 2f       	mov	r20, r24
    409a:	50 e0       	ldi	r21, 0x00	; 0
    409c:	ca 01       	movw	r24, r20
    409e:	88 0f       	add	r24, r24
    40a0:	99 1f       	adc	r25, r25
    40a2:	9c 01       	movw	r18, r24
    40a4:	22 0f       	add	r18, r18
    40a6:	33 1f       	adc	r19, r19
    40a8:	22 0f       	add	r18, r18
    40aa:	33 1f       	adc	r19, r19
    40ac:	22 0f       	add	r18, r18
    40ae:	33 1f       	adc	r19, r19
    40b0:	82 0f       	add	r24, r18
    40b2:	93 1f       	adc	r25, r19
    40b4:	84 0f       	add	r24, r20
    40b6:	95 1f       	adc	r25, r21
    40b8:	fc 01       	movw	r30, r24
    40ba:	eb 56       	subi	r30, 0x6B	; 107
    40bc:	ff 4f       	sbci	r31, 0xFF	; 255
    40be:	80 81       	ld	r24, Z
    40c0:	89 30       	cpi	r24, 0x09	; 9
    40c2:	08 f4       	brcc	.+2      	; 0x40c6 <SEV_SEG_enumSEGClear+0x466>
    40c4:	30 c2       	rjmp	.+1120   	; 0x4526 <SEV_SEG_enumSEGClear+0x8c6>
			{

			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    40c6:	83 e0       	ldi	r24, 0x03	; 3
    40c8:	89 83       	std	Y+1, r24	; 0x01
    40ca:	2d c2       	rjmp	.+1114   	; 0x4526 <SEV_SEG_enumSEGClear+0x8c6>
			}
		}
		else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    40cc:	8a 81       	ldd	r24, Y+2	; 0x02
    40ce:	48 2f       	mov	r20, r24
    40d0:	50 e0       	ldi	r21, 0x00	; 0
    40d2:	ca 01       	movw	r24, r20
    40d4:	88 0f       	add	r24, r24
    40d6:	99 1f       	adc	r25, r25
    40d8:	9c 01       	movw	r18, r24
    40da:	22 0f       	add	r18, r18
    40dc:	33 1f       	adc	r19, r19
    40de:	22 0f       	add	r18, r18
    40e0:	33 1f       	adc	r19, r19
    40e2:	22 0f       	add	r18, r18
    40e4:	33 1f       	adc	r19, r19
    40e6:	82 0f       	add	r24, r18
    40e8:	93 1f       	adc	r25, r19
    40ea:	84 0f       	add	r24, r20
    40ec:	95 1f       	adc	r25, r21
    40ee:	fc 01       	movw	r30, r24
    40f0:	ea 56       	subi	r30, 0x6A	; 106
    40f2:	ff 4f       	sbci	r31, 0xFF	; 255
    40f4:	80 81       	ld	r24, Z
    40f6:	88 23       	and	r24, r24
    40f8:	09 f0       	breq	.+2      	; 0x40fc <SEV_SEG_enumSEGClear+0x49c>
    40fa:	10 c2       	rjmp	.+1056   	; 0x451c <SEV_SEG_enumSEGClear+0x8bc>
		{
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APin,HIGH);
    40fc:	8a 81       	ldd	r24, Y+2	; 0x02
    40fe:	48 2f       	mov	r20, r24
    4100:	50 e0       	ldi	r21, 0x00	; 0
    4102:	ca 01       	movw	r24, r20
    4104:	88 0f       	add	r24, r24
    4106:	99 1f       	adc	r25, r25
    4108:	9c 01       	movw	r18, r24
    410a:	22 0f       	add	r18, r18
    410c:	33 1f       	adc	r19, r19
    410e:	22 0f       	add	r18, r18
    4110:	33 1f       	adc	r19, r19
    4112:	22 0f       	add	r18, r18
    4114:	33 1f       	adc	r19, r19
    4116:	82 0f       	add	r24, r18
    4118:	93 1f       	adc	r25, r19
    411a:	84 0f       	add	r24, r20
    411c:	95 1f       	adc	r25, r21
    411e:	fc 01       	movw	r30, r24
    4120:	ec 57       	subi	r30, 0x7C	; 124
    4122:	ff 4f       	sbci	r31, 0xFF	; 255
    4124:	60 81       	ld	r22, Z
    4126:	8a 81       	ldd	r24, Y+2	; 0x02
    4128:	48 2f       	mov	r20, r24
    412a:	50 e0       	ldi	r21, 0x00	; 0
    412c:	ca 01       	movw	r24, r20
    412e:	88 0f       	add	r24, r24
    4130:	99 1f       	adc	r25, r25
    4132:	9c 01       	movw	r18, r24
    4134:	22 0f       	add	r18, r18
    4136:	33 1f       	adc	r19, r19
    4138:	22 0f       	add	r18, r18
    413a:	33 1f       	adc	r19, r19
    413c:	22 0f       	add	r18, r18
    413e:	33 1f       	adc	r19, r19
    4140:	82 0f       	add	r24, r18
    4142:	93 1f       	adc	r25, r19
    4144:	84 0f       	add	r24, r20
    4146:	95 1f       	adc	r25, r21
    4148:	fc 01       	movw	r30, r24
    414a:	eb 57       	subi	r30, 0x7B	; 123
    414c:	ff 4f       	sbci	r31, 0xFF	; 255
    414e:	90 81       	ld	r25, Z
    4150:	86 2f       	mov	r24, r22
    4152:	69 2f       	mov	r22, r25
    4154:	41 e0       	ldi	r20, 0x01	; 1
    4156:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    415a:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    415c:	89 81       	ldd	r24, Y+1	; 0x01
    415e:	81 30       	cpi	r24, 0x01	; 1
    4160:	19 f0       	breq	.+6      	; 0x4168 <SEV_SEG_enumSEGClear+0x508>
    4162:	89 81       	ldd	r24, Y+1	; 0x01
    4164:	8b 83       	std	Y+3, r24	; 0x03
    4166:	e1 c1       	rjmp	.+962    	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPin,HIGH);
    4168:	8a 81       	ldd	r24, Y+2	; 0x02
    416a:	48 2f       	mov	r20, r24
    416c:	50 e0       	ldi	r21, 0x00	; 0
    416e:	ca 01       	movw	r24, r20
    4170:	88 0f       	add	r24, r24
    4172:	99 1f       	adc	r25, r25
    4174:	9c 01       	movw	r18, r24
    4176:	22 0f       	add	r18, r18
    4178:	33 1f       	adc	r19, r19
    417a:	22 0f       	add	r18, r18
    417c:	33 1f       	adc	r19, r19
    417e:	22 0f       	add	r18, r18
    4180:	33 1f       	adc	r19, r19
    4182:	82 0f       	add	r24, r18
    4184:	93 1f       	adc	r25, r19
    4186:	84 0f       	add	r24, r20
    4188:	95 1f       	adc	r25, r21
    418a:	fc 01       	movw	r30, r24
    418c:	ea 57       	subi	r30, 0x7A	; 122
    418e:	ff 4f       	sbci	r31, 0xFF	; 255
    4190:	60 81       	ld	r22, Z
    4192:	8a 81       	ldd	r24, Y+2	; 0x02
    4194:	48 2f       	mov	r20, r24
    4196:	50 e0       	ldi	r21, 0x00	; 0
    4198:	ca 01       	movw	r24, r20
    419a:	88 0f       	add	r24, r24
    419c:	99 1f       	adc	r25, r25
    419e:	9c 01       	movw	r18, r24
    41a0:	22 0f       	add	r18, r18
    41a2:	33 1f       	adc	r19, r19
    41a4:	22 0f       	add	r18, r18
    41a6:	33 1f       	adc	r19, r19
    41a8:	22 0f       	add	r18, r18
    41aa:	33 1f       	adc	r19, r19
    41ac:	82 0f       	add	r24, r18
    41ae:	93 1f       	adc	r25, r19
    41b0:	84 0f       	add	r24, r20
    41b2:	95 1f       	adc	r25, r21
    41b4:	fc 01       	movw	r30, r24
    41b6:	e9 57       	subi	r30, 0x79	; 121
    41b8:	ff 4f       	sbci	r31, 0xFF	; 255
    41ba:	90 81       	ld	r25, Z
    41bc:	86 2f       	mov	r24, r22
    41be:	69 2f       	mov	r22, r25
    41c0:	41 e0       	ldi	r20, 0x01	; 1
    41c2:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    41c6:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    41c8:	89 81       	ldd	r24, Y+1	; 0x01
    41ca:	81 30       	cpi	r24, 0x01	; 1
    41cc:	19 f0       	breq	.+6      	; 0x41d4 <SEV_SEG_enumSEGClear+0x574>
    41ce:	89 81       	ldd	r24, Y+1	; 0x01
    41d0:	8b 83       	std	Y+3, r24	; 0x03
    41d2:	ab c1       	rjmp	.+854    	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPin,HIGH);
    41d4:	8a 81       	ldd	r24, Y+2	; 0x02
    41d6:	48 2f       	mov	r20, r24
    41d8:	50 e0       	ldi	r21, 0x00	; 0
    41da:	ca 01       	movw	r24, r20
    41dc:	88 0f       	add	r24, r24
    41de:	99 1f       	adc	r25, r25
    41e0:	9c 01       	movw	r18, r24
    41e2:	22 0f       	add	r18, r18
    41e4:	33 1f       	adc	r19, r19
    41e6:	22 0f       	add	r18, r18
    41e8:	33 1f       	adc	r19, r19
    41ea:	22 0f       	add	r18, r18
    41ec:	33 1f       	adc	r19, r19
    41ee:	82 0f       	add	r24, r18
    41f0:	93 1f       	adc	r25, r19
    41f2:	84 0f       	add	r24, r20
    41f4:	95 1f       	adc	r25, r21
    41f6:	fc 01       	movw	r30, r24
    41f8:	e8 57       	subi	r30, 0x78	; 120
    41fa:	ff 4f       	sbci	r31, 0xFF	; 255
    41fc:	60 81       	ld	r22, Z
    41fe:	8a 81       	ldd	r24, Y+2	; 0x02
    4200:	48 2f       	mov	r20, r24
    4202:	50 e0       	ldi	r21, 0x00	; 0
    4204:	ca 01       	movw	r24, r20
    4206:	88 0f       	add	r24, r24
    4208:	99 1f       	adc	r25, r25
    420a:	9c 01       	movw	r18, r24
    420c:	22 0f       	add	r18, r18
    420e:	33 1f       	adc	r19, r19
    4210:	22 0f       	add	r18, r18
    4212:	33 1f       	adc	r19, r19
    4214:	22 0f       	add	r18, r18
    4216:	33 1f       	adc	r19, r19
    4218:	82 0f       	add	r24, r18
    421a:	93 1f       	adc	r25, r19
    421c:	84 0f       	add	r24, r20
    421e:	95 1f       	adc	r25, r21
    4220:	fc 01       	movw	r30, r24
    4222:	e7 57       	subi	r30, 0x77	; 119
    4224:	ff 4f       	sbci	r31, 0xFF	; 255
    4226:	90 81       	ld	r25, Z
    4228:	86 2f       	mov	r24, r22
    422a:	69 2f       	mov	r22, r25
    422c:	41 e0       	ldi	r20, 0x01	; 1
    422e:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4232:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4234:	89 81       	ldd	r24, Y+1	; 0x01
    4236:	81 30       	cpi	r24, 0x01	; 1
    4238:	19 f0       	breq	.+6      	; 0x4240 <SEV_SEG_enumSEGClear+0x5e0>
    423a:	89 81       	ldd	r24, Y+1	; 0x01
    423c:	8b 83       	std	Y+3, r24	; 0x03
    423e:	75 c1       	rjmp	.+746    	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPin,HIGH);
    4240:	8a 81       	ldd	r24, Y+2	; 0x02
    4242:	48 2f       	mov	r20, r24
    4244:	50 e0       	ldi	r21, 0x00	; 0
    4246:	ca 01       	movw	r24, r20
    4248:	88 0f       	add	r24, r24
    424a:	99 1f       	adc	r25, r25
    424c:	9c 01       	movw	r18, r24
    424e:	22 0f       	add	r18, r18
    4250:	33 1f       	adc	r19, r19
    4252:	22 0f       	add	r18, r18
    4254:	33 1f       	adc	r19, r19
    4256:	22 0f       	add	r18, r18
    4258:	33 1f       	adc	r19, r19
    425a:	82 0f       	add	r24, r18
    425c:	93 1f       	adc	r25, r19
    425e:	84 0f       	add	r24, r20
    4260:	95 1f       	adc	r25, r21
    4262:	fc 01       	movw	r30, r24
    4264:	e6 57       	subi	r30, 0x76	; 118
    4266:	ff 4f       	sbci	r31, 0xFF	; 255
    4268:	60 81       	ld	r22, Z
    426a:	8a 81       	ldd	r24, Y+2	; 0x02
    426c:	48 2f       	mov	r20, r24
    426e:	50 e0       	ldi	r21, 0x00	; 0
    4270:	ca 01       	movw	r24, r20
    4272:	88 0f       	add	r24, r24
    4274:	99 1f       	adc	r25, r25
    4276:	9c 01       	movw	r18, r24
    4278:	22 0f       	add	r18, r18
    427a:	33 1f       	adc	r19, r19
    427c:	22 0f       	add	r18, r18
    427e:	33 1f       	adc	r19, r19
    4280:	22 0f       	add	r18, r18
    4282:	33 1f       	adc	r19, r19
    4284:	82 0f       	add	r24, r18
    4286:	93 1f       	adc	r25, r19
    4288:	84 0f       	add	r24, r20
    428a:	95 1f       	adc	r25, r21
    428c:	fc 01       	movw	r30, r24
    428e:	e5 57       	subi	r30, 0x75	; 117
    4290:	ff 4f       	sbci	r31, 0xFF	; 255
    4292:	90 81       	ld	r25, Z
    4294:	86 2f       	mov	r24, r22
    4296:	69 2f       	mov	r22, r25
    4298:	41 e0       	ldi	r20, 0x01	; 1
    429a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    429e:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    42a0:	89 81       	ldd	r24, Y+1	; 0x01
    42a2:	81 30       	cpi	r24, 0x01	; 1
    42a4:	19 f0       	breq	.+6      	; 0x42ac <SEV_SEG_enumSEGClear+0x64c>
    42a6:	89 81       	ldd	r24, Y+1	; 0x01
    42a8:	8b 83       	std	Y+3, r24	; 0x03
    42aa:	3f c1       	rjmp	.+638    	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPin,HIGH);
    42ac:	8a 81       	ldd	r24, Y+2	; 0x02
    42ae:	48 2f       	mov	r20, r24
    42b0:	50 e0       	ldi	r21, 0x00	; 0
    42b2:	ca 01       	movw	r24, r20
    42b4:	88 0f       	add	r24, r24
    42b6:	99 1f       	adc	r25, r25
    42b8:	9c 01       	movw	r18, r24
    42ba:	22 0f       	add	r18, r18
    42bc:	33 1f       	adc	r19, r19
    42be:	22 0f       	add	r18, r18
    42c0:	33 1f       	adc	r19, r19
    42c2:	22 0f       	add	r18, r18
    42c4:	33 1f       	adc	r19, r19
    42c6:	82 0f       	add	r24, r18
    42c8:	93 1f       	adc	r25, r19
    42ca:	84 0f       	add	r24, r20
    42cc:	95 1f       	adc	r25, r21
    42ce:	fc 01       	movw	r30, r24
    42d0:	e4 57       	subi	r30, 0x74	; 116
    42d2:	ff 4f       	sbci	r31, 0xFF	; 255
    42d4:	60 81       	ld	r22, Z
    42d6:	8a 81       	ldd	r24, Y+2	; 0x02
    42d8:	48 2f       	mov	r20, r24
    42da:	50 e0       	ldi	r21, 0x00	; 0
    42dc:	ca 01       	movw	r24, r20
    42de:	88 0f       	add	r24, r24
    42e0:	99 1f       	adc	r25, r25
    42e2:	9c 01       	movw	r18, r24
    42e4:	22 0f       	add	r18, r18
    42e6:	33 1f       	adc	r19, r19
    42e8:	22 0f       	add	r18, r18
    42ea:	33 1f       	adc	r19, r19
    42ec:	22 0f       	add	r18, r18
    42ee:	33 1f       	adc	r19, r19
    42f0:	82 0f       	add	r24, r18
    42f2:	93 1f       	adc	r25, r19
    42f4:	84 0f       	add	r24, r20
    42f6:	95 1f       	adc	r25, r21
    42f8:	fc 01       	movw	r30, r24
    42fa:	e3 57       	subi	r30, 0x73	; 115
    42fc:	ff 4f       	sbci	r31, 0xFF	; 255
    42fe:	90 81       	ld	r25, Z
    4300:	86 2f       	mov	r24, r22
    4302:	69 2f       	mov	r22, r25
    4304:	41 e0       	ldi	r20, 0x01	; 1
    4306:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    430a:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    430c:	89 81       	ldd	r24, Y+1	; 0x01
    430e:	81 30       	cpi	r24, 0x01	; 1
    4310:	19 f0       	breq	.+6      	; 0x4318 <SEV_SEG_enumSEGClear+0x6b8>
    4312:	89 81       	ldd	r24, Y+1	; 0x01
    4314:	8b 83       	std	Y+3, r24	; 0x03
    4316:	09 c1       	rjmp	.+530    	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPin,HIGH);
    4318:	8a 81       	ldd	r24, Y+2	; 0x02
    431a:	48 2f       	mov	r20, r24
    431c:	50 e0       	ldi	r21, 0x00	; 0
    431e:	ca 01       	movw	r24, r20
    4320:	88 0f       	add	r24, r24
    4322:	99 1f       	adc	r25, r25
    4324:	9c 01       	movw	r18, r24
    4326:	22 0f       	add	r18, r18
    4328:	33 1f       	adc	r19, r19
    432a:	22 0f       	add	r18, r18
    432c:	33 1f       	adc	r19, r19
    432e:	22 0f       	add	r18, r18
    4330:	33 1f       	adc	r19, r19
    4332:	82 0f       	add	r24, r18
    4334:	93 1f       	adc	r25, r19
    4336:	84 0f       	add	r24, r20
    4338:	95 1f       	adc	r25, r21
    433a:	fc 01       	movw	r30, r24
    433c:	e2 57       	subi	r30, 0x72	; 114
    433e:	ff 4f       	sbci	r31, 0xFF	; 255
    4340:	60 81       	ld	r22, Z
    4342:	8a 81       	ldd	r24, Y+2	; 0x02
    4344:	48 2f       	mov	r20, r24
    4346:	50 e0       	ldi	r21, 0x00	; 0
    4348:	ca 01       	movw	r24, r20
    434a:	88 0f       	add	r24, r24
    434c:	99 1f       	adc	r25, r25
    434e:	9c 01       	movw	r18, r24
    4350:	22 0f       	add	r18, r18
    4352:	33 1f       	adc	r19, r19
    4354:	22 0f       	add	r18, r18
    4356:	33 1f       	adc	r19, r19
    4358:	22 0f       	add	r18, r18
    435a:	33 1f       	adc	r19, r19
    435c:	82 0f       	add	r24, r18
    435e:	93 1f       	adc	r25, r19
    4360:	84 0f       	add	r24, r20
    4362:	95 1f       	adc	r25, r21
    4364:	fc 01       	movw	r30, r24
    4366:	e1 57       	subi	r30, 0x71	; 113
    4368:	ff 4f       	sbci	r31, 0xFF	; 255
    436a:	90 81       	ld	r25, Z
    436c:	86 2f       	mov	r24, r22
    436e:	69 2f       	mov	r22, r25
    4370:	41 e0       	ldi	r20, 0x01	; 1
    4372:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4376:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4378:	89 81       	ldd	r24, Y+1	; 0x01
    437a:	81 30       	cpi	r24, 0x01	; 1
    437c:	19 f0       	breq	.+6      	; 0x4384 <SEV_SEG_enumSEGClear+0x724>
    437e:	89 81       	ldd	r24, Y+1	; 0x01
    4380:	8b 83       	std	Y+3, r24	; 0x03
    4382:	d3 c0       	rjmp	.+422    	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPin,HIGH);
    4384:	8a 81       	ldd	r24, Y+2	; 0x02
    4386:	48 2f       	mov	r20, r24
    4388:	50 e0       	ldi	r21, 0x00	; 0
    438a:	ca 01       	movw	r24, r20
    438c:	88 0f       	add	r24, r24
    438e:	99 1f       	adc	r25, r25
    4390:	9c 01       	movw	r18, r24
    4392:	22 0f       	add	r18, r18
    4394:	33 1f       	adc	r19, r19
    4396:	22 0f       	add	r18, r18
    4398:	33 1f       	adc	r19, r19
    439a:	22 0f       	add	r18, r18
    439c:	33 1f       	adc	r19, r19
    439e:	82 0f       	add	r24, r18
    43a0:	93 1f       	adc	r25, r19
    43a2:	84 0f       	add	r24, r20
    43a4:	95 1f       	adc	r25, r21
    43a6:	fc 01       	movw	r30, r24
    43a8:	e0 57       	subi	r30, 0x70	; 112
    43aa:	ff 4f       	sbci	r31, 0xFF	; 255
    43ac:	60 81       	ld	r22, Z
    43ae:	8a 81       	ldd	r24, Y+2	; 0x02
    43b0:	48 2f       	mov	r20, r24
    43b2:	50 e0       	ldi	r21, 0x00	; 0
    43b4:	ca 01       	movw	r24, r20
    43b6:	88 0f       	add	r24, r24
    43b8:	99 1f       	adc	r25, r25
    43ba:	9c 01       	movw	r18, r24
    43bc:	22 0f       	add	r18, r18
    43be:	33 1f       	adc	r19, r19
    43c0:	22 0f       	add	r18, r18
    43c2:	33 1f       	adc	r19, r19
    43c4:	22 0f       	add	r18, r18
    43c6:	33 1f       	adc	r19, r19
    43c8:	82 0f       	add	r24, r18
    43ca:	93 1f       	adc	r25, r19
    43cc:	84 0f       	add	r24, r20
    43ce:	95 1f       	adc	r25, r21
    43d0:	fc 01       	movw	r30, r24
    43d2:	ef 56       	subi	r30, 0x6F	; 111
    43d4:	ff 4f       	sbci	r31, 0xFF	; 255
    43d6:	90 81       	ld	r25, Z
    43d8:	86 2f       	mov	r24, r22
    43da:	69 2f       	mov	r22, r25
    43dc:	41 e0       	ldi	r20, 0x01	; 1
    43de:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    43e2:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    43e4:	89 81       	ldd	r24, Y+1	; 0x01
    43e6:	81 30       	cpi	r24, 0x01	; 1
    43e8:	19 f0       	breq	.+6      	; 0x43f0 <SEV_SEG_enumSEGClear+0x790>
    43ea:	89 81       	ldd	r24, Y+1	; 0x01
    43ec:	8b 83       	std	Y+3, r24	; 0x03
    43ee:	9d c0       	rjmp	.+314    	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>

			if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port<=DIO_PORTD
    43f0:	8a 81       	ldd	r24, Y+2	; 0x02
    43f2:	48 2f       	mov	r20, r24
    43f4:	50 e0       	ldi	r21, 0x00	; 0
    43f6:	ca 01       	movw	r24, r20
    43f8:	88 0f       	add	r24, r24
    43fa:	99 1f       	adc	r25, r25
    43fc:	9c 01       	movw	r18, r24
    43fe:	22 0f       	add	r18, r18
    4400:	33 1f       	adc	r19, r19
    4402:	22 0f       	add	r18, r18
    4404:	33 1f       	adc	r19, r19
    4406:	22 0f       	add	r18, r18
    4408:	33 1f       	adc	r19, r19
    440a:	82 0f       	add	r24, r18
    440c:	93 1f       	adc	r25, r19
    440e:	84 0f       	add	r24, r20
    4410:	95 1f       	adc	r25, r21
    4412:	fc 01       	movw	r30, r24
    4414:	ec 56       	subi	r30, 0x6C	; 108
    4416:	ff 4f       	sbci	r31, 0xFF	; 255
    4418:	80 81       	ld	r24, Z
    441a:	84 30       	cpi	r24, 0x04	; 4
    441c:	08 f0       	brcs	.+2      	; 0x4420 <SEV_SEG_enumSEGClear+0x7c0>
    441e:	4d c0       	rjmp	.+154    	; 0x44ba <SEV_SEG_enumSEGClear+0x85a>
    4420:	8a 81       	ldd	r24, Y+2	; 0x02
    4422:	48 2f       	mov	r20, r24
    4424:	50 e0       	ldi	r21, 0x00	; 0
    4426:	ca 01       	movw	r24, r20
    4428:	88 0f       	add	r24, r24
    442a:	99 1f       	adc	r25, r25
    442c:	9c 01       	movw	r18, r24
    442e:	22 0f       	add	r18, r18
    4430:	33 1f       	adc	r19, r19
    4432:	22 0f       	add	r18, r18
    4434:	33 1f       	adc	r19, r19
    4436:	22 0f       	add	r18, r18
    4438:	33 1f       	adc	r19, r19
    443a:	82 0f       	add	r24, r18
    443c:	93 1f       	adc	r25, r19
    443e:	84 0f       	add	r24, r20
    4440:	95 1f       	adc	r25, r21
    4442:	fc 01       	movw	r30, r24
    4444:	eb 56       	subi	r30, 0x6B	; 107
    4446:	ff 4f       	sbci	r31, 0xFF	; 255
    4448:	80 81       	ld	r24, Z
    444a:	88 30       	cpi	r24, 0x08	; 8
    444c:	b0 f5       	brcc	.+108    	; 0x44ba <SEV_SEG_enumSEGClear+0x85a>
			   &&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin,HIGH);
    444e:	8a 81       	ldd	r24, Y+2	; 0x02
    4450:	48 2f       	mov	r20, r24
    4452:	50 e0       	ldi	r21, 0x00	; 0
    4454:	ca 01       	movw	r24, r20
    4456:	88 0f       	add	r24, r24
    4458:	99 1f       	adc	r25, r25
    445a:	9c 01       	movw	r18, r24
    445c:	22 0f       	add	r18, r18
    445e:	33 1f       	adc	r19, r19
    4460:	22 0f       	add	r18, r18
    4462:	33 1f       	adc	r19, r19
    4464:	22 0f       	add	r18, r18
    4466:	33 1f       	adc	r19, r19
    4468:	82 0f       	add	r24, r18
    446a:	93 1f       	adc	r25, r19
    446c:	84 0f       	add	r24, r20
    446e:	95 1f       	adc	r25, r21
    4470:	fc 01       	movw	r30, r24
    4472:	ec 56       	subi	r30, 0x6C	; 108
    4474:	ff 4f       	sbci	r31, 0xFF	; 255
    4476:	60 81       	ld	r22, Z
    4478:	8a 81       	ldd	r24, Y+2	; 0x02
    447a:	48 2f       	mov	r20, r24
    447c:	50 e0       	ldi	r21, 0x00	; 0
    447e:	ca 01       	movw	r24, r20
    4480:	88 0f       	add	r24, r24
    4482:	99 1f       	adc	r25, r25
    4484:	9c 01       	movw	r18, r24
    4486:	22 0f       	add	r18, r18
    4488:	33 1f       	adc	r19, r19
    448a:	22 0f       	add	r18, r18
    448c:	33 1f       	adc	r19, r19
    448e:	22 0f       	add	r18, r18
    4490:	33 1f       	adc	r19, r19
    4492:	82 0f       	add	r24, r18
    4494:	93 1f       	adc	r25, r19
    4496:	84 0f       	add	r24, r20
    4498:	95 1f       	adc	r25, r21
    449a:	fc 01       	movw	r30, r24
    449c:	eb 56       	subi	r30, 0x6B	; 107
    449e:	ff 4f       	sbci	r31, 0xFF	; 255
    44a0:	90 81       	ld	r25, Z
    44a2:	86 2f       	mov	r24, r22
    44a4:	69 2f       	mov	r22, r25
    44a6:	41 e0       	ldi	r20, 0x01	; 1
    44a8:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    44ac:	89 83       	std	Y+1, r24	; 0x01
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    44ae:	89 81       	ldd	r24, Y+1	; 0x01
    44b0:	81 30       	cpi	r24, 0x01	; 1
    44b2:	c9 f1       	breq	.+114    	; 0x4526 <SEV_SEG_enumSEGClear+0x8c6>
    44b4:	89 81       	ldd	r24, Y+1	; 0x01
    44b6:	8b 83       	std	Y+3, r24	; 0x03
    44b8:	38 c0       	rjmp	.+112    	; 0x452a <SEV_SEG_enumSEGClear+0x8ca>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port==NOT_CONNECTED
    44ba:	8a 81       	ldd	r24, Y+2	; 0x02
    44bc:	48 2f       	mov	r20, r24
    44be:	50 e0       	ldi	r21, 0x00	; 0
    44c0:	ca 01       	movw	r24, r20
    44c2:	88 0f       	add	r24, r24
    44c4:	99 1f       	adc	r25, r25
    44c6:	9c 01       	movw	r18, r24
    44c8:	22 0f       	add	r18, r18
    44ca:	33 1f       	adc	r19, r19
    44cc:	22 0f       	add	r18, r18
    44ce:	33 1f       	adc	r19, r19
    44d0:	22 0f       	add	r18, r18
    44d2:	33 1f       	adc	r19, r19
    44d4:	82 0f       	add	r24, r18
    44d6:	93 1f       	adc	r25, r19
    44d8:	84 0f       	add	r24, r20
    44da:	95 1f       	adc	r25, r21
    44dc:	fc 01       	movw	r30, r24
    44de:	ec 56       	subi	r30, 0x6C	; 108
    44e0:	ff 4f       	sbci	r31, 0xFF	; 255
    44e2:	80 81       	ld	r24, Z
    44e4:	88 30       	cpi	r24, 0x08	; 8
    44e6:	b9 f4       	brne	.+46     	; 0x4516 <SEV_SEG_enumSEGClear+0x8b6>
    44e8:	8a 81       	ldd	r24, Y+2	; 0x02
    44ea:	48 2f       	mov	r20, r24
    44ec:	50 e0       	ldi	r21, 0x00	; 0
    44ee:	ca 01       	movw	r24, r20
    44f0:	88 0f       	add	r24, r24
    44f2:	99 1f       	adc	r25, r25
    44f4:	9c 01       	movw	r18, r24
    44f6:	22 0f       	add	r18, r18
    44f8:	33 1f       	adc	r19, r19
    44fa:	22 0f       	add	r18, r18
    44fc:	33 1f       	adc	r19, r19
    44fe:	22 0f       	add	r18, r18
    4500:	33 1f       	adc	r19, r19
    4502:	82 0f       	add	r24, r18
    4504:	93 1f       	adc	r25, r19
    4506:	84 0f       	add	r24, r20
    4508:	95 1f       	adc	r25, r21
    450a:	fc 01       	movw	r30, r24
    450c:	eb 56       	subi	r30, 0x6B	; 107
    450e:	ff 4f       	sbci	r31, 0xFF	; 255
    4510:	80 81       	ld	r24, Z
    4512:	89 30       	cpi	r24, 0x09	; 9
    4514:	40 f0       	brcs	.+16     	; 0x4526 <SEV_SEG_enumSEGClear+0x8c6>
			{

			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    4516:	83 e0       	ldi	r24, 0x03	; 3
    4518:	89 83       	std	Y+1, r24	; 0x01
    451a:	05 c0       	rjmp	.+10     	; 0x4526 <SEV_SEG_enumSEGClear+0x8c6>
			}
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    451c:	83 e0       	ldi	r24, 0x03	; 3
    451e:	89 83       	std	Y+1, r24	; 0x01
    4520:	02 c0       	rjmp	.+4      	; 0x4526 <SEV_SEG_enumSEGClear+0x8c6>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    4522:	83 e0       	ldi	r24, 0x03	; 3
    4524:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    4526:	89 81       	ldd	r24, Y+1	; 0x01
    4528:	8b 83       	std	Y+3, r24	; 0x03
    452a:	8b 81       	ldd	r24, Y+3	; 0x03
}
    452c:	0f 90       	pop	r0
    452e:	0f 90       	pop	r0
    4530:	0f 90       	pop	r0
    4532:	cf 91       	pop	r28
    4534:	df 91       	pop	r29
    4536:	08 95       	ret

00004538 <SW_enumSwitchsInit>:
#include "../include/LIB/STDtypes.h"
#include "../include/MCAL/DIO/DIO_int.h"
#include "../include/HAL/SWITCH/SW_config.h"

ES_T SW_enumSwitchsInit(SW_T* Copy_pstrSwitchs)
{
    4538:	df 93       	push	r29
    453a:	cf 93       	push	r28
    453c:	00 d0       	rcall	.+0      	; 0x453e <SW_enumSwitchsInit+0x6>
    453e:	00 d0       	rcall	.+0      	; 0x4540 <SW_enumSwitchsInit+0x8>
    4540:	cd b7       	in	r28, 0x3d	; 61
    4542:	de b7       	in	r29, 0x3e	; 62
    4544:	9c 83       	std	Y+4, r25	; 0x04
    4546:	8b 83       	std	Y+3, r24	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    4548:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Counter=0;
    454a:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pstrSwitchs!=NULL)
    454c:	8b 81       	ldd	r24, Y+3	; 0x03
    454e:	9c 81       	ldd	r25, Y+4	; 0x04
    4550:	00 97       	sbiw	r24, 0x00	; 0
    4552:	09 f4       	brne	.+2      	; 0x4556 <SW_enumSwitchsInit+0x1e>
    4554:	5d c0       	rjmp	.+186    	; 0x4610 <SW_enumSwitchsInit+0xd8>
	{
		for (Local_u8Counter=0;Local_u8Counter<SW_NUM;Local_u8Counter++)
    4556:	19 82       	std	Y+1, r1	; 0x01
    4558:	55 c0       	rjmp	.+170    	; 0x4604 <SW_enumSwitchsInit+0xcc>
		{
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSwitchs[Local_u8Counter].SW_PortID,Copy_pstrSwitchs[Local_u8Counter].SW_PinID,INPUT);
    455a:	89 81       	ldd	r24, Y+1	; 0x01
    455c:	28 2f       	mov	r18, r24
    455e:	30 e0       	ldi	r19, 0x00	; 0
    4560:	c9 01       	movw	r24, r18
    4562:	88 0f       	add	r24, r24
    4564:	99 1f       	adc	r25, r25
    4566:	28 0f       	add	r18, r24
    4568:	39 1f       	adc	r19, r25
    456a:	8b 81       	ldd	r24, Y+3	; 0x03
    456c:	9c 81       	ldd	r25, Y+4	; 0x04
    456e:	fc 01       	movw	r30, r24
    4570:	e2 0f       	add	r30, r18
    4572:	f3 1f       	adc	r31, r19
    4574:	40 81       	ld	r20, Z
    4576:	89 81       	ldd	r24, Y+1	; 0x01
    4578:	28 2f       	mov	r18, r24
    457a:	30 e0       	ldi	r19, 0x00	; 0
    457c:	c9 01       	movw	r24, r18
    457e:	88 0f       	add	r24, r24
    4580:	99 1f       	adc	r25, r25
    4582:	28 0f       	add	r18, r24
    4584:	39 1f       	adc	r19, r25
    4586:	8b 81       	ldd	r24, Y+3	; 0x03
    4588:	9c 81       	ldd	r25, Y+4	; 0x04
    458a:	fc 01       	movw	r30, r24
    458c:	e2 0f       	add	r30, r18
    458e:	f3 1f       	adc	r31, r19
    4590:	91 81       	ldd	r25, Z+1	; 0x01
    4592:	84 2f       	mov	r24, r20
    4594:	69 2f       	mov	r22, r25
    4596:	40 e0       	ldi	r20, 0x00	; 0
    4598:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    459c:	8a 83       	std	Y+2, r24	; 0x02
			Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSwitchs[Local_u8Counter].SW_PortID,Copy_pstrSwitchs[Local_u8Counter].SW_PinID,Copy_pstrSwitchs[Local_u8Counter].SW_State);
    459e:	89 81       	ldd	r24, Y+1	; 0x01
    45a0:	28 2f       	mov	r18, r24
    45a2:	30 e0       	ldi	r19, 0x00	; 0
    45a4:	c9 01       	movw	r24, r18
    45a6:	88 0f       	add	r24, r24
    45a8:	99 1f       	adc	r25, r25
    45aa:	28 0f       	add	r18, r24
    45ac:	39 1f       	adc	r19, r25
    45ae:	8b 81       	ldd	r24, Y+3	; 0x03
    45b0:	9c 81       	ldd	r25, Y+4	; 0x04
    45b2:	fc 01       	movw	r30, r24
    45b4:	e2 0f       	add	r30, r18
    45b6:	f3 1f       	adc	r31, r19
    45b8:	50 81       	ld	r21, Z
    45ba:	89 81       	ldd	r24, Y+1	; 0x01
    45bc:	28 2f       	mov	r18, r24
    45be:	30 e0       	ldi	r19, 0x00	; 0
    45c0:	c9 01       	movw	r24, r18
    45c2:	88 0f       	add	r24, r24
    45c4:	99 1f       	adc	r25, r25
    45c6:	28 0f       	add	r18, r24
    45c8:	39 1f       	adc	r19, r25
    45ca:	8b 81       	ldd	r24, Y+3	; 0x03
    45cc:	9c 81       	ldd	r25, Y+4	; 0x04
    45ce:	fc 01       	movw	r30, r24
    45d0:	e2 0f       	add	r30, r18
    45d2:	f3 1f       	adc	r31, r19
    45d4:	41 81       	ldd	r20, Z+1	; 0x01
    45d6:	89 81       	ldd	r24, Y+1	; 0x01
    45d8:	28 2f       	mov	r18, r24
    45da:	30 e0       	ldi	r19, 0x00	; 0
    45dc:	c9 01       	movw	r24, r18
    45de:	88 0f       	add	r24, r24
    45e0:	99 1f       	adc	r25, r25
    45e2:	28 0f       	add	r18, r24
    45e4:	39 1f       	adc	r19, r25
    45e6:	8b 81       	ldd	r24, Y+3	; 0x03
    45e8:	9c 81       	ldd	r25, Y+4	; 0x04
    45ea:	fc 01       	movw	r30, r24
    45ec:	e2 0f       	add	r30, r18
    45ee:	f3 1f       	adc	r31, r19
    45f0:	92 81       	ldd	r25, Z+2	; 0x02
    45f2:	85 2f       	mov	r24, r21
    45f4:	64 2f       	mov	r22, r20
    45f6:	49 2f       	mov	r20, r25
    45f8:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    45fc:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
	u8 Local_u8Counter=0;

	if (Copy_pstrSwitchs!=NULL)
	{
		for (Local_u8Counter=0;Local_u8Counter<SW_NUM;Local_u8Counter++)
    45fe:	89 81       	ldd	r24, Y+1	; 0x01
    4600:	8f 5f       	subi	r24, 0xFF	; 255
    4602:	89 83       	std	Y+1, r24	; 0x01
    4604:	89 81       	ldd	r24, Y+1	; 0x01
    4606:	88 23       	and	r24, r24
    4608:	09 f4       	brne	.+2      	; 0x460c <SW_enumSwitchsInit+0xd4>
    460a:	a7 cf       	rjmp	.-178    	; 0x455a <SW_enumSwitchsInit+0x22>
		{
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSwitchs[Local_u8Counter].SW_PortID,Copy_pstrSwitchs[Local_u8Counter].SW_PinID,INPUT);
			Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSwitchs[Local_u8Counter].SW_PortID,Copy_pstrSwitchs[Local_u8Counter].SW_PinID,Copy_pstrSwitchs[Local_u8Counter].SW_State);
		}
		Local_enumErrorState=ES_NOK;
    460c:	1a 82       	std	Y+2, r1	; 0x02
    460e:	02 c0       	rjmp	.+4      	; 0x4614 <SW_enumSwitchsInit+0xdc>
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    4610:	82 e0       	ldi	r24, 0x02	; 2
    4612:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enumErrorState;
    4614:	8a 81       	ldd	r24, Y+2	; 0x02
}
    4616:	0f 90       	pop	r0
    4618:	0f 90       	pop	r0
    461a:	0f 90       	pop	r0
    461c:	0f 90       	pop	r0
    461e:	cf 91       	pop	r28
    4620:	df 91       	pop	r29
    4622:	08 95       	ret

00004624 <SW_enumSwitchGetState>:
ES_T SW_enumSwitchGetState(SW_T* Copy_pstrSwitch,u8* Copy_pu8SWState)
{
    4624:	df 93       	push	r29
    4626:	cf 93       	push	r28
    4628:	00 d0       	rcall	.+0      	; 0x462a <SW_enumSwitchGetState+0x6>
    462a:	00 d0       	rcall	.+0      	; 0x462c <SW_enumSwitchGetState+0x8>
    462c:	0f 92       	push	r0
    462e:	cd b7       	in	r28, 0x3d	; 61
    4630:	de b7       	in	r29, 0x3e	; 62
    4632:	9b 83       	std	Y+3, r25	; 0x03
    4634:	8a 83       	std	Y+2, r24	; 0x02
    4636:	7d 83       	std	Y+5, r23	; 0x05
    4638:	6c 83       	std	Y+4, r22	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    463a:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pstrSwitch!=NULL&&Copy_pu8SWState!=NULL)
    463c:	8a 81       	ldd	r24, Y+2	; 0x02
    463e:	9b 81       	ldd	r25, Y+3	; 0x03
    4640:	00 97       	sbiw	r24, 0x00	; 0
    4642:	91 f0       	breq	.+36     	; 0x4668 <SW_enumSwitchGetState+0x44>
    4644:	8c 81       	ldd	r24, Y+4	; 0x04
    4646:	9d 81       	ldd	r25, Y+5	; 0x05
    4648:	00 97       	sbiw	r24, 0x00	; 0
    464a:	71 f0       	breq	.+28     	; 0x4668 <SW_enumSwitchGetState+0x44>
	{
		Local_enumErrorState=DIO_enumGetPinValue(Copy_pstrSwitch->SW_PortID,Copy_pstrSwitch->SW_PinID,Copy_pu8SWState);
    464c:	ea 81       	ldd	r30, Y+2	; 0x02
    464e:	fb 81       	ldd	r31, Y+3	; 0x03
    4650:	80 81       	ld	r24, Z
    4652:	ea 81       	ldd	r30, Y+2	; 0x02
    4654:	fb 81       	ldd	r31, Y+3	; 0x03
    4656:	91 81       	ldd	r25, Z+1	; 0x01
    4658:	2c 81       	ldd	r18, Y+4	; 0x04
    465a:	3d 81       	ldd	r19, Y+5	; 0x05
    465c:	69 2f       	mov	r22, r25
    465e:	a9 01       	movw	r20, r18
    4660:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <DIO_enumGetPinValue>
    4664:	89 83       	std	Y+1, r24	; 0x01
    4666:	02 c0       	rjmp	.+4      	; 0x466c <SW_enumSwitchGetState+0x48>
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    4668:	82 e0       	ldi	r24, 0x02	; 2
    466a:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    466c:	89 81       	ldd	r24, Y+1	; 0x01
}
    466e:	0f 90       	pop	r0
    4670:	0f 90       	pop	r0
    4672:	0f 90       	pop	r0
    4674:	0f 90       	pop	r0
    4676:	0f 90       	pop	r0
    4678:	cf 91       	pop	r28
    467a:	df 91       	pop	r29
    467c:	08 95       	ret

0000467e <main>:
#include "../include/HAL/Seven_Segment/SEV_SEG_int.h"

extern SW_T SWITCH_AstrSwitchs[SW_NUM];
extern SEV_SEG_T SEV_SEG_AstrSegments [SEV_SEG_NUM];
int main (void)
{
    467e:	df 93       	push	r29
    4680:	cf 93       	push	r28
    4682:	cd b7       	in	r28, 0x3d	; 61
    4684:	de b7       	in	r29, 0x3e	; 62
    4686:	6f 97       	sbiw	r28, 0x1f	; 31
    4688:	0f b6       	in	r0, 0x3f	; 63
    468a:	f8 94       	cli
    468c:	de bf       	out	0x3e, r29	; 62
    468e:	0f be       	out	0x3f, r0	; 63
    4690:	cd bf       	out	0x3d, r28	; 61
	DIO_enumPortInit();
    4692:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_enumPortInit>
	SW_enumSwitchsInit(SWITCH_AstrSwitchs);
    4696:	8a eb       	ldi	r24, 0xBA	; 186
    4698:	90 e0       	ldi	r25, 0x00	; 0
    469a:	0e 94 9c 22 	call	0x4538	; 0x4538 <SW_enumSwitchsInit>
	SEV_SEG_enumInit(SEV_SEG_AstrSegments);
    469e:	84 e8       	ldi	r24, 0x84	; 132
    46a0:	90 e0       	ldi	r25, 0x00	; 0
    46a2:	0e 94 ab 0d 	call	0x1b56	; 0x1b56 <SEV_SEG_enumInit>
	SEV_SEG_enumCMNDisable(0);
    46a6:	80 e0       	ldi	r24, 0x00	; 0
    46a8:	0e 94 15 1b 	call	0x362a	; 0x362a <SEV_SEG_enumCMNDisable>
	SEV_SEG_enumCMNDisable(1);
    46ac:	81 e0       	ldi	r24, 0x01	; 1
    46ae:	0e 94 15 1b 	call	0x362a	; 0x362a <SEV_SEG_enumCMNDisable>

	u8 x=0,i=0,j=0;
    46b2:	1f 8e       	std	Y+31, r1	; 0x1f
    46b4:	1e 8e       	std	Y+30, r1	; 0x1e
    46b6:	1d 8e       	std	Y+29, r1	; 0x1d
	while(1)
	{
		SW_enumSwitchGetState(&SWITCH_AstrSwitchs[0],&x);
    46b8:	8a eb       	ldi	r24, 0xBA	; 186
    46ba:	90 e0       	ldi	r25, 0x00	; 0
    46bc:	9e 01       	movw	r18, r28
    46be:	21 5e       	subi	r18, 0xE1	; 225
    46c0:	3f 4f       	sbci	r19, 0xFF	; 255
    46c2:	b9 01       	movw	r22, r18
    46c4:	0e 94 12 23 	call	0x4624	; 0x4624 <SW_enumSwitchGetState>
		if (x==0)
    46c8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    46ca:	88 23       	and	r24, r24
    46cc:	79 f4       	brne	.+30     	; 0x46ec <main+0x6e>
    46ce:	08 c0       	rjmp	.+16     	; 0x46e0 <main+0x62>
		{
			while(x==0)
			{
				SW_enumSwitchGetState(&SWITCH_AstrSwitchs[0],&x);
    46d0:	8a eb       	ldi	r24, 0xBA	; 186
    46d2:	90 e0       	ldi	r25, 0x00	; 0
    46d4:	9e 01       	movw	r18, r28
    46d6:	21 5e       	subi	r18, 0xE1	; 225
    46d8:	3f 4f       	sbci	r19, 0xFF	; 255
    46da:	b9 01       	movw	r22, r18
    46dc:	0e 94 12 23 	call	0x4624	; 0x4624 <SW_enumSwitchGetState>
	while(1)
	{
		SW_enumSwitchGetState(&SWITCH_AstrSwitchs[0],&x);
		if (x==0)
		{
			while(x==0)
    46e0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    46e2:	88 23       	and	r24, r24
    46e4:	a9 f3       	breq	.-22     	; 0x46d0 <main+0x52>
			{
				SW_enumSwitchGetState(&SWITCH_AstrSwitchs[0],&x);
			}
			j++;
    46e6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46e8:	8f 5f       	subi	r24, 0xFF	; 255
    46ea:	8d 8f       	std	Y+29, r24	; 0x1d
		}
		if (j==10)
    46ec:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46ee:	8a 30       	cpi	r24, 0x0A	; 10
    46f0:	11 f4       	brne	.+4      	; 0x46f6 <main+0x78>
		{
			j='a';
    46f2:	81 e6       	ldi	r24, 0x61	; 97
    46f4:	8d 8f       	std	Y+29, r24	; 0x1d
		}
		if(j=='g')
    46f6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46f8:	87 36       	cpi	r24, 0x67	; 103
    46fa:	21 f4       	brne	.+8      	; 0x4704 <main+0x86>
		{
			i++;
    46fc:	8e 8d       	ldd	r24, Y+30	; 0x1e
    46fe:	8f 5f       	subi	r24, 0xFF	; 255
    4700:	8e 8f       	std	Y+30, r24	; 0x1e
			j=0;
    4702:	1d 8e       	std	Y+29, r1	; 0x1d
		}
		if(i==10)
    4704:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4706:	8a 30       	cpi	r24, 0x0A	; 10
    4708:	11 f4       	brne	.+4      	; 0x470e <main+0x90>
		{
			i='a';
    470a:	81 e6       	ldi	r24, 0x61	; 97
    470c:	8e 8f       	std	Y+30, r24	; 0x1e
		}
		if (i=='g')
    470e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4710:	87 36       	cpi	r24, 0x67	; 103
    4712:	11 f4       	brne	.+4      	; 0x4718 <main+0x9a>
		{
			i=0;
    4714:	1e 8e       	std	Y+30, r1	; 0x1e
			j=0;
    4716:	1d 8e       	std	Y+29, r1	; 0x1d
		}
		SEV_SEG_enumCMNDisable(0);
    4718:	80 e0       	ldi	r24, 0x00	; 0
    471a:	0e 94 15 1b 	call	0x362a	; 0x362a <SEV_SEG_enumCMNDisable>
		SEV_SEG_enumNUMDisplay(1,i);
    471e:	81 e0       	ldi	r24, 0x01	; 1
    4720:	6e 8d       	ldd	r22, Y+30	; 0x1e
    4722:	0e 94 a9 15 	call	0x2b52	; 0x2b52 <SEV_SEG_enumNUMDisplay>
		SEV_SEG_enumCMNEnable(1);
    4726:	81 e0       	ldi	r24, 0x01	; 1
    4728:	0e 94 0c 1a 	call	0x3418	; 0x3418 <SEV_SEG_enumCMNEnable>
    472c:	80 e0       	ldi	r24, 0x00	; 0
    472e:	90 e0       	ldi	r25, 0x00	; 0
    4730:	a0 e2       	ldi	r26, 0x20	; 32
    4732:	b1 e4       	ldi	r27, 0x41	; 65
    4734:	89 8f       	std	Y+25, r24	; 0x19
    4736:	9a 8f       	std	Y+26, r25	; 0x1a
    4738:	ab 8f       	std	Y+27, r26	; 0x1b
    473a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    473c:	69 8d       	ldd	r22, Y+25	; 0x19
    473e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4740:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4742:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4744:	20 e0       	ldi	r18, 0x00	; 0
    4746:	30 e0       	ldi	r19, 0x00	; 0
    4748:	4a e7       	ldi	r20, 0x7A	; 122
    474a:	53 e4       	ldi	r21, 0x43	; 67
    474c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4750:	dc 01       	movw	r26, r24
    4752:	cb 01       	movw	r24, r22
    4754:	8d 8b       	std	Y+21, r24	; 0x15
    4756:	9e 8b       	std	Y+22, r25	; 0x16
    4758:	af 8b       	std	Y+23, r26	; 0x17
    475a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    475c:	6d 89       	ldd	r22, Y+21	; 0x15
    475e:	7e 89       	ldd	r23, Y+22	; 0x16
    4760:	8f 89       	ldd	r24, Y+23	; 0x17
    4762:	98 8d       	ldd	r25, Y+24	; 0x18
    4764:	20 e0       	ldi	r18, 0x00	; 0
    4766:	30 e0       	ldi	r19, 0x00	; 0
    4768:	40 e8       	ldi	r20, 0x80	; 128
    476a:	5f e3       	ldi	r21, 0x3F	; 63
    476c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4770:	88 23       	and	r24, r24
    4772:	2c f4       	brge	.+10     	; 0x477e <main+0x100>
		__ticks = 1;
    4774:	81 e0       	ldi	r24, 0x01	; 1
    4776:	90 e0       	ldi	r25, 0x00	; 0
    4778:	9c 8b       	std	Y+20, r25	; 0x14
    477a:	8b 8b       	std	Y+19, r24	; 0x13
    477c:	3f c0       	rjmp	.+126    	; 0x47fc <main+0x17e>
	else if (__tmp > 65535)
    477e:	6d 89       	ldd	r22, Y+21	; 0x15
    4780:	7e 89       	ldd	r23, Y+22	; 0x16
    4782:	8f 89       	ldd	r24, Y+23	; 0x17
    4784:	98 8d       	ldd	r25, Y+24	; 0x18
    4786:	20 e0       	ldi	r18, 0x00	; 0
    4788:	3f ef       	ldi	r19, 0xFF	; 255
    478a:	4f e7       	ldi	r20, 0x7F	; 127
    478c:	57 e4       	ldi	r21, 0x47	; 71
    478e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4792:	18 16       	cp	r1, r24
    4794:	4c f5       	brge	.+82     	; 0x47e8 <main+0x16a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4796:	69 8d       	ldd	r22, Y+25	; 0x19
    4798:	7a 8d       	ldd	r23, Y+26	; 0x1a
    479a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    479c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    479e:	20 e0       	ldi	r18, 0x00	; 0
    47a0:	30 e0       	ldi	r19, 0x00	; 0
    47a2:	40 e2       	ldi	r20, 0x20	; 32
    47a4:	51 e4       	ldi	r21, 0x41	; 65
    47a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    47aa:	dc 01       	movw	r26, r24
    47ac:	cb 01       	movw	r24, r22
    47ae:	bc 01       	movw	r22, r24
    47b0:	cd 01       	movw	r24, r26
    47b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    47b6:	dc 01       	movw	r26, r24
    47b8:	cb 01       	movw	r24, r22
    47ba:	9c 8b       	std	Y+20, r25	; 0x14
    47bc:	8b 8b       	std	Y+19, r24	; 0x13
    47be:	0f c0       	rjmp	.+30     	; 0x47de <main+0x160>
    47c0:	89 e1       	ldi	r24, 0x19	; 25
    47c2:	90 e0       	ldi	r25, 0x00	; 0
    47c4:	9a 8b       	std	Y+18, r25	; 0x12
    47c6:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    47c8:	89 89       	ldd	r24, Y+17	; 0x11
    47ca:	9a 89       	ldd	r25, Y+18	; 0x12
    47cc:	01 97       	sbiw	r24, 0x01	; 1
    47ce:	f1 f7       	brne	.-4      	; 0x47cc <main+0x14e>
    47d0:	9a 8b       	std	Y+18, r25	; 0x12
    47d2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47d4:	8b 89       	ldd	r24, Y+19	; 0x13
    47d6:	9c 89       	ldd	r25, Y+20	; 0x14
    47d8:	01 97       	sbiw	r24, 0x01	; 1
    47da:	9c 8b       	std	Y+20, r25	; 0x14
    47dc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47de:	8b 89       	ldd	r24, Y+19	; 0x13
    47e0:	9c 89       	ldd	r25, Y+20	; 0x14
    47e2:	00 97       	sbiw	r24, 0x00	; 0
    47e4:	69 f7       	brne	.-38     	; 0x47c0 <main+0x142>
    47e6:	14 c0       	rjmp	.+40     	; 0x4810 <main+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47e8:	6d 89       	ldd	r22, Y+21	; 0x15
    47ea:	7e 89       	ldd	r23, Y+22	; 0x16
    47ec:	8f 89       	ldd	r24, Y+23	; 0x17
    47ee:	98 8d       	ldd	r25, Y+24	; 0x18
    47f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    47f4:	dc 01       	movw	r26, r24
    47f6:	cb 01       	movw	r24, r22
    47f8:	9c 8b       	std	Y+20, r25	; 0x14
    47fa:	8b 8b       	std	Y+19, r24	; 0x13
    47fc:	8b 89       	ldd	r24, Y+19	; 0x13
    47fe:	9c 89       	ldd	r25, Y+20	; 0x14
    4800:	98 8b       	std	Y+16, r25	; 0x10
    4802:	8f 87       	std	Y+15, r24	; 0x0f
    4804:	8f 85       	ldd	r24, Y+15	; 0x0f
    4806:	98 89       	ldd	r25, Y+16	; 0x10
    4808:	01 97       	sbiw	r24, 0x01	; 1
    480a:	f1 f7       	brne	.-4      	; 0x4808 <main+0x18a>
    480c:	98 8b       	std	Y+16, r25	; 0x10
    480e:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(10);
		SEV_SEG_enumCMNDisable(1);
    4810:	81 e0       	ldi	r24, 0x01	; 1
    4812:	0e 94 15 1b 	call	0x362a	; 0x362a <SEV_SEG_enumCMNDisable>
		SEV_SEG_enumNUMDisplay(0,j);
    4816:	80 e0       	ldi	r24, 0x00	; 0
    4818:	6d 8d       	ldd	r22, Y+29	; 0x1d
    481a:	0e 94 a9 15 	call	0x2b52	; 0x2b52 <SEV_SEG_enumNUMDisplay>
		SEV_SEG_enumCMNEnable(0);
    481e:	80 e0       	ldi	r24, 0x00	; 0
    4820:	0e 94 0c 1a 	call	0x3418	; 0x3418 <SEV_SEG_enumCMNEnable>
    4824:	80 e0       	ldi	r24, 0x00	; 0
    4826:	90 e0       	ldi	r25, 0x00	; 0
    4828:	a0 e2       	ldi	r26, 0x20	; 32
    482a:	b1 e4       	ldi	r27, 0x41	; 65
    482c:	8b 87       	std	Y+11, r24	; 0x0b
    482e:	9c 87       	std	Y+12, r25	; 0x0c
    4830:	ad 87       	std	Y+13, r26	; 0x0d
    4832:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4834:	6b 85       	ldd	r22, Y+11	; 0x0b
    4836:	7c 85       	ldd	r23, Y+12	; 0x0c
    4838:	8d 85       	ldd	r24, Y+13	; 0x0d
    483a:	9e 85       	ldd	r25, Y+14	; 0x0e
    483c:	20 e0       	ldi	r18, 0x00	; 0
    483e:	30 e0       	ldi	r19, 0x00	; 0
    4840:	4a e7       	ldi	r20, 0x7A	; 122
    4842:	53 e4       	ldi	r21, 0x43	; 67
    4844:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4848:	dc 01       	movw	r26, r24
    484a:	cb 01       	movw	r24, r22
    484c:	8f 83       	std	Y+7, r24	; 0x07
    484e:	98 87       	std	Y+8, r25	; 0x08
    4850:	a9 87       	std	Y+9, r26	; 0x09
    4852:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4854:	6f 81       	ldd	r22, Y+7	; 0x07
    4856:	78 85       	ldd	r23, Y+8	; 0x08
    4858:	89 85       	ldd	r24, Y+9	; 0x09
    485a:	9a 85       	ldd	r25, Y+10	; 0x0a
    485c:	20 e0       	ldi	r18, 0x00	; 0
    485e:	30 e0       	ldi	r19, 0x00	; 0
    4860:	40 e8       	ldi	r20, 0x80	; 128
    4862:	5f e3       	ldi	r21, 0x3F	; 63
    4864:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4868:	88 23       	and	r24, r24
    486a:	2c f4       	brge	.+10     	; 0x4876 <main+0x1f8>
		__ticks = 1;
    486c:	81 e0       	ldi	r24, 0x01	; 1
    486e:	90 e0       	ldi	r25, 0x00	; 0
    4870:	9e 83       	std	Y+6, r25	; 0x06
    4872:	8d 83       	std	Y+5, r24	; 0x05
    4874:	3f c0       	rjmp	.+126    	; 0x48f4 <main+0x276>
	else if (__tmp > 65535)
    4876:	6f 81       	ldd	r22, Y+7	; 0x07
    4878:	78 85       	ldd	r23, Y+8	; 0x08
    487a:	89 85       	ldd	r24, Y+9	; 0x09
    487c:	9a 85       	ldd	r25, Y+10	; 0x0a
    487e:	20 e0       	ldi	r18, 0x00	; 0
    4880:	3f ef       	ldi	r19, 0xFF	; 255
    4882:	4f e7       	ldi	r20, 0x7F	; 127
    4884:	57 e4       	ldi	r21, 0x47	; 71
    4886:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    488a:	18 16       	cp	r1, r24
    488c:	4c f5       	brge	.+82     	; 0x48e0 <main+0x262>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    488e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4890:	7c 85       	ldd	r23, Y+12	; 0x0c
    4892:	8d 85       	ldd	r24, Y+13	; 0x0d
    4894:	9e 85       	ldd	r25, Y+14	; 0x0e
    4896:	20 e0       	ldi	r18, 0x00	; 0
    4898:	30 e0       	ldi	r19, 0x00	; 0
    489a:	40 e2       	ldi	r20, 0x20	; 32
    489c:	51 e4       	ldi	r21, 0x41	; 65
    489e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    48a2:	dc 01       	movw	r26, r24
    48a4:	cb 01       	movw	r24, r22
    48a6:	bc 01       	movw	r22, r24
    48a8:	cd 01       	movw	r24, r26
    48aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    48ae:	dc 01       	movw	r26, r24
    48b0:	cb 01       	movw	r24, r22
    48b2:	9e 83       	std	Y+6, r25	; 0x06
    48b4:	8d 83       	std	Y+5, r24	; 0x05
    48b6:	0f c0       	rjmp	.+30     	; 0x48d6 <main+0x258>
    48b8:	89 e1       	ldi	r24, 0x19	; 25
    48ba:	90 e0       	ldi	r25, 0x00	; 0
    48bc:	9c 83       	std	Y+4, r25	; 0x04
    48be:	8b 83       	std	Y+3, r24	; 0x03
    48c0:	8b 81       	ldd	r24, Y+3	; 0x03
    48c2:	9c 81       	ldd	r25, Y+4	; 0x04
    48c4:	01 97       	sbiw	r24, 0x01	; 1
    48c6:	f1 f7       	brne	.-4      	; 0x48c4 <main+0x246>
    48c8:	9c 83       	std	Y+4, r25	; 0x04
    48ca:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48cc:	8d 81       	ldd	r24, Y+5	; 0x05
    48ce:	9e 81       	ldd	r25, Y+6	; 0x06
    48d0:	01 97       	sbiw	r24, 0x01	; 1
    48d2:	9e 83       	std	Y+6, r25	; 0x06
    48d4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48d6:	8d 81       	ldd	r24, Y+5	; 0x05
    48d8:	9e 81       	ldd	r25, Y+6	; 0x06
    48da:	00 97       	sbiw	r24, 0x00	; 0
    48dc:	69 f7       	brne	.-38     	; 0x48b8 <main+0x23a>
    48de:	ec ce       	rjmp	.-552    	; 0x46b8 <main+0x3a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48e0:	6f 81       	ldd	r22, Y+7	; 0x07
    48e2:	78 85       	ldd	r23, Y+8	; 0x08
    48e4:	89 85       	ldd	r24, Y+9	; 0x09
    48e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    48e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    48ec:	dc 01       	movw	r26, r24
    48ee:	cb 01       	movw	r24, r22
    48f0:	9e 83       	std	Y+6, r25	; 0x06
    48f2:	8d 83       	std	Y+5, r24	; 0x05
    48f4:	8d 81       	ldd	r24, Y+5	; 0x05
    48f6:	9e 81       	ldd	r25, Y+6	; 0x06
    48f8:	9a 83       	std	Y+2, r25	; 0x02
    48fa:	89 83       	std	Y+1, r24	; 0x01
    48fc:	89 81       	ldd	r24, Y+1	; 0x01
    48fe:	9a 81       	ldd	r25, Y+2	; 0x02
    4900:	01 97       	sbiw	r24, 0x01	; 1
    4902:	f1 f7       	brne	.-4      	; 0x4900 <main+0x282>
    4904:	9a 83       	std	Y+2, r25	; 0x02
    4906:	89 83       	std	Y+1, r24	; 0x01
    4908:	d7 ce       	rjmp	.-594    	; 0x46b8 <main+0x3a>

0000490a <__prologue_saves__>:
    490a:	2f 92       	push	r2
    490c:	3f 92       	push	r3
    490e:	4f 92       	push	r4
    4910:	5f 92       	push	r5
    4912:	6f 92       	push	r6
    4914:	7f 92       	push	r7
    4916:	8f 92       	push	r8
    4918:	9f 92       	push	r9
    491a:	af 92       	push	r10
    491c:	bf 92       	push	r11
    491e:	cf 92       	push	r12
    4920:	df 92       	push	r13
    4922:	ef 92       	push	r14
    4924:	ff 92       	push	r15
    4926:	0f 93       	push	r16
    4928:	1f 93       	push	r17
    492a:	cf 93       	push	r28
    492c:	df 93       	push	r29
    492e:	cd b7       	in	r28, 0x3d	; 61
    4930:	de b7       	in	r29, 0x3e	; 62
    4932:	ca 1b       	sub	r28, r26
    4934:	db 0b       	sbc	r29, r27
    4936:	0f b6       	in	r0, 0x3f	; 63
    4938:	f8 94       	cli
    493a:	de bf       	out	0x3e, r29	; 62
    493c:	0f be       	out	0x3f, r0	; 63
    493e:	cd bf       	out	0x3d, r28	; 61
    4940:	09 94       	ijmp

00004942 <__epilogue_restores__>:
    4942:	2a 88       	ldd	r2, Y+18	; 0x12
    4944:	39 88       	ldd	r3, Y+17	; 0x11
    4946:	48 88       	ldd	r4, Y+16	; 0x10
    4948:	5f 84       	ldd	r5, Y+15	; 0x0f
    494a:	6e 84       	ldd	r6, Y+14	; 0x0e
    494c:	7d 84       	ldd	r7, Y+13	; 0x0d
    494e:	8c 84       	ldd	r8, Y+12	; 0x0c
    4950:	9b 84       	ldd	r9, Y+11	; 0x0b
    4952:	aa 84       	ldd	r10, Y+10	; 0x0a
    4954:	b9 84       	ldd	r11, Y+9	; 0x09
    4956:	c8 84       	ldd	r12, Y+8	; 0x08
    4958:	df 80       	ldd	r13, Y+7	; 0x07
    495a:	ee 80       	ldd	r14, Y+6	; 0x06
    495c:	fd 80       	ldd	r15, Y+5	; 0x05
    495e:	0c 81       	ldd	r16, Y+4	; 0x04
    4960:	1b 81       	ldd	r17, Y+3	; 0x03
    4962:	aa 81       	ldd	r26, Y+2	; 0x02
    4964:	b9 81       	ldd	r27, Y+1	; 0x01
    4966:	ce 0f       	add	r28, r30
    4968:	d1 1d       	adc	r29, r1
    496a:	0f b6       	in	r0, 0x3f	; 63
    496c:	f8 94       	cli
    496e:	de bf       	out	0x3e, r29	; 62
    4970:	0f be       	out	0x3f, r0	; 63
    4972:	cd bf       	out	0x3d, r28	; 61
    4974:	ed 01       	movw	r28, r26
    4976:	08 95       	ret

00004978 <_exit>:
    4978:	f8 94       	cli

0000497a <__stop_program>:
    497a:	ff cf       	rjmp	.-2      	; 0x497a <__stop_program>
