
KEYPAD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005f88  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000017e  00800060  00005f88  00005ffc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00004068  00000000  00000000  0000617c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000169e  00000000  00000000  0000a1e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001a0  00000000  00000000  0000b882  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001f5  00000000  00000000  0000ba22  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002216  00000000  00000000  0000bc17  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000012b8  00000000  00000000  0000de2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001136  00000000  00000000  0000f0e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  0001021c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002d2  00000000  00000000  000103dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000095a  00000000  00000000  000106ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00011008  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e8       	ldi	r30, 0x88	; 136
      68:	ff e5       	ldi	r31, 0x5F	; 95
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 3d       	cpi	r26, 0xDE	; 222
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 25 2f 	call	0x5e4a	; 0x5e4a <main>
      7a:	0c 94 c2 2f 	jmp	0x5f84	; 0x5f84 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 8b 2f 	jmp	0x5f16	; 0x5f16 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 a7 2f 	jmp	0x5f4e	; 0x5f4e <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 97 2f 	jmp	0x5f2e	; 0x5f2e <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 1b 05 	call	0xa36	; 0xa36 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 b3 2f 	jmp	0x5f66	; 0x5f66 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 97 2f 	jmp	0x5f2e	; 0x5f2e <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 1b 05 	call	0xa36	; 0xa36 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 b3 2f 	jmp	0x5f66	; 0x5f66 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 8b 2f 	jmp	0x5f16	; 0x5f16 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 1b 05 	call	0xa36	; 0xa36 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 a7 2f 	jmp	0x5f4e	; 0x5f4e <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 97 2f 	jmp	0x5f2e	; 0x5f2e <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 b3 2f 	jmp	0x5f66	; 0x5f66 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 97 2f 	jmp	0x5f2e	; 0x5f2e <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 b3 2f 	jmp	0x5f66	; 0x5f66 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 97 2f 	jmp	0x5f2e	; 0x5f2e <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 b3 2f 	jmp	0x5f66	; 0x5f66 <__epilogue_restores__+0x18>

00000742 <__floatsisf>:
     742:	a8 e0       	ldi	r26, 0x08	; 8
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 94 2f 	jmp	0x5f28	; 0x5f28 <__prologue_saves__+0x12>
     74e:	9b 01       	movw	r18, r22
     750:	ac 01       	movw	r20, r24
     752:	83 e0       	ldi	r24, 0x03	; 3
     754:	89 83       	std	Y+1, r24	; 0x01
     756:	da 01       	movw	r26, r20
     758:	c9 01       	movw	r24, r18
     75a:	88 27       	eor	r24, r24
     75c:	b7 fd       	sbrc	r27, 7
     75e:	83 95       	inc	r24
     760:	99 27       	eor	r25, r25
     762:	aa 27       	eor	r26, r26
     764:	bb 27       	eor	r27, r27
     766:	b8 2e       	mov	r11, r24
     768:	21 15       	cp	r18, r1
     76a:	31 05       	cpc	r19, r1
     76c:	41 05       	cpc	r20, r1
     76e:	51 05       	cpc	r21, r1
     770:	19 f4       	brne	.+6      	; 0x778 <__floatsisf+0x36>
     772:	82 e0       	ldi	r24, 0x02	; 2
     774:	89 83       	std	Y+1, r24	; 0x01
     776:	3a c0       	rjmp	.+116    	; 0x7ec <__floatsisf+0xaa>
     778:	88 23       	and	r24, r24
     77a:	a9 f0       	breq	.+42     	; 0x7a6 <__floatsisf+0x64>
     77c:	20 30       	cpi	r18, 0x00	; 0
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	38 07       	cpc	r19, r24
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	48 07       	cpc	r20, r24
     786:	80 e8       	ldi	r24, 0x80	; 128
     788:	58 07       	cpc	r21, r24
     78a:	29 f4       	brne	.+10     	; 0x796 <__floatsisf+0x54>
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	80 e0       	ldi	r24, 0x00	; 0
     792:	9f ec       	ldi	r25, 0xCF	; 207
     794:	30 c0       	rjmp	.+96     	; 0x7f6 <__floatsisf+0xb4>
     796:	ee 24       	eor	r14, r14
     798:	ff 24       	eor	r15, r15
     79a:	87 01       	movw	r16, r14
     79c:	e2 1a       	sub	r14, r18
     79e:	f3 0a       	sbc	r15, r19
     7a0:	04 0b       	sbc	r16, r20
     7a2:	15 0b       	sbc	r17, r21
     7a4:	02 c0       	rjmp	.+4      	; 0x7aa <__floatsisf+0x68>
     7a6:	79 01       	movw	r14, r18
     7a8:	8a 01       	movw	r16, r20
     7aa:	8e e1       	ldi	r24, 0x1E	; 30
     7ac:	c8 2e       	mov	r12, r24
     7ae:	d1 2c       	mov	r13, r1
     7b0:	dc 82       	std	Y+4, r13	; 0x04
     7b2:	cb 82       	std	Y+3, r12	; 0x03
     7b4:	ed 82       	std	Y+5, r14	; 0x05
     7b6:	fe 82       	std	Y+6, r15	; 0x06
     7b8:	0f 83       	std	Y+7, r16	; 0x07
     7ba:	18 87       	std	Y+8, r17	; 0x08
     7bc:	c8 01       	movw	r24, r16
     7be:	b7 01       	movw	r22, r14
     7c0:	0e 94 cc 04 	call	0x998	; 0x998 <__clzsi2>
     7c4:	01 97       	sbiw	r24, 0x01	; 1
     7c6:	18 16       	cp	r1, r24
     7c8:	19 06       	cpc	r1, r25
     7ca:	84 f4       	brge	.+32     	; 0x7ec <__floatsisf+0xaa>
     7cc:	08 2e       	mov	r0, r24
     7ce:	04 c0       	rjmp	.+8      	; 0x7d8 <__floatsisf+0x96>
     7d0:	ee 0c       	add	r14, r14
     7d2:	ff 1c       	adc	r15, r15
     7d4:	00 1f       	adc	r16, r16
     7d6:	11 1f       	adc	r17, r17
     7d8:	0a 94       	dec	r0
     7da:	d2 f7       	brpl	.-12     	; 0x7d0 <__floatsisf+0x8e>
     7dc:	ed 82       	std	Y+5, r14	; 0x05
     7de:	fe 82       	std	Y+6, r15	; 0x06
     7e0:	0f 83       	std	Y+7, r16	; 0x07
     7e2:	18 87       	std	Y+8, r17	; 0x08
     7e4:	c8 1a       	sub	r12, r24
     7e6:	d9 0a       	sbc	r13, r25
     7e8:	dc 82       	std	Y+4, r13	; 0x04
     7ea:	cb 82       	std	Y+3, r12	; 0x03
     7ec:	ba 82       	std	Y+2, r11	; 0x02
     7ee:	ce 01       	movw	r24, r28
     7f0:	01 96       	adiw	r24, 0x01	; 1
     7f2:	0e 94 1b 05 	call	0xa36	; 0xa36 <__pack_f>
     7f6:	28 96       	adiw	r28, 0x08	; 8
     7f8:	e9 e0       	ldi	r30, 0x09	; 9
     7fa:	0c 94 b0 2f 	jmp	0x5f60	; 0x5f60 <__epilogue_restores__+0x12>

000007fe <__fixsfsi>:
     7fe:	ac e0       	ldi	r26, 0x0C	; 12
     800:	b0 e0       	ldi	r27, 0x00	; 0
     802:	e5 e0       	ldi	r30, 0x05	; 5
     804:	f4 e0       	ldi	r31, 0x04	; 4
     806:	0c 94 9b 2f 	jmp	0x5f36	; 0x5f36 <__prologue_saves__+0x20>
     80a:	69 83       	std	Y+1, r22	; 0x01
     80c:	7a 83       	std	Y+2, r23	; 0x02
     80e:	8b 83       	std	Y+3, r24	; 0x03
     810:	9c 83       	std	Y+4, r25	; 0x04
     812:	ce 01       	movw	r24, r28
     814:	01 96       	adiw	r24, 0x01	; 1
     816:	be 01       	movw	r22, r28
     818:	6b 5f       	subi	r22, 0xFB	; 251
     81a:	7f 4f       	sbci	r23, 0xFF	; 255
     81c:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__unpack_f>
     820:	8d 81       	ldd	r24, Y+5	; 0x05
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	61 f1       	breq	.+88     	; 0x87e <__stack+0x1f>
     826:	82 30       	cpi	r24, 0x02	; 2
     828:	50 f1       	brcs	.+84     	; 0x87e <__stack+0x1f>
     82a:	84 30       	cpi	r24, 0x04	; 4
     82c:	21 f4       	brne	.+8      	; 0x836 <__fixsfsi+0x38>
     82e:	8e 81       	ldd	r24, Y+6	; 0x06
     830:	88 23       	and	r24, r24
     832:	51 f1       	breq	.+84     	; 0x888 <__stack+0x29>
     834:	2e c0       	rjmp	.+92     	; 0x892 <__stack+0x33>
     836:	2f 81       	ldd	r18, Y+7	; 0x07
     838:	38 85       	ldd	r19, Y+8	; 0x08
     83a:	37 fd       	sbrc	r19, 7
     83c:	20 c0       	rjmp	.+64     	; 0x87e <__stack+0x1f>
     83e:	6e 81       	ldd	r22, Y+6	; 0x06
     840:	2f 31       	cpi	r18, 0x1F	; 31
     842:	31 05       	cpc	r19, r1
     844:	1c f0       	brlt	.+6      	; 0x84c <__fixsfsi+0x4e>
     846:	66 23       	and	r22, r22
     848:	f9 f0       	breq	.+62     	; 0x888 <__stack+0x29>
     84a:	23 c0       	rjmp	.+70     	; 0x892 <__stack+0x33>
     84c:	8e e1       	ldi	r24, 0x1E	; 30
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	82 1b       	sub	r24, r18
     852:	93 0b       	sbc	r25, r19
     854:	29 85       	ldd	r18, Y+9	; 0x09
     856:	3a 85       	ldd	r19, Y+10	; 0x0a
     858:	4b 85       	ldd	r20, Y+11	; 0x0b
     85a:	5c 85       	ldd	r21, Y+12	; 0x0c
     85c:	04 c0       	rjmp	.+8      	; 0x866 <__stack+0x7>
     85e:	56 95       	lsr	r21
     860:	47 95       	ror	r20
     862:	37 95       	ror	r19
     864:	27 95       	ror	r18
     866:	8a 95       	dec	r24
     868:	d2 f7       	brpl	.-12     	; 0x85e <__fixsfsi+0x60>
     86a:	66 23       	and	r22, r22
     86c:	b1 f0       	breq	.+44     	; 0x89a <__stack+0x3b>
     86e:	50 95       	com	r21
     870:	40 95       	com	r20
     872:	30 95       	com	r19
     874:	21 95       	neg	r18
     876:	3f 4f       	sbci	r19, 0xFF	; 255
     878:	4f 4f       	sbci	r20, 0xFF	; 255
     87a:	5f 4f       	sbci	r21, 0xFF	; 255
     87c:	0e c0       	rjmp	.+28     	; 0x89a <__stack+0x3b>
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	40 e0       	ldi	r20, 0x00	; 0
     884:	50 e0       	ldi	r21, 0x00	; 0
     886:	09 c0       	rjmp	.+18     	; 0x89a <__stack+0x3b>
     888:	2f ef       	ldi	r18, 0xFF	; 255
     88a:	3f ef       	ldi	r19, 0xFF	; 255
     88c:	4f ef       	ldi	r20, 0xFF	; 255
     88e:	5f e7       	ldi	r21, 0x7F	; 127
     890:	04 c0       	rjmp	.+8      	; 0x89a <__stack+0x3b>
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	40 e0       	ldi	r20, 0x00	; 0
     898:	50 e8       	ldi	r21, 0x80	; 128
     89a:	b9 01       	movw	r22, r18
     89c:	ca 01       	movw	r24, r20
     89e:	2c 96       	adiw	r28, 0x0c	; 12
     8a0:	e2 e0       	ldi	r30, 0x02	; 2
     8a2:	0c 94 b7 2f 	jmp	0x5f6e	; 0x5f6e <__epilogue_restores__+0x20>

000008a6 <__floatunsisf>:
     8a6:	a8 e0       	ldi	r26, 0x08	; 8
     8a8:	b0 e0       	ldi	r27, 0x00	; 0
     8aa:	e9 e5       	ldi	r30, 0x59	; 89
     8ac:	f4 e0       	ldi	r31, 0x04	; 4
     8ae:	0c 94 93 2f 	jmp	0x5f26	; 0x5f26 <__prologue_saves__+0x10>
     8b2:	7b 01       	movw	r14, r22
     8b4:	8c 01       	movw	r16, r24
     8b6:	61 15       	cp	r22, r1
     8b8:	71 05       	cpc	r23, r1
     8ba:	81 05       	cpc	r24, r1
     8bc:	91 05       	cpc	r25, r1
     8be:	19 f4       	brne	.+6      	; 0x8c6 <__floatunsisf+0x20>
     8c0:	82 e0       	ldi	r24, 0x02	; 2
     8c2:	89 83       	std	Y+1, r24	; 0x01
     8c4:	60 c0       	rjmp	.+192    	; 0x986 <__floatunsisf+0xe0>
     8c6:	83 e0       	ldi	r24, 0x03	; 3
     8c8:	89 83       	std	Y+1, r24	; 0x01
     8ca:	8e e1       	ldi	r24, 0x1E	; 30
     8cc:	c8 2e       	mov	r12, r24
     8ce:	d1 2c       	mov	r13, r1
     8d0:	dc 82       	std	Y+4, r13	; 0x04
     8d2:	cb 82       	std	Y+3, r12	; 0x03
     8d4:	ed 82       	std	Y+5, r14	; 0x05
     8d6:	fe 82       	std	Y+6, r15	; 0x06
     8d8:	0f 83       	std	Y+7, r16	; 0x07
     8da:	18 87       	std	Y+8, r17	; 0x08
     8dc:	c8 01       	movw	r24, r16
     8de:	b7 01       	movw	r22, r14
     8e0:	0e 94 cc 04 	call	0x998	; 0x998 <__clzsi2>
     8e4:	fc 01       	movw	r30, r24
     8e6:	31 97       	sbiw	r30, 0x01	; 1
     8e8:	f7 ff       	sbrs	r31, 7
     8ea:	3b c0       	rjmp	.+118    	; 0x962 <__floatunsisf+0xbc>
     8ec:	22 27       	eor	r18, r18
     8ee:	33 27       	eor	r19, r19
     8f0:	2e 1b       	sub	r18, r30
     8f2:	3f 0b       	sbc	r19, r31
     8f4:	57 01       	movw	r10, r14
     8f6:	68 01       	movw	r12, r16
     8f8:	02 2e       	mov	r0, r18
     8fa:	04 c0       	rjmp	.+8      	; 0x904 <__floatunsisf+0x5e>
     8fc:	d6 94       	lsr	r13
     8fe:	c7 94       	ror	r12
     900:	b7 94       	ror	r11
     902:	a7 94       	ror	r10
     904:	0a 94       	dec	r0
     906:	d2 f7       	brpl	.-12     	; 0x8fc <__floatunsisf+0x56>
     908:	40 e0       	ldi	r20, 0x00	; 0
     90a:	50 e0       	ldi	r21, 0x00	; 0
     90c:	60 e0       	ldi	r22, 0x00	; 0
     90e:	70 e0       	ldi	r23, 0x00	; 0
     910:	81 e0       	ldi	r24, 0x01	; 1
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	a0 e0       	ldi	r26, 0x00	; 0
     916:	b0 e0       	ldi	r27, 0x00	; 0
     918:	04 c0       	rjmp	.+8      	; 0x922 <__floatunsisf+0x7c>
     91a:	88 0f       	add	r24, r24
     91c:	99 1f       	adc	r25, r25
     91e:	aa 1f       	adc	r26, r26
     920:	bb 1f       	adc	r27, r27
     922:	2a 95       	dec	r18
     924:	d2 f7       	brpl	.-12     	; 0x91a <__floatunsisf+0x74>
     926:	01 97       	sbiw	r24, 0x01	; 1
     928:	a1 09       	sbc	r26, r1
     92a:	b1 09       	sbc	r27, r1
     92c:	8e 21       	and	r24, r14
     92e:	9f 21       	and	r25, r15
     930:	a0 23       	and	r26, r16
     932:	b1 23       	and	r27, r17
     934:	00 97       	sbiw	r24, 0x00	; 0
     936:	a1 05       	cpc	r26, r1
     938:	b1 05       	cpc	r27, r1
     93a:	21 f0       	breq	.+8      	; 0x944 <__floatunsisf+0x9e>
     93c:	41 e0       	ldi	r20, 0x01	; 1
     93e:	50 e0       	ldi	r21, 0x00	; 0
     940:	60 e0       	ldi	r22, 0x00	; 0
     942:	70 e0       	ldi	r23, 0x00	; 0
     944:	4a 29       	or	r20, r10
     946:	5b 29       	or	r21, r11
     948:	6c 29       	or	r22, r12
     94a:	7d 29       	or	r23, r13
     94c:	4d 83       	std	Y+5, r20	; 0x05
     94e:	5e 83       	std	Y+6, r21	; 0x06
     950:	6f 83       	std	Y+7, r22	; 0x07
     952:	78 87       	std	Y+8, r23	; 0x08
     954:	8e e1       	ldi	r24, 0x1E	; 30
     956:	90 e0       	ldi	r25, 0x00	; 0
     958:	8e 1b       	sub	r24, r30
     95a:	9f 0b       	sbc	r25, r31
     95c:	9c 83       	std	Y+4, r25	; 0x04
     95e:	8b 83       	std	Y+3, r24	; 0x03
     960:	12 c0       	rjmp	.+36     	; 0x986 <__floatunsisf+0xe0>
     962:	30 97       	sbiw	r30, 0x00	; 0
     964:	81 f0       	breq	.+32     	; 0x986 <__floatunsisf+0xe0>
     966:	0e 2e       	mov	r0, r30
     968:	04 c0       	rjmp	.+8      	; 0x972 <__floatunsisf+0xcc>
     96a:	ee 0c       	add	r14, r14
     96c:	ff 1c       	adc	r15, r15
     96e:	00 1f       	adc	r16, r16
     970:	11 1f       	adc	r17, r17
     972:	0a 94       	dec	r0
     974:	d2 f7       	brpl	.-12     	; 0x96a <__floatunsisf+0xc4>
     976:	ed 82       	std	Y+5, r14	; 0x05
     978:	fe 82       	std	Y+6, r15	; 0x06
     97a:	0f 83       	std	Y+7, r16	; 0x07
     97c:	18 87       	std	Y+8, r17	; 0x08
     97e:	ce 1a       	sub	r12, r30
     980:	df 0a       	sbc	r13, r31
     982:	dc 82       	std	Y+4, r13	; 0x04
     984:	cb 82       	std	Y+3, r12	; 0x03
     986:	1a 82       	std	Y+2, r1	; 0x02
     988:	ce 01       	movw	r24, r28
     98a:	01 96       	adiw	r24, 0x01	; 1
     98c:	0e 94 1b 05 	call	0xa36	; 0xa36 <__pack_f>
     990:	28 96       	adiw	r28, 0x08	; 8
     992:	ea e0       	ldi	r30, 0x0A	; 10
     994:	0c 94 af 2f 	jmp	0x5f5e	; 0x5f5e <__epilogue_restores__+0x10>

00000998 <__clzsi2>:
     998:	ef 92       	push	r14
     99a:	ff 92       	push	r15
     99c:	0f 93       	push	r16
     99e:	1f 93       	push	r17
     9a0:	7b 01       	movw	r14, r22
     9a2:	8c 01       	movw	r16, r24
     9a4:	80 e0       	ldi	r24, 0x00	; 0
     9a6:	e8 16       	cp	r14, r24
     9a8:	80 e0       	ldi	r24, 0x00	; 0
     9aa:	f8 06       	cpc	r15, r24
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	08 07       	cpc	r16, r24
     9b0:	80 e0       	ldi	r24, 0x00	; 0
     9b2:	18 07       	cpc	r17, r24
     9b4:	88 f4       	brcc	.+34     	; 0x9d8 <__clzsi2+0x40>
     9b6:	8f ef       	ldi	r24, 0xFF	; 255
     9b8:	e8 16       	cp	r14, r24
     9ba:	f1 04       	cpc	r15, r1
     9bc:	01 05       	cpc	r16, r1
     9be:	11 05       	cpc	r17, r1
     9c0:	31 f0       	breq	.+12     	; 0x9ce <__clzsi2+0x36>
     9c2:	28 f0       	brcs	.+10     	; 0x9ce <__clzsi2+0x36>
     9c4:	88 e0       	ldi	r24, 0x08	; 8
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	a0 e0       	ldi	r26, 0x00	; 0
     9ca:	b0 e0       	ldi	r27, 0x00	; 0
     9cc:	17 c0       	rjmp	.+46     	; 0x9fc <__clzsi2+0x64>
     9ce:	80 e0       	ldi	r24, 0x00	; 0
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	a0 e0       	ldi	r26, 0x00	; 0
     9d4:	b0 e0       	ldi	r27, 0x00	; 0
     9d6:	12 c0       	rjmp	.+36     	; 0x9fc <__clzsi2+0x64>
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	e8 16       	cp	r14, r24
     9dc:	80 e0       	ldi	r24, 0x00	; 0
     9de:	f8 06       	cpc	r15, r24
     9e0:	80 e0       	ldi	r24, 0x00	; 0
     9e2:	08 07       	cpc	r16, r24
     9e4:	81 e0       	ldi	r24, 0x01	; 1
     9e6:	18 07       	cpc	r17, r24
     9e8:	28 f0       	brcs	.+10     	; 0x9f4 <__clzsi2+0x5c>
     9ea:	88 e1       	ldi	r24, 0x18	; 24
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	04 c0       	rjmp	.+8      	; 0x9fc <__clzsi2+0x64>
     9f4:	80 e1       	ldi	r24, 0x10	; 16
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	a0 e0       	ldi	r26, 0x00	; 0
     9fa:	b0 e0       	ldi	r27, 0x00	; 0
     9fc:	20 e2       	ldi	r18, 0x20	; 32
     9fe:	30 e0       	ldi	r19, 0x00	; 0
     a00:	40 e0       	ldi	r20, 0x00	; 0
     a02:	50 e0       	ldi	r21, 0x00	; 0
     a04:	28 1b       	sub	r18, r24
     a06:	39 0b       	sbc	r19, r25
     a08:	4a 0b       	sbc	r20, r26
     a0a:	5b 0b       	sbc	r21, r27
     a0c:	04 c0       	rjmp	.+8      	; 0xa16 <__clzsi2+0x7e>
     a0e:	16 95       	lsr	r17
     a10:	07 95       	ror	r16
     a12:	f7 94       	ror	r15
     a14:	e7 94       	ror	r14
     a16:	8a 95       	dec	r24
     a18:	d2 f7       	brpl	.-12     	; 0xa0e <__clzsi2+0x76>
     a1a:	f7 01       	movw	r30, r14
     a1c:	e8 59       	subi	r30, 0x98	; 152
     a1e:	ff 4f       	sbci	r31, 0xFF	; 255
     a20:	80 81       	ld	r24, Z
     a22:	28 1b       	sub	r18, r24
     a24:	31 09       	sbc	r19, r1
     a26:	41 09       	sbc	r20, r1
     a28:	51 09       	sbc	r21, r1
     a2a:	c9 01       	movw	r24, r18
     a2c:	1f 91       	pop	r17
     a2e:	0f 91       	pop	r16
     a30:	ff 90       	pop	r15
     a32:	ef 90       	pop	r14
     a34:	08 95       	ret

00000a36 <__pack_f>:
     a36:	df 92       	push	r13
     a38:	ef 92       	push	r14
     a3a:	ff 92       	push	r15
     a3c:	0f 93       	push	r16
     a3e:	1f 93       	push	r17
     a40:	fc 01       	movw	r30, r24
     a42:	e4 80       	ldd	r14, Z+4	; 0x04
     a44:	f5 80       	ldd	r15, Z+5	; 0x05
     a46:	06 81       	ldd	r16, Z+6	; 0x06
     a48:	17 81       	ldd	r17, Z+7	; 0x07
     a4a:	d1 80       	ldd	r13, Z+1	; 0x01
     a4c:	80 81       	ld	r24, Z
     a4e:	82 30       	cpi	r24, 0x02	; 2
     a50:	48 f4       	brcc	.+18     	; 0xa64 <__pack_f+0x2e>
     a52:	80 e0       	ldi	r24, 0x00	; 0
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	a0 e1       	ldi	r26, 0x10	; 16
     a58:	b0 e0       	ldi	r27, 0x00	; 0
     a5a:	e8 2a       	or	r14, r24
     a5c:	f9 2a       	or	r15, r25
     a5e:	0a 2b       	or	r16, r26
     a60:	1b 2b       	or	r17, r27
     a62:	a5 c0       	rjmp	.+330    	; 0xbae <__pack_f+0x178>
     a64:	84 30       	cpi	r24, 0x04	; 4
     a66:	09 f4       	brne	.+2      	; 0xa6a <__pack_f+0x34>
     a68:	9f c0       	rjmp	.+318    	; 0xba8 <__pack_f+0x172>
     a6a:	82 30       	cpi	r24, 0x02	; 2
     a6c:	21 f4       	brne	.+8      	; 0xa76 <__pack_f+0x40>
     a6e:	ee 24       	eor	r14, r14
     a70:	ff 24       	eor	r15, r15
     a72:	87 01       	movw	r16, r14
     a74:	05 c0       	rjmp	.+10     	; 0xa80 <__pack_f+0x4a>
     a76:	e1 14       	cp	r14, r1
     a78:	f1 04       	cpc	r15, r1
     a7a:	01 05       	cpc	r16, r1
     a7c:	11 05       	cpc	r17, r1
     a7e:	19 f4       	brne	.+6      	; 0xa86 <__pack_f+0x50>
     a80:	e0 e0       	ldi	r30, 0x00	; 0
     a82:	f0 e0       	ldi	r31, 0x00	; 0
     a84:	96 c0       	rjmp	.+300    	; 0xbb2 <__pack_f+0x17c>
     a86:	62 81       	ldd	r22, Z+2	; 0x02
     a88:	73 81       	ldd	r23, Z+3	; 0x03
     a8a:	9f ef       	ldi	r25, 0xFF	; 255
     a8c:	62 38       	cpi	r22, 0x82	; 130
     a8e:	79 07       	cpc	r23, r25
     a90:	0c f0       	brlt	.+2      	; 0xa94 <__pack_f+0x5e>
     a92:	5b c0       	rjmp	.+182    	; 0xb4a <__pack_f+0x114>
     a94:	22 e8       	ldi	r18, 0x82	; 130
     a96:	3f ef       	ldi	r19, 0xFF	; 255
     a98:	26 1b       	sub	r18, r22
     a9a:	37 0b       	sbc	r19, r23
     a9c:	2a 31       	cpi	r18, 0x1A	; 26
     a9e:	31 05       	cpc	r19, r1
     aa0:	2c f0       	brlt	.+10     	; 0xaac <__pack_f+0x76>
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	40 e0       	ldi	r20, 0x00	; 0
     aa8:	50 e0       	ldi	r21, 0x00	; 0
     aaa:	2a c0       	rjmp	.+84     	; 0xb00 <__pack_f+0xca>
     aac:	b8 01       	movw	r22, r16
     aae:	a7 01       	movw	r20, r14
     ab0:	02 2e       	mov	r0, r18
     ab2:	04 c0       	rjmp	.+8      	; 0xabc <__pack_f+0x86>
     ab4:	76 95       	lsr	r23
     ab6:	67 95       	ror	r22
     ab8:	57 95       	ror	r21
     aba:	47 95       	ror	r20
     abc:	0a 94       	dec	r0
     abe:	d2 f7       	brpl	.-12     	; 0xab4 <__pack_f+0x7e>
     ac0:	81 e0       	ldi	r24, 0x01	; 1
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	a0 e0       	ldi	r26, 0x00	; 0
     ac6:	b0 e0       	ldi	r27, 0x00	; 0
     ac8:	04 c0       	rjmp	.+8      	; 0xad2 <__pack_f+0x9c>
     aca:	88 0f       	add	r24, r24
     acc:	99 1f       	adc	r25, r25
     ace:	aa 1f       	adc	r26, r26
     ad0:	bb 1f       	adc	r27, r27
     ad2:	2a 95       	dec	r18
     ad4:	d2 f7       	brpl	.-12     	; 0xaca <__pack_f+0x94>
     ad6:	01 97       	sbiw	r24, 0x01	; 1
     ad8:	a1 09       	sbc	r26, r1
     ada:	b1 09       	sbc	r27, r1
     adc:	8e 21       	and	r24, r14
     ade:	9f 21       	and	r25, r15
     ae0:	a0 23       	and	r26, r16
     ae2:	b1 23       	and	r27, r17
     ae4:	00 97       	sbiw	r24, 0x00	; 0
     ae6:	a1 05       	cpc	r26, r1
     ae8:	b1 05       	cpc	r27, r1
     aea:	21 f0       	breq	.+8      	; 0xaf4 <__pack_f+0xbe>
     aec:	81 e0       	ldi	r24, 0x01	; 1
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	a0 e0       	ldi	r26, 0x00	; 0
     af2:	b0 e0       	ldi	r27, 0x00	; 0
     af4:	9a 01       	movw	r18, r20
     af6:	ab 01       	movw	r20, r22
     af8:	28 2b       	or	r18, r24
     afa:	39 2b       	or	r19, r25
     afc:	4a 2b       	or	r20, r26
     afe:	5b 2b       	or	r21, r27
     b00:	da 01       	movw	r26, r20
     b02:	c9 01       	movw	r24, r18
     b04:	8f 77       	andi	r24, 0x7F	; 127
     b06:	90 70       	andi	r25, 0x00	; 0
     b08:	a0 70       	andi	r26, 0x00	; 0
     b0a:	b0 70       	andi	r27, 0x00	; 0
     b0c:	80 34       	cpi	r24, 0x40	; 64
     b0e:	91 05       	cpc	r25, r1
     b10:	a1 05       	cpc	r26, r1
     b12:	b1 05       	cpc	r27, r1
     b14:	39 f4       	brne	.+14     	; 0xb24 <__pack_f+0xee>
     b16:	27 ff       	sbrs	r18, 7
     b18:	09 c0       	rjmp	.+18     	; 0xb2c <__pack_f+0xf6>
     b1a:	20 5c       	subi	r18, 0xC0	; 192
     b1c:	3f 4f       	sbci	r19, 0xFF	; 255
     b1e:	4f 4f       	sbci	r20, 0xFF	; 255
     b20:	5f 4f       	sbci	r21, 0xFF	; 255
     b22:	04 c0       	rjmp	.+8      	; 0xb2c <__pack_f+0xf6>
     b24:	21 5c       	subi	r18, 0xC1	; 193
     b26:	3f 4f       	sbci	r19, 0xFF	; 255
     b28:	4f 4f       	sbci	r20, 0xFF	; 255
     b2a:	5f 4f       	sbci	r21, 0xFF	; 255
     b2c:	e0 e0       	ldi	r30, 0x00	; 0
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	20 30       	cpi	r18, 0x00	; 0
     b32:	a0 e0       	ldi	r26, 0x00	; 0
     b34:	3a 07       	cpc	r19, r26
     b36:	a0 e0       	ldi	r26, 0x00	; 0
     b38:	4a 07       	cpc	r20, r26
     b3a:	a0 e4       	ldi	r26, 0x40	; 64
     b3c:	5a 07       	cpc	r21, r26
     b3e:	10 f0       	brcs	.+4      	; 0xb44 <__pack_f+0x10e>
     b40:	e1 e0       	ldi	r30, 0x01	; 1
     b42:	f0 e0       	ldi	r31, 0x00	; 0
     b44:	79 01       	movw	r14, r18
     b46:	8a 01       	movw	r16, r20
     b48:	27 c0       	rjmp	.+78     	; 0xb98 <__pack_f+0x162>
     b4a:	60 38       	cpi	r22, 0x80	; 128
     b4c:	71 05       	cpc	r23, r1
     b4e:	64 f5       	brge	.+88     	; 0xba8 <__pack_f+0x172>
     b50:	fb 01       	movw	r30, r22
     b52:	e1 58       	subi	r30, 0x81	; 129
     b54:	ff 4f       	sbci	r31, 0xFF	; 255
     b56:	d8 01       	movw	r26, r16
     b58:	c7 01       	movw	r24, r14
     b5a:	8f 77       	andi	r24, 0x7F	; 127
     b5c:	90 70       	andi	r25, 0x00	; 0
     b5e:	a0 70       	andi	r26, 0x00	; 0
     b60:	b0 70       	andi	r27, 0x00	; 0
     b62:	80 34       	cpi	r24, 0x40	; 64
     b64:	91 05       	cpc	r25, r1
     b66:	a1 05       	cpc	r26, r1
     b68:	b1 05       	cpc	r27, r1
     b6a:	39 f4       	brne	.+14     	; 0xb7a <__pack_f+0x144>
     b6c:	e7 fe       	sbrs	r14, 7
     b6e:	0d c0       	rjmp	.+26     	; 0xb8a <__pack_f+0x154>
     b70:	80 e4       	ldi	r24, 0x40	; 64
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	a0 e0       	ldi	r26, 0x00	; 0
     b76:	b0 e0       	ldi	r27, 0x00	; 0
     b78:	04 c0       	rjmp	.+8      	; 0xb82 <__pack_f+0x14c>
     b7a:	8f e3       	ldi	r24, 0x3F	; 63
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	a0 e0       	ldi	r26, 0x00	; 0
     b80:	b0 e0       	ldi	r27, 0x00	; 0
     b82:	e8 0e       	add	r14, r24
     b84:	f9 1e       	adc	r15, r25
     b86:	0a 1f       	adc	r16, r26
     b88:	1b 1f       	adc	r17, r27
     b8a:	17 ff       	sbrs	r17, 7
     b8c:	05 c0       	rjmp	.+10     	; 0xb98 <__pack_f+0x162>
     b8e:	16 95       	lsr	r17
     b90:	07 95       	ror	r16
     b92:	f7 94       	ror	r15
     b94:	e7 94       	ror	r14
     b96:	31 96       	adiw	r30, 0x01	; 1
     b98:	87 e0       	ldi	r24, 0x07	; 7
     b9a:	16 95       	lsr	r17
     b9c:	07 95       	ror	r16
     b9e:	f7 94       	ror	r15
     ba0:	e7 94       	ror	r14
     ba2:	8a 95       	dec	r24
     ba4:	d1 f7       	brne	.-12     	; 0xb9a <__pack_f+0x164>
     ba6:	05 c0       	rjmp	.+10     	; 0xbb2 <__pack_f+0x17c>
     ba8:	ee 24       	eor	r14, r14
     baa:	ff 24       	eor	r15, r15
     bac:	87 01       	movw	r16, r14
     bae:	ef ef       	ldi	r30, 0xFF	; 255
     bb0:	f0 e0       	ldi	r31, 0x00	; 0
     bb2:	6e 2f       	mov	r22, r30
     bb4:	67 95       	ror	r22
     bb6:	66 27       	eor	r22, r22
     bb8:	67 95       	ror	r22
     bba:	90 2f       	mov	r25, r16
     bbc:	9f 77       	andi	r25, 0x7F	; 127
     bbe:	d7 94       	ror	r13
     bc0:	dd 24       	eor	r13, r13
     bc2:	d7 94       	ror	r13
     bc4:	8e 2f       	mov	r24, r30
     bc6:	86 95       	lsr	r24
     bc8:	49 2f       	mov	r20, r25
     bca:	46 2b       	or	r20, r22
     bcc:	58 2f       	mov	r21, r24
     bce:	5d 29       	or	r21, r13
     bd0:	b7 01       	movw	r22, r14
     bd2:	ca 01       	movw	r24, r20
     bd4:	1f 91       	pop	r17
     bd6:	0f 91       	pop	r16
     bd8:	ff 90       	pop	r15
     bda:	ef 90       	pop	r14
     bdc:	df 90       	pop	r13
     bde:	08 95       	ret

00000be0 <__unpack_f>:
     be0:	fc 01       	movw	r30, r24
     be2:	db 01       	movw	r26, r22
     be4:	40 81       	ld	r20, Z
     be6:	51 81       	ldd	r21, Z+1	; 0x01
     be8:	22 81       	ldd	r18, Z+2	; 0x02
     bea:	62 2f       	mov	r22, r18
     bec:	6f 77       	andi	r22, 0x7F	; 127
     bee:	70 e0       	ldi	r23, 0x00	; 0
     bf0:	22 1f       	adc	r18, r18
     bf2:	22 27       	eor	r18, r18
     bf4:	22 1f       	adc	r18, r18
     bf6:	93 81       	ldd	r25, Z+3	; 0x03
     bf8:	89 2f       	mov	r24, r25
     bfa:	88 0f       	add	r24, r24
     bfc:	82 2b       	or	r24, r18
     bfe:	28 2f       	mov	r18, r24
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	99 1f       	adc	r25, r25
     c04:	99 27       	eor	r25, r25
     c06:	99 1f       	adc	r25, r25
     c08:	11 96       	adiw	r26, 0x01	; 1
     c0a:	9c 93       	st	X, r25
     c0c:	11 97       	sbiw	r26, 0x01	; 1
     c0e:	21 15       	cp	r18, r1
     c10:	31 05       	cpc	r19, r1
     c12:	a9 f5       	brne	.+106    	; 0xc7e <__unpack_f+0x9e>
     c14:	41 15       	cp	r20, r1
     c16:	51 05       	cpc	r21, r1
     c18:	61 05       	cpc	r22, r1
     c1a:	71 05       	cpc	r23, r1
     c1c:	11 f4       	brne	.+4      	; 0xc22 <__unpack_f+0x42>
     c1e:	82 e0       	ldi	r24, 0x02	; 2
     c20:	37 c0       	rjmp	.+110    	; 0xc90 <__unpack_f+0xb0>
     c22:	82 e8       	ldi	r24, 0x82	; 130
     c24:	9f ef       	ldi	r25, 0xFF	; 255
     c26:	13 96       	adiw	r26, 0x03	; 3
     c28:	9c 93       	st	X, r25
     c2a:	8e 93       	st	-X, r24
     c2c:	12 97       	sbiw	r26, 0x02	; 2
     c2e:	9a 01       	movw	r18, r20
     c30:	ab 01       	movw	r20, r22
     c32:	67 e0       	ldi	r22, 0x07	; 7
     c34:	22 0f       	add	r18, r18
     c36:	33 1f       	adc	r19, r19
     c38:	44 1f       	adc	r20, r20
     c3a:	55 1f       	adc	r21, r21
     c3c:	6a 95       	dec	r22
     c3e:	d1 f7       	brne	.-12     	; 0xc34 <__unpack_f+0x54>
     c40:	83 e0       	ldi	r24, 0x03	; 3
     c42:	8c 93       	st	X, r24
     c44:	0d c0       	rjmp	.+26     	; 0xc60 <__unpack_f+0x80>
     c46:	22 0f       	add	r18, r18
     c48:	33 1f       	adc	r19, r19
     c4a:	44 1f       	adc	r20, r20
     c4c:	55 1f       	adc	r21, r21
     c4e:	12 96       	adiw	r26, 0x02	; 2
     c50:	8d 91       	ld	r24, X+
     c52:	9c 91       	ld	r25, X
     c54:	13 97       	sbiw	r26, 0x03	; 3
     c56:	01 97       	sbiw	r24, 0x01	; 1
     c58:	13 96       	adiw	r26, 0x03	; 3
     c5a:	9c 93       	st	X, r25
     c5c:	8e 93       	st	-X, r24
     c5e:	12 97       	sbiw	r26, 0x02	; 2
     c60:	20 30       	cpi	r18, 0x00	; 0
     c62:	80 e0       	ldi	r24, 0x00	; 0
     c64:	38 07       	cpc	r19, r24
     c66:	80 e0       	ldi	r24, 0x00	; 0
     c68:	48 07       	cpc	r20, r24
     c6a:	80 e4       	ldi	r24, 0x40	; 64
     c6c:	58 07       	cpc	r21, r24
     c6e:	58 f3       	brcs	.-42     	; 0xc46 <__unpack_f+0x66>
     c70:	14 96       	adiw	r26, 0x04	; 4
     c72:	2d 93       	st	X+, r18
     c74:	3d 93       	st	X+, r19
     c76:	4d 93       	st	X+, r20
     c78:	5c 93       	st	X, r21
     c7a:	17 97       	sbiw	r26, 0x07	; 7
     c7c:	08 95       	ret
     c7e:	2f 3f       	cpi	r18, 0xFF	; 255
     c80:	31 05       	cpc	r19, r1
     c82:	79 f4       	brne	.+30     	; 0xca2 <__unpack_f+0xc2>
     c84:	41 15       	cp	r20, r1
     c86:	51 05       	cpc	r21, r1
     c88:	61 05       	cpc	r22, r1
     c8a:	71 05       	cpc	r23, r1
     c8c:	19 f4       	brne	.+6      	; 0xc94 <__unpack_f+0xb4>
     c8e:	84 e0       	ldi	r24, 0x04	; 4
     c90:	8c 93       	st	X, r24
     c92:	08 95       	ret
     c94:	64 ff       	sbrs	r22, 4
     c96:	03 c0       	rjmp	.+6      	; 0xc9e <__unpack_f+0xbe>
     c98:	81 e0       	ldi	r24, 0x01	; 1
     c9a:	8c 93       	st	X, r24
     c9c:	12 c0       	rjmp	.+36     	; 0xcc2 <__unpack_f+0xe2>
     c9e:	1c 92       	st	X, r1
     ca0:	10 c0       	rjmp	.+32     	; 0xcc2 <__unpack_f+0xe2>
     ca2:	2f 57       	subi	r18, 0x7F	; 127
     ca4:	30 40       	sbci	r19, 0x00	; 0
     ca6:	13 96       	adiw	r26, 0x03	; 3
     ca8:	3c 93       	st	X, r19
     caa:	2e 93       	st	-X, r18
     cac:	12 97       	sbiw	r26, 0x02	; 2
     cae:	83 e0       	ldi	r24, 0x03	; 3
     cb0:	8c 93       	st	X, r24
     cb2:	87 e0       	ldi	r24, 0x07	; 7
     cb4:	44 0f       	add	r20, r20
     cb6:	55 1f       	adc	r21, r21
     cb8:	66 1f       	adc	r22, r22
     cba:	77 1f       	adc	r23, r23
     cbc:	8a 95       	dec	r24
     cbe:	d1 f7       	brne	.-12     	; 0xcb4 <__unpack_f+0xd4>
     cc0:	70 64       	ori	r23, 0x40	; 64
     cc2:	14 96       	adiw	r26, 0x04	; 4
     cc4:	4d 93       	st	X+, r20
     cc6:	5d 93       	st	X+, r21
     cc8:	6d 93       	st	X+, r22
     cca:	7c 93       	st	X, r23
     ccc:	17 97       	sbiw	r26, 0x07	; 7
     cce:	08 95       	ret

00000cd0 <__fpcmp_parts_f>:
     cd0:	1f 93       	push	r17
     cd2:	dc 01       	movw	r26, r24
     cd4:	fb 01       	movw	r30, r22
     cd6:	9c 91       	ld	r25, X
     cd8:	92 30       	cpi	r25, 0x02	; 2
     cda:	08 f4       	brcc	.+2      	; 0xcde <__fpcmp_parts_f+0xe>
     cdc:	47 c0       	rjmp	.+142    	; 0xd6c <__fpcmp_parts_f+0x9c>
     cde:	80 81       	ld	r24, Z
     ce0:	82 30       	cpi	r24, 0x02	; 2
     ce2:	08 f4       	brcc	.+2      	; 0xce6 <__fpcmp_parts_f+0x16>
     ce4:	43 c0       	rjmp	.+134    	; 0xd6c <__fpcmp_parts_f+0x9c>
     ce6:	94 30       	cpi	r25, 0x04	; 4
     ce8:	51 f4       	brne	.+20     	; 0xcfe <__fpcmp_parts_f+0x2e>
     cea:	11 96       	adiw	r26, 0x01	; 1
     cec:	1c 91       	ld	r17, X
     cee:	84 30       	cpi	r24, 0x04	; 4
     cf0:	99 f5       	brne	.+102    	; 0xd58 <__fpcmp_parts_f+0x88>
     cf2:	81 81       	ldd	r24, Z+1	; 0x01
     cf4:	68 2f       	mov	r22, r24
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	61 1b       	sub	r22, r17
     cfa:	71 09       	sbc	r23, r1
     cfc:	3f c0       	rjmp	.+126    	; 0xd7c <__fpcmp_parts_f+0xac>
     cfe:	84 30       	cpi	r24, 0x04	; 4
     d00:	21 f0       	breq	.+8      	; 0xd0a <__fpcmp_parts_f+0x3a>
     d02:	92 30       	cpi	r25, 0x02	; 2
     d04:	31 f4       	brne	.+12     	; 0xd12 <__fpcmp_parts_f+0x42>
     d06:	82 30       	cpi	r24, 0x02	; 2
     d08:	b9 f1       	breq	.+110    	; 0xd78 <__fpcmp_parts_f+0xa8>
     d0a:	81 81       	ldd	r24, Z+1	; 0x01
     d0c:	88 23       	and	r24, r24
     d0e:	89 f1       	breq	.+98     	; 0xd72 <__fpcmp_parts_f+0xa2>
     d10:	2d c0       	rjmp	.+90     	; 0xd6c <__fpcmp_parts_f+0x9c>
     d12:	11 96       	adiw	r26, 0x01	; 1
     d14:	1c 91       	ld	r17, X
     d16:	11 97       	sbiw	r26, 0x01	; 1
     d18:	82 30       	cpi	r24, 0x02	; 2
     d1a:	f1 f0       	breq	.+60     	; 0xd58 <__fpcmp_parts_f+0x88>
     d1c:	81 81       	ldd	r24, Z+1	; 0x01
     d1e:	18 17       	cp	r17, r24
     d20:	d9 f4       	brne	.+54     	; 0xd58 <__fpcmp_parts_f+0x88>
     d22:	12 96       	adiw	r26, 0x02	; 2
     d24:	2d 91       	ld	r18, X+
     d26:	3c 91       	ld	r19, X
     d28:	13 97       	sbiw	r26, 0x03	; 3
     d2a:	82 81       	ldd	r24, Z+2	; 0x02
     d2c:	93 81       	ldd	r25, Z+3	; 0x03
     d2e:	82 17       	cp	r24, r18
     d30:	93 07       	cpc	r25, r19
     d32:	94 f0       	brlt	.+36     	; 0xd58 <__fpcmp_parts_f+0x88>
     d34:	28 17       	cp	r18, r24
     d36:	39 07       	cpc	r19, r25
     d38:	bc f0       	brlt	.+46     	; 0xd68 <__fpcmp_parts_f+0x98>
     d3a:	14 96       	adiw	r26, 0x04	; 4
     d3c:	8d 91       	ld	r24, X+
     d3e:	9d 91       	ld	r25, X+
     d40:	0d 90       	ld	r0, X+
     d42:	bc 91       	ld	r27, X
     d44:	a0 2d       	mov	r26, r0
     d46:	24 81       	ldd	r18, Z+4	; 0x04
     d48:	35 81       	ldd	r19, Z+5	; 0x05
     d4a:	46 81       	ldd	r20, Z+6	; 0x06
     d4c:	57 81       	ldd	r21, Z+7	; 0x07
     d4e:	28 17       	cp	r18, r24
     d50:	39 07       	cpc	r19, r25
     d52:	4a 07       	cpc	r20, r26
     d54:	5b 07       	cpc	r21, r27
     d56:	18 f4       	brcc	.+6      	; 0xd5e <__fpcmp_parts_f+0x8e>
     d58:	11 23       	and	r17, r17
     d5a:	41 f0       	breq	.+16     	; 0xd6c <__fpcmp_parts_f+0x9c>
     d5c:	0a c0       	rjmp	.+20     	; 0xd72 <__fpcmp_parts_f+0xa2>
     d5e:	82 17       	cp	r24, r18
     d60:	93 07       	cpc	r25, r19
     d62:	a4 07       	cpc	r26, r20
     d64:	b5 07       	cpc	r27, r21
     d66:	40 f4       	brcc	.+16     	; 0xd78 <__fpcmp_parts_f+0xa8>
     d68:	11 23       	and	r17, r17
     d6a:	19 f0       	breq	.+6      	; 0xd72 <__fpcmp_parts_f+0xa2>
     d6c:	61 e0       	ldi	r22, 0x01	; 1
     d6e:	70 e0       	ldi	r23, 0x00	; 0
     d70:	05 c0       	rjmp	.+10     	; 0xd7c <__fpcmp_parts_f+0xac>
     d72:	6f ef       	ldi	r22, 0xFF	; 255
     d74:	7f ef       	ldi	r23, 0xFF	; 255
     d76:	02 c0       	rjmp	.+4      	; 0xd7c <__fpcmp_parts_f+0xac>
     d78:	60 e0       	ldi	r22, 0x00	; 0
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	cb 01       	movw	r24, r22
     d7e:	1f 91       	pop	r17
     d80:	08 95       	ret

00000d82 <DIO_enumPortInit>:
#include "../include/MCAL/DIO/DIO_config.h"



ES_T DIO_enumPortInit (void)
{
     d82:	df 93       	push	r29
     d84:	cf 93       	push	r28
     d86:	0f 92       	push	r0
     d88:	cd b7       	in	r28, 0x3d	; 61
     d8a:	de b7       	in	r29, 0x3e	; 62
	ES_T Local_enumErrorState=ES_NOK;
     d8c:	19 82       	std	Y+1, r1	; 0x01

	DDRA=CONC(PA_PIN7_DIR,PA_PIN6_DIR,PA_PIN5_DIR,PA_PIN4_DIR,PA_PIN3_DIR,PA_PIN2_DIR,PA_PIN1_DIR,PA_PIN0_DIR);
     d8e:	ea e3       	ldi	r30, 0x3A	; 58
     d90:	f0 e0       	ldi	r31, 0x00	; 0
     d92:	8f ef       	ldi	r24, 0xFF	; 255
     d94:	80 83       	st	Z, r24
	DDRB=CONC(PB_PIN7_DIR,PB_PIN6_DIR,PB_PIN5_DIR,PB_PIN4_DIR,PB_PIN3_DIR,PB_PIN2_DIR,PB_PIN1_DIR,PB_PIN0_DIR);
     d96:	e7 e3       	ldi	r30, 0x37	; 55
     d98:	f0 e0       	ldi	r31, 0x00	; 0
     d9a:	8f ef       	ldi	r24, 0xFF	; 255
     d9c:	80 83       	st	Z, r24
	DDRC=CONC(PC_PIN7_DIR,PC_PIN6_DIR,PC_PIN5_DIR,PC_PIN4_DIR,PC_PIN3_DIR,PC_PIN2_DIR,PC_PIN1_DIR,PC_PIN0_DIR);
     d9e:	e4 e3       	ldi	r30, 0x34	; 52
     da0:	f0 e0       	ldi	r31, 0x00	; 0
     da2:	8f ef       	ldi	r24, 0xFF	; 255
     da4:	80 83       	st	Z, r24
	DDRD=CONC(PD_PIN7_DIR,PD_PIN6_DIR,PD_PIN5_DIR,PD_PIN4_DIR,PD_PIN3_DIR,PD_PIN2_DIR,PD_PIN1_DIR,PD_PIN0_DIR);
     da6:	e1 e3       	ldi	r30, 0x31	; 49
     da8:	f0 e0       	ldi	r31, 0x00	; 0
     daa:	8f ef       	ldi	r24, 0xFF	; 255
     dac:	80 83       	st	Z, r24

	PORTA=CONC(PA_PIN7_VAL,PA_PIN6_VAL,PA_PIN5_VAL,PA_PIN4_VAL,PA_PIN3_VAL,PA_PIN2_VAL,PA_PIN1_VAL,PA_PIN0_VAL);
     dae:	eb e3       	ldi	r30, 0x3B	; 59
     db0:	f0 e0       	ldi	r31, 0x00	; 0
     db2:	10 82       	st	Z, r1
	PORTB=CONC(PB_PIN7_VAL,PB_PIN6_VAL,PB_PIN5_VAL,PB_PIN4_VAL,PB_PIN3_VAL,PB_PIN2_VAL,PB_PIN1_VAL,PB_PIN0_VAL);
     db4:	e8 e3       	ldi	r30, 0x38	; 56
     db6:	f0 e0       	ldi	r31, 0x00	; 0
     db8:	10 82       	st	Z, r1
	PORTC=CONC(PC_PIN7_VAL,PC_PIN6_VAL,PC_PIN5_VAL,PC_PIN4_VAL,PC_PIN3_VAL,PC_PIN2_VAL,PC_PIN1_VAL,PC_PIN0_VAL);
     dba:	e5 e3       	ldi	r30, 0x35	; 53
     dbc:	f0 e0       	ldi	r31, 0x00	; 0
     dbe:	10 82       	st	Z, r1
	PORTD=CONC(PD_PIN7_VAL,PD_PIN6_VAL,PD_PIN5_VAL,PD_PIN4_VAL,PD_PIN3_VAL,PD_PIN2_VAL,PD_PIN1_VAL,PD_PIN0_VAL);
     dc0:	e2 e3       	ldi	r30, 0x32	; 50
     dc2:	f0 e0       	ldi	r31, 0x00	; 0
     dc4:	10 82       	st	Z, r1

	Local_enumErrorState=ES_OK;
     dc6:	81 e0       	ldi	r24, 0x01	; 1
     dc8:	89 83       	std	Y+1, r24	; 0x01

	return Local_enumErrorState;
     dca:	89 81       	ldd	r24, Y+1	; 0x01
}
     dcc:	0f 90       	pop	r0
     dce:	cf 91       	pop	r28
     dd0:	df 91       	pop	r29
     dd2:	08 95       	ret

00000dd4 <DIO_enumSetPortDirection>:

ES_T DIO_enumSetPortDirection (u8 Copy_u8PortID,u8 Copy_u8Direction)
{
     dd4:	df 93       	push	r29
     dd6:	cf 93       	push	r28
     dd8:	00 d0       	rcall	.+0      	; 0xdda <DIO_enumSetPortDirection+0x6>
     dda:	00 d0       	rcall	.+0      	; 0xddc <DIO_enumSetPortDirection+0x8>
     ddc:	0f 92       	push	r0
     dde:	cd b7       	in	r28, 0x3d	; 61
     de0:	de b7       	in	r29, 0x3e	; 62
     de2:	8a 83       	std	Y+2, r24	; 0x02
     de4:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
     de6:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     de8:	8a 81       	ldd	r24, Y+2	; 0x02
     dea:	84 30       	cpi	r24, 0x04	; 4
     dec:	a8 f5       	brcc	.+106    	; 0xe58 <DIO_enumSetPortDirection+0x84>
	{
		switch(Copy_u8PortID)
     dee:	8a 81       	ldd	r24, Y+2	; 0x02
     df0:	28 2f       	mov	r18, r24
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	3d 83       	std	Y+5, r19	; 0x05
     df6:	2c 83       	std	Y+4, r18	; 0x04
     df8:	8c 81       	ldd	r24, Y+4	; 0x04
     dfa:	9d 81       	ldd	r25, Y+5	; 0x05
     dfc:	81 30       	cpi	r24, 0x01	; 1
     dfe:	91 05       	cpc	r25, r1
     e00:	d1 f0       	breq	.+52     	; 0xe36 <DIO_enumSetPortDirection+0x62>
     e02:	2c 81       	ldd	r18, Y+4	; 0x04
     e04:	3d 81       	ldd	r19, Y+5	; 0x05
     e06:	22 30       	cpi	r18, 0x02	; 2
     e08:	31 05       	cpc	r19, r1
     e0a:	2c f4       	brge	.+10     	; 0xe16 <DIO_enumSetPortDirection+0x42>
     e0c:	8c 81       	ldd	r24, Y+4	; 0x04
     e0e:	9d 81       	ldd	r25, Y+5	; 0x05
     e10:	00 97       	sbiw	r24, 0x00	; 0
     e12:	61 f0       	breq	.+24     	; 0xe2c <DIO_enumSetPortDirection+0x58>
     e14:	1e c0       	rjmp	.+60     	; 0xe52 <DIO_enumSetPortDirection+0x7e>
     e16:	2c 81       	ldd	r18, Y+4	; 0x04
     e18:	3d 81       	ldd	r19, Y+5	; 0x05
     e1a:	22 30       	cpi	r18, 0x02	; 2
     e1c:	31 05       	cpc	r19, r1
     e1e:	81 f0       	breq	.+32     	; 0xe40 <DIO_enumSetPortDirection+0x6c>
     e20:	8c 81       	ldd	r24, Y+4	; 0x04
     e22:	9d 81       	ldd	r25, Y+5	; 0x05
     e24:	83 30       	cpi	r24, 0x03	; 3
     e26:	91 05       	cpc	r25, r1
     e28:	81 f0       	breq	.+32     	; 0xe4a <DIO_enumSetPortDirection+0x76>
     e2a:	13 c0       	rjmp	.+38     	; 0xe52 <DIO_enumSetPortDirection+0x7e>
		{
			case DIO_PORTA:
				DDRA=Copy_u8Direction;
     e2c:	ea e3       	ldi	r30, 0x3A	; 58
     e2e:	f0 e0       	ldi	r31, 0x00	; 0
     e30:	8b 81       	ldd	r24, Y+3	; 0x03
     e32:	80 83       	st	Z, r24
     e34:	0e c0       	rjmp	.+28     	; 0xe52 <DIO_enumSetPortDirection+0x7e>
				break;
			case DIO_PORTB:
				DDRB=Copy_u8Direction;
     e36:	e7 e3       	ldi	r30, 0x37	; 55
     e38:	f0 e0       	ldi	r31, 0x00	; 0
     e3a:	8b 81       	ldd	r24, Y+3	; 0x03
     e3c:	80 83       	st	Z, r24
     e3e:	09 c0       	rjmp	.+18     	; 0xe52 <DIO_enumSetPortDirection+0x7e>
				break;
			case DIO_PORTC:
				DDRC=Copy_u8Direction;
     e40:	e4 e3       	ldi	r30, 0x34	; 52
     e42:	f0 e0       	ldi	r31, 0x00	; 0
     e44:	8b 81       	ldd	r24, Y+3	; 0x03
     e46:	80 83       	st	Z, r24
     e48:	04 c0       	rjmp	.+8      	; 0xe52 <DIO_enumSetPortDirection+0x7e>
				break;
			case DIO_PORTD:
				DDRD=Copy_u8Direction;
     e4a:	e1 e3       	ldi	r30, 0x31	; 49
     e4c:	f0 e0       	ldi	r31, 0x00	; 0
     e4e:	8b 81       	ldd	r24, Y+3	; 0x03
     e50:	80 83       	st	Z, r24
				break;
		}
		Local_enumErrorState=ES_OK;
     e52:	81 e0       	ldi	r24, 0x01	; 1
     e54:	89 83       	std	Y+1, r24	; 0x01
     e56:	02 c0       	rjmp	.+4      	; 0xe5c <DIO_enumSetPortDirection+0x88>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     e58:	83 e0       	ldi	r24, 0x03	; 3
     e5a:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     e5c:	89 81       	ldd	r24, Y+1	; 0x01
}
     e5e:	0f 90       	pop	r0
     e60:	0f 90       	pop	r0
     e62:	0f 90       	pop	r0
     e64:	0f 90       	pop	r0
     e66:	0f 90       	pop	r0
     e68:	cf 91       	pop	r28
     e6a:	df 91       	pop	r29
     e6c:	08 95       	ret

00000e6e <DIO_enumSetPortValue>:
ES_T DIO_enumSetPortValue (u8 Copy_u8PortID,u8 Copy_u8Value)
{
     e6e:	df 93       	push	r29
     e70:	cf 93       	push	r28
     e72:	00 d0       	rcall	.+0      	; 0xe74 <DIO_enumSetPortValue+0x6>
     e74:	00 d0       	rcall	.+0      	; 0xe76 <DIO_enumSetPortValue+0x8>
     e76:	0f 92       	push	r0
     e78:	cd b7       	in	r28, 0x3d	; 61
     e7a:	de b7       	in	r29, 0x3e	; 62
     e7c:	8a 83       	std	Y+2, r24	; 0x02
     e7e:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
     e80:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     e82:	8a 81       	ldd	r24, Y+2	; 0x02
     e84:	84 30       	cpi	r24, 0x04	; 4
     e86:	a8 f5       	brcc	.+106    	; 0xef2 <DIO_enumSetPortValue+0x84>
	{
		switch(Copy_u8PortID)
     e88:	8a 81       	ldd	r24, Y+2	; 0x02
     e8a:	28 2f       	mov	r18, r24
     e8c:	30 e0       	ldi	r19, 0x00	; 0
     e8e:	3d 83       	std	Y+5, r19	; 0x05
     e90:	2c 83       	std	Y+4, r18	; 0x04
     e92:	8c 81       	ldd	r24, Y+4	; 0x04
     e94:	9d 81       	ldd	r25, Y+5	; 0x05
     e96:	81 30       	cpi	r24, 0x01	; 1
     e98:	91 05       	cpc	r25, r1
     e9a:	d1 f0       	breq	.+52     	; 0xed0 <DIO_enumSetPortValue+0x62>
     e9c:	2c 81       	ldd	r18, Y+4	; 0x04
     e9e:	3d 81       	ldd	r19, Y+5	; 0x05
     ea0:	22 30       	cpi	r18, 0x02	; 2
     ea2:	31 05       	cpc	r19, r1
     ea4:	2c f4       	brge	.+10     	; 0xeb0 <DIO_enumSetPortValue+0x42>
     ea6:	8c 81       	ldd	r24, Y+4	; 0x04
     ea8:	9d 81       	ldd	r25, Y+5	; 0x05
     eaa:	00 97       	sbiw	r24, 0x00	; 0
     eac:	61 f0       	breq	.+24     	; 0xec6 <DIO_enumSetPortValue+0x58>
     eae:	1e c0       	rjmp	.+60     	; 0xeec <DIO_enumSetPortValue+0x7e>
     eb0:	2c 81       	ldd	r18, Y+4	; 0x04
     eb2:	3d 81       	ldd	r19, Y+5	; 0x05
     eb4:	22 30       	cpi	r18, 0x02	; 2
     eb6:	31 05       	cpc	r19, r1
     eb8:	81 f0       	breq	.+32     	; 0xeda <DIO_enumSetPortValue+0x6c>
     eba:	8c 81       	ldd	r24, Y+4	; 0x04
     ebc:	9d 81       	ldd	r25, Y+5	; 0x05
     ebe:	83 30       	cpi	r24, 0x03	; 3
     ec0:	91 05       	cpc	r25, r1
     ec2:	81 f0       	breq	.+32     	; 0xee4 <DIO_enumSetPortValue+0x76>
     ec4:	13 c0       	rjmp	.+38     	; 0xeec <DIO_enumSetPortValue+0x7e>
		{
			case DIO_PORTA:
				PORTA=Copy_u8Value;
     ec6:	eb e3       	ldi	r30, 0x3B	; 59
     ec8:	f0 e0       	ldi	r31, 0x00	; 0
     eca:	8b 81       	ldd	r24, Y+3	; 0x03
     ecc:	80 83       	st	Z, r24
     ece:	0e c0       	rjmp	.+28     	; 0xeec <DIO_enumSetPortValue+0x7e>
				break;
			case DIO_PORTB:
				PORTB=Copy_u8Value;
     ed0:	e8 e3       	ldi	r30, 0x38	; 56
     ed2:	f0 e0       	ldi	r31, 0x00	; 0
     ed4:	8b 81       	ldd	r24, Y+3	; 0x03
     ed6:	80 83       	st	Z, r24
     ed8:	09 c0       	rjmp	.+18     	; 0xeec <DIO_enumSetPortValue+0x7e>
				break;
			case DIO_PORTC:
				PORTC=Copy_u8Value;
     eda:	e5 e3       	ldi	r30, 0x35	; 53
     edc:	f0 e0       	ldi	r31, 0x00	; 0
     ede:	8b 81       	ldd	r24, Y+3	; 0x03
     ee0:	80 83       	st	Z, r24
     ee2:	04 c0       	rjmp	.+8      	; 0xeec <DIO_enumSetPortValue+0x7e>
				break;
			case DIO_PORTD:
				PORTD=Copy_u8Value;
     ee4:	e2 e3       	ldi	r30, 0x32	; 50
     ee6:	f0 e0       	ldi	r31, 0x00	; 0
     ee8:	8b 81       	ldd	r24, Y+3	; 0x03
     eea:	80 83       	st	Z, r24
				break;
		}
		Local_enumErrorState=ES_OK;
     eec:	81 e0       	ldi	r24, 0x01	; 1
     eee:	89 83       	std	Y+1, r24	; 0x01
     ef0:	02 c0       	rjmp	.+4      	; 0xef6 <DIO_enumSetPortValue+0x88>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     ef2:	83 e0       	ldi	r24, 0x03	; 3
     ef4:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     ef6:	89 81       	ldd	r24, Y+1	; 0x01
}
     ef8:	0f 90       	pop	r0
     efa:	0f 90       	pop	r0
     efc:	0f 90       	pop	r0
     efe:	0f 90       	pop	r0
     f00:	0f 90       	pop	r0
     f02:	cf 91       	pop	r28
     f04:	df 91       	pop	r29
     f06:	08 95       	ret

00000f08 <DIO_enumTogglePortDirection>:
ES_T DIO_enumTogglePortDirection (u8 Copy_u8PortID)
{
     f08:	df 93       	push	r29
     f0a:	cf 93       	push	r28
     f0c:	00 d0       	rcall	.+0      	; 0xf0e <DIO_enumTogglePortDirection+0x6>
     f0e:	00 d0       	rcall	.+0      	; 0xf10 <DIO_enumTogglePortDirection+0x8>
     f10:	cd b7       	in	r28, 0x3d	; 61
     f12:	de b7       	in	r29, 0x3e	; 62
     f14:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
     f16:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     f18:	8a 81       	ldd	r24, Y+2	; 0x02
     f1a:	84 30       	cpi	r24, 0x04	; 4
     f1c:	08 f0       	brcs	.+2      	; 0xf20 <DIO_enumTogglePortDirection+0x18>
     f1e:	41 c0       	rjmp	.+130    	; 0xfa2 <DIO_enumTogglePortDirection+0x9a>
	{
		switch(Copy_u8PortID)
     f20:	8a 81       	ldd	r24, Y+2	; 0x02
     f22:	28 2f       	mov	r18, r24
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	3c 83       	std	Y+4, r19	; 0x04
     f28:	2b 83       	std	Y+3, r18	; 0x03
     f2a:	8b 81       	ldd	r24, Y+3	; 0x03
     f2c:	9c 81       	ldd	r25, Y+4	; 0x04
     f2e:	81 30       	cpi	r24, 0x01	; 1
     f30:	91 05       	cpc	r25, r1
     f32:	e9 f0       	breq	.+58     	; 0xf6e <DIO_enumTogglePortDirection+0x66>
     f34:	2b 81       	ldd	r18, Y+3	; 0x03
     f36:	3c 81       	ldd	r19, Y+4	; 0x04
     f38:	22 30       	cpi	r18, 0x02	; 2
     f3a:	31 05       	cpc	r19, r1
     f3c:	2c f4       	brge	.+10     	; 0xf48 <DIO_enumTogglePortDirection+0x40>
     f3e:	8b 81       	ldd	r24, Y+3	; 0x03
     f40:	9c 81       	ldd	r25, Y+4	; 0x04
     f42:	00 97       	sbiw	r24, 0x00	; 0
     f44:	61 f0       	breq	.+24     	; 0xf5e <DIO_enumTogglePortDirection+0x56>
     f46:	2a c0       	rjmp	.+84     	; 0xf9c <DIO_enumTogglePortDirection+0x94>
     f48:	2b 81       	ldd	r18, Y+3	; 0x03
     f4a:	3c 81       	ldd	r19, Y+4	; 0x04
     f4c:	22 30       	cpi	r18, 0x02	; 2
     f4e:	31 05       	cpc	r19, r1
     f50:	b1 f0       	breq	.+44     	; 0xf7e <DIO_enumTogglePortDirection+0x76>
     f52:	8b 81       	ldd	r24, Y+3	; 0x03
     f54:	9c 81       	ldd	r25, Y+4	; 0x04
     f56:	83 30       	cpi	r24, 0x03	; 3
     f58:	91 05       	cpc	r25, r1
     f5a:	c9 f0       	breq	.+50     	; 0xf8e <DIO_enumTogglePortDirection+0x86>
     f5c:	1f c0       	rjmp	.+62     	; 0xf9c <DIO_enumTogglePortDirection+0x94>
		{
			case DIO_PORTA:
				DDRA=~DDRA;
     f5e:	aa e3       	ldi	r26, 0x3A	; 58
     f60:	b0 e0       	ldi	r27, 0x00	; 0
     f62:	ea e3       	ldi	r30, 0x3A	; 58
     f64:	f0 e0       	ldi	r31, 0x00	; 0
     f66:	80 81       	ld	r24, Z
     f68:	80 95       	com	r24
     f6a:	8c 93       	st	X, r24
     f6c:	17 c0       	rjmp	.+46     	; 0xf9c <DIO_enumTogglePortDirection+0x94>
				break;
			case DIO_PORTB:
				DDRB=~DDRB;
     f6e:	a7 e3       	ldi	r26, 0x37	; 55
     f70:	b0 e0       	ldi	r27, 0x00	; 0
     f72:	e7 e3       	ldi	r30, 0x37	; 55
     f74:	f0 e0       	ldi	r31, 0x00	; 0
     f76:	80 81       	ld	r24, Z
     f78:	80 95       	com	r24
     f7a:	8c 93       	st	X, r24
     f7c:	0f c0       	rjmp	.+30     	; 0xf9c <DIO_enumTogglePortDirection+0x94>
				break;
			case DIO_PORTC:
				DDRC=~DDRC;
     f7e:	a4 e3       	ldi	r26, 0x34	; 52
     f80:	b0 e0       	ldi	r27, 0x00	; 0
     f82:	e4 e3       	ldi	r30, 0x34	; 52
     f84:	f0 e0       	ldi	r31, 0x00	; 0
     f86:	80 81       	ld	r24, Z
     f88:	80 95       	com	r24
     f8a:	8c 93       	st	X, r24
     f8c:	07 c0       	rjmp	.+14     	; 0xf9c <DIO_enumTogglePortDirection+0x94>
				break;
			case DIO_PORTD:
				DDRD=~DDRD;
     f8e:	a1 e3       	ldi	r26, 0x31	; 49
     f90:	b0 e0       	ldi	r27, 0x00	; 0
     f92:	e1 e3       	ldi	r30, 0x31	; 49
     f94:	f0 e0       	ldi	r31, 0x00	; 0
     f96:	80 81       	ld	r24, Z
     f98:	80 95       	com	r24
     f9a:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
     f9c:	81 e0       	ldi	r24, 0x01	; 1
     f9e:	89 83       	std	Y+1, r24	; 0x01
     fa0:	02 c0       	rjmp	.+4      	; 0xfa6 <DIO_enumTogglePortDirection+0x9e>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     fa2:	83 e0       	ldi	r24, 0x03	; 3
     fa4:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     fa6:	89 81       	ldd	r24, Y+1	; 0x01
}
     fa8:	0f 90       	pop	r0
     faa:	0f 90       	pop	r0
     fac:	0f 90       	pop	r0
     fae:	0f 90       	pop	r0
     fb0:	cf 91       	pop	r28
     fb2:	df 91       	pop	r29
     fb4:	08 95       	ret

00000fb6 <DIO_enumTogglePortValue>:
ES_T DIO_enumTogglePortValue (u8 Copy_u8PortID)
{
     fb6:	df 93       	push	r29
     fb8:	cf 93       	push	r28
     fba:	00 d0       	rcall	.+0      	; 0xfbc <DIO_enumTogglePortValue+0x6>
     fbc:	00 d0       	rcall	.+0      	; 0xfbe <DIO_enumTogglePortValue+0x8>
     fbe:	cd b7       	in	r28, 0x3d	; 61
     fc0:	de b7       	in	r29, 0x3e	; 62
     fc2:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
     fc4:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     fc6:	8a 81       	ldd	r24, Y+2	; 0x02
     fc8:	84 30       	cpi	r24, 0x04	; 4
     fca:	08 f0       	brcs	.+2      	; 0xfce <DIO_enumTogglePortValue+0x18>
     fcc:	41 c0       	rjmp	.+130    	; 0x1050 <DIO_enumTogglePortValue+0x9a>
	{
		switch(Copy_u8PortID)
     fce:	8a 81       	ldd	r24, Y+2	; 0x02
     fd0:	28 2f       	mov	r18, r24
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	3c 83       	std	Y+4, r19	; 0x04
     fd6:	2b 83       	std	Y+3, r18	; 0x03
     fd8:	8b 81       	ldd	r24, Y+3	; 0x03
     fda:	9c 81       	ldd	r25, Y+4	; 0x04
     fdc:	81 30       	cpi	r24, 0x01	; 1
     fde:	91 05       	cpc	r25, r1
     fe0:	e9 f0       	breq	.+58     	; 0x101c <DIO_enumTogglePortValue+0x66>
     fe2:	2b 81       	ldd	r18, Y+3	; 0x03
     fe4:	3c 81       	ldd	r19, Y+4	; 0x04
     fe6:	22 30       	cpi	r18, 0x02	; 2
     fe8:	31 05       	cpc	r19, r1
     fea:	2c f4       	brge	.+10     	; 0xff6 <DIO_enumTogglePortValue+0x40>
     fec:	8b 81       	ldd	r24, Y+3	; 0x03
     fee:	9c 81       	ldd	r25, Y+4	; 0x04
     ff0:	00 97       	sbiw	r24, 0x00	; 0
     ff2:	61 f0       	breq	.+24     	; 0x100c <DIO_enumTogglePortValue+0x56>
     ff4:	2a c0       	rjmp	.+84     	; 0x104a <DIO_enumTogglePortValue+0x94>
     ff6:	2b 81       	ldd	r18, Y+3	; 0x03
     ff8:	3c 81       	ldd	r19, Y+4	; 0x04
     ffa:	22 30       	cpi	r18, 0x02	; 2
     ffc:	31 05       	cpc	r19, r1
     ffe:	b1 f0       	breq	.+44     	; 0x102c <DIO_enumTogglePortValue+0x76>
    1000:	8b 81       	ldd	r24, Y+3	; 0x03
    1002:	9c 81       	ldd	r25, Y+4	; 0x04
    1004:	83 30       	cpi	r24, 0x03	; 3
    1006:	91 05       	cpc	r25, r1
    1008:	c9 f0       	breq	.+50     	; 0x103c <DIO_enumTogglePortValue+0x86>
    100a:	1f c0       	rjmp	.+62     	; 0x104a <DIO_enumTogglePortValue+0x94>
		{
			case DIO_PORTA:
				PORTA=~PORTA;
    100c:	ab e3       	ldi	r26, 0x3B	; 59
    100e:	b0 e0       	ldi	r27, 0x00	; 0
    1010:	eb e3       	ldi	r30, 0x3B	; 59
    1012:	f0 e0       	ldi	r31, 0x00	; 0
    1014:	80 81       	ld	r24, Z
    1016:	80 95       	com	r24
    1018:	8c 93       	st	X, r24
    101a:	17 c0       	rjmp	.+46     	; 0x104a <DIO_enumTogglePortValue+0x94>
				break;
			case DIO_PORTB:
				PORTB=~PORTB;
    101c:	a8 e3       	ldi	r26, 0x38	; 56
    101e:	b0 e0       	ldi	r27, 0x00	; 0
    1020:	e8 e3       	ldi	r30, 0x38	; 56
    1022:	f0 e0       	ldi	r31, 0x00	; 0
    1024:	80 81       	ld	r24, Z
    1026:	80 95       	com	r24
    1028:	8c 93       	st	X, r24
    102a:	0f c0       	rjmp	.+30     	; 0x104a <DIO_enumTogglePortValue+0x94>
				break;
			case DIO_PORTC:
				PORTC=~PORTC;
    102c:	a5 e3       	ldi	r26, 0x35	; 53
    102e:	b0 e0       	ldi	r27, 0x00	; 0
    1030:	e5 e3       	ldi	r30, 0x35	; 53
    1032:	f0 e0       	ldi	r31, 0x00	; 0
    1034:	80 81       	ld	r24, Z
    1036:	80 95       	com	r24
    1038:	8c 93       	st	X, r24
    103a:	07 c0       	rjmp	.+14     	; 0x104a <DIO_enumTogglePortValue+0x94>
				break;
			case DIO_PORTD:
				PORTD=~PORTD;
    103c:	a2 e3       	ldi	r26, 0x32	; 50
    103e:	b0 e0       	ldi	r27, 0x00	; 0
    1040:	e2 e3       	ldi	r30, 0x32	; 50
    1042:	f0 e0       	ldi	r31, 0x00	; 0
    1044:	80 81       	ld	r24, Z
    1046:	80 95       	com	r24
    1048:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    104a:	81 e0       	ldi	r24, 0x01	; 1
    104c:	89 83       	std	Y+1, r24	; 0x01
    104e:	02 c0       	rjmp	.+4      	; 0x1054 <DIO_enumTogglePortValue+0x9e>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    1050:	83 e0       	ldi	r24, 0x03	; 3
    1052:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    1054:	89 81       	ldd	r24, Y+1	; 0x01
}
    1056:	0f 90       	pop	r0
    1058:	0f 90       	pop	r0
    105a:	0f 90       	pop	r0
    105c:	0f 90       	pop	r0
    105e:	cf 91       	pop	r28
    1060:	df 91       	pop	r29
    1062:	08 95       	ret

00001064 <DIO_enumGetPortDirection>:
ES_T DIO_enumGetPortDirection (u8 Copy_u8PortID,u8 *Copy_pu8Direction)
{
    1064:	df 93       	push	r29
    1066:	cf 93       	push	r28
    1068:	00 d0       	rcall	.+0      	; 0x106a <DIO_enumGetPortDirection+0x6>
    106a:	00 d0       	rcall	.+0      	; 0x106c <DIO_enumGetPortDirection+0x8>
    106c:	00 d0       	rcall	.+0      	; 0x106e <DIO_enumGetPortDirection+0xa>
    106e:	cd b7       	in	r28, 0x3d	; 61
    1070:	de b7       	in	r29, 0x3e	; 62
    1072:	8a 83       	std	Y+2, r24	; 0x02
    1074:	7c 83       	std	Y+4, r23	; 0x04
    1076:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    1078:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
    107a:	8a 81       	ldd	r24, Y+2	; 0x02
    107c:	84 30       	cpi	r24, 0x04	; 4
    107e:	08 f0       	brcs	.+2      	; 0x1082 <DIO_enumGetPortDirection+0x1e>
    1080:	44 c0       	rjmp	.+136    	; 0x110a <DIO_enumGetPortDirection+0xa6>
	{
		if (Copy_pu8Direction!=NULL)
    1082:	8b 81       	ldd	r24, Y+3	; 0x03
    1084:	9c 81       	ldd	r25, Y+4	; 0x04
    1086:	00 97       	sbiw	r24, 0x00	; 0
    1088:	e9 f1       	breq	.+122    	; 0x1104 <DIO_enumGetPortDirection+0xa0>
		{
			switch(Copy_u8PortID)
    108a:	8a 81       	ldd	r24, Y+2	; 0x02
    108c:	28 2f       	mov	r18, r24
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	3e 83       	std	Y+6, r19	; 0x06
    1092:	2d 83       	std	Y+5, r18	; 0x05
    1094:	8d 81       	ldd	r24, Y+5	; 0x05
    1096:	9e 81       	ldd	r25, Y+6	; 0x06
    1098:	81 30       	cpi	r24, 0x01	; 1
    109a:	91 05       	cpc	r25, r1
    109c:	e1 f0       	breq	.+56     	; 0x10d6 <DIO_enumGetPortDirection+0x72>
    109e:	2d 81       	ldd	r18, Y+5	; 0x05
    10a0:	3e 81       	ldd	r19, Y+6	; 0x06
    10a2:	22 30       	cpi	r18, 0x02	; 2
    10a4:	31 05       	cpc	r19, r1
    10a6:	2c f4       	brge	.+10     	; 0x10b2 <DIO_enumGetPortDirection+0x4e>
    10a8:	8d 81       	ldd	r24, Y+5	; 0x05
    10aa:	9e 81       	ldd	r25, Y+6	; 0x06
    10ac:	00 97       	sbiw	r24, 0x00	; 0
    10ae:	61 f0       	breq	.+24     	; 0x10c8 <DIO_enumGetPortDirection+0x64>
    10b0:	26 c0       	rjmp	.+76     	; 0x10fe <DIO_enumGetPortDirection+0x9a>
    10b2:	2d 81       	ldd	r18, Y+5	; 0x05
    10b4:	3e 81       	ldd	r19, Y+6	; 0x06
    10b6:	22 30       	cpi	r18, 0x02	; 2
    10b8:	31 05       	cpc	r19, r1
    10ba:	a1 f0       	breq	.+40     	; 0x10e4 <DIO_enumGetPortDirection+0x80>
    10bc:	8d 81       	ldd	r24, Y+5	; 0x05
    10be:	9e 81       	ldd	r25, Y+6	; 0x06
    10c0:	83 30       	cpi	r24, 0x03	; 3
    10c2:	91 05       	cpc	r25, r1
    10c4:	b1 f0       	breq	.+44     	; 0x10f2 <DIO_enumGetPortDirection+0x8e>
    10c6:	1b c0       	rjmp	.+54     	; 0x10fe <DIO_enumGetPortDirection+0x9a>
			{
				case DIO_PORTA:
					*Copy_pu8Direction=DDRA;
    10c8:	ea e3       	ldi	r30, 0x3A	; 58
    10ca:	f0 e0       	ldi	r31, 0x00	; 0
    10cc:	80 81       	ld	r24, Z
    10ce:	eb 81       	ldd	r30, Y+3	; 0x03
    10d0:	fc 81       	ldd	r31, Y+4	; 0x04
    10d2:	80 83       	st	Z, r24
    10d4:	14 c0       	rjmp	.+40     	; 0x10fe <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTB:
					*Copy_pu8Direction=DDRB;
    10d6:	e7 e3       	ldi	r30, 0x37	; 55
    10d8:	f0 e0       	ldi	r31, 0x00	; 0
    10da:	80 81       	ld	r24, Z
    10dc:	eb 81       	ldd	r30, Y+3	; 0x03
    10de:	fc 81       	ldd	r31, Y+4	; 0x04
    10e0:	80 83       	st	Z, r24
    10e2:	0d c0       	rjmp	.+26     	; 0x10fe <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTC:
					*Copy_pu8Direction=DDRC;
    10e4:	e4 e3       	ldi	r30, 0x34	; 52
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	80 81       	ld	r24, Z
    10ea:	eb 81       	ldd	r30, Y+3	; 0x03
    10ec:	fc 81       	ldd	r31, Y+4	; 0x04
    10ee:	80 83       	st	Z, r24
    10f0:	06 c0       	rjmp	.+12     	; 0x10fe <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTD:
					*Copy_pu8Direction=DDRD;
    10f2:	e1 e3       	ldi	r30, 0x31	; 49
    10f4:	f0 e0       	ldi	r31, 0x00	; 0
    10f6:	80 81       	ld	r24, Z
    10f8:	eb 81       	ldd	r30, Y+3	; 0x03
    10fa:	fc 81       	ldd	r31, Y+4	; 0x04
    10fc:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
    10fe:	81 e0       	ldi	r24, 0x01	; 1
    1100:	89 83       	std	Y+1, r24	; 0x01
    1102:	05 c0       	rjmp	.+10     	; 0x110e <DIO_enumGetPortDirection+0xaa>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
    1104:	82 e0       	ldi	r24, 0x02	; 2
    1106:	89 83       	std	Y+1, r24	; 0x01
    1108:	02 c0       	rjmp	.+4      	; 0x110e <DIO_enumGetPortDirection+0xaa>
		}

	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    110a:	83 e0       	ldi	r24, 0x03	; 3
    110c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    110e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1110:	26 96       	adiw	r28, 0x06	; 6
    1112:	0f b6       	in	r0, 0x3f	; 63
    1114:	f8 94       	cli
    1116:	de bf       	out	0x3e, r29	; 62
    1118:	0f be       	out	0x3f, r0	; 63
    111a:	cd bf       	out	0x3d, r28	; 61
    111c:	cf 91       	pop	r28
    111e:	df 91       	pop	r29
    1120:	08 95       	ret

00001122 <DIO_enumGetPortValue>:
ES_T DIO_enumGetPortValue (u8 Copy_u8PortID,u8 *Copy_pu8Value)
{
    1122:	df 93       	push	r29
    1124:	cf 93       	push	r28
    1126:	00 d0       	rcall	.+0      	; 0x1128 <DIO_enumGetPortValue+0x6>
    1128:	00 d0       	rcall	.+0      	; 0x112a <DIO_enumGetPortValue+0x8>
    112a:	00 d0       	rcall	.+0      	; 0x112c <DIO_enumGetPortValue+0xa>
    112c:	cd b7       	in	r28, 0x3d	; 61
    112e:	de b7       	in	r29, 0x3e	; 62
    1130:	8a 83       	std	Y+2, r24	; 0x02
    1132:	7c 83       	std	Y+4, r23	; 0x04
    1134:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    1136:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
    1138:	8a 81       	ldd	r24, Y+2	; 0x02
    113a:	84 30       	cpi	r24, 0x04	; 4
    113c:	08 f0       	brcs	.+2      	; 0x1140 <DIO_enumGetPortValue+0x1e>
    113e:	44 c0       	rjmp	.+136    	; 0x11c8 <DIO_enumGetPortValue+0xa6>
	{
		if (Copy_pu8Value!=NULL)
    1140:	8b 81       	ldd	r24, Y+3	; 0x03
    1142:	9c 81       	ldd	r25, Y+4	; 0x04
    1144:	00 97       	sbiw	r24, 0x00	; 0
    1146:	e9 f1       	breq	.+122    	; 0x11c2 <DIO_enumGetPortValue+0xa0>
		{
			switch(Copy_u8PortID)
    1148:	8a 81       	ldd	r24, Y+2	; 0x02
    114a:	28 2f       	mov	r18, r24
    114c:	30 e0       	ldi	r19, 0x00	; 0
    114e:	3e 83       	std	Y+6, r19	; 0x06
    1150:	2d 83       	std	Y+5, r18	; 0x05
    1152:	8d 81       	ldd	r24, Y+5	; 0x05
    1154:	9e 81       	ldd	r25, Y+6	; 0x06
    1156:	81 30       	cpi	r24, 0x01	; 1
    1158:	91 05       	cpc	r25, r1
    115a:	e1 f0       	breq	.+56     	; 0x1194 <DIO_enumGetPortValue+0x72>
    115c:	2d 81       	ldd	r18, Y+5	; 0x05
    115e:	3e 81       	ldd	r19, Y+6	; 0x06
    1160:	22 30       	cpi	r18, 0x02	; 2
    1162:	31 05       	cpc	r19, r1
    1164:	2c f4       	brge	.+10     	; 0x1170 <DIO_enumGetPortValue+0x4e>
    1166:	8d 81       	ldd	r24, Y+5	; 0x05
    1168:	9e 81       	ldd	r25, Y+6	; 0x06
    116a:	00 97       	sbiw	r24, 0x00	; 0
    116c:	61 f0       	breq	.+24     	; 0x1186 <DIO_enumGetPortValue+0x64>
    116e:	26 c0       	rjmp	.+76     	; 0x11bc <DIO_enumGetPortValue+0x9a>
    1170:	2d 81       	ldd	r18, Y+5	; 0x05
    1172:	3e 81       	ldd	r19, Y+6	; 0x06
    1174:	22 30       	cpi	r18, 0x02	; 2
    1176:	31 05       	cpc	r19, r1
    1178:	a1 f0       	breq	.+40     	; 0x11a2 <DIO_enumGetPortValue+0x80>
    117a:	8d 81       	ldd	r24, Y+5	; 0x05
    117c:	9e 81       	ldd	r25, Y+6	; 0x06
    117e:	83 30       	cpi	r24, 0x03	; 3
    1180:	91 05       	cpc	r25, r1
    1182:	b1 f0       	breq	.+44     	; 0x11b0 <DIO_enumGetPortValue+0x8e>
    1184:	1b c0       	rjmp	.+54     	; 0x11bc <DIO_enumGetPortValue+0x9a>
			{
				case DIO_PORTA:
					*Copy_pu8Value=PINA;
    1186:	e9 e3       	ldi	r30, 0x39	; 57
    1188:	f0 e0       	ldi	r31, 0x00	; 0
    118a:	80 81       	ld	r24, Z
    118c:	eb 81       	ldd	r30, Y+3	; 0x03
    118e:	fc 81       	ldd	r31, Y+4	; 0x04
    1190:	80 83       	st	Z, r24
    1192:	14 c0       	rjmp	.+40     	; 0x11bc <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTB:
					*Copy_pu8Value=PINB;
    1194:	e6 e3       	ldi	r30, 0x36	; 54
    1196:	f0 e0       	ldi	r31, 0x00	; 0
    1198:	80 81       	ld	r24, Z
    119a:	eb 81       	ldd	r30, Y+3	; 0x03
    119c:	fc 81       	ldd	r31, Y+4	; 0x04
    119e:	80 83       	st	Z, r24
    11a0:	0d c0       	rjmp	.+26     	; 0x11bc <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTC:
					*Copy_pu8Value=PINC;
    11a2:	e3 e3       	ldi	r30, 0x33	; 51
    11a4:	f0 e0       	ldi	r31, 0x00	; 0
    11a6:	80 81       	ld	r24, Z
    11a8:	eb 81       	ldd	r30, Y+3	; 0x03
    11aa:	fc 81       	ldd	r31, Y+4	; 0x04
    11ac:	80 83       	st	Z, r24
    11ae:	06 c0       	rjmp	.+12     	; 0x11bc <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTD:
					*Copy_pu8Value=PIND;
    11b0:	e0 e3       	ldi	r30, 0x30	; 48
    11b2:	f0 e0       	ldi	r31, 0x00	; 0
    11b4:	80 81       	ld	r24, Z
    11b6:	eb 81       	ldd	r30, Y+3	; 0x03
    11b8:	fc 81       	ldd	r31, Y+4	; 0x04
    11ba:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
    11bc:	81 e0       	ldi	r24, 0x01	; 1
    11be:	89 83       	std	Y+1, r24	; 0x01
    11c0:	05 c0       	rjmp	.+10     	; 0x11cc <DIO_enumGetPortValue+0xaa>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
    11c2:	82 e0       	ldi	r24, 0x02	; 2
    11c4:	89 83       	std	Y+1, r24	; 0x01
    11c6:	02 c0       	rjmp	.+4      	; 0x11cc <DIO_enumGetPortValue+0xaa>
		}

	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    11c8:	83 e0       	ldi	r24, 0x03	; 3
    11ca:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    11cc:	89 81       	ldd	r24, Y+1	; 0x01
}
    11ce:	26 96       	adiw	r28, 0x06	; 6
    11d0:	0f b6       	in	r0, 0x3f	; 63
    11d2:	f8 94       	cli
    11d4:	de bf       	out	0x3e, r29	; 62
    11d6:	0f be       	out	0x3f, r0	; 63
    11d8:	cd bf       	out	0x3d, r28	; 61
    11da:	cf 91       	pop	r28
    11dc:	df 91       	pop	r29
    11de:	08 95       	ret

000011e0 <DIO_enumSetPinDirection>:

ES_T DIO_enumSetPinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8Direction)
{
    11e0:	df 93       	push	r29
    11e2:	cf 93       	push	r28
    11e4:	00 d0       	rcall	.+0      	; 0x11e6 <DIO_enumSetPinDirection+0x6>
    11e6:	00 d0       	rcall	.+0      	; 0x11e8 <DIO_enumSetPinDirection+0x8>
    11e8:	00 d0       	rcall	.+0      	; 0x11ea <DIO_enumSetPinDirection+0xa>
    11ea:	cd b7       	in	r28, 0x3d	; 61
    11ec:	de b7       	in	r29, 0x3e	; 62
    11ee:	8a 83       	std	Y+2, r24	; 0x02
    11f0:	6b 83       	std	Y+3, r22	; 0x03
    11f2:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    11f4:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&& Copy_u8PinID <= DIO_PIN7 && Copy_u8Direction <= OUTPUT)
    11f6:	8a 81       	ldd	r24, Y+2	; 0x02
    11f8:	84 30       	cpi	r24, 0x04	; 4
    11fa:	08 f0       	brcs	.+2      	; 0x11fe <DIO_enumSetPinDirection+0x1e>
    11fc:	d1 c0       	rjmp	.+418    	; 0x13a0 <DIO_enumSetPinDirection+0x1c0>
    11fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1200:	88 30       	cpi	r24, 0x08	; 8
    1202:	08 f0       	brcs	.+2      	; 0x1206 <DIO_enumSetPinDirection+0x26>
    1204:	cd c0       	rjmp	.+410    	; 0x13a0 <DIO_enumSetPinDirection+0x1c0>
    1206:	8c 81       	ldd	r24, Y+4	; 0x04
    1208:	82 30       	cpi	r24, 0x02	; 2
    120a:	08 f0       	brcs	.+2      	; 0x120e <DIO_enumSetPinDirection+0x2e>
    120c:	c9 c0       	rjmp	.+402    	; 0x13a0 <DIO_enumSetPinDirection+0x1c0>
	{
		switch(Copy_u8PortID)
    120e:	8a 81       	ldd	r24, Y+2	; 0x02
    1210:	28 2f       	mov	r18, r24
    1212:	30 e0       	ldi	r19, 0x00	; 0
    1214:	3e 83       	std	Y+6, r19	; 0x06
    1216:	2d 83       	std	Y+5, r18	; 0x05
    1218:	6d 81       	ldd	r22, Y+5	; 0x05
    121a:	7e 81       	ldd	r23, Y+6	; 0x06
    121c:	61 30       	cpi	r22, 0x01	; 1
    121e:	71 05       	cpc	r23, r1
    1220:	09 f4       	brne	.+2      	; 0x1224 <DIO_enumSetPinDirection+0x44>
    1222:	41 c0       	rjmp	.+130    	; 0x12a6 <DIO_enumSetPinDirection+0xc6>
    1224:	8d 81       	ldd	r24, Y+5	; 0x05
    1226:	9e 81       	ldd	r25, Y+6	; 0x06
    1228:	82 30       	cpi	r24, 0x02	; 2
    122a:	91 05       	cpc	r25, r1
    122c:	34 f4       	brge	.+12     	; 0x123a <DIO_enumSetPinDirection+0x5a>
    122e:	2d 81       	ldd	r18, Y+5	; 0x05
    1230:	3e 81       	ldd	r19, Y+6	; 0x06
    1232:	21 15       	cp	r18, r1
    1234:	31 05       	cpc	r19, r1
    1236:	71 f0       	breq	.+28     	; 0x1254 <DIO_enumSetPinDirection+0x74>
    1238:	b0 c0       	rjmp	.+352    	; 0x139a <DIO_enumSetPinDirection+0x1ba>
    123a:	6d 81       	ldd	r22, Y+5	; 0x05
    123c:	7e 81       	ldd	r23, Y+6	; 0x06
    123e:	62 30       	cpi	r22, 0x02	; 2
    1240:	71 05       	cpc	r23, r1
    1242:	09 f4       	brne	.+2      	; 0x1246 <DIO_enumSetPinDirection+0x66>
    1244:	59 c0       	rjmp	.+178    	; 0x12f8 <DIO_enumSetPinDirection+0x118>
    1246:	8d 81       	ldd	r24, Y+5	; 0x05
    1248:	9e 81       	ldd	r25, Y+6	; 0x06
    124a:	83 30       	cpi	r24, 0x03	; 3
    124c:	91 05       	cpc	r25, r1
    124e:	09 f4       	brne	.+2      	; 0x1252 <DIO_enumSetPinDirection+0x72>
    1250:	7c c0       	rjmp	.+248    	; 0x134a <DIO_enumSetPinDirection+0x16a>
    1252:	a3 c0       	rjmp	.+326    	; 0x139a <DIO_enumSetPinDirection+0x1ba>
		{
			case DIO_PORTA:
				CLEAR_BIT(DDRA,Copy_u8PinID);
    1254:	aa e3       	ldi	r26, 0x3A	; 58
    1256:	b0 e0       	ldi	r27, 0x00	; 0
    1258:	ea e3       	ldi	r30, 0x3A	; 58
    125a:	f0 e0       	ldi	r31, 0x00	; 0
    125c:	80 81       	ld	r24, Z
    125e:	48 2f       	mov	r20, r24
    1260:	8b 81       	ldd	r24, Y+3	; 0x03
    1262:	28 2f       	mov	r18, r24
    1264:	30 e0       	ldi	r19, 0x00	; 0
    1266:	81 e0       	ldi	r24, 0x01	; 1
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	02 c0       	rjmp	.+4      	; 0x1270 <DIO_enumSetPinDirection+0x90>
    126c:	88 0f       	add	r24, r24
    126e:	99 1f       	adc	r25, r25
    1270:	2a 95       	dec	r18
    1272:	e2 f7       	brpl	.-8      	; 0x126c <DIO_enumSetPinDirection+0x8c>
    1274:	80 95       	com	r24
    1276:	84 23       	and	r24, r20
    1278:	8c 93       	st	X, r24
				DDRA |= (Copy_u8Direction << Copy_u8PinID);
    127a:	aa e3       	ldi	r26, 0x3A	; 58
    127c:	b0 e0       	ldi	r27, 0x00	; 0
    127e:	ea e3       	ldi	r30, 0x3A	; 58
    1280:	f0 e0       	ldi	r31, 0x00	; 0
    1282:	80 81       	ld	r24, Z
    1284:	48 2f       	mov	r20, r24
    1286:	8c 81       	ldd	r24, Y+4	; 0x04
    1288:	28 2f       	mov	r18, r24
    128a:	30 e0       	ldi	r19, 0x00	; 0
    128c:	8b 81       	ldd	r24, Y+3	; 0x03
    128e:	88 2f       	mov	r24, r24
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	b9 01       	movw	r22, r18
    1294:	02 c0       	rjmp	.+4      	; 0x129a <DIO_enumSetPinDirection+0xba>
    1296:	66 0f       	add	r22, r22
    1298:	77 1f       	adc	r23, r23
    129a:	8a 95       	dec	r24
    129c:	e2 f7       	brpl	.-8      	; 0x1296 <DIO_enumSetPinDirection+0xb6>
    129e:	cb 01       	movw	r24, r22
    12a0:	84 2b       	or	r24, r20
    12a2:	8c 93       	st	X, r24
    12a4:	7a c0       	rjmp	.+244    	; 0x139a <DIO_enumSetPinDirection+0x1ba>
				break;
			case DIO_PORTB:
				CLEAR_BIT(DDRB,Copy_u8PinID);
    12a6:	a7 e3       	ldi	r26, 0x37	; 55
    12a8:	b0 e0       	ldi	r27, 0x00	; 0
    12aa:	e7 e3       	ldi	r30, 0x37	; 55
    12ac:	f0 e0       	ldi	r31, 0x00	; 0
    12ae:	80 81       	ld	r24, Z
    12b0:	48 2f       	mov	r20, r24
    12b2:	8b 81       	ldd	r24, Y+3	; 0x03
    12b4:	28 2f       	mov	r18, r24
    12b6:	30 e0       	ldi	r19, 0x00	; 0
    12b8:	81 e0       	ldi	r24, 0x01	; 1
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	02 c0       	rjmp	.+4      	; 0x12c2 <DIO_enumSetPinDirection+0xe2>
    12be:	88 0f       	add	r24, r24
    12c0:	99 1f       	adc	r25, r25
    12c2:	2a 95       	dec	r18
    12c4:	e2 f7       	brpl	.-8      	; 0x12be <DIO_enumSetPinDirection+0xde>
    12c6:	80 95       	com	r24
    12c8:	84 23       	and	r24, r20
    12ca:	8c 93       	st	X, r24
				DDRB |= (Copy_u8Direction << Copy_u8PinID);
    12cc:	a7 e3       	ldi	r26, 0x37	; 55
    12ce:	b0 e0       	ldi	r27, 0x00	; 0
    12d0:	e7 e3       	ldi	r30, 0x37	; 55
    12d2:	f0 e0       	ldi	r31, 0x00	; 0
    12d4:	80 81       	ld	r24, Z
    12d6:	48 2f       	mov	r20, r24
    12d8:	8c 81       	ldd	r24, Y+4	; 0x04
    12da:	28 2f       	mov	r18, r24
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	8b 81       	ldd	r24, Y+3	; 0x03
    12e0:	88 2f       	mov	r24, r24
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	b9 01       	movw	r22, r18
    12e6:	02 c0       	rjmp	.+4      	; 0x12ec <DIO_enumSetPinDirection+0x10c>
    12e8:	66 0f       	add	r22, r22
    12ea:	77 1f       	adc	r23, r23
    12ec:	8a 95       	dec	r24
    12ee:	e2 f7       	brpl	.-8      	; 0x12e8 <DIO_enumSetPinDirection+0x108>
    12f0:	cb 01       	movw	r24, r22
    12f2:	84 2b       	or	r24, r20
    12f4:	8c 93       	st	X, r24
    12f6:	51 c0       	rjmp	.+162    	; 0x139a <DIO_enumSetPinDirection+0x1ba>
				break;
			case DIO_PORTC:
				CLEAR_BIT(DDRC,Copy_u8PinID);
    12f8:	a4 e3       	ldi	r26, 0x34	; 52
    12fa:	b0 e0       	ldi	r27, 0x00	; 0
    12fc:	e4 e3       	ldi	r30, 0x34	; 52
    12fe:	f0 e0       	ldi	r31, 0x00	; 0
    1300:	80 81       	ld	r24, Z
    1302:	48 2f       	mov	r20, r24
    1304:	8b 81       	ldd	r24, Y+3	; 0x03
    1306:	28 2f       	mov	r18, r24
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	81 e0       	ldi	r24, 0x01	; 1
    130c:	90 e0       	ldi	r25, 0x00	; 0
    130e:	02 c0       	rjmp	.+4      	; 0x1314 <DIO_enumSetPinDirection+0x134>
    1310:	88 0f       	add	r24, r24
    1312:	99 1f       	adc	r25, r25
    1314:	2a 95       	dec	r18
    1316:	e2 f7       	brpl	.-8      	; 0x1310 <DIO_enumSetPinDirection+0x130>
    1318:	80 95       	com	r24
    131a:	84 23       	and	r24, r20
    131c:	8c 93       	st	X, r24
				DDRC |= (Copy_u8Direction << Copy_u8PinID);
    131e:	a4 e3       	ldi	r26, 0x34	; 52
    1320:	b0 e0       	ldi	r27, 0x00	; 0
    1322:	e4 e3       	ldi	r30, 0x34	; 52
    1324:	f0 e0       	ldi	r31, 0x00	; 0
    1326:	80 81       	ld	r24, Z
    1328:	48 2f       	mov	r20, r24
    132a:	8c 81       	ldd	r24, Y+4	; 0x04
    132c:	28 2f       	mov	r18, r24
    132e:	30 e0       	ldi	r19, 0x00	; 0
    1330:	8b 81       	ldd	r24, Y+3	; 0x03
    1332:	88 2f       	mov	r24, r24
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	b9 01       	movw	r22, r18
    1338:	02 c0       	rjmp	.+4      	; 0x133e <DIO_enumSetPinDirection+0x15e>
    133a:	66 0f       	add	r22, r22
    133c:	77 1f       	adc	r23, r23
    133e:	8a 95       	dec	r24
    1340:	e2 f7       	brpl	.-8      	; 0x133a <DIO_enumSetPinDirection+0x15a>
    1342:	cb 01       	movw	r24, r22
    1344:	84 2b       	or	r24, r20
    1346:	8c 93       	st	X, r24
    1348:	28 c0       	rjmp	.+80     	; 0x139a <DIO_enumSetPinDirection+0x1ba>
				break;
			case DIO_PORTD:
				CLEAR_BIT(DDRD,Copy_u8PinID);
    134a:	a1 e3       	ldi	r26, 0x31	; 49
    134c:	b0 e0       	ldi	r27, 0x00	; 0
    134e:	e1 e3       	ldi	r30, 0x31	; 49
    1350:	f0 e0       	ldi	r31, 0x00	; 0
    1352:	80 81       	ld	r24, Z
    1354:	48 2f       	mov	r20, r24
    1356:	8b 81       	ldd	r24, Y+3	; 0x03
    1358:	28 2f       	mov	r18, r24
    135a:	30 e0       	ldi	r19, 0x00	; 0
    135c:	81 e0       	ldi	r24, 0x01	; 1
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	02 c0       	rjmp	.+4      	; 0x1366 <DIO_enumSetPinDirection+0x186>
    1362:	88 0f       	add	r24, r24
    1364:	99 1f       	adc	r25, r25
    1366:	2a 95       	dec	r18
    1368:	e2 f7       	brpl	.-8      	; 0x1362 <DIO_enumSetPinDirection+0x182>
    136a:	80 95       	com	r24
    136c:	84 23       	and	r24, r20
    136e:	8c 93       	st	X, r24
				DDRD |= (Copy_u8Direction << Copy_u8PinID);
    1370:	a1 e3       	ldi	r26, 0x31	; 49
    1372:	b0 e0       	ldi	r27, 0x00	; 0
    1374:	e1 e3       	ldi	r30, 0x31	; 49
    1376:	f0 e0       	ldi	r31, 0x00	; 0
    1378:	80 81       	ld	r24, Z
    137a:	48 2f       	mov	r20, r24
    137c:	8c 81       	ldd	r24, Y+4	; 0x04
    137e:	28 2f       	mov	r18, r24
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	8b 81       	ldd	r24, Y+3	; 0x03
    1384:	88 2f       	mov	r24, r24
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	b9 01       	movw	r22, r18
    138a:	02 c0       	rjmp	.+4      	; 0x1390 <DIO_enumSetPinDirection+0x1b0>
    138c:	66 0f       	add	r22, r22
    138e:	77 1f       	adc	r23, r23
    1390:	8a 95       	dec	r24
    1392:	e2 f7       	brpl	.-8      	; 0x138c <DIO_enumSetPinDirection+0x1ac>
    1394:	cb 01       	movw	r24, r22
    1396:	84 2b       	or	r24, r20
    1398:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    139a:	81 e0       	ldi	r24, 0x01	; 1
    139c:	89 83       	std	Y+1, r24	; 0x01
    139e:	02 c0       	rjmp	.+4      	; 0x13a4 <DIO_enumSetPinDirection+0x1c4>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    13a0:	83 e0       	ldi	r24, 0x03	; 3
    13a2:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    13a4:	89 81       	ldd	r24, Y+1	; 0x01
}
    13a6:	26 96       	adiw	r28, 0x06	; 6
    13a8:	0f b6       	in	r0, 0x3f	; 63
    13aa:	f8 94       	cli
    13ac:	de bf       	out	0x3e, r29	; 62
    13ae:	0f be       	out	0x3f, r0	; 63
    13b0:	cd bf       	out	0x3d, r28	; 61
    13b2:	cf 91       	pop	r28
    13b4:	df 91       	pop	r29
    13b6:	08 95       	ret

000013b8 <DIO_enumSetPinValue>:
ES_T DIO_enumSetPinValue (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8Value)
{
    13b8:	df 93       	push	r29
    13ba:	cf 93       	push	r28
    13bc:	00 d0       	rcall	.+0      	; 0x13be <DIO_enumSetPinValue+0x6>
    13be:	00 d0       	rcall	.+0      	; 0x13c0 <DIO_enumSetPinValue+0x8>
    13c0:	00 d0       	rcall	.+0      	; 0x13c2 <DIO_enumSetPinValue+0xa>
    13c2:	cd b7       	in	r28, 0x3d	; 61
    13c4:	de b7       	in	r29, 0x3e	; 62
    13c6:	8a 83       	std	Y+2, r24	; 0x02
    13c8:	6b 83       	std	Y+3, r22	; 0x03
    13ca:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    13cc:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7&&Copy_u8Value<=OUTPUT)
    13ce:	8a 81       	ldd	r24, Y+2	; 0x02
    13d0:	84 30       	cpi	r24, 0x04	; 4
    13d2:	08 f0       	brcs	.+2      	; 0x13d6 <DIO_enumSetPinValue+0x1e>
    13d4:	d1 c0       	rjmp	.+418    	; 0x1578 <DIO_enumSetPinValue+0x1c0>
    13d6:	8b 81       	ldd	r24, Y+3	; 0x03
    13d8:	88 30       	cpi	r24, 0x08	; 8
    13da:	08 f0       	brcs	.+2      	; 0x13de <DIO_enumSetPinValue+0x26>
    13dc:	cd c0       	rjmp	.+410    	; 0x1578 <DIO_enumSetPinValue+0x1c0>
    13de:	8c 81       	ldd	r24, Y+4	; 0x04
    13e0:	82 30       	cpi	r24, 0x02	; 2
    13e2:	08 f0       	brcs	.+2      	; 0x13e6 <DIO_enumSetPinValue+0x2e>
    13e4:	c9 c0       	rjmp	.+402    	; 0x1578 <DIO_enumSetPinValue+0x1c0>
	{
		switch(Copy_u8PortID)
    13e6:	8a 81       	ldd	r24, Y+2	; 0x02
    13e8:	28 2f       	mov	r18, r24
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	3e 83       	std	Y+6, r19	; 0x06
    13ee:	2d 83       	std	Y+5, r18	; 0x05
    13f0:	6d 81       	ldd	r22, Y+5	; 0x05
    13f2:	7e 81       	ldd	r23, Y+6	; 0x06
    13f4:	61 30       	cpi	r22, 0x01	; 1
    13f6:	71 05       	cpc	r23, r1
    13f8:	09 f4       	brne	.+2      	; 0x13fc <DIO_enumSetPinValue+0x44>
    13fa:	41 c0       	rjmp	.+130    	; 0x147e <DIO_enumSetPinValue+0xc6>
    13fc:	8d 81       	ldd	r24, Y+5	; 0x05
    13fe:	9e 81       	ldd	r25, Y+6	; 0x06
    1400:	82 30       	cpi	r24, 0x02	; 2
    1402:	91 05       	cpc	r25, r1
    1404:	34 f4       	brge	.+12     	; 0x1412 <DIO_enumSetPinValue+0x5a>
    1406:	2d 81       	ldd	r18, Y+5	; 0x05
    1408:	3e 81       	ldd	r19, Y+6	; 0x06
    140a:	21 15       	cp	r18, r1
    140c:	31 05       	cpc	r19, r1
    140e:	71 f0       	breq	.+28     	; 0x142c <DIO_enumSetPinValue+0x74>
    1410:	b0 c0       	rjmp	.+352    	; 0x1572 <DIO_enumSetPinValue+0x1ba>
    1412:	6d 81       	ldd	r22, Y+5	; 0x05
    1414:	7e 81       	ldd	r23, Y+6	; 0x06
    1416:	62 30       	cpi	r22, 0x02	; 2
    1418:	71 05       	cpc	r23, r1
    141a:	09 f4       	brne	.+2      	; 0x141e <DIO_enumSetPinValue+0x66>
    141c:	59 c0       	rjmp	.+178    	; 0x14d0 <DIO_enumSetPinValue+0x118>
    141e:	8d 81       	ldd	r24, Y+5	; 0x05
    1420:	9e 81       	ldd	r25, Y+6	; 0x06
    1422:	83 30       	cpi	r24, 0x03	; 3
    1424:	91 05       	cpc	r25, r1
    1426:	09 f4       	brne	.+2      	; 0x142a <DIO_enumSetPinValue+0x72>
    1428:	7c c0       	rjmp	.+248    	; 0x1522 <DIO_enumSetPinValue+0x16a>
    142a:	a3 c0       	rjmp	.+326    	; 0x1572 <DIO_enumSetPinValue+0x1ba>
		{
			case DIO_PORTA:
				CLEAR_BIT(PORTA,Copy_u8PinID);
    142c:	ab e3       	ldi	r26, 0x3B	; 59
    142e:	b0 e0       	ldi	r27, 0x00	; 0
    1430:	eb e3       	ldi	r30, 0x3B	; 59
    1432:	f0 e0       	ldi	r31, 0x00	; 0
    1434:	80 81       	ld	r24, Z
    1436:	48 2f       	mov	r20, r24
    1438:	8b 81       	ldd	r24, Y+3	; 0x03
    143a:	28 2f       	mov	r18, r24
    143c:	30 e0       	ldi	r19, 0x00	; 0
    143e:	81 e0       	ldi	r24, 0x01	; 1
    1440:	90 e0       	ldi	r25, 0x00	; 0
    1442:	02 c0       	rjmp	.+4      	; 0x1448 <DIO_enumSetPinValue+0x90>
    1444:	88 0f       	add	r24, r24
    1446:	99 1f       	adc	r25, r25
    1448:	2a 95       	dec	r18
    144a:	e2 f7       	brpl	.-8      	; 0x1444 <DIO_enumSetPinValue+0x8c>
    144c:	80 95       	com	r24
    144e:	84 23       	and	r24, r20
    1450:	8c 93       	st	X, r24
				PORTA |= (Copy_u8Value << Copy_u8PinID);
    1452:	ab e3       	ldi	r26, 0x3B	; 59
    1454:	b0 e0       	ldi	r27, 0x00	; 0
    1456:	eb e3       	ldi	r30, 0x3B	; 59
    1458:	f0 e0       	ldi	r31, 0x00	; 0
    145a:	80 81       	ld	r24, Z
    145c:	48 2f       	mov	r20, r24
    145e:	8c 81       	ldd	r24, Y+4	; 0x04
    1460:	28 2f       	mov	r18, r24
    1462:	30 e0       	ldi	r19, 0x00	; 0
    1464:	8b 81       	ldd	r24, Y+3	; 0x03
    1466:	88 2f       	mov	r24, r24
    1468:	90 e0       	ldi	r25, 0x00	; 0
    146a:	b9 01       	movw	r22, r18
    146c:	02 c0       	rjmp	.+4      	; 0x1472 <DIO_enumSetPinValue+0xba>
    146e:	66 0f       	add	r22, r22
    1470:	77 1f       	adc	r23, r23
    1472:	8a 95       	dec	r24
    1474:	e2 f7       	brpl	.-8      	; 0x146e <DIO_enumSetPinValue+0xb6>
    1476:	cb 01       	movw	r24, r22
    1478:	84 2b       	or	r24, r20
    147a:	8c 93       	st	X, r24
    147c:	7a c0       	rjmp	.+244    	; 0x1572 <DIO_enumSetPinValue+0x1ba>
				break;
			case DIO_PORTB:
				CLEAR_BIT(PORTB,Copy_u8PinID);
    147e:	a8 e3       	ldi	r26, 0x38	; 56
    1480:	b0 e0       	ldi	r27, 0x00	; 0
    1482:	e8 e3       	ldi	r30, 0x38	; 56
    1484:	f0 e0       	ldi	r31, 0x00	; 0
    1486:	80 81       	ld	r24, Z
    1488:	48 2f       	mov	r20, r24
    148a:	8b 81       	ldd	r24, Y+3	; 0x03
    148c:	28 2f       	mov	r18, r24
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	81 e0       	ldi	r24, 0x01	; 1
    1492:	90 e0       	ldi	r25, 0x00	; 0
    1494:	02 c0       	rjmp	.+4      	; 0x149a <DIO_enumSetPinValue+0xe2>
    1496:	88 0f       	add	r24, r24
    1498:	99 1f       	adc	r25, r25
    149a:	2a 95       	dec	r18
    149c:	e2 f7       	brpl	.-8      	; 0x1496 <DIO_enumSetPinValue+0xde>
    149e:	80 95       	com	r24
    14a0:	84 23       	and	r24, r20
    14a2:	8c 93       	st	X, r24
				PORTB |= (Copy_u8Value << Copy_u8PinID);
    14a4:	a8 e3       	ldi	r26, 0x38	; 56
    14a6:	b0 e0       	ldi	r27, 0x00	; 0
    14a8:	e8 e3       	ldi	r30, 0x38	; 56
    14aa:	f0 e0       	ldi	r31, 0x00	; 0
    14ac:	80 81       	ld	r24, Z
    14ae:	48 2f       	mov	r20, r24
    14b0:	8c 81       	ldd	r24, Y+4	; 0x04
    14b2:	28 2f       	mov	r18, r24
    14b4:	30 e0       	ldi	r19, 0x00	; 0
    14b6:	8b 81       	ldd	r24, Y+3	; 0x03
    14b8:	88 2f       	mov	r24, r24
    14ba:	90 e0       	ldi	r25, 0x00	; 0
    14bc:	b9 01       	movw	r22, r18
    14be:	02 c0       	rjmp	.+4      	; 0x14c4 <DIO_enumSetPinValue+0x10c>
    14c0:	66 0f       	add	r22, r22
    14c2:	77 1f       	adc	r23, r23
    14c4:	8a 95       	dec	r24
    14c6:	e2 f7       	brpl	.-8      	; 0x14c0 <DIO_enumSetPinValue+0x108>
    14c8:	cb 01       	movw	r24, r22
    14ca:	84 2b       	or	r24, r20
    14cc:	8c 93       	st	X, r24
    14ce:	51 c0       	rjmp	.+162    	; 0x1572 <DIO_enumSetPinValue+0x1ba>
				break;
			case DIO_PORTC:
				CLEAR_BIT(PORTC,Copy_u8PinID);
    14d0:	a5 e3       	ldi	r26, 0x35	; 53
    14d2:	b0 e0       	ldi	r27, 0x00	; 0
    14d4:	e5 e3       	ldi	r30, 0x35	; 53
    14d6:	f0 e0       	ldi	r31, 0x00	; 0
    14d8:	80 81       	ld	r24, Z
    14da:	48 2f       	mov	r20, r24
    14dc:	8b 81       	ldd	r24, Y+3	; 0x03
    14de:	28 2f       	mov	r18, r24
    14e0:	30 e0       	ldi	r19, 0x00	; 0
    14e2:	81 e0       	ldi	r24, 0x01	; 1
    14e4:	90 e0       	ldi	r25, 0x00	; 0
    14e6:	02 c0       	rjmp	.+4      	; 0x14ec <DIO_enumSetPinValue+0x134>
    14e8:	88 0f       	add	r24, r24
    14ea:	99 1f       	adc	r25, r25
    14ec:	2a 95       	dec	r18
    14ee:	e2 f7       	brpl	.-8      	; 0x14e8 <DIO_enumSetPinValue+0x130>
    14f0:	80 95       	com	r24
    14f2:	84 23       	and	r24, r20
    14f4:	8c 93       	st	X, r24
				PORTC |= (Copy_u8Value << Copy_u8PinID);
    14f6:	a5 e3       	ldi	r26, 0x35	; 53
    14f8:	b0 e0       	ldi	r27, 0x00	; 0
    14fa:	e5 e3       	ldi	r30, 0x35	; 53
    14fc:	f0 e0       	ldi	r31, 0x00	; 0
    14fe:	80 81       	ld	r24, Z
    1500:	48 2f       	mov	r20, r24
    1502:	8c 81       	ldd	r24, Y+4	; 0x04
    1504:	28 2f       	mov	r18, r24
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	8b 81       	ldd	r24, Y+3	; 0x03
    150a:	88 2f       	mov	r24, r24
    150c:	90 e0       	ldi	r25, 0x00	; 0
    150e:	b9 01       	movw	r22, r18
    1510:	02 c0       	rjmp	.+4      	; 0x1516 <DIO_enumSetPinValue+0x15e>
    1512:	66 0f       	add	r22, r22
    1514:	77 1f       	adc	r23, r23
    1516:	8a 95       	dec	r24
    1518:	e2 f7       	brpl	.-8      	; 0x1512 <DIO_enumSetPinValue+0x15a>
    151a:	cb 01       	movw	r24, r22
    151c:	84 2b       	or	r24, r20
    151e:	8c 93       	st	X, r24
    1520:	28 c0       	rjmp	.+80     	; 0x1572 <DIO_enumSetPinValue+0x1ba>
				break;
			case DIO_PORTD:
				CLEAR_BIT(PORTD,Copy_u8PinID);
    1522:	a2 e3       	ldi	r26, 0x32	; 50
    1524:	b0 e0       	ldi	r27, 0x00	; 0
    1526:	e2 e3       	ldi	r30, 0x32	; 50
    1528:	f0 e0       	ldi	r31, 0x00	; 0
    152a:	80 81       	ld	r24, Z
    152c:	48 2f       	mov	r20, r24
    152e:	8b 81       	ldd	r24, Y+3	; 0x03
    1530:	28 2f       	mov	r18, r24
    1532:	30 e0       	ldi	r19, 0x00	; 0
    1534:	81 e0       	ldi	r24, 0x01	; 1
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	02 c0       	rjmp	.+4      	; 0x153e <DIO_enumSetPinValue+0x186>
    153a:	88 0f       	add	r24, r24
    153c:	99 1f       	adc	r25, r25
    153e:	2a 95       	dec	r18
    1540:	e2 f7       	brpl	.-8      	; 0x153a <DIO_enumSetPinValue+0x182>
    1542:	80 95       	com	r24
    1544:	84 23       	and	r24, r20
    1546:	8c 93       	st	X, r24
				PORTD |= (Copy_u8Value << Copy_u8PinID);
    1548:	a2 e3       	ldi	r26, 0x32	; 50
    154a:	b0 e0       	ldi	r27, 0x00	; 0
    154c:	e2 e3       	ldi	r30, 0x32	; 50
    154e:	f0 e0       	ldi	r31, 0x00	; 0
    1550:	80 81       	ld	r24, Z
    1552:	48 2f       	mov	r20, r24
    1554:	8c 81       	ldd	r24, Y+4	; 0x04
    1556:	28 2f       	mov	r18, r24
    1558:	30 e0       	ldi	r19, 0x00	; 0
    155a:	8b 81       	ldd	r24, Y+3	; 0x03
    155c:	88 2f       	mov	r24, r24
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	b9 01       	movw	r22, r18
    1562:	02 c0       	rjmp	.+4      	; 0x1568 <DIO_enumSetPinValue+0x1b0>
    1564:	66 0f       	add	r22, r22
    1566:	77 1f       	adc	r23, r23
    1568:	8a 95       	dec	r24
    156a:	e2 f7       	brpl	.-8      	; 0x1564 <DIO_enumSetPinValue+0x1ac>
    156c:	cb 01       	movw	r24, r22
    156e:	84 2b       	or	r24, r20
    1570:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    1572:	81 e0       	ldi	r24, 0x01	; 1
    1574:	89 83       	std	Y+1, r24	; 0x01
    1576:	02 c0       	rjmp	.+4      	; 0x157c <DIO_enumSetPinValue+0x1c4>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    1578:	83 e0       	ldi	r24, 0x03	; 3
    157a:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    157c:	89 81       	ldd	r24, Y+1	; 0x01
}
    157e:	26 96       	adiw	r28, 0x06	; 6
    1580:	0f b6       	in	r0, 0x3f	; 63
    1582:	f8 94       	cli
    1584:	de bf       	out	0x3e, r29	; 62
    1586:	0f be       	out	0x3f, r0	; 63
    1588:	cd bf       	out	0x3d, r28	; 61
    158a:	cf 91       	pop	r28
    158c:	df 91       	pop	r29
    158e:	08 95       	ret

00001590 <DIO_enumTogglePinDirection>:
ES_T DIO_enumTogglePinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID)
{
    1590:	df 93       	push	r29
    1592:	cf 93       	push	r28
    1594:	00 d0       	rcall	.+0      	; 0x1596 <DIO_enumTogglePinDirection+0x6>
    1596:	00 d0       	rcall	.+0      	; 0x1598 <DIO_enumTogglePinDirection+0x8>
    1598:	0f 92       	push	r0
    159a:	cd b7       	in	r28, 0x3d	; 61
    159c:	de b7       	in	r29, 0x3e	; 62
    159e:	8a 83       	std	Y+2, r24	; 0x02
    15a0:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    15a2:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
    15a4:	8a 81       	ldd	r24, Y+2	; 0x02
    15a6:	84 30       	cpi	r24, 0x04	; 4
    15a8:	08 f0       	brcs	.+2      	; 0x15ac <DIO_enumTogglePinDirection+0x1c>
    15aa:	75 c0       	rjmp	.+234    	; 0x1696 <DIO_enumTogglePinDirection+0x106>
    15ac:	8b 81       	ldd	r24, Y+3	; 0x03
    15ae:	88 30       	cpi	r24, 0x08	; 8
    15b0:	08 f0       	brcs	.+2      	; 0x15b4 <DIO_enumTogglePinDirection+0x24>
    15b2:	71 c0       	rjmp	.+226    	; 0x1696 <DIO_enumTogglePinDirection+0x106>
	{
		switch(Copy_u8PortID)
    15b4:	8a 81       	ldd	r24, Y+2	; 0x02
    15b6:	28 2f       	mov	r18, r24
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	3d 83       	std	Y+5, r19	; 0x05
    15bc:	2c 83       	std	Y+4, r18	; 0x04
    15be:	8c 81       	ldd	r24, Y+4	; 0x04
    15c0:	9d 81       	ldd	r25, Y+5	; 0x05
    15c2:	81 30       	cpi	r24, 0x01	; 1
    15c4:	91 05       	cpc	r25, r1
    15c6:	49 f1       	breq	.+82     	; 0x161a <DIO_enumTogglePinDirection+0x8a>
    15c8:	2c 81       	ldd	r18, Y+4	; 0x04
    15ca:	3d 81       	ldd	r19, Y+5	; 0x05
    15cc:	22 30       	cpi	r18, 0x02	; 2
    15ce:	31 05       	cpc	r19, r1
    15d0:	2c f4       	brge	.+10     	; 0x15dc <DIO_enumTogglePinDirection+0x4c>
    15d2:	8c 81       	ldd	r24, Y+4	; 0x04
    15d4:	9d 81       	ldd	r25, Y+5	; 0x05
    15d6:	00 97       	sbiw	r24, 0x00	; 0
    15d8:	61 f0       	breq	.+24     	; 0x15f2 <DIO_enumTogglePinDirection+0x62>
    15da:	5a c0       	rjmp	.+180    	; 0x1690 <DIO_enumTogglePinDirection+0x100>
    15dc:	2c 81       	ldd	r18, Y+4	; 0x04
    15de:	3d 81       	ldd	r19, Y+5	; 0x05
    15e0:	22 30       	cpi	r18, 0x02	; 2
    15e2:	31 05       	cpc	r19, r1
    15e4:	71 f1       	breq	.+92     	; 0x1642 <DIO_enumTogglePinDirection+0xb2>
    15e6:	8c 81       	ldd	r24, Y+4	; 0x04
    15e8:	9d 81       	ldd	r25, Y+5	; 0x05
    15ea:	83 30       	cpi	r24, 0x03	; 3
    15ec:	91 05       	cpc	r25, r1
    15ee:	e9 f1       	breq	.+122    	; 0x166a <DIO_enumTogglePinDirection+0xda>
    15f0:	4f c0       	rjmp	.+158    	; 0x1690 <DIO_enumTogglePinDirection+0x100>
		{
			case DIO_PORTA:
				TOGGLE_BIT(DDRA,Copy_u8PinID);
    15f2:	aa e3       	ldi	r26, 0x3A	; 58
    15f4:	b0 e0       	ldi	r27, 0x00	; 0
    15f6:	ea e3       	ldi	r30, 0x3A	; 58
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
    15fa:	80 81       	ld	r24, Z
    15fc:	48 2f       	mov	r20, r24
    15fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1600:	28 2f       	mov	r18, r24
    1602:	30 e0       	ldi	r19, 0x00	; 0
    1604:	81 e0       	ldi	r24, 0x01	; 1
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	02 2e       	mov	r0, r18
    160a:	02 c0       	rjmp	.+4      	; 0x1610 <DIO_enumTogglePinDirection+0x80>
    160c:	88 0f       	add	r24, r24
    160e:	99 1f       	adc	r25, r25
    1610:	0a 94       	dec	r0
    1612:	e2 f7       	brpl	.-8      	; 0x160c <DIO_enumTogglePinDirection+0x7c>
    1614:	84 27       	eor	r24, r20
    1616:	8c 93       	st	X, r24
    1618:	3b c0       	rjmp	.+118    	; 0x1690 <DIO_enumTogglePinDirection+0x100>
				break;
			case DIO_PORTB:
				TOGGLE_BIT(DDRB,Copy_u8PinID);
    161a:	a7 e3       	ldi	r26, 0x37	; 55
    161c:	b0 e0       	ldi	r27, 0x00	; 0
    161e:	e7 e3       	ldi	r30, 0x37	; 55
    1620:	f0 e0       	ldi	r31, 0x00	; 0
    1622:	80 81       	ld	r24, Z
    1624:	48 2f       	mov	r20, r24
    1626:	8b 81       	ldd	r24, Y+3	; 0x03
    1628:	28 2f       	mov	r18, r24
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	81 e0       	ldi	r24, 0x01	; 1
    162e:	90 e0       	ldi	r25, 0x00	; 0
    1630:	02 2e       	mov	r0, r18
    1632:	02 c0       	rjmp	.+4      	; 0x1638 <DIO_enumTogglePinDirection+0xa8>
    1634:	88 0f       	add	r24, r24
    1636:	99 1f       	adc	r25, r25
    1638:	0a 94       	dec	r0
    163a:	e2 f7       	brpl	.-8      	; 0x1634 <DIO_enumTogglePinDirection+0xa4>
    163c:	84 27       	eor	r24, r20
    163e:	8c 93       	st	X, r24
    1640:	27 c0       	rjmp	.+78     	; 0x1690 <DIO_enumTogglePinDirection+0x100>
				break;
			case DIO_PORTC:
				TOGGLE_BIT(DDRC,Copy_u8PinID);
    1642:	a4 e3       	ldi	r26, 0x34	; 52
    1644:	b0 e0       	ldi	r27, 0x00	; 0
    1646:	e4 e3       	ldi	r30, 0x34	; 52
    1648:	f0 e0       	ldi	r31, 0x00	; 0
    164a:	80 81       	ld	r24, Z
    164c:	48 2f       	mov	r20, r24
    164e:	8b 81       	ldd	r24, Y+3	; 0x03
    1650:	28 2f       	mov	r18, r24
    1652:	30 e0       	ldi	r19, 0x00	; 0
    1654:	81 e0       	ldi	r24, 0x01	; 1
    1656:	90 e0       	ldi	r25, 0x00	; 0
    1658:	02 2e       	mov	r0, r18
    165a:	02 c0       	rjmp	.+4      	; 0x1660 <DIO_enumTogglePinDirection+0xd0>
    165c:	88 0f       	add	r24, r24
    165e:	99 1f       	adc	r25, r25
    1660:	0a 94       	dec	r0
    1662:	e2 f7       	brpl	.-8      	; 0x165c <DIO_enumTogglePinDirection+0xcc>
    1664:	84 27       	eor	r24, r20
    1666:	8c 93       	st	X, r24
    1668:	13 c0       	rjmp	.+38     	; 0x1690 <DIO_enumTogglePinDirection+0x100>
				break;
			case DIO_PORTD:
				TOGGLE_BIT(DDRD,Copy_u8PinID);
    166a:	a1 e3       	ldi	r26, 0x31	; 49
    166c:	b0 e0       	ldi	r27, 0x00	; 0
    166e:	e1 e3       	ldi	r30, 0x31	; 49
    1670:	f0 e0       	ldi	r31, 0x00	; 0
    1672:	80 81       	ld	r24, Z
    1674:	48 2f       	mov	r20, r24
    1676:	8b 81       	ldd	r24, Y+3	; 0x03
    1678:	28 2f       	mov	r18, r24
    167a:	30 e0       	ldi	r19, 0x00	; 0
    167c:	81 e0       	ldi	r24, 0x01	; 1
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	02 2e       	mov	r0, r18
    1682:	02 c0       	rjmp	.+4      	; 0x1688 <DIO_enumTogglePinDirection+0xf8>
    1684:	88 0f       	add	r24, r24
    1686:	99 1f       	adc	r25, r25
    1688:	0a 94       	dec	r0
    168a:	e2 f7       	brpl	.-8      	; 0x1684 <DIO_enumTogglePinDirection+0xf4>
    168c:	84 27       	eor	r24, r20
    168e:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    1690:	81 e0       	ldi	r24, 0x01	; 1
    1692:	89 83       	std	Y+1, r24	; 0x01
    1694:	02 c0       	rjmp	.+4      	; 0x169a <DIO_enumTogglePinDirection+0x10a>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    1696:	83 e0       	ldi	r24, 0x03	; 3
    1698:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    169a:	89 81       	ldd	r24, Y+1	; 0x01
}
    169c:	0f 90       	pop	r0
    169e:	0f 90       	pop	r0
    16a0:	0f 90       	pop	r0
    16a2:	0f 90       	pop	r0
    16a4:	0f 90       	pop	r0
    16a6:	cf 91       	pop	r28
    16a8:	df 91       	pop	r29
    16aa:	08 95       	ret

000016ac <DIO_enumTogglePinValue>:
ES_T DIO_enumTogglePinValue (u8 Copy_u8PortID,u8 Copy_u8PinID)
{
    16ac:	df 93       	push	r29
    16ae:	cf 93       	push	r28
    16b0:	00 d0       	rcall	.+0      	; 0x16b2 <DIO_enumTogglePinValue+0x6>
    16b2:	00 d0       	rcall	.+0      	; 0x16b4 <DIO_enumTogglePinValue+0x8>
    16b4:	0f 92       	push	r0
    16b6:	cd b7       	in	r28, 0x3d	; 61
    16b8:	de b7       	in	r29, 0x3e	; 62
    16ba:	8a 83       	std	Y+2, r24	; 0x02
    16bc:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    16be:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
    16c0:	8a 81       	ldd	r24, Y+2	; 0x02
    16c2:	84 30       	cpi	r24, 0x04	; 4
    16c4:	08 f0       	brcs	.+2      	; 0x16c8 <DIO_enumTogglePinValue+0x1c>
    16c6:	75 c0       	rjmp	.+234    	; 0x17b2 <DIO_enumTogglePinValue+0x106>
    16c8:	8b 81       	ldd	r24, Y+3	; 0x03
    16ca:	88 30       	cpi	r24, 0x08	; 8
    16cc:	08 f0       	brcs	.+2      	; 0x16d0 <DIO_enumTogglePinValue+0x24>
    16ce:	71 c0       	rjmp	.+226    	; 0x17b2 <DIO_enumTogglePinValue+0x106>
	{
		switch(Copy_u8PortID)
    16d0:	8a 81       	ldd	r24, Y+2	; 0x02
    16d2:	28 2f       	mov	r18, r24
    16d4:	30 e0       	ldi	r19, 0x00	; 0
    16d6:	3d 83       	std	Y+5, r19	; 0x05
    16d8:	2c 83       	std	Y+4, r18	; 0x04
    16da:	8c 81       	ldd	r24, Y+4	; 0x04
    16dc:	9d 81       	ldd	r25, Y+5	; 0x05
    16de:	81 30       	cpi	r24, 0x01	; 1
    16e0:	91 05       	cpc	r25, r1
    16e2:	49 f1       	breq	.+82     	; 0x1736 <DIO_enumTogglePinValue+0x8a>
    16e4:	2c 81       	ldd	r18, Y+4	; 0x04
    16e6:	3d 81       	ldd	r19, Y+5	; 0x05
    16e8:	22 30       	cpi	r18, 0x02	; 2
    16ea:	31 05       	cpc	r19, r1
    16ec:	2c f4       	brge	.+10     	; 0x16f8 <DIO_enumTogglePinValue+0x4c>
    16ee:	8c 81       	ldd	r24, Y+4	; 0x04
    16f0:	9d 81       	ldd	r25, Y+5	; 0x05
    16f2:	00 97       	sbiw	r24, 0x00	; 0
    16f4:	61 f0       	breq	.+24     	; 0x170e <DIO_enumTogglePinValue+0x62>
    16f6:	5a c0       	rjmp	.+180    	; 0x17ac <DIO_enumTogglePinValue+0x100>
    16f8:	2c 81       	ldd	r18, Y+4	; 0x04
    16fa:	3d 81       	ldd	r19, Y+5	; 0x05
    16fc:	22 30       	cpi	r18, 0x02	; 2
    16fe:	31 05       	cpc	r19, r1
    1700:	71 f1       	breq	.+92     	; 0x175e <DIO_enumTogglePinValue+0xb2>
    1702:	8c 81       	ldd	r24, Y+4	; 0x04
    1704:	9d 81       	ldd	r25, Y+5	; 0x05
    1706:	83 30       	cpi	r24, 0x03	; 3
    1708:	91 05       	cpc	r25, r1
    170a:	e9 f1       	breq	.+122    	; 0x1786 <DIO_enumTogglePinValue+0xda>
    170c:	4f c0       	rjmp	.+158    	; 0x17ac <DIO_enumTogglePinValue+0x100>
		{
			case DIO_PORTA:
				TOGGLE_BIT(PORTA,Copy_u8PinID);
    170e:	ab e3       	ldi	r26, 0x3B	; 59
    1710:	b0 e0       	ldi	r27, 0x00	; 0
    1712:	eb e3       	ldi	r30, 0x3B	; 59
    1714:	f0 e0       	ldi	r31, 0x00	; 0
    1716:	80 81       	ld	r24, Z
    1718:	48 2f       	mov	r20, r24
    171a:	8b 81       	ldd	r24, Y+3	; 0x03
    171c:	28 2f       	mov	r18, r24
    171e:	30 e0       	ldi	r19, 0x00	; 0
    1720:	81 e0       	ldi	r24, 0x01	; 1
    1722:	90 e0       	ldi	r25, 0x00	; 0
    1724:	02 2e       	mov	r0, r18
    1726:	02 c0       	rjmp	.+4      	; 0x172c <DIO_enumTogglePinValue+0x80>
    1728:	88 0f       	add	r24, r24
    172a:	99 1f       	adc	r25, r25
    172c:	0a 94       	dec	r0
    172e:	e2 f7       	brpl	.-8      	; 0x1728 <DIO_enumTogglePinValue+0x7c>
    1730:	84 27       	eor	r24, r20
    1732:	8c 93       	st	X, r24
    1734:	3b c0       	rjmp	.+118    	; 0x17ac <DIO_enumTogglePinValue+0x100>
				break;
			case DIO_PORTB:
				TOGGLE_BIT(PORTB,Copy_u8PinID);
    1736:	a8 e3       	ldi	r26, 0x38	; 56
    1738:	b0 e0       	ldi	r27, 0x00	; 0
    173a:	e8 e3       	ldi	r30, 0x38	; 56
    173c:	f0 e0       	ldi	r31, 0x00	; 0
    173e:	80 81       	ld	r24, Z
    1740:	48 2f       	mov	r20, r24
    1742:	8b 81       	ldd	r24, Y+3	; 0x03
    1744:	28 2f       	mov	r18, r24
    1746:	30 e0       	ldi	r19, 0x00	; 0
    1748:	81 e0       	ldi	r24, 0x01	; 1
    174a:	90 e0       	ldi	r25, 0x00	; 0
    174c:	02 2e       	mov	r0, r18
    174e:	02 c0       	rjmp	.+4      	; 0x1754 <DIO_enumTogglePinValue+0xa8>
    1750:	88 0f       	add	r24, r24
    1752:	99 1f       	adc	r25, r25
    1754:	0a 94       	dec	r0
    1756:	e2 f7       	brpl	.-8      	; 0x1750 <DIO_enumTogglePinValue+0xa4>
    1758:	84 27       	eor	r24, r20
    175a:	8c 93       	st	X, r24
    175c:	27 c0       	rjmp	.+78     	; 0x17ac <DIO_enumTogglePinValue+0x100>
				break;
			case DIO_PORTC:
				TOGGLE_BIT(PORTC,Copy_u8PinID);
    175e:	a5 e3       	ldi	r26, 0x35	; 53
    1760:	b0 e0       	ldi	r27, 0x00	; 0
    1762:	e5 e3       	ldi	r30, 0x35	; 53
    1764:	f0 e0       	ldi	r31, 0x00	; 0
    1766:	80 81       	ld	r24, Z
    1768:	48 2f       	mov	r20, r24
    176a:	8b 81       	ldd	r24, Y+3	; 0x03
    176c:	28 2f       	mov	r18, r24
    176e:	30 e0       	ldi	r19, 0x00	; 0
    1770:	81 e0       	ldi	r24, 0x01	; 1
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	02 2e       	mov	r0, r18
    1776:	02 c0       	rjmp	.+4      	; 0x177c <DIO_enumTogglePinValue+0xd0>
    1778:	88 0f       	add	r24, r24
    177a:	99 1f       	adc	r25, r25
    177c:	0a 94       	dec	r0
    177e:	e2 f7       	brpl	.-8      	; 0x1778 <DIO_enumTogglePinValue+0xcc>
    1780:	84 27       	eor	r24, r20
    1782:	8c 93       	st	X, r24
    1784:	13 c0       	rjmp	.+38     	; 0x17ac <DIO_enumTogglePinValue+0x100>
				break;
			case DIO_PORTD:
				TOGGLE_BIT(PORTD,Copy_u8PinID);
    1786:	a2 e3       	ldi	r26, 0x32	; 50
    1788:	b0 e0       	ldi	r27, 0x00	; 0
    178a:	e2 e3       	ldi	r30, 0x32	; 50
    178c:	f0 e0       	ldi	r31, 0x00	; 0
    178e:	80 81       	ld	r24, Z
    1790:	48 2f       	mov	r20, r24
    1792:	8b 81       	ldd	r24, Y+3	; 0x03
    1794:	28 2f       	mov	r18, r24
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	81 e0       	ldi	r24, 0x01	; 1
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	02 2e       	mov	r0, r18
    179e:	02 c0       	rjmp	.+4      	; 0x17a4 <DIO_enumTogglePinValue+0xf8>
    17a0:	88 0f       	add	r24, r24
    17a2:	99 1f       	adc	r25, r25
    17a4:	0a 94       	dec	r0
    17a6:	e2 f7       	brpl	.-8      	; 0x17a0 <DIO_enumTogglePinValue+0xf4>
    17a8:	84 27       	eor	r24, r20
    17aa:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    17ac:	81 e0       	ldi	r24, 0x01	; 1
    17ae:	89 83       	std	Y+1, r24	; 0x01
    17b0:	02 c0       	rjmp	.+4      	; 0x17b6 <DIO_enumTogglePinValue+0x10a>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    17b2:	83 e0       	ldi	r24, 0x03	; 3
    17b4:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    17b6:	89 81       	ldd	r24, Y+1	; 0x01
}
    17b8:	0f 90       	pop	r0
    17ba:	0f 90       	pop	r0
    17bc:	0f 90       	pop	r0
    17be:	0f 90       	pop	r0
    17c0:	0f 90       	pop	r0
    17c2:	cf 91       	pop	r28
    17c4:	df 91       	pop	r29
    17c6:	08 95       	ret

000017c8 <DIO_enumGetPinDirection>:
ES_T DIO_enumGetPinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 *Copy_pu8Direction)
{
    17c8:	df 93       	push	r29
    17ca:	cf 93       	push	r28
    17cc:	cd b7       	in	r28, 0x3d	; 61
    17ce:	de b7       	in	r29, 0x3e	; 62
    17d0:	27 97       	sbiw	r28, 0x07	; 7
    17d2:	0f b6       	in	r0, 0x3f	; 63
    17d4:	f8 94       	cli
    17d6:	de bf       	out	0x3e, r29	; 62
    17d8:	0f be       	out	0x3f, r0	; 63
    17da:	cd bf       	out	0x3d, r28	; 61
    17dc:	8a 83       	std	Y+2, r24	; 0x02
    17de:	6b 83       	std	Y+3, r22	; 0x03
    17e0:	5d 83       	std	Y+5, r21	; 0x05
    17e2:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    17e4:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
    17e6:	8a 81       	ldd	r24, Y+2	; 0x02
    17e8:	84 30       	cpi	r24, 0x04	; 4
    17ea:	08 f0       	brcs	.+2      	; 0x17ee <DIO_enumGetPinDirection+0x26>
    17ec:	7f c0       	rjmp	.+254    	; 0x18ec <DIO_enumGetPinDirection+0x124>
    17ee:	8b 81       	ldd	r24, Y+3	; 0x03
    17f0:	88 30       	cpi	r24, 0x08	; 8
    17f2:	08 f0       	brcs	.+2      	; 0x17f6 <DIO_enumGetPinDirection+0x2e>
    17f4:	7b c0       	rjmp	.+246    	; 0x18ec <DIO_enumGetPinDirection+0x124>
		{
			if (Copy_pu8Direction!=NULL)
    17f6:	8c 81       	ldd	r24, Y+4	; 0x04
    17f8:	9d 81       	ldd	r25, Y+5	; 0x05
    17fa:	00 97       	sbiw	r24, 0x00	; 0
    17fc:	09 f4       	brne	.+2      	; 0x1800 <DIO_enumGetPinDirection+0x38>
    17fe:	73 c0       	rjmp	.+230    	; 0x18e6 <DIO_enumGetPinDirection+0x11e>
			{
				switch(Copy_u8PortID)
    1800:	8a 81       	ldd	r24, Y+2	; 0x02
    1802:	28 2f       	mov	r18, r24
    1804:	30 e0       	ldi	r19, 0x00	; 0
    1806:	3f 83       	std	Y+7, r19	; 0x07
    1808:	2e 83       	std	Y+6, r18	; 0x06
    180a:	4e 81       	ldd	r20, Y+6	; 0x06
    180c:	5f 81       	ldd	r21, Y+7	; 0x07
    180e:	41 30       	cpi	r20, 0x01	; 1
    1810:	51 05       	cpc	r21, r1
    1812:	59 f1       	breq	.+86     	; 0x186a <DIO_enumGetPinDirection+0xa2>
    1814:	8e 81       	ldd	r24, Y+6	; 0x06
    1816:	9f 81       	ldd	r25, Y+7	; 0x07
    1818:	82 30       	cpi	r24, 0x02	; 2
    181a:	91 05       	cpc	r25, r1
    181c:	34 f4       	brge	.+12     	; 0x182a <DIO_enumGetPinDirection+0x62>
    181e:	2e 81       	ldd	r18, Y+6	; 0x06
    1820:	3f 81       	ldd	r19, Y+7	; 0x07
    1822:	21 15       	cp	r18, r1
    1824:	31 05       	cpc	r19, r1
    1826:	69 f0       	breq	.+26     	; 0x1842 <DIO_enumGetPinDirection+0x7a>
    1828:	5b c0       	rjmp	.+182    	; 0x18e0 <DIO_enumGetPinDirection+0x118>
    182a:	4e 81       	ldd	r20, Y+6	; 0x06
    182c:	5f 81       	ldd	r21, Y+7	; 0x07
    182e:	42 30       	cpi	r20, 0x02	; 2
    1830:	51 05       	cpc	r21, r1
    1832:	79 f1       	breq	.+94     	; 0x1892 <DIO_enumGetPinDirection+0xca>
    1834:	8e 81       	ldd	r24, Y+6	; 0x06
    1836:	9f 81       	ldd	r25, Y+7	; 0x07
    1838:	83 30       	cpi	r24, 0x03	; 3
    183a:	91 05       	cpc	r25, r1
    183c:	09 f4       	brne	.+2      	; 0x1840 <DIO_enumGetPinDirection+0x78>
    183e:	3d c0       	rjmp	.+122    	; 0x18ba <DIO_enumGetPinDirection+0xf2>
    1840:	4f c0       	rjmp	.+158    	; 0x18e0 <DIO_enumGetPinDirection+0x118>
				{
					case DIO_PORTA:
						*Copy_pu8Direction=READ_BIT(DDRA,Copy_u8PinID);
    1842:	ea e3       	ldi	r30, 0x3A	; 58
    1844:	f0 e0       	ldi	r31, 0x00	; 0
    1846:	80 81       	ld	r24, Z
    1848:	28 2f       	mov	r18, r24
    184a:	30 e0       	ldi	r19, 0x00	; 0
    184c:	8b 81       	ldd	r24, Y+3	; 0x03
    184e:	88 2f       	mov	r24, r24
    1850:	90 e0       	ldi	r25, 0x00	; 0
    1852:	a9 01       	movw	r20, r18
    1854:	02 c0       	rjmp	.+4      	; 0x185a <DIO_enumGetPinDirection+0x92>
    1856:	55 95       	asr	r21
    1858:	47 95       	ror	r20
    185a:	8a 95       	dec	r24
    185c:	e2 f7       	brpl	.-8      	; 0x1856 <DIO_enumGetPinDirection+0x8e>
    185e:	ca 01       	movw	r24, r20
    1860:	81 70       	andi	r24, 0x01	; 1
    1862:	ec 81       	ldd	r30, Y+4	; 0x04
    1864:	fd 81       	ldd	r31, Y+5	; 0x05
    1866:	80 83       	st	Z, r24
    1868:	3b c0       	rjmp	.+118    	; 0x18e0 <DIO_enumGetPinDirection+0x118>
						break;
					case DIO_PORTB:
						*Copy_pu8Direction=READ_BIT(DDRB,Copy_u8PinID);
    186a:	e7 e3       	ldi	r30, 0x37	; 55
    186c:	f0 e0       	ldi	r31, 0x00	; 0
    186e:	80 81       	ld	r24, Z
    1870:	28 2f       	mov	r18, r24
    1872:	30 e0       	ldi	r19, 0x00	; 0
    1874:	8b 81       	ldd	r24, Y+3	; 0x03
    1876:	88 2f       	mov	r24, r24
    1878:	90 e0       	ldi	r25, 0x00	; 0
    187a:	a9 01       	movw	r20, r18
    187c:	02 c0       	rjmp	.+4      	; 0x1882 <DIO_enumGetPinDirection+0xba>
    187e:	55 95       	asr	r21
    1880:	47 95       	ror	r20
    1882:	8a 95       	dec	r24
    1884:	e2 f7       	brpl	.-8      	; 0x187e <DIO_enumGetPinDirection+0xb6>
    1886:	ca 01       	movw	r24, r20
    1888:	81 70       	andi	r24, 0x01	; 1
    188a:	ec 81       	ldd	r30, Y+4	; 0x04
    188c:	fd 81       	ldd	r31, Y+5	; 0x05
    188e:	80 83       	st	Z, r24
    1890:	27 c0       	rjmp	.+78     	; 0x18e0 <DIO_enumGetPinDirection+0x118>
						break;
					case DIO_PORTC:
						*Copy_pu8Direction=READ_BIT(DDRC,Copy_u8PinID);
    1892:	e4 e3       	ldi	r30, 0x34	; 52
    1894:	f0 e0       	ldi	r31, 0x00	; 0
    1896:	80 81       	ld	r24, Z
    1898:	28 2f       	mov	r18, r24
    189a:	30 e0       	ldi	r19, 0x00	; 0
    189c:	8b 81       	ldd	r24, Y+3	; 0x03
    189e:	88 2f       	mov	r24, r24
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	a9 01       	movw	r20, r18
    18a4:	02 c0       	rjmp	.+4      	; 0x18aa <DIO_enumGetPinDirection+0xe2>
    18a6:	55 95       	asr	r21
    18a8:	47 95       	ror	r20
    18aa:	8a 95       	dec	r24
    18ac:	e2 f7       	brpl	.-8      	; 0x18a6 <DIO_enumGetPinDirection+0xde>
    18ae:	ca 01       	movw	r24, r20
    18b0:	81 70       	andi	r24, 0x01	; 1
    18b2:	ec 81       	ldd	r30, Y+4	; 0x04
    18b4:	fd 81       	ldd	r31, Y+5	; 0x05
    18b6:	80 83       	st	Z, r24
    18b8:	13 c0       	rjmp	.+38     	; 0x18e0 <DIO_enumGetPinDirection+0x118>
						break;
					case DIO_PORTD:
						*Copy_pu8Direction=READ_BIT(DDRD,Copy_u8PinID);
    18ba:	e1 e3       	ldi	r30, 0x31	; 49
    18bc:	f0 e0       	ldi	r31, 0x00	; 0
    18be:	80 81       	ld	r24, Z
    18c0:	28 2f       	mov	r18, r24
    18c2:	30 e0       	ldi	r19, 0x00	; 0
    18c4:	8b 81       	ldd	r24, Y+3	; 0x03
    18c6:	88 2f       	mov	r24, r24
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	a9 01       	movw	r20, r18
    18cc:	02 c0       	rjmp	.+4      	; 0x18d2 <DIO_enumGetPinDirection+0x10a>
    18ce:	55 95       	asr	r21
    18d0:	47 95       	ror	r20
    18d2:	8a 95       	dec	r24
    18d4:	e2 f7       	brpl	.-8      	; 0x18ce <DIO_enumGetPinDirection+0x106>
    18d6:	ca 01       	movw	r24, r20
    18d8:	81 70       	andi	r24, 0x01	; 1
    18da:	ec 81       	ldd	r30, Y+4	; 0x04
    18dc:	fd 81       	ldd	r31, Y+5	; 0x05
    18de:	80 83       	st	Z, r24
						break;
				}
				Local_enumErrorState=ES_OK;
    18e0:	81 e0       	ldi	r24, 0x01	; 1
    18e2:	89 83       	std	Y+1, r24	; 0x01
    18e4:	05 c0       	rjmp	.+10     	; 0x18f0 <DIO_enumGetPinDirection+0x128>
			}
			else
			{
				Local_enumErrorState=ES_NULL_POINTER;
    18e6:	82 e0       	ldi	r24, 0x02	; 2
    18e8:	89 83       	std	Y+1, r24	; 0x01
    18ea:	02 c0       	rjmp	.+4      	; 0x18f0 <DIO_enumGetPinDirection+0x128>
			}
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    18ec:	83 e0       	ldi	r24, 0x03	; 3
    18ee:	89 83       	std	Y+1, r24	; 0x01
		}

	return Local_enumErrorState;
    18f0:	89 81       	ldd	r24, Y+1	; 0x01
}
    18f2:	27 96       	adiw	r28, 0x07	; 7
    18f4:	0f b6       	in	r0, 0x3f	; 63
    18f6:	f8 94       	cli
    18f8:	de bf       	out	0x3e, r29	; 62
    18fa:	0f be       	out	0x3f, r0	; 63
    18fc:	cd bf       	out	0x3d, r28	; 61
    18fe:	cf 91       	pop	r28
    1900:	df 91       	pop	r29
    1902:	08 95       	ret

00001904 <DIO_enumGetPinValue>:
ES_T DIO_enumGetPinValue (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 *Copy_pu8Value)
{
    1904:	df 93       	push	r29
    1906:	cf 93       	push	r28
    1908:	cd b7       	in	r28, 0x3d	; 61
    190a:	de b7       	in	r29, 0x3e	; 62
    190c:	27 97       	sbiw	r28, 0x07	; 7
    190e:	0f b6       	in	r0, 0x3f	; 63
    1910:	f8 94       	cli
    1912:	de bf       	out	0x3e, r29	; 62
    1914:	0f be       	out	0x3f, r0	; 63
    1916:	cd bf       	out	0x3d, r28	; 61
    1918:	8a 83       	std	Y+2, r24	; 0x02
    191a:	6b 83       	std	Y+3, r22	; 0x03
    191c:	5d 83       	std	Y+5, r21	; 0x05
    191e:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    1920:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
    1922:	8a 81       	ldd	r24, Y+2	; 0x02
    1924:	84 30       	cpi	r24, 0x04	; 4
    1926:	08 f0       	brcs	.+2      	; 0x192a <DIO_enumGetPinValue+0x26>
    1928:	7f c0       	rjmp	.+254    	; 0x1a28 <DIO_enumGetPinValue+0x124>
    192a:	8b 81       	ldd	r24, Y+3	; 0x03
    192c:	88 30       	cpi	r24, 0x08	; 8
    192e:	08 f0       	brcs	.+2      	; 0x1932 <DIO_enumGetPinValue+0x2e>
    1930:	7b c0       	rjmp	.+246    	; 0x1a28 <DIO_enumGetPinValue+0x124>
	{
		if (Copy_pu8Value!=NULL)
    1932:	8c 81       	ldd	r24, Y+4	; 0x04
    1934:	9d 81       	ldd	r25, Y+5	; 0x05
    1936:	00 97       	sbiw	r24, 0x00	; 0
    1938:	09 f4       	brne	.+2      	; 0x193c <DIO_enumGetPinValue+0x38>
    193a:	73 c0       	rjmp	.+230    	; 0x1a22 <DIO_enumGetPinValue+0x11e>
		{
			switch(Copy_u8PortID)
    193c:	8a 81       	ldd	r24, Y+2	; 0x02
    193e:	28 2f       	mov	r18, r24
    1940:	30 e0       	ldi	r19, 0x00	; 0
    1942:	3f 83       	std	Y+7, r19	; 0x07
    1944:	2e 83       	std	Y+6, r18	; 0x06
    1946:	4e 81       	ldd	r20, Y+6	; 0x06
    1948:	5f 81       	ldd	r21, Y+7	; 0x07
    194a:	41 30       	cpi	r20, 0x01	; 1
    194c:	51 05       	cpc	r21, r1
    194e:	59 f1       	breq	.+86     	; 0x19a6 <DIO_enumGetPinValue+0xa2>
    1950:	8e 81       	ldd	r24, Y+6	; 0x06
    1952:	9f 81       	ldd	r25, Y+7	; 0x07
    1954:	82 30       	cpi	r24, 0x02	; 2
    1956:	91 05       	cpc	r25, r1
    1958:	34 f4       	brge	.+12     	; 0x1966 <DIO_enumGetPinValue+0x62>
    195a:	2e 81       	ldd	r18, Y+6	; 0x06
    195c:	3f 81       	ldd	r19, Y+7	; 0x07
    195e:	21 15       	cp	r18, r1
    1960:	31 05       	cpc	r19, r1
    1962:	69 f0       	breq	.+26     	; 0x197e <DIO_enumGetPinValue+0x7a>
    1964:	5b c0       	rjmp	.+182    	; 0x1a1c <DIO_enumGetPinValue+0x118>
    1966:	4e 81       	ldd	r20, Y+6	; 0x06
    1968:	5f 81       	ldd	r21, Y+7	; 0x07
    196a:	42 30       	cpi	r20, 0x02	; 2
    196c:	51 05       	cpc	r21, r1
    196e:	79 f1       	breq	.+94     	; 0x19ce <DIO_enumGetPinValue+0xca>
    1970:	8e 81       	ldd	r24, Y+6	; 0x06
    1972:	9f 81       	ldd	r25, Y+7	; 0x07
    1974:	83 30       	cpi	r24, 0x03	; 3
    1976:	91 05       	cpc	r25, r1
    1978:	09 f4       	brne	.+2      	; 0x197c <DIO_enumGetPinValue+0x78>
    197a:	3d c0       	rjmp	.+122    	; 0x19f6 <DIO_enumGetPinValue+0xf2>
    197c:	4f c0       	rjmp	.+158    	; 0x1a1c <DIO_enumGetPinValue+0x118>
			{
				case DIO_PORTA:
					*Copy_pu8Value=READ_BIT(PINA,Copy_u8PinID);
    197e:	e9 e3       	ldi	r30, 0x39	; 57
    1980:	f0 e0       	ldi	r31, 0x00	; 0
    1982:	80 81       	ld	r24, Z
    1984:	28 2f       	mov	r18, r24
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	8b 81       	ldd	r24, Y+3	; 0x03
    198a:	88 2f       	mov	r24, r24
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	a9 01       	movw	r20, r18
    1990:	02 c0       	rjmp	.+4      	; 0x1996 <DIO_enumGetPinValue+0x92>
    1992:	55 95       	asr	r21
    1994:	47 95       	ror	r20
    1996:	8a 95       	dec	r24
    1998:	e2 f7       	brpl	.-8      	; 0x1992 <DIO_enumGetPinValue+0x8e>
    199a:	ca 01       	movw	r24, r20
    199c:	81 70       	andi	r24, 0x01	; 1
    199e:	ec 81       	ldd	r30, Y+4	; 0x04
    19a0:	fd 81       	ldd	r31, Y+5	; 0x05
    19a2:	80 83       	st	Z, r24
    19a4:	3b c0       	rjmp	.+118    	; 0x1a1c <DIO_enumGetPinValue+0x118>
					break;
				case DIO_PORTB:
					*Copy_pu8Value=READ_BIT(PINB,Copy_u8PinID);
    19a6:	e6 e3       	ldi	r30, 0x36	; 54
    19a8:	f0 e0       	ldi	r31, 0x00	; 0
    19aa:	80 81       	ld	r24, Z
    19ac:	28 2f       	mov	r18, r24
    19ae:	30 e0       	ldi	r19, 0x00	; 0
    19b0:	8b 81       	ldd	r24, Y+3	; 0x03
    19b2:	88 2f       	mov	r24, r24
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	a9 01       	movw	r20, r18
    19b8:	02 c0       	rjmp	.+4      	; 0x19be <DIO_enumGetPinValue+0xba>
    19ba:	55 95       	asr	r21
    19bc:	47 95       	ror	r20
    19be:	8a 95       	dec	r24
    19c0:	e2 f7       	brpl	.-8      	; 0x19ba <DIO_enumGetPinValue+0xb6>
    19c2:	ca 01       	movw	r24, r20
    19c4:	81 70       	andi	r24, 0x01	; 1
    19c6:	ec 81       	ldd	r30, Y+4	; 0x04
    19c8:	fd 81       	ldd	r31, Y+5	; 0x05
    19ca:	80 83       	st	Z, r24
    19cc:	27 c0       	rjmp	.+78     	; 0x1a1c <DIO_enumGetPinValue+0x118>
					break;
				case DIO_PORTC:
					*Copy_pu8Value=READ_BIT(PINC,Copy_u8PinID);
    19ce:	e3 e3       	ldi	r30, 0x33	; 51
    19d0:	f0 e0       	ldi	r31, 0x00	; 0
    19d2:	80 81       	ld	r24, Z
    19d4:	28 2f       	mov	r18, r24
    19d6:	30 e0       	ldi	r19, 0x00	; 0
    19d8:	8b 81       	ldd	r24, Y+3	; 0x03
    19da:	88 2f       	mov	r24, r24
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	a9 01       	movw	r20, r18
    19e0:	02 c0       	rjmp	.+4      	; 0x19e6 <DIO_enumGetPinValue+0xe2>
    19e2:	55 95       	asr	r21
    19e4:	47 95       	ror	r20
    19e6:	8a 95       	dec	r24
    19e8:	e2 f7       	brpl	.-8      	; 0x19e2 <DIO_enumGetPinValue+0xde>
    19ea:	ca 01       	movw	r24, r20
    19ec:	81 70       	andi	r24, 0x01	; 1
    19ee:	ec 81       	ldd	r30, Y+4	; 0x04
    19f0:	fd 81       	ldd	r31, Y+5	; 0x05
    19f2:	80 83       	st	Z, r24
    19f4:	13 c0       	rjmp	.+38     	; 0x1a1c <DIO_enumGetPinValue+0x118>
					break;
				case DIO_PORTD:
					*Copy_pu8Value=READ_BIT(PIND,Copy_u8PinID);
    19f6:	e0 e3       	ldi	r30, 0x30	; 48
    19f8:	f0 e0       	ldi	r31, 0x00	; 0
    19fa:	80 81       	ld	r24, Z
    19fc:	28 2f       	mov	r18, r24
    19fe:	30 e0       	ldi	r19, 0x00	; 0
    1a00:	8b 81       	ldd	r24, Y+3	; 0x03
    1a02:	88 2f       	mov	r24, r24
    1a04:	90 e0       	ldi	r25, 0x00	; 0
    1a06:	a9 01       	movw	r20, r18
    1a08:	02 c0       	rjmp	.+4      	; 0x1a0e <DIO_enumGetPinValue+0x10a>
    1a0a:	55 95       	asr	r21
    1a0c:	47 95       	ror	r20
    1a0e:	8a 95       	dec	r24
    1a10:	e2 f7       	brpl	.-8      	; 0x1a0a <DIO_enumGetPinValue+0x106>
    1a12:	ca 01       	movw	r24, r20
    1a14:	81 70       	andi	r24, 0x01	; 1
    1a16:	ec 81       	ldd	r30, Y+4	; 0x04
    1a18:	fd 81       	ldd	r31, Y+5	; 0x05
    1a1a:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
    1a1c:	81 e0       	ldi	r24, 0x01	; 1
    1a1e:	89 83       	std	Y+1, r24	; 0x01
    1a20:	05 c0       	rjmp	.+10     	; 0x1a2c <DIO_enumGetPinValue+0x128>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
    1a22:	82 e0       	ldi	r24, 0x02	; 2
    1a24:	89 83       	std	Y+1, r24	; 0x01
    1a26:	02 c0       	rjmp	.+4      	; 0x1a2c <DIO_enumGetPinValue+0x128>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    1a28:	83 e0       	ldi	r24, 0x03	; 3
    1a2a:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    1a2c:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a2e:	27 96       	adiw	r28, 0x07	; 7
    1a30:	0f b6       	in	r0, 0x3f	; 63
    1a32:	f8 94       	cli
    1a34:	de bf       	out	0x3e, r29	; 62
    1a36:	0f be       	out	0x3f, r0	; 63
    1a38:	cd bf       	out	0x3d, r28	; 61
    1a3a:	cf 91       	pop	r28
    1a3c:	df 91       	pop	r29
    1a3e:	08 95       	ret

00001a40 <KEYPAD_enumInit>:
#include "../include/MCAL/DIO/DIO_int.h"
#include "../include/HAL/KEYPAD/KEYPAD_priv.h"
#include "../include/HAL/KEYPAD/KEYPAD_config.h"

ES_T KEYPAD_enumInit(void)
{
    1a40:	df 93       	push	r29
    1a42:	cf 93       	push	r28
    1a44:	00 d0       	rcall	.+0      	; 0x1a46 <KEYPAD_enumInit+0x6>
    1a46:	cd b7       	in	r28, 0x3d	; 61
    1a48:	de b7       	in	r29, 0x3e	; 62
	ES_T Local_enumErrorState=ES_NOK;
    1a4a:	19 82       	std	Y+1, r1	; 0x01

	Local_enumErrorState=DIO_enumSetPinDirection(KEYPAD_C0_PORT,KEYPAD_C0_PIN,OUTPUT);
    1a4c:	83 e0       	ldi	r24, 0x03	; 3
    1a4e:	60 e0       	ldi	r22, 0x00	; 0
    1a50:	41 e0       	ldi	r20, 0x01	; 1
    1a52:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1a56:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1a58:	89 81       	ldd	r24, Y+1	; 0x01
    1a5a:	81 30       	cpi	r24, 0x01	; 1
    1a5c:	19 f0       	breq	.+6      	; 0x1a64 <KEYPAD_enumInit+0x24>
    1a5e:	89 81       	ldd	r24, Y+1	; 0x01
    1a60:	8a 83       	std	Y+2, r24	; 0x02
    1a62:	b6 c0       	rjmp	.+364    	; 0x1bd0 <KEYPAD_enumInit+0x190>
	Local_enumErrorState=DIO_enumSetPinDirection(KEYPAD_C1_PORT,KEYPAD_C1_PIN,OUTPUT);
    1a64:	83 e0       	ldi	r24, 0x03	; 3
    1a66:	61 e0       	ldi	r22, 0x01	; 1
    1a68:	41 e0       	ldi	r20, 0x01	; 1
    1a6a:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1a6e:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1a70:	89 81       	ldd	r24, Y+1	; 0x01
    1a72:	81 30       	cpi	r24, 0x01	; 1
    1a74:	19 f0       	breq	.+6      	; 0x1a7c <KEYPAD_enumInit+0x3c>
    1a76:	89 81       	ldd	r24, Y+1	; 0x01
    1a78:	8a 83       	std	Y+2, r24	; 0x02
    1a7a:	aa c0       	rjmp	.+340    	; 0x1bd0 <KEYPAD_enumInit+0x190>
	Local_enumErrorState=DIO_enumSetPinDirection(KEYPAD_C2_PORT,KEYPAD_C2_PIN,OUTPUT);
    1a7c:	83 e0       	ldi	r24, 0x03	; 3
    1a7e:	62 e0       	ldi	r22, 0x02	; 2
    1a80:	41 e0       	ldi	r20, 0x01	; 1
    1a82:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1a86:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1a88:	89 81       	ldd	r24, Y+1	; 0x01
    1a8a:	81 30       	cpi	r24, 0x01	; 1
    1a8c:	19 f0       	breq	.+6      	; 0x1a94 <KEYPAD_enumInit+0x54>
    1a8e:	89 81       	ldd	r24, Y+1	; 0x01
    1a90:	8a 83       	std	Y+2, r24	; 0x02
    1a92:	9e c0       	rjmp	.+316    	; 0x1bd0 <KEYPAD_enumInit+0x190>
	Local_enumErrorState=DIO_enumSetPinDirection(KEYPAD_C3_PORT,KEYPAD_C3_PIN,OUTPUT);
    1a94:	83 e0       	ldi	r24, 0x03	; 3
    1a96:	63 e0       	ldi	r22, 0x03	; 3
    1a98:	41 e0       	ldi	r20, 0x01	; 1
    1a9a:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1a9e:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1aa0:	89 81       	ldd	r24, Y+1	; 0x01
    1aa2:	81 30       	cpi	r24, 0x01	; 1
    1aa4:	19 f0       	breq	.+6      	; 0x1aac <KEYPAD_enumInit+0x6c>
    1aa6:	89 81       	ldd	r24, Y+1	; 0x01
    1aa8:	8a 83       	std	Y+2, r24	; 0x02
    1aaa:	92 c0       	rjmp	.+292    	; 0x1bd0 <KEYPAD_enumInit+0x190>

	Local_enumErrorState=DIO_enumSetPinValue(KEYPAD_C0_PORT,KEYPAD_C0_PIN,HIGH);
    1aac:	83 e0       	ldi	r24, 0x03	; 3
    1aae:	60 e0       	ldi	r22, 0x00	; 0
    1ab0:	41 e0       	ldi	r20, 0x01	; 1
    1ab2:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    1ab6:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1ab8:	89 81       	ldd	r24, Y+1	; 0x01
    1aba:	81 30       	cpi	r24, 0x01	; 1
    1abc:	19 f0       	breq	.+6      	; 0x1ac4 <KEYPAD_enumInit+0x84>
    1abe:	89 81       	ldd	r24, Y+1	; 0x01
    1ac0:	8a 83       	std	Y+2, r24	; 0x02
    1ac2:	86 c0       	rjmp	.+268    	; 0x1bd0 <KEYPAD_enumInit+0x190>
	Local_enumErrorState=DIO_enumSetPinValue(KEYPAD_C1_PORT,KEYPAD_C1_PIN,HIGH);
    1ac4:	83 e0       	ldi	r24, 0x03	; 3
    1ac6:	61 e0       	ldi	r22, 0x01	; 1
    1ac8:	41 e0       	ldi	r20, 0x01	; 1
    1aca:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    1ace:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1ad0:	89 81       	ldd	r24, Y+1	; 0x01
    1ad2:	81 30       	cpi	r24, 0x01	; 1
    1ad4:	19 f0       	breq	.+6      	; 0x1adc <KEYPAD_enumInit+0x9c>
    1ad6:	89 81       	ldd	r24, Y+1	; 0x01
    1ad8:	8a 83       	std	Y+2, r24	; 0x02
    1ada:	7a c0       	rjmp	.+244    	; 0x1bd0 <KEYPAD_enumInit+0x190>
	Local_enumErrorState=DIO_enumSetPinValue(KEYPAD_C2_PORT,KEYPAD_C2_PIN,HIGH);
    1adc:	83 e0       	ldi	r24, 0x03	; 3
    1ade:	62 e0       	ldi	r22, 0x02	; 2
    1ae0:	41 e0       	ldi	r20, 0x01	; 1
    1ae2:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    1ae6:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1ae8:	89 81       	ldd	r24, Y+1	; 0x01
    1aea:	81 30       	cpi	r24, 0x01	; 1
    1aec:	19 f0       	breq	.+6      	; 0x1af4 <KEYPAD_enumInit+0xb4>
    1aee:	89 81       	ldd	r24, Y+1	; 0x01
    1af0:	8a 83       	std	Y+2, r24	; 0x02
    1af2:	6e c0       	rjmp	.+220    	; 0x1bd0 <KEYPAD_enumInit+0x190>
	Local_enumErrorState=DIO_enumSetPinValue(KEYPAD_C3_PORT,KEYPAD_C3_PIN,HIGH);
    1af4:	83 e0       	ldi	r24, 0x03	; 3
    1af6:	63 e0       	ldi	r22, 0x03	; 3
    1af8:	41 e0       	ldi	r20, 0x01	; 1
    1afa:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    1afe:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1b00:	89 81       	ldd	r24, Y+1	; 0x01
    1b02:	81 30       	cpi	r24, 0x01	; 1
    1b04:	19 f0       	breq	.+6      	; 0x1b0c <KEYPAD_enumInit+0xcc>
    1b06:	89 81       	ldd	r24, Y+1	; 0x01
    1b08:	8a 83       	std	Y+2, r24	; 0x02
    1b0a:	62 c0       	rjmp	.+196    	; 0x1bd0 <KEYPAD_enumInit+0x190>

	Local_enumErrorState=DIO_enumSetPinDirection(KEYPAD_R0_PORT,KEYPAD_R0_PIN,INPUT);
    1b0c:	82 e0       	ldi	r24, 0x02	; 2
    1b0e:	60 e0       	ldi	r22, 0x00	; 0
    1b10:	40 e0       	ldi	r20, 0x00	; 0
    1b12:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1b16:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1b18:	89 81       	ldd	r24, Y+1	; 0x01
    1b1a:	81 30       	cpi	r24, 0x01	; 1
    1b1c:	19 f0       	breq	.+6      	; 0x1b24 <KEYPAD_enumInit+0xe4>
    1b1e:	89 81       	ldd	r24, Y+1	; 0x01
    1b20:	8a 83       	std	Y+2, r24	; 0x02
    1b22:	56 c0       	rjmp	.+172    	; 0x1bd0 <KEYPAD_enumInit+0x190>
	Local_enumErrorState=DIO_enumSetPinDirection(KEYPAD_R1_PORT,KEYPAD_R1_PIN,INPUT);
    1b24:	82 e0       	ldi	r24, 0x02	; 2
    1b26:	61 e0       	ldi	r22, 0x01	; 1
    1b28:	40 e0       	ldi	r20, 0x00	; 0
    1b2a:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1b2e:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1b30:	89 81       	ldd	r24, Y+1	; 0x01
    1b32:	81 30       	cpi	r24, 0x01	; 1
    1b34:	19 f0       	breq	.+6      	; 0x1b3c <KEYPAD_enumInit+0xfc>
    1b36:	89 81       	ldd	r24, Y+1	; 0x01
    1b38:	8a 83       	std	Y+2, r24	; 0x02
    1b3a:	4a c0       	rjmp	.+148    	; 0x1bd0 <KEYPAD_enumInit+0x190>
	Local_enumErrorState=DIO_enumSetPinDirection(KEYPAD_R2_PORT,KEYPAD_R2_PIN,INPUT);
    1b3c:	82 e0       	ldi	r24, 0x02	; 2
    1b3e:	62 e0       	ldi	r22, 0x02	; 2
    1b40:	40 e0       	ldi	r20, 0x00	; 0
    1b42:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1b46:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1b48:	89 81       	ldd	r24, Y+1	; 0x01
    1b4a:	81 30       	cpi	r24, 0x01	; 1
    1b4c:	19 f0       	breq	.+6      	; 0x1b54 <KEYPAD_enumInit+0x114>
    1b4e:	89 81       	ldd	r24, Y+1	; 0x01
    1b50:	8a 83       	std	Y+2, r24	; 0x02
    1b52:	3e c0       	rjmp	.+124    	; 0x1bd0 <KEYPAD_enumInit+0x190>
	Local_enumErrorState=DIO_enumSetPinDirection(KEYPAD_R3_PORT,KEYPAD_R3_PIN,INPUT);
    1b54:	82 e0       	ldi	r24, 0x02	; 2
    1b56:	63 e0       	ldi	r22, 0x03	; 3
    1b58:	40 e0       	ldi	r20, 0x00	; 0
    1b5a:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1b5e:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1b60:	89 81       	ldd	r24, Y+1	; 0x01
    1b62:	81 30       	cpi	r24, 0x01	; 1
    1b64:	19 f0       	breq	.+6      	; 0x1b6c <KEYPAD_enumInit+0x12c>
    1b66:	89 81       	ldd	r24, Y+1	; 0x01
    1b68:	8a 83       	std	Y+2, r24	; 0x02
    1b6a:	32 c0       	rjmp	.+100    	; 0x1bd0 <KEYPAD_enumInit+0x190>

	Local_enumErrorState=DIO_enumSetPinValue(KEYPAD_R0_PORT,KEYPAD_R0_PIN,PULL_UP);
    1b6c:	82 e0       	ldi	r24, 0x02	; 2
    1b6e:	60 e0       	ldi	r22, 0x00	; 0
    1b70:	41 e0       	ldi	r20, 0x01	; 1
    1b72:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    1b76:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1b78:	89 81       	ldd	r24, Y+1	; 0x01
    1b7a:	81 30       	cpi	r24, 0x01	; 1
    1b7c:	19 f0       	breq	.+6      	; 0x1b84 <KEYPAD_enumInit+0x144>
    1b7e:	89 81       	ldd	r24, Y+1	; 0x01
    1b80:	8a 83       	std	Y+2, r24	; 0x02
    1b82:	26 c0       	rjmp	.+76     	; 0x1bd0 <KEYPAD_enumInit+0x190>
	Local_enumErrorState=DIO_enumSetPinValue(KEYPAD_R1_PORT,KEYPAD_R1_PIN,PULL_UP);
    1b84:	82 e0       	ldi	r24, 0x02	; 2
    1b86:	61 e0       	ldi	r22, 0x01	; 1
    1b88:	41 e0       	ldi	r20, 0x01	; 1
    1b8a:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    1b8e:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1b90:	89 81       	ldd	r24, Y+1	; 0x01
    1b92:	81 30       	cpi	r24, 0x01	; 1
    1b94:	19 f0       	breq	.+6      	; 0x1b9c <KEYPAD_enumInit+0x15c>
    1b96:	89 81       	ldd	r24, Y+1	; 0x01
    1b98:	8a 83       	std	Y+2, r24	; 0x02
    1b9a:	1a c0       	rjmp	.+52     	; 0x1bd0 <KEYPAD_enumInit+0x190>
	Local_enumErrorState=DIO_enumSetPinValue(KEYPAD_R2_PORT,KEYPAD_R2_PIN,PULL_UP);
    1b9c:	82 e0       	ldi	r24, 0x02	; 2
    1b9e:	62 e0       	ldi	r22, 0x02	; 2
    1ba0:	41 e0       	ldi	r20, 0x01	; 1
    1ba2:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    1ba6:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1ba8:	89 81       	ldd	r24, Y+1	; 0x01
    1baa:	81 30       	cpi	r24, 0x01	; 1
    1bac:	19 f0       	breq	.+6      	; 0x1bb4 <KEYPAD_enumInit+0x174>
    1bae:	89 81       	ldd	r24, Y+1	; 0x01
    1bb0:	8a 83       	std	Y+2, r24	; 0x02
    1bb2:	0e c0       	rjmp	.+28     	; 0x1bd0 <KEYPAD_enumInit+0x190>
	Local_enumErrorState=DIO_enumSetPinValue(KEYPAD_R3_PORT,KEYPAD_R3_PIN,PULL_UP);
    1bb4:	82 e0       	ldi	r24, 0x02	; 2
    1bb6:	63 e0       	ldi	r22, 0x03	; 3
    1bb8:	41 e0       	ldi	r20, 0x01	; 1
    1bba:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    1bbe:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1bc0:	89 81       	ldd	r24, Y+1	; 0x01
    1bc2:	81 30       	cpi	r24, 0x01	; 1
    1bc4:	19 f0       	breq	.+6      	; 0x1bcc <KEYPAD_enumInit+0x18c>
    1bc6:	89 81       	ldd	r24, Y+1	; 0x01
    1bc8:	8a 83       	std	Y+2, r24	; 0x02
    1bca:	02 c0       	rjmp	.+4      	; 0x1bd0 <KEYPAD_enumInit+0x190>

	return Local_enumErrorState;
    1bcc:	89 81       	ldd	r24, Y+1	; 0x01
    1bce:	8a 83       	std	Y+2, r24	; 0x02
    1bd0:	8a 81       	ldd	r24, Y+2	; 0x02
}
    1bd2:	0f 90       	pop	r0
    1bd4:	0f 90       	pop	r0
    1bd6:	cf 91       	pop	r28
    1bd8:	df 91       	pop	r29
    1bda:	08 95       	ret

00001bdc <KEYPAD_enumGetPressedKey>:

ES_T KEYPAD_enumGetPressedKey(u8* Copy_pu8PressedKey)
{
    1bdc:	df 93       	push	r29
    1bde:	cf 93       	push	r28
    1be0:	cd b7       	in	r28, 0x3d	; 61
    1be2:	de b7       	in	r29, 0x3e	; 62
    1be4:	27 97       	sbiw	r28, 0x07	; 7
    1be6:	0f b6       	in	r0, 0x3f	; 63
    1be8:	f8 94       	cli
    1bea:	de bf       	out	0x3e, r29	; 62
    1bec:	0f be       	out	0x3f, r0	; 63
    1bee:	cd bf       	out	0x3d, r28	; 61
    1bf0:	9e 83       	std	Y+6, r25	; 0x06
    1bf2:	8d 83       	std	Y+5, r24	; 0x05
	ES_T Local_enumErrorState=ES_NOK;
    1bf4:	1b 82       	std	Y+3, r1	; 0x03
	static u8 Local_Au8RowPorts[KEYPAD_ROW_NUM]={KEYPAD_R0_PORT,KEYPAD_R1_PORT,KEYPAD_R2_PORT,KEYPAD_R3_PORT};
	static u8 Local_Au8RowPins[KEYPAD_ROW_NUM]={KEYPAD_R0_PIN,KEYPAD_R1_PIN,KEYPAD_R2_PIN,KEYPAD_R3_PIN};

	static u8 Local_Au8KeysVal[KEYPAD_ROW_NUM][KEYPAD_COL_NUM]=KEYPAD_KEYS_VAL;

	*Copy_pu8PressedKey=KEYPAD_NO_KET_PRESSED;
    1bf6:	ed 81       	ldd	r30, Y+5	; 0x05
    1bf8:	fe 81       	ldd	r31, Y+6	; 0x06
    1bfa:	8f ef       	ldi	r24, 0xFF	; 255
    1bfc:	80 83       	st	Z, r24

	u8 Local_u8ColCounter=0,Local_u8RowCounter=0,Local_u8PinVal;
    1bfe:	1a 82       	std	Y+2, r1	; 0x02
    1c00:	19 82       	std	Y+1, r1	; 0x01

	for(Local_u8ColCounter=0;Local_u8ColCounter<KEYPAD_COL_NUM;Local_u8ColCounter++)
    1c02:	1a 82       	std	Y+2, r1	; 0x02
    1c04:	98 c0       	rjmp	.+304    	; 0x1d36 <KEYPAD_enumGetPressedKey+0x15a>
	{
		Local_enumErrorState=DIO_enumSetPinValue (Local_Au8ColPorts[Local_u8ColCounter],Local_Au8ColPins[Local_u8ColCounter],LOW);
    1c06:	8a 81       	ldd	r24, Y+2	; 0x02
    1c08:	88 2f       	mov	r24, r24
    1c0a:	90 e0       	ldi	r25, 0x00	; 0
    1c0c:	fc 01       	movw	r30, r24
    1c0e:	ec 57       	subi	r30, 0x7C	; 124
    1c10:	fe 4f       	sbci	r31, 0xFE	; 254
    1c12:	20 81       	ld	r18, Z
    1c14:	8a 81       	ldd	r24, Y+2	; 0x02
    1c16:	88 2f       	mov	r24, r24
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	fc 01       	movw	r30, r24
    1c1c:	e0 58       	subi	r30, 0x80	; 128
    1c1e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c20:	90 81       	ld	r25, Z
    1c22:	82 2f       	mov	r24, r18
    1c24:	69 2f       	mov	r22, r25
    1c26:	40 e0       	ldi	r20, 0x00	; 0
    1c28:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    1c2c:	8b 83       	std	Y+3, r24	; 0x03
		if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1c2e:	8b 81       	ldd	r24, Y+3	; 0x03
    1c30:	81 30       	cpi	r24, 0x01	; 1
    1c32:	19 f0       	breq	.+6      	; 0x1c3a <KEYPAD_enumGetPressedKey+0x5e>
    1c34:	8b 81       	ldd	r24, Y+3	; 0x03
    1c36:	8f 83       	std	Y+7, r24	; 0x07
    1c38:	84 c0       	rjmp	.+264    	; 0x1d42 <KEYPAD_enumGetPressedKey+0x166>

		for(Local_u8RowCounter=0;Local_u8RowCounter<KEYPAD_ROW_NUM;Local_u8RowCounter++)
    1c3a:	19 82       	std	Y+1, r1	; 0x01
    1c3c:	5b c0       	rjmp	.+182    	; 0x1cf4 <KEYPAD_enumGetPressedKey+0x118>
		{
			Local_enumErrorState=DIO_enumGetPinValue (Local_Au8RowPorts[Local_u8RowCounter],Local_Au8RowPins[Local_u8RowCounter],&Local_u8PinVal);
    1c3e:	89 81       	ldd	r24, Y+1	; 0x01
    1c40:	88 2f       	mov	r24, r24
    1c42:	90 e0       	ldi	r25, 0x00	; 0
    1c44:	fc 01       	movw	r30, r24
    1c46:	e4 58       	subi	r30, 0x84	; 132
    1c48:	fe 4f       	sbci	r31, 0xFE	; 254
    1c4a:	40 81       	ld	r20, Z
    1c4c:	89 81       	ldd	r24, Y+1	; 0x01
    1c4e:	88 2f       	mov	r24, r24
    1c50:	90 e0       	ldi	r25, 0x00	; 0
    1c52:	fc 01       	movw	r30, r24
    1c54:	e8 58       	subi	r30, 0x88	; 136
    1c56:	fe 4f       	sbci	r31, 0xFE	; 254
    1c58:	90 81       	ld	r25, Z
    1c5a:	9e 01       	movw	r18, r28
    1c5c:	2c 5f       	subi	r18, 0xFC	; 252
    1c5e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c60:	84 2f       	mov	r24, r20
    1c62:	69 2f       	mov	r22, r25
    1c64:	a9 01       	movw	r20, r18
    1c66:	0e 94 82 0c 	call	0x1904	; 0x1904 <DIO_enumGetPinValue>
    1c6a:	8b 83       	std	Y+3, r24	; 0x03
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1c6c:	8b 81       	ldd	r24, Y+3	; 0x03
    1c6e:	81 30       	cpi	r24, 0x01	; 1
    1c70:	19 f0       	breq	.+6      	; 0x1c78 <KEYPAD_enumGetPressedKey+0x9c>
    1c72:	8b 81       	ldd	r24, Y+3	; 0x03
    1c74:	8f 83       	std	Y+7, r24	; 0x07
    1c76:	65 c0       	rjmp	.+202    	; 0x1d42 <KEYPAD_enumGetPressedKey+0x166>

			if(LOW==Local_u8PinVal)
    1c78:	8c 81       	ldd	r24, Y+4	; 0x04
    1c7a:	88 23       	and	r24, r24
    1c7c:	c1 f5       	brne	.+112    	; 0x1cee <KEYPAD_enumGetPressedKey+0x112>
			{
				*Copy_pu8PressedKey=Local_Au8KeysVal[Local_u8RowCounter][Local_u8ColCounter];
    1c7e:	89 81       	ldd	r24, Y+1	; 0x01
    1c80:	48 2f       	mov	r20, r24
    1c82:	50 e0       	ldi	r21, 0x00	; 0
    1c84:	8a 81       	ldd	r24, Y+2	; 0x02
    1c86:	28 2f       	mov	r18, r24
    1c88:	30 e0       	ldi	r19, 0x00	; 0
    1c8a:	ca 01       	movw	r24, r20
    1c8c:	88 0f       	add	r24, r24
    1c8e:	99 1f       	adc	r25, r25
    1c90:	88 0f       	add	r24, r24
    1c92:	99 1f       	adc	r25, r25
    1c94:	82 0f       	add	r24, r18
    1c96:	93 1f       	adc	r25, r19
    1c98:	fc 01       	movw	r30, r24
    1c9a:	e8 59       	subi	r30, 0x98	; 152
    1c9c:	fe 4f       	sbci	r31, 0xFE	; 254
    1c9e:	80 81       	ld	r24, Z
    1ca0:	ed 81       	ldd	r30, Y+5	; 0x05
    1ca2:	fe 81       	ldd	r31, Y+6	; 0x06
    1ca4:	80 83       	st	Z, r24
    1ca6:	1d c0       	rjmp	.+58     	; 0x1ce2 <KEYPAD_enumGetPressedKey+0x106>

				while(LOW==Local_u8PinVal)
				{
					Local_enumErrorState=DIO_enumGetPinValue (Local_Au8RowPorts[Local_u8RowCounter],Local_Au8RowPins[Local_u8RowCounter],&Local_u8PinVal);
    1ca8:	89 81       	ldd	r24, Y+1	; 0x01
    1caa:	88 2f       	mov	r24, r24
    1cac:	90 e0       	ldi	r25, 0x00	; 0
    1cae:	fc 01       	movw	r30, r24
    1cb0:	e4 58       	subi	r30, 0x84	; 132
    1cb2:	fe 4f       	sbci	r31, 0xFE	; 254
    1cb4:	40 81       	ld	r20, Z
    1cb6:	89 81       	ldd	r24, Y+1	; 0x01
    1cb8:	88 2f       	mov	r24, r24
    1cba:	90 e0       	ldi	r25, 0x00	; 0
    1cbc:	fc 01       	movw	r30, r24
    1cbe:	e8 58       	subi	r30, 0x88	; 136
    1cc0:	fe 4f       	sbci	r31, 0xFE	; 254
    1cc2:	90 81       	ld	r25, Z
    1cc4:	9e 01       	movw	r18, r28
    1cc6:	2c 5f       	subi	r18, 0xFC	; 252
    1cc8:	3f 4f       	sbci	r19, 0xFF	; 255
    1cca:	84 2f       	mov	r24, r20
    1ccc:	69 2f       	mov	r22, r25
    1cce:	a9 01       	movw	r20, r18
    1cd0:	0e 94 82 0c 	call	0x1904	; 0x1904 <DIO_enumGetPinValue>
    1cd4:	8b 83       	std	Y+3, r24	; 0x03
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1cd6:	8b 81       	ldd	r24, Y+3	; 0x03
    1cd8:	81 30       	cpi	r24, 0x01	; 1
    1cda:	19 f0       	breq	.+6      	; 0x1ce2 <KEYPAD_enumGetPressedKey+0x106>
    1cdc:	8b 81       	ldd	r24, Y+3	; 0x03
    1cde:	8f 83       	std	Y+7, r24	; 0x07
    1ce0:	30 c0       	rjmp	.+96     	; 0x1d42 <KEYPAD_enumGetPressedKey+0x166>

			if(LOW==Local_u8PinVal)
			{
				*Copy_pu8PressedKey=Local_Au8KeysVal[Local_u8RowCounter][Local_u8ColCounter];

				while(LOW==Local_u8PinVal)
    1ce2:	8c 81       	ldd	r24, Y+4	; 0x04
    1ce4:	88 23       	and	r24, r24
    1ce6:	01 f3       	breq	.-64     	; 0x1ca8 <KEYPAD_enumGetPressedKey+0xcc>
				{
					Local_enumErrorState=DIO_enumGetPinValue (Local_Au8RowPorts[Local_u8RowCounter],Local_Au8RowPins[Local_u8RowCounter],&Local_u8PinVal);
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
				}

				return Local_enumErrorState;
    1ce8:	8b 81       	ldd	r24, Y+3	; 0x03
    1cea:	8f 83       	std	Y+7, r24	; 0x07
    1cec:	2a c0       	rjmp	.+84     	; 0x1d42 <KEYPAD_enumGetPressedKey+0x166>
	for(Local_u8ColCounter=0;Local_u8ColCounter<KEYPAD_COL_NUM;Local_u8ColCounter++)
	{
		Local_enumErrorState=DIO_enumSetPinValue (Local_Au8ColPorts[Local_u8ColCounter],Local_Au8ColPins[Local_u8ColCounter],LOW);
		if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;

		for(Local_u8RowCounter=0;Local_u8RowCounter<KEYPAD_ROW_NUM;Local_u8RowCounter++)
    1cee:	89 81       	ldd	r24, Y+1	; 0x01
    1cf0:	8f 5f       	subi	r24, 0xFF	; 255
    1cf2:	89 83       	std	Y+1, r24	; 0x01
    1cf4:	89 81       	ldd	r24, Y+1	; 0x01
    1cf6:	84 30       	cpi	r24, 0x04	; 4
    1cf8:	08 f4       	brcc	.+2      	; 0x1cfc <KEYPAD_enumGetPressedKey+0x120>
    1cfa:	a1 cf       	rjmp	.-190    	; 0x1c3e <KEYPAD_enumGetPressedKey+0x62>

				return Local_enumErrorState;
			}
		}

		Local_enumErrorState=DIO_enumSetPinValue (Local_Au8ColPorts[Local_u8ColCounter],Local_Au8ColPins[Local_u8ColCounter],HIGH);
    1cfc:	8a 81       	ldd	r24, Y+2	; 0x02
    1cfe:	88 2f       	mov	r24, r24
    1d00:	90 e0       	ldi	r25, 0x00	; 0
    1d02:	fc 01       	movw	r30, r24
    1d04:	ec 57       	subi	r30, 0x7C	; 124
    1d06:	fe 4f       	sbci	r31, 0xFE	; 254
    1d08:	20 81       	ld	r18, Z
    1d0a:	8a 81       	ldd	r24, Y+2	; 0x02
    1d0c:	88 2f       	mov	r24, r24
    1d0e:	90 e0       	ldi	r25, 0x00	; 0
    1d10:	fc 01       	movw	r30, r24
    1d12:	e0 58       	subi	r30, 0x80	; 128
    1d14:	fe 4f       	sbci	r31, 0xFE	; 254
    1d16:	90 81       	ld	r25, Z
    1d18:	82 2f       	mov	r24, r18
    1d1a:	69 2f       	mov	r22, r25
    1d1c:	41 e0       	ldi	r20, 0x01	; 1
    1d1e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    1d22:	8b 83       	std	Y+3, r24	; 0x03
		if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1d24:	8b 81       	ldd	r24, Y+3	; 0x03
    1d26:	81 30       	cpi	r24, 0x01	; 1
    1d28:	19 f0       	breq	.+6      	; 0x1d30 <KEYPAD_enumGetPressedKey+0x154>
    1d2a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d2c:	8f 83       	std	Y+7, r24	; 0x07
    1d2e:	09 c0       	rjmp	.+18     	; 0x1d42 <KEYPAD_enumGetPressedKey+0x166>

	*Copy_pu8PressedKey=KEYPAD_NO_KET_PRESSED;

	u8 Local_u8ColCounter=0,Local_u8RowCounter=0,Local_u8PinVal;

	for(Local_u8ColCounter=0;Local_u8ColCounter<KEYPAD_COL_NUM;Local_u8ColCounter++)
    1d30:	8a 81       	ldd	r24, Y+2	; 0x02
    1d32:	8f 5f       	subi	r24, 0xFF	; 255
    1d34:	8a 83       	std	Y+2, r24	; 0x02
    1d36:	8a 81       	ldd	r24, Y+2	; 0x02
    1d38:	84 30       	cpi	r24, 0x04	; 4
    1d3a:	08 f4       	brcc	.+2      	; 0x1d3e <KEYPAD_enumGetPressedKey+0x162>
    1d3c:	64 cf       	rjmp	.-312    	; 0x1c06 <KEYPAD_enumGetPressedKey+0x2a>

		Local_enumErrorState=DIO_enumSetPinValue (Local_Au8ColPorts[Local_u8ColCounter],Local_Au8ColPins[Local_u8ColCounter],HIGH);
		if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
	}

	return Local_enumErrorState;
    1d3e:	8b 81       	ldd	r24, Y+3	; 0x03
    1d40:	8f 83       	std	Y+7, r24	; 0x07
    1d42:	8f 81       	ldd	r24, Y+7	; 0x07
}
    1d44:	27 96       	adiw	r28, 0x07	; 7
    1d46:	0f b6       	in	r0, 0x3f	; 63
    1d48:	f8 94       	cli
    1d4a:	de bf       	out	0x3e, r29	; 62
    1d4c:	0f be       	out	0x3f, r0	; 63
    1d4e:	cd bf       	out	0x3d, r28	; 61
    1d50:	cf 91       	pop	r28
    1d52:	df 91       	pop	r29
    1d54:	08 95       	ret

00001d56 <LCD_enumInit>:
#include "../include/MCAL/DIO/DIO_int.h"
#include "../include/HAL/LCD/LCD_priv.h"
#include "../include/HAL/LCD/LCD_config.h"

ES_T LCD_enumInit(void)
{
    1d56:	0f 93       	push	r16
    1d58:	1f 93       	push	r17
    1d5a:	df 93       	push	r29
    1d5c:	cf 93       	push	r28
    1d5e:	cd b7       	in	r28, 0x3d	; 61
    1d60:	de b7       	in	r29, 0x3e	; 62
    1d62:	c8 54       	subi	r28, 0x48	; 72
    1d64:	d0 40       	sbci	r29, 0x00	; 0
    1d66:	0f b6       	in	r0, 0x3f	; 63
    1d68:	f8 94       	cli
    1d6a:	de bf       	out	0x3e, r29	; 62
    1d6c:	0f be       	out	0x3f, r0	; 63
    1d6e:	cd bf       	out	0x3d, r28	; 61
	ES_T Local_enumErrorState=ES_NOK;
    1d70:	fe 01       	movw	r30, r28
    1d72:	e9 5b       	subi	r30, 0xB9	; 185
    1d74:	ff 4f       	sbci	r31, 0xFF	; 255
    1d76:	10 82       	st	Z, r1
    1d78:	fe 01       	movw	r30, r28
    1d7a:	ed 5b       	subi	r30, 0xBD	; 189
    1d7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7e:	80 e0       	ldi	r24, 0x00	; 0
    1d80:	90 e0       	ldi	r25, 0x00	; 0
    1d82:	ac e0       	ldi	r26, 0x0C	; 12
    1d84:	b2 e4       	ldi	r27, 0x42	; 66
    1d86:	80 83       	st	Z, r24
    1d88:	91 83       	std	Z+1, r25	; 0x01
    1d8a:	a2 83       	std	Z+2, r26	; 0x02
    1d8c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d8e:	8e 01       	movw	r16, r28
    1d90:	01 5c       	subi	r16, 0xC1	; 193
    1d92:	1f 4f       	sbci	r17, 0xFF	; 255
    1d94:	fe 01       	movw	r30, r28
    1d96:	ed 5b       	subi	r30, 0xBD	; 189
    1d98:	ff 4f       	sbci	r31, 0xFF	; 255
    1d9a:	60 81       	ld	r22, Z
    1d9c:	71 81       	ldd	r23, Z+1	; 0x01
    1d9e:	82 81       	ldd	r24, Z+2	; 0x02
    1da0:	93 81       	ldd	r25, Z+3	; 0x03
    1da2:	20 e0       	ldi	r18, 0x00	; 0
    1da4:	30 e0       	ldi	r19, 0x00	; 0
    1da6:	4a e7       	ldi	r20, 0x7A	; 122
    1da8:	53 e4       	ldi	r21, 0x43	; 67
    1daa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dae:	dc 01       	movw	r26, r24
    1db0:	cb 01       	movw	r24, r22
    1db2:	f8 01       	movw	r30, r16
    1db4:	80 83       	st	Z, r24
    1db6:	91 83       	std	Z+1, r25	; 0x01
    1db8:	a2 83       	std	Z+2, r26	; 0x02
    1dba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1dbc:	fe 01       	movw	r30, r28
    1dbe:	ff 96       	adiw	r30, 0x3f	; 63
    1dc0:	60 81       	ld	r22, Z
    1dc2:	71 81       	ldd	r23, Z+1	; 0x01
    1dc4:	82 81       	ldd	r24, Z+2	; 0x02
    1dc6:	93 81       	ldd	r25, Z+3	; 0x03
    1dc8:	20 e0       	ldi	r18, 0x00	; 0
    1dca:	30 e0       	ldi	r19, 0x00	; 0
    1dcc:	40 e8       	ldi	r20, 0x80	; 128
    1dce:	5f e3       	ldi	r21, 0x3F	; 63
    1dd0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1dd4:	88 23       	and	r24, r24
    1dd6:	2c f4       	brge	.+10     	; 0x1de2 <LCD_enumInit+0x8c>
		__ticks = 1;
    1dd8:	81 e0       	ldi	r24, 0x01	; 1
    1dda:	90 e0       	ldi	r25, 0x00	; 0
    1ddc:	9e af       	std	Y+62, r25	; 0x3e
    1dde:	8d af       	std	Y+61, r24	; 0x3d
    1de0:	46 c0       	rjmp	.+140    	; 0x1e6e <LCD_enumInit+0x118>
	else if (__tmp > 65535)
    1de2:	fe 01       	movw	r30, r28
    1de4:	ff 96       	adiw	r30, 0x3f	; 63
    1de6:	60 81       	ld	r22, Z
    1de8:	71 81       	ldd	r23, Z+1	; 0x01
    1dea:	82 81       	ldd	r24, Z+2	; 0x02
    1dec:	93 81       	ldd	r25, Z+3	; 0x03
    1dee:	20 e0       	ldi	r18, 0x00	; 0
    1df0:	3f ef       	ldi	r19, 0xFF	; 255
    1df2:	4f e7       	ldi	r20, 0x7F	; 127
    1df4:	57 e4       	ldi	r21, 0x47	; 71
    1df6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1dfa:	18 16       	cp	r1, r24
    1dfc:	64 f5       	brge	.+88     	; 0x1e56 <LCD_enumInit+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dfe:	fe 01       	movw	r30, r28
    1e00:	ed 5b       	subi	r30, 0xBD	; 189
    1e02:	ff 4f       	sbci	r31, 0xFF	; 255
    1e04:	60 81       	ld	r22, Z
    1e06:	71 81       	ldd	r23, Z+1	; 0x01
    1e08:	82 81       	ldd	r24, Z+2	; 0x02
    1e0a:	93 81       	ldd	r25, Z+3	; 0x03
    1e0c:	20 e0       	ldi	r18, 0x00	; 0
    1e0e:	30 e0       	ldi	r19, 0x00	; 0
    1e10:	40 e2       	ldi	r20, 0x20	; 32
    1e12:	51 e4       	ldi	r21, 0x41	; 65
    1e14:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e18:	dc 01       	movw	r26, r24
    1e1a:	cb 01       	movw	r24, r22
    1e1c:	bc 01       	movw	r22, r24
    1e1e:	cd 01       	movw	r24, r26
    1e20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e24:	dc 01       	movw	r26, r24
    1e26:	cb 01       	movw	r24, r22
    1e28:	9e af       	std	Y+62, r25	; 0x3e
    1e2a:	8d af       	std	Y+61, r24	; 0x3d
    1e2c:	0f c0       	rjmp	.+30     	; 0x1e4c <LCD_enumInit+0xf6>
    1e2e:	89 e1       	ldi	r24, 0x19	; 25
    1e30:	90 e0       	ldi	r25, 0x00	; 0
    1e32:	9c af       	std	Y+60, r25	; 0x3c
    1e34:	8b af       	std	Y+59, r24	; 0x3b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1e36:	8b ad       	ldd	r24, Y+59	; 0x3b
    1e38:	9c ad       	ldd	r25, Y+60	; 0x3c
    1e3a:	01 97       	sbiw	r24, 0x01	; 1
    1e3c:	f1 f7       	brne	.-4      	; 0x1e3a <LCD_enumInit+0xe4>
    1e3e:	9c af       	std	Y+60, r25	; 0x3c
    1e40:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e42:	8d ad       	ldd	r24, Y+61	; 0x3d
    1e44:	9e ad       	ldd	r25, Y+62	; 0x3e
    1e46:	01 97       	sbiw	r24, 0x01	; 1
    1e48:	9e af       	std	Y+62, r25	; 0x3e
    1e4a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e4c:	8d ad       	ldd	r24, Y+61	; 0x3d
    1e4e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1e50:	00 97       	sbiw	r24, 0x00	; 0
    1e52:	69 f7       	brne	.-38     	; 0x1e2e <LCD_enumInit+0xd8>
    1e54:	16 c0       	rjmp	.+44     	; 0x1e82 <LCD_enumInit+0x12c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e56:	fe 01       	movw	r30, r28
    1e58:	ff 96       	adiw	r30, 0x3f	; 63
    1e5a:	60 81       	ld	r22, Z
    1e5c:	71 81       	ldd	r23, Z+1	; 0x01
    1e5e:	82 81       	ldd	r24, Z+2	; 0x02
    1e60:	93 81       	ldd	r25, Z+3	; 0x03
    1e62:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e66:	dc 01       	movw	r26, r24
    1e68:	cb 01       	movw	r24, r22
    1e6a:	9e af       	std	Y+62, r25	; 0x3e
    1e6c:	8d af       	std	Y+61, r24	; 0x3d
    1e6e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1e70:	9e ad       	ldd	r25, Y+62	; 0x3e
    1e72:	9a af       	std	Y+58, r25	; 0x3a
    1e74:	89 af       	std	Y+57, r24	; 0x39
    1e76:	89 ad       	ldd	r24, Y+57	; 0x39
    1e78:	9a ad       	ldd	r25, Y+58	; 0x3a
    1e7a:	01 97       	sbiw	r24, 0x01	; 1
    1e7c:	f1 f7       	brne	.-4      	; 0x1e7a <LCD_enumInit+0x124>
    1e7e:	9a af       	std	Y+58, r25	; 0x3a
    1e80:	89 af       	std	Y+57, r24	; 0x39

    _delay_ms(35);
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_RS_PORT,LCD_RS_PIN,OUTPUT);
    1e82:	81 e0       	ldi	r24, 0x01	; 1
    1e84:	66 e0       	ldi	r22, 0x06	; 6
    1e86:	41 e0       	ldi	r20, 0x01	; 1
    1e88:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1e8c:	fe 01       	movw	r30, r28
    1e8e:	e9 5b       	subi	r30, 0xB9	; 185
    1e90:	ff 4f       	sbci	r31, 0xFF	; 255
    1e92:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1e94:	fe 01       	movw	r30, r28
    1e96:	e9 5b       	subi	r30, 0xB9	; 185
    1e98:	ff 4f       	sbci	r31, 0xFF	; 255
    1e9a:	80 81       	ld	r24, Z
    1e9c:	81 30       	cpi	r24, 0x01	; 1
    1e9e:	41 f0       	breq	.+16     	; 0x1eb0 <LCD_enumInit+0x15a>
    1ea0:	fe 01       	movw	r30, r28
    1ea2:	e9 5b       	subi	r30, 0xB9	; 185
    1ea4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea6:	80 81       	ld	r24, Z
    1ea8:	29 96       	adiw	r28, 0x09	; 9
    1eaa:	8f af       	std	Y+63, r24	; 0x3f
    1eac:	29 97       	sbiw	r28, 0x09	; 9
    1eae:	23 c3       	rjmp	.+1606   	; 0x24f6 <LCD_enumInit+0x7a0>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_RW_PORT,LCD_RW_PIN,OUTPUT);
    1eb0:	81 e0       	ldi	r24, 0x01	; 1
    1eb2:	65 e0       	ldi	r22, 0x05	; 5
    1eb4:	41 e0       	ldi	r20, 0x01	; 1
    1eb6:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1eba:	fe 01       	movw	r30, r28
    1ebc:	e9 5b       	subi	r30, 0xB9	; 185
    1ebe:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec0:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1ec2:	fe 01       	movw	r30, r28
    1ec4:	e9 5b       	subi	r30, 0xB9	; 185
    1ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec8:	80 81       	ld	r24, Z
    1eca:	81 30       	cpi	r24, 0x01	; 1
    1ecc:	41 f0       	breq	.+16     	; 0x1ede <LCD_enumInit+0x188>
    1ece:	fe 01       	movw	r30, r28
    1ed0:	e9 5b       	subi	r30, 0xB9	; 185
    1ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed4:	80 81       	ld	r24, Z
    1ed6:	29 96       	adiw	r28, 0x09	; 9
    1ed8:	8f af       	std	Y+63, r24	; 0x3f
    1eda:	29 97       	sbiw	r28, 0x09	; 9
    1edc:	0c c3       	rjmp	.+1560   	; 0x24f6 <LCD_enumInit+0x7a0>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_EN_PORT,LCD_EN_PIN,OUTPUT);
    1ede:	81 e0       	ldi	r24, 0x01	; 1
    1ee0:	64 e0       	ldi	r22, 0x04	; 4
    1ee2:	41 e0       	ldi	r20, 0x01	; 1
    1ee4:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1ee8:	fe 01       	movw	r30, r28
    1eea:	e9 5b       	subi	r30, 0xB9	; 185
    1eec:	ff 4f       	sbci	r31, 0xFF	; 255
    1eee:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1ef0:	fe 01       	movw	r30, r28
    1ef2:	e9 5b       	subi	r30, 0xB9	; 185
    1ef4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef6:	80 81       	ld	r24, Z
    1ef8:	81 30       	cpi	r24, 0x01	; 1
    1efa:	41 f0       	breq	.+16     	; 0x1f0c <LCD_enumInit+0x1b6>
    1efc:	fe 01       	movw	r30, r28
    1efe:	e9 5b       	subi	r30, 0xB9	; 185
    1f00:	ff 4f       	sbci	r31, 0xFF	; 255
    1f02:	80 81       	ld	r24, Z
    1f04:	29 96       	adiw	r28, 0x09	; 9
    1f06:	8f af       	std	Y+63, r24	; 0x3f
    1f08:	29 97       	sbiw	r28, 0x09	; 9
    1f0a:	f5 c2       	rjmp	.+1514   	; 0x24f6 <LCD_enumInit+0x7a0>

    Local_enumErrorState=DIO_enumSetPinDirection(LCD_D7_PORT,LCD_D7_PIN,OUTPUT);
    1f0c:	80 e0       	ldi	r24, 0x00	; 0
    1f0e:	60 e0       	ldi	r22, 0x00	; 0
    1f10:	41 e0       	ldi	r20, 0x01	; 1
    1f12:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1f16:	fe 01       	movw	r30, r28
    1f18:	e9 5b       	subi	r30, 0xB9	; 185
    1f1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f1c:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1f1e:	fe 01       	movw	r30, r28
    1f20:	e9 5b       	subi	r30, 0xB9	; 185
    1f22:	ff 4f       	sbci	r31, 0xFF	; 255
    1f24:	80 81       	ld	r24, Z
    1f26:	81 30       	cpi	r24, 0x01	; 1
    1f28:	41 f0       	breq	.+16     	; 0x1f3a <LCD_enumInit+0x1e4>
    1f2a:	fe 01       	movw	r30, r28
    1f2c:	e9 5b       	subi	r30, 0xB9	; 185
    1f2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f30:	80 81       	ld	r24, Z
    1f32:	29 96       	adiw	r28, 0x09	; 9
    1f34:	8f af       	std	Y+63, r24	; 0x3f
    1f36:	29 97       	sbiw	r28, 0x09	; 9
    1f38:	de c2       	rjmp	.+1468   	; 0x24f6 <LCD_enumInit+0x7a0>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_D6_PORT,LCD_D6_PIN,OUTPUT);
    1f3a:	80 e0       	ldi	r24, 0x00	; 0
    1f3c:	61 e0       	ldi	r22, 0x01	; 1
    1f3e:	41 e0       	ldi	r20, 0x01	; 1
    1f40:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1f44:	fe 01       	movw	r30, r28
    1f46:	e9 5b       	subi	r30, 0xB9	; 185
    1f48:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4a:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1f4c:	fe 01       	movw	r30, r28
    1f4e:	e9 5b       	subi	r30, 0xB9	; 185
    1f50:	ff 4f       	sbci	r31, 0xFF	; 255
    1f52:	80 81       	ld	r24, Z
    1f54:	81 30       	cpi	r24, 0x01	; 1
    1f56:	41 f0       	breq	.+16     	; 0x1f68 <LCD_enumInit+0x212>
    1f58:	fe 01       	movw	r30, r28
    1f5a:	e9 5b       	subi	r30, 0xB9	; 185
    1f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5e:	80 81       	ld	r24, Z
    1f60:	29 96       	adiw	r28, 0x09	; 9
    1f62:	8f af       	std	Y+63, r24	; 0x3f
    1f64:	29 97       	sbiw	r28, 0x09	; 9
    1f66:	c7 c2       	rjmp	.+1422   	; 0x24f6 <LCD_enumInit+0x7a0>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_D5_PORT,LCD_D5_PIN,OUTPUT);
    1f68:	80 e0       	ldi	r24, 0x00	; 0
    1f6a:	62 e0       	ldi	r22, 0x02	; 2
    1f6c:	41 e0       	ldi	r20, 0x01	; 1
    1f6e:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1f72:	fe 01       	movw	r30, r28
    1f74:	e9 5b       	subi	r30, 0xB9	; 185
    1f76:	ff 4f       	sbci	r31, 0xFF	; 255
    1f78:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1f7a:	fe 01       	movw	r30, r28
    1f7c:	e9 5b       	subi	r30, 0xB9	; 185
    1f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f80:	80 81       	ld	r24, Z
    1f82:	81 30       	cpi	r24, 0x01	; 1
    1f84:	41 f0       	breq	.+16     	; 0x1f96 <LCD_enumInit+0x240>
    1f86:	fe 01       	movw	r30, r28
    1f88:	e9 5b       	subi	r30, 0xB9	; 185
    1f8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8c:	80 81       	ld	r24, Z
    1f8e:	29 96       	adiw	r28, 0x09	; 9
    1f90:	8f af       	std	Y+63, r24	; 0x3f
    1f92:	29 97       	sbiw	r28, 0x09	; 9
    1f94:	b0 c2       	rjmp	.+1376   	; 0x24f6 <LCD_enumInit+0x7a0>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_D4_PORT,LCD_D4_PIN,OUTPUT);
    1f96:	80 e0       	ldi	r24, 0x00	; 0
    1f98:	63 e0       	ldi	r22, 0x03	; 3
    1f9a:	41 e0       	ldi	r20, 0x01	; 1
    1f9c:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1fa0:	fe 01       	movw	r30, r28
    1fa2:	e9 5b       	subi	r30, 0xB9	; 185
    1fa4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa6:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1fa8:	fe 01       	movw	r30, r28
    1faa:	e9 5b       	subi	r30, 0xB9	; 185
    1fac:	ff 4f       	sbci	r31, 0xFF	; 255
    1fae:	80 81       	ld	r24, Z
    1fb0:	81 30       	cpi	r24, 0x01	; 1
    1fb2:	41 f0       	breq	.+16     	; 0x1fc4 <LCD_enumInit+0x26e>
    1fb4:	fe 01       	movw	r30, r28
    1fb6:	e9 5b       	subi	r30, 0xB9	; 185
    1fb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fba:	80 81       	ld	r24, Z
    1fbc:	29 96       	adiw	r28, 0x09	; 9
    1fbe:	8f af       	std	Y+63, r24	; 0x3f
    1fc0:	29 97       	sbiw	r28, 0x09	; 9
    1fc2:	99 c2       	rjmp	.+1330   	; 0x24f6 <LCD_enumInit+0x7a0>

#if LCD_MODE == EIGHT_BIT

    Local_enumErrorState=DIO_enumSetPinDirection(LCD_D3_PORT,LCD_D3_PIN,OUTPUT);
    1fc4:	80 e0       	ldi	r24, 0x00	; 0
    1fc6:	64 e0       	ldi	r22, 0x04	; 4
    1fc8:	41 e0       	ldi	r20, 0x01	; 1
    1fca:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1fce:	fe 01       	movw	r30, r28
    1fd0:	e9 5b       	subi	r30, 0xB9	; 185
    1fd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd4:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1fd6:	fe 01       	movw	r30, r28
    1fd8:	e9 5b       	subi	r30, 0xB9	; 185
    1fda:	ff 4f       	sbci	r31, 0xFF	; 255
    1fdc:	80 81       	ld	r24, Z
    1fde:	81 30       	cpi	r24, 0x01	; 1
    1fe0:	41 f0       	breq	.+16     	; 0x1ff2 <LCD_enumInit+0x29c>
    1fe2:	fe 01       	movw	r30, r28
    1fe4:	e9 5b       	subi	r30, 0xB9	; 185
    1fe6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe8:	80 81       	ld	r24, Z
    1fea:	29 96       	adiw	r28, 0x09	; 9
    1fec:	8f af       	std	Y+63, r24	; 0x3f
    1fee:	29 97       	sbiw	r28, 0x09	; 9
    1ff0:	82 c2       	rjmp	.+1284   	; 0x24f6 <LCD_enumInit+0x7a0>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_D2_PORT,LCD_D2_PIN,OUTPUT);
    1ff2:	80 e0       	ldi	r24, 0x00	; 0
    1ff4:	65 e0       	ldi	r22, 0x05	; 5
    1ff6:	41 e0       	ldi	r20, 0x01	; 1
    1ff8:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    1ffc:	fe 01       	movw	r30, r28
    1ffe:	e9 5b       	subi	r30, 0xB9	; 185
    2000:	ff 4f       	sbci	r31, 0xFF	; 255
    2002:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2004:	fe 01       	movw	r30, r28
    2006:	e9 5b       	subi	r30, 0xB9	; 185
    2008:	ff 4f       	sbci	r31, 0xFF	; 255
    200a:	80 81       	ld	r24, Z
    200c:	81 30       	cpi	r24, 0x01	; 1
    200e:	41 f0       	breq	.+16     	; 0x2020 <LCD_enumInit+0x2ca>
    2010:	fe 01       	movw	r30, r28
    2012:	e9 5b       	subi	r30, 0xB9	; 185
    2014:	ff 4f       	sbci	r31, 0xFF	; 255
    2016:	80 81       	ld	r24, Z
    2018:	29 96       	adiw	r28, 0x09	; 9
    201a:	8f af       	std	Y+63, r24	; 0x3f
    201c:	29 97       	sbiw	r28, 0x09	; 9
    201e:	6b c2       	rjmp	.+1238   	; 0x24f6 <LCD_enumInit+0x7a0>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_D1_PORT,LCD_D1_PIN,OUTPUT);
    2020:	80 e0       	ldi	r24, 0x00	; 0
    2022:	66 e0       	ldi	r22, 0x06	; 6
    2024:	41 e0       	ldi	r20, 0x01	; 1
    2026:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    202a:	fe 01       	movw	r30, r28
    202c:	e9 5b       	subi	r30, 0xB9	; 185
    202e:	ff 4f       	sbci	r31, 0xFF	; 255
    2030:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2032:	fe 01       	movw	r30, r28
    2034:	e9 5b       	subi	r30, 0xB9	; 185
    2036:	ff 4f       	sbci	r31, 0xFF	; 255
    2038:	80 81       	ld	r24, Z
    203a:	81 30       	cpi	r24, 0x01	; 1
    203c:	41 f0       	breq	.+16     	; 0x204e <LCD_enumInit+0x2f8>
    203e:	fe 01       	movw	r30, r28
    2040:	e9 5b       	subi	r30, 0xB9	; 185
    2042:	ff 4f       	sbci	r31, 0xFF	; 255
    2044:	80 81       	ld	r24, Z
    2046:	29 96       	adiw	r28, 0x09	; 9
    2048:	8f af       	std	Y+63, r24	; 0x3f
    204a:	29 97       	sbiw	r28, 0x09	; 9
    204c:	54 c2       	rjmp	.+1192   	; 0x24f6 <LCD_enumInit+0x7a0>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_D0_PORT,LCD_D0_PIN,OUTPUT);
    204e:	80 e0       	ldi	r24, 0x00	; 0
    2050:	67 e0       	ldi	r22, 0x07	; 7
    2052:	41 e0       	ldi	r20, 0x01	; 1
    2054:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    2058:	fe 01       	movw	r30, r28
    205a:	e9 5b       	subi	r30, 0xB9	; 185
    205c:	ff 4f       	sbci	r31, 0xFF	; 255
    205e:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2060:	fe 01       	movw	r30, r28
    2062:	e9 5b       	subi	r30, 0xB9	; 185
    2064:	ff 4f       	sbci	r31, 0xFF	; 255
    2066:	80 81       	ld	r24, Z
    2068:	81 30       	cpi	r24, 0x01	; 1
    206a:	41 f0       	breq	.+16     	; 0x207c <LCD_enumInit+0x326>
    206c:	fe 01       	movw	r30, r28
    206e:	e9 5b       	subi	r30, 0xB9	; 185
    2070:	ff 4f       	sbci	r31, 0xFF	; 255
    2072:	80 81       	ld	r24, Z
    2074:	29 96       	adiw	r28, 0x09	; 9
    2076:	8f af       	std	Y+63, r24	; 0x3f
    2078:	29 97       	sbiw	r28, 0x09	; 9
    207a:	3d c2       	rjmp	.+1146   	; 0x24f6 <LCD_enumInit+0x7a0>

    Local_enumErrorState=LCD_inlenumSendCommand(0x38);
    207c:	88 e3       	ldi	r24, 0x38	; 56
    207e:	0e 94 8a 12 	call	0x2514	; 0x2514 <LCD_inlenumSendCommand>
    2082:	fe 01       	movw	r30, r28
    2084:	e9 5b       	subi	r30, 0xB9	; 185
    2086:	ff 4f       	sbci	r31, 0xFF	; 255
    2088:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    208a:	fe 01       	movw	r30, r28
    208c:	e9 5b       	subi	r30, 0xB9	; 185
    208e:	ff 4f       	sbci	r31, 0xFF	; 255
    2090:	80 81       	ld	r24, Z
    2092:	81 30       	cpi	r24, 0x01	; 1
    2094:	41 f0       	breq	.+16     	; 0x20a6 <LCD_enumInit+0x350>
    2096:	fe 01       	movw	r30, r28
    2098:	e9 5b       	subi	r30, 0xB9	; 185
    209a:	ff 4f       	sbci	r31, 0xFF	; 255
    209c:	80 81       	ld	r24, Z
    209e:	29 96       	adiw	r28, 0x09	; 9
    20a0:	8f af       	std	Y+63, r24	; 0x3f
    20a2:	29 97       	sbiw	r28, 0x09	; 9
    20a4:	28 c2       	rjmp	.+1104   	; 0x24f6 <LCD_enumInit+0x7a0>
    20a6:	80 e0       	ldi	r24, 0x00	; 0
    20a8:	90 e0       	ldi	r25, 0x00	; 0
    20aa:	a0 e8       	ldi	r26, 0x80	; 128
    20ac:	bf e3       	ldi	r27, 0x3F	; 63
    20ae:	8d ab       	std	Y+53, r24	; 0x35
    20b0:	9e ab       	std	Y+54, r25	; 0x36
    20b2:	af ab       	std	Y+55, r26	; 0x37
    20b4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20b6:	6d a9       	ldd	r22, Y+53	; 0x35
    20b8:	7e a9       	ldd	r23, Y+54	; 0x36
    20ba:	8f a9       	ldd	r24, Y+55	; 0x37
    20bc:	98 ad       	ldd	r25, Y+56	; 0x38
    20be:	20 e0       	ldi	r18, 0x00	; 0
    20c0:	30 e0       	ldi	r19, 0x00	; 0
    20c2:	4a e7       	ldi	r20, 0x7A	; 122
    20c4:	53 e4       	ldi	r21, 0x43	; 67
    20c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20ca:	dc 01       	movw	r26, r24
    20cc:	cb 01       	movw	r24, r22
    20ce:	89 ab       	std	Y+49, r24	; 0x31
    20d0:	9a ab       	std	Y+50, r25	; 0x32
    20d2:	ab ab       	std	Y+51, r26	; 0x33
    20d4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    20d6:	69 a9       	ldd	r22, Y+49	; 0x31
    20d8:	7a a9       	ldd	r23, Y+50	; 0x32
    20da:	8b a9       	ldd	r24, Y+51	; 0x33
    20dc:	9c a9       	ldd	r25, Y+52	; 0x34
    20de:	20 e0       	ldi	r18, 0x00	; 0
    20e0:	30 e0       	ldi	r19, 0x00	; 0
    20e2:	40 e8       	ldi	r20, 0x80	; 128
    20e4:	5f e3       	ldi	r21, 0x3F	; 63
    20e6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20ea:	88 23       	and	r24, r24
    20ec:	2c f4       	brge	.+10     	; 0x20f8 <LCD_enumInit+0x3a2>
		__ticks = 1;
    20ee:	81 e0       	ldi	r24, 0x01	; 1
    20f0:	90 e0       	ldi	r25, 0x00	; 0
    20f2:	98 ab       	std	Y+48, r25	; 0x30
    20f4:	8f a7       	std	Y+47, r24	; 0x2f
    20f6:	3f c0       	rjmp	.+126    	; 0x2176 <LCD_enumInit+0x420>
	else if (__tmp > 65535)
    20f8:	69 a9       	ldd	r22, Y+49	; 0x31
    20fa:	7a a9       	ldd	r23, Y+50	; 0x32
    20fc:	8b a9       	ldd	r24, Y+51	; 0x33
    20fe:	9c a9       	ldd	r25, Y+52	; 0x34
    2100:	20 e0       	ldi	r18, 0x00	; 0
    2102:	3f ef       	ldi	r19, 0xFF	; 255
    2104:	4f e7       	ldi	r20, 0x7F	; 127
    2106:	57 e4       	ldi	r21, 0x47	; 71
    2108:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    210c:	18 16       	cp	r1, r24
    210e:	4c f5       	brge	.+82     	; 0x2162 <LCD_enumInit+0x40c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2110:	6d a9       	ldd	r22, Y+53	; 0x35
    2112:	7e a9       	ldd	r23, Y+54	; 0x36
    2114:	8f a9       	ldd	r24, Y+55	; 0x37
    2116:	98 ad       	ldd	r25, Y+56	; 0x38
    2118:	20 e0       	ldi	r18, 0x00	; 0
    211a:	30 e0       	ldi	r19, 0x00	; 0
    211c:	40 e2       	ldi	r20, 0x20	; 32
    211e:	51 e4       	ldi	r21, 0x41	; 65
    2120:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2124:	dc 01       	movw	r26, r24
    2126:	cb 01       	movw	r24, r22
    2128:	bc 01       	movw	r22, r24
    212a:	cd 01       	movw	r24, r26
    212c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2130:	dc 01       	movw	r26, r24
    2132:	cb 01       	movw	r24, r22
    2134:	98 ab       	std	Y+48, r25	; 0x30
    2136:	8f a7       	std	Y+47, r24	; 0x2f
    2138:	0f c0       	rjmp	.+30     	; 0x2158 <LCD_enumInit+0x402>
    213a:	89 e1       	ldi	r24, 0x19	; 25
    213c:	90 e0       	ldi	r25, 0x00	; 0
    213e:	9e a7       	std	Y+46, r25	; 0x2e
    2140:	8d a7       	std	Y+45, r24	; 0x2d
    2142:	8d a5       	ldd	r24, Y+45	; 0x2d
    2144:	9e a5       	ldd	r25, Y+46	; 0x2e
    2146:	01 97       	sbiw	r24, 0x01	; 1
    2148:	f1 f7       	brne	.-4      	; 0x2146 <LCD_enumInit+0x3f0>
    214a:	9e a7       	std	Y+46, r25	; 0x2e
    214c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    214e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2150:	98 a9       	ldd	r25, Y+48	; 0x30
    2152:	01 97       	sbiw	r24, 0x01	; 1
    2154:	98 ab       	std	Y+48, r25	; 0x30
    2156:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2158:	8f a5       	ldd	r24, Y+47	; 0x2f
    215a:	98 a9       	ldd	r25, Y+48	; 0x30
    215c:	00 97       	sbiw	r24, 0x00	; 0
    215e:	69 f7       	brne	.-38     	; 0x213a <LCD_enumInit+0x3e4>
    2160:	14 c0       	rjmp	.+40     	; 0x218a <LCD_enumInit+0x434>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2162:	69 a9       	ldd	r22, Y+49	; 0x31
    2164:	7a a9       	ldd	r23, Y+50	; 0x32
    2166:	8b a9       	ldd	r24, Y+51	; 0x33
    2168:	9c a9       	ldd	r25, Y+52	; 0x34
    216a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    216e:	dc 01       	movw	r26, r24
    2170:	cb 01       	movw	r24, r22
    2172:	98 ab       	std	Y+48, r25	; 0x30
    2174:	8f a7       	std	Y+47, r24	; 0x2f
    2176:	8f a5       	ldd	r24, Y+47	; 0x2f
    2178:	98 a9       	ldd	r25, Y+48	; 0x30
    217a:	9c a7       	std	Y+44, r25	; 0x2c
    217c:	8b a7       	std	Y+43, r24	; 0x2b
    217e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2180:	9c a5       	ldd	r25, Y+44	; 0x2c
    2182:	01 97       	sbiw	r24, 0x01	; 1
    2184:	f1 f7       	brne	.-4      	; 0x2182 <LCD_enumInit+0x42c>
    2186:	9c a7       	std	Y+44, r25	; 0x2c
    2188:	8b a7       	std	Y+43, r24	; 0x2b

#endif

    _delay_ms(1);

    Local_enumErrorState=LCD_inlenumSendCommand(0x0D);
    218a:	8d e0       	ldi	r24, 0x0D	; 13
    218c:	0e 94 8a 12 	call	0x2514	; 0x2514 <LCD_inlenumSendCommand>
    2190:	fe 01       	movw	r30, r28
    2192:	e9 5b       	subi	r30, 0xB9	; 185
    2194:	ff 4f       	sbci	r31, 0xFF	; 255
    2196:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2198:	fe 01       	movw	r30, r28
    219a:	e9 5b       	subi	r30, 0xB9	; 185
    219c:	ff 4f       	sbci	r31, 0xFF	; 255
    219e:	80 81       	ld	r24, Z
    21a0:	81 30       	cpi	r24, 0x01	; 1
    21a2:	41 f0       	breq	.+16     	; 0x21b4 <LCD_enumInit+0x45e>
    21a4:	fe 01       	movw	r30, r28
    21a6:	e9 5b       	subi	r30, 0xB9	; 185
    21a8:	ff 4f       	sbci	r31, 0xFF	; 255
    21aa:	80 81       	ld	r24, Z
    21ac:	29 96       	adiw	r28, 0x09	; 9
    21ae:	8f af       	std	Y+63, r24	; 0x3f
    21b0:	29 97       	sbiw	r28, 0x09	; 9
    21b2:	a1 c1       	rjmp	.+834    	; 0x24f6 <LCD_enumInit+0x7a0>
    21b4:	80 e0       	ldi	r24, 0x00	; 0
    21b6:	90 e0       	ldi	r25, 0x00	; 0
    21b8:	a0 e8       	ldi	r26, 0x80	; 128
    21ba:	bf e3       	ldi	r27, 0x3F	; 63
    21bc:	8f a3       	std	Y+39, r24	; 0x27
    21be:	98 a7       	std	Y+40, r25	; 0x28
    21c0:	a9 a7       	std	Y+41, r26	; 0x29
    21c2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21c4:	6f a1       	ldd	r22, Y+39	; 0x27
    21c6:	78 a5       	ldd	r23, Y+40	; 0x28
    21c8:	89 a5       	ldd	r24, Y+41	; 0x29
    21ca:	9a a5       	ldd	r25, Y+42	; 0x2a
    21cc:	20 e0       	ldi	r18, 0x00	; 0
    21ce:	30 e0       	ldi	r19, 0x00	; 0
    21d0:	4a e7       	ldi	r20, 0x7A	; 122
    21d2:	53 e4       	ldi	r21, 0x43	; 67
    21d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21d8:	dc 01       	movw	r26, r24
    21da:	cb 01       	movw	r24, r22
    21dc:	8b a3       	std	Y+35, r24	; 0x23
    21de:	9c a3       	std	Y+36, r25	; 0x24
    21e0:	ad a3       	std	Y+37, r26	; 0x25
    21e2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    21e4:	6b a1       	ldd	r22, Y+35	; 0x23
    21e6:	7c a1       	ldd	r23, Y+36	; 0x24
    21e8:	8d a1       	ldd	r24, Y+37	; 0x25
    21ea:	9e a1       	ldd	r25, Y+38	; 0x26
    21ec:	20 e0       	ldi	r18, 0x00	; 0
    21ee:	30 e0       	ldi	r19, 0x00	; 0
    21f0:	40 e8       	ldi	r20, 0x80	; 128
    21f2:	5f e3       	ldi	r21, 0x3F	; 63
    21f4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21f8:	88 23       	and	r24, r24
    21fa:	2c f4       	brge	.+10     	; 0x2206 <LCD_enumInit+0x4b0>
		__ticks = 1;
    21fc:	81 e0       	ldi	r24, 0x01	; 1
    21fe:	90 e0       	ldi	r25, 0x00	; 0
    2200:	9a a3       	std	Y+34, r25	; 0x22
    2202:	89 a3       	std	Y+33, r24	; 0x21
    2204:	3f c0       	rjmp	.+126    	; 0x2284 <LCD_enumInit+0x52e>
	else if (__tmp > 65535)
    2206:	6b a1       	ldd	r22, Y+35	; 0x23
    2208:	7c a1       	ldd	r23, Y+36	; 0x24
    220a:	8d a1       	ldd	r24, Y+37	; 0x25
    220c:	9e a1       	ldd	r25, Y+38	; 0x26
    220e:	20 e0       	ldi	r18, 0x00	; 0
    2210:	3f ef       	ldi	r19, 0xFF	; 255
    2212:	4f e7       	ldi	r20, 0x7F	; 127
    2214:	57 e4       	ldi	r21, 0x47	; 71
    2216:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    221a:	18 16       	cp	r1, r24
    221c:	4c f5       	brge	.+82     	; 0x2270 <LCD_enumInit+0x51a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    221e:	6f a1       	ldd	r22, Y+39	; 0x27
    2220:	78 a5       	ldd	r23, Y+40	; 0x28
    2222:	89 a5       	ldd	r24, Y+41	; 0x29
    2224:	9a a5       	ldd	r25, Y+42	; 0x2a
    2226:	20 e0       	ldi	r18, 0x00	; 0
    2228:	30 e0       	ldi	r19, 0x00	; 0
    222a:	40 e2       	ldi	r20, 0x20	; 32
    222c:	51 e4       	ldi	r21, 0x41	; 65
    222e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2232:	dc 01       	movw	r26, r24
    2234:	cb 01       	movw	r24, r22
    2236:	bc 01       	movw	r22, r24
    2238:	cd 01       	movw	r24, r26
    223a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    223e:	dc 01       	movw	r26, r24
    2240:	cb 01       	movw	r24, r22
    2242:	9a a3       	std	Y+34, r25	; 0x22
    2244:	89 a3       	std	Y+33, r24	; 0x21
    2246:	0f c0       	rjmp	.+30     	; 0x2266 <LCD_enumInit+0x510>
    2248:	89 e1       	ldi	r24, 0x19	; 25
    224a:	90 e0       	ldi	r25, 0x00	; 0
    224c:	98 a3       	std	Y+32, r25	; 0x20
    224e:	8f 8f       	std	Y+31, r24	; 0x1f
    2250:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2252:	98 a1       	ldd	r25, Y+32	; 0x20
    2254:	01 97       	sbiw	r24, 0x01	; 1
    2256:	f1 f7       	brne	.-4      	; 0x2254 <LCD_enumInit+0x4fe>
    2258:	98 a3       	std	Y+32, r25	; 0x20
    225a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    225c:	89 a1       	ldd	r24, Y+33	; 0x21
    225e:	9a a1       	ldd	r25, Y+34	; 0x22
    2260:	01 97       	sbiw	r24, 0x01	; 1
    2262:	9a a3       	std	Y+34, r25	; 0x22
    2264:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2266:	89 a1       	ldd	r24, Y+33	; 0x21
    2268:	9a a1       	ldd	r25, Y+34	; 0x22
    226a:	00 97       	sbiw	r24, 0x00	; 0
    226c:	69 f7       	brne	.-38     	; 0x2248 <LCD_enumInit+0x4f2>
    226e:	14 c0       	rjmp	.+40     	; 0x2298 <LCD_enumInit+0x542>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2270:	6b a1       	ldd	r22, Y+35	; 0x23
    2272:	7c a1       	ldd	r23, Y+36	; 0x24
    2274:	8d a1       	ldd	r24, Y+37	; 0x25
    2276:	9e a1       	ldd	r25, Y+38	; 0x26
    2278:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    227c:	dc 01       	movw	r26, r24
    227e:	cb 01       	movw	r24, r22
    2280:	9a a3       	std	Y+34, r25	; 0x22
    2282:	89 a3       	std	Y+33, r24	; 0x21
    2284:	89 a1       	ldd	r24, Y+33	; 0x21
    2286:	9a a1       	ldd	r25, Y+34	; 0x22
    2288:	9e 8f       	std	Y+30, r25	; 0x1e
    228a:	8d 8f       	std	Y+29, r24	; 0x1d
    228c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    228e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2290:	01 97       	sbiw	r24, 0x01	; 1
    2292:	f1 f7       	brne	.-4      	; 0x2290 <LCD_enumInit+0x53a>
    2294:	9e 8f       	std	Y+30, r25	; 0x1e
    2296:	8d 8f       	std	Y+29, r24	; 0x1d

    _delay_ms(1);

    Local_enumErrorState=LCD_inlenumSendCommand(0x01);
    2298:	81 e0       	ldi	r24, 0x01	; 1
    229a:	0e 94 8a 12 	call	0x2514	; 0x2514 <LCD_inlenumSendCommand>
    229e:	fe 01       	movw	r30, r28
    22a0:	e9 5b       	subi	r30, 0xB9	; 185
    22a2:	ff 4f       	sbci	r31, 0xFF	; 255
    22a4:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    22a6:	fe 01       	movw	r30, r28
    22a8:	e9 5b       	subi	r30, 0xB9	; 185
    22aa:	ff 4f       	sbci	r31, 0xFF	; 255
    22ac:	80 81       	ld	r24, Z
    22ae:	81 30       	cpi	r24, 0x01	; 1
    22b0:	41 f0       	breq	.+16     	; 0x22c2 <LCD_enumInit+0x56c>
    22b2:	fe 01       	movw	r30, r28
    22b4:	e9 5b       	subi	r30, 0xB9	; 185
    22b6:	ff 4f       	sbci	r31, 0xFF	; 255
    22b8:	80 81       	ld	r24, Z
    22ba:	29 96       	adiw	r28, 0x09	; 9
    22bc:	8f af       	std	Y+63, r24	; 0x3f
    22be:	29 97       	sbiw	r28, 0x09	; 9
    22c0:	1a c1       	rjmp	.+564    	; 0x24f6 <LCD_enumInit+0x7a0>
    22c2:	80 e0       	ldi	r24, 0x00	; 0
    22c4:	90 e0       	ldi	r25, 0x00	; 0
    22c6:	a0 e4       	ldi	r26, 0x40	; 64
    22c8:	b0 e4       	ldi	r27, 0x40	; 64
    22ca:	89 8f       	std	Y+25, r24	; 0x19
    22cc:	9a 8f       	std	Y+26, r25	; 0x1a
    22ce:	ab 8f       	std	Y+27, r26	; 0x1b
    22d0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22d2:	69 8d       	ldd	r22, Y+25	; 0x19
    22d4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    22d6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    22d8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    22da:	20 e0       	ldi	r18, 0x00	; 0
    22dc:	30 e0       	ldi	r19, 0x00	; 0
    22de:	4a e7       	ldi	r20, 0x7A	; 122
    22e0:	53 e4       	ldi	r21, 0x43	; 67
    22e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22e6:	dc 01       	movw	r26, r24
    22e8:	cb 01       	movw	r24, r22
    22ea:	8d 8b       	std	Y+21, r24	; 0x15
    22ec:	9e 8b       	std	Y+22, r25	; 0x16
    22ee:	af 8b       	std	Y+23, r26	; 0x17
    22f0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    22f2:	6d 89       	ldd	r22, Y+21	; 0x15
    22f4:	7e 89       	ldd	r23, Y+22	; 0x16
    22f6:	8f 89       	ldd	r24, Y+23	; 0x17
    22f8:	98 8d       	ldd	r25, Y+24	; 0x18
    22fa:	20 e0       	ldi	r18, 0x00	; 0
    22fc:	30 e0       	ldi	r19, 0x00	; 0
    22fe:	40 e8       	ldi	r20, 0x80	; 128
    2300:	5f e3       	ldi	r21, 0x3F	; 63
    2302:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2306:	88 23       	and	r24, r24
    2308:	2c f4       	brge	.+10     	; 0x2314 <LCD_enumInit+0x5be>
		__ticks = 1;
    230a:	81 e0       	ldi	r24, 0x01	; 1
    230c:	90 e0       	ldi	r25, 0x00	; 0
    230e:	9c 8b       	std	Y+20, r25	; 0x14
    2310:	8b 8b       	std	Y+19, r24	; 0x13
    2312:	3f c0       	rjmp	.+126    	; 0x2392 <LCD_enumInit+0x63c>
	else if (__tmp > 65535)
    2314:	6d 89       	ldd	r22, Y+21	; 0x15
    2316:	7e 89       	ldd	r23, Y+22	; 0x16
    2318:	8f 89       	ldd	r24, Y+23	; 0x17
    231a:	98 8d       	ldd	r25, Y+24	; 0x18
    231c:	20 e0       	ldi	r18, 0x00	; 0
    231e:	3f ef       	ldi	r19, 0xFF	; 255
    2320:	4f e7       	ldi	r20, 0x7F	; 127
    2322:	57 e4       	ldi	r21, 0x47	; 71
    2324:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2328:	18 16       	cp	r1, r24
    232a:	4c f5       	brge	.+82     	; 0x237e <LCD_enumInit+0x628>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    232c:	69 8d       	ldd	r22, Y+25	; 0x19
    232e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2330:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2332:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2334:	20 e0       	ldi	r18, 0x00	; 0
    2336:	30 e0       	ldi	r19, 0x00	; 0
    2338:	40 e2       	ldi	r20, 0x20	; 32
    233a:	51 e4       	ldi	r21, 0x41	; 65
    233c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2340:	dc 01       	movw	r26, r24
    2342:	cb 01       	movw	r24, r22
    2344:	bc 01       	movw	r22, r24
    2346:	cd 01       	movw	r24, r26
    2348:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    234c:	dc 01       	movw	r26, r24
    234e:	cb 01       	movw	r24, r22
    2350:	9c 8b       	std	Y+20, r25	; 0x14
    2352:	8b 8b       	std	Y+19, r24	; 0x13
    2354:	0f c0       	rjmp	.+30     	; 0x2374 <LCD_enumInit+0x61e>
    2356:	89 e1       	ldi	r24, 0x19	; 25
    2358:	90 e0       	ldi	r25, 0x00	; 0
    235a:	9a 8b       	std	Y+18, r25	; 0x12
    235c:	89 8b       	std	Y+17, r24	; 0x11
    235e:	89 89       	ldd	r24, Y+17	; 0x11
    2360:	9a 89       	ldd	r25, Y+18	; 0x12
    2362:	01 97       	sbiw	r24, 0x01	; 1
    2364:	f1 f7       	brne	.-4      	; 0x2362 <LCD_enumInit+0x60c>
    2366:	9a 8b       	std	Y+18, r25	; 0x12
    2368:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    236a:	8b 89       	ldd	r24, Y+19	; 0x13
    236c:	9c 89       	ldd	r25, Y+20	; 0x14
    236e:	01 97       	sbiw	r24, 0x01	; 1
    2370:	9c 8b       	std	Y+20, r25	; 0x14
    2372:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2374:	8b 89       	ldd	r24, Y+19	; 0x13
    2376:	9c 89       	ldd	r25, Y+20	; 0x14
    2378:	00 97       	sbiw	r24, 0x00	; 0
    237a:	69 f7       	brne	.-38     	; 0x2356 <LCD_enumInit+0x600>
    237c:	14 c0       	rjmp	.+40     	; 0x23a6 <LCD_enumInit+0x650>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    237e:	6d 89       	ldd	r22, Y+21	; 0x15
    2380:	7e 89       	ldd	r23, Y+22	; 0x16
    2382:	8f 89       	ldd	r24, Y+23	; 0x17
    2384:	98 8d       	ldd	r25, Y+24	; 0x18
    2386:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    238a:	dc 01       	movw	r26, r24
    238c:	cb 01       	movw	r24, r22
    238e:	9c 8b       	std	Y+20, r25	; 0x14
    2390:	8b 8b       	std	Y+19, r24	; 0x13
    2392:	8b 89       	ldd	r24, Y+19	; 0x13
    2394:	9c 89       	ldd	r25, Y+20	; 0x14
    2396:	98 8b       	std	Y+16, r25	; 0x10
    2398:	8f 87       	std	Y+15, r24	; 0x0f
    239a:	8f 85       	ldd	r24, Y+15	; 0x0f
    239c:	98 89       	ldd	r25, Y+16	; 0x10
    239e:	01 97       	sbiw	r24, 0x01	; 1
    23a0:	f1 f7       	brne	.-4      	; 0x239e <LCD_enumInit+0x648>
    23a2:	98 8b       	std	Y+16, r25	; 0x10
    23a4:	8f 87       	std	Y+15, r24	; 0x0f

    _delay_ms(3);

    Local_enumErrorState=LCD_inlenumSendCommand(0x06);
    23a6:	86 e0       	ldi	r24, 0x06	; 6
    23a8:	0e 94 8a 12 	call	0x2514	; 0x2514 <LCD_inlenumSendCommand>
    23ac:	fe 01       	movw	r30, r28
    23ae:	e9 5b       	subi	r30, 0xB9	; 185
    23b0:	ff 4f       	sbci	r31, 0xFF	; 255
    23b2:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    23b4:	fe 01       	movw	r30, r28
    23b6:	e9 5b       	subi	r30, 0xB9	; 185
    23b8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ba:	80 81       	ld	r24, Z
    23bc:	81 30       	cpi	r24, 0x01	; 1
    23be:	41 f0       	breq	.+16     	; 0x23d0 <LCD_enumInit+0x67a>
    23c0:	fe 01       	movw	r30, r28
    23c2:	e9 5b       	subi	r30, 0xB9	; 185
    23c4:	ff 4f       	sbci	r31, 0xFF	; 255
    23c6:	80 81       	ld	r24, Z
    23c8:	29 96       	adiw	r28, 0x09	; 9
    23ca:	8f af       	std	Y+63, r24	; 0x3f
    23cc:	29 97       	sbiw	r28, 0x09	; 9
    23ce:	93 c0       	rjmp	.+294    	; 0x24f6 <LCD_enumInit+0x7a0>
    23d0:	80 e0       	ldi	r24, 0x00	; 0
    23d2:	90 e0       	ldi	r25, 0x00	; 0
    23d4:	a0 e8       	ldi	r26, 0x80	; 128
    23d6:	bf e3       	ldi	r27, 0x3F	; 63
    23d8:	8b 87       	std	Y+11, r24	; 0x0b
    23da:	9c 87       	std	Y+12, r25	; 0x0c
    23dc:	ad 87       	std	Y+13, r26	; 0x0d
    23de:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23e0:	6b 85       	ldd	r22, Y+11	; 0x0b
    23e2:	7c 85       	ldd	r23, Y+12	; 0x0c
    23e4:	8d 85       	ldd	r24, Y+13	; 0x0d
    23e6:	9e 85       	ldd	r25, Y+14	; 0x0e
    23e8:	20 e0       	ldi	r18, 0x00	; 0
    23ea:	30 e0       	ldi	r19, 0x00	; 0
    23ec:	4a e7       	ldi	r20, 0x7A	; 122
    23ee:	53 e4       	ldi	r21, 0x43	; 67
    23f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23f4:	dc 01       	movw	r26, r24
    23f6:	cb 01       	movw	r24, r22
    23f8:	8f 83       	std	Y+7, r24	; 0x07
    23fa:	98 87       	std	Y+8, r25	; 0x08
    23fc:	a9 87       	std	Y+9, r26	; 0x09
    23fe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2400:	6f 81       	ldd	r22, Y+7	; 0x07
    2402:	78 85       	ldd	r23, Y+8	; 0x08
    2404:	89 85       	ldd	r24, Y+9	; 0x09
    2406:	9a 85       	ldd	r25, Y+10	; 0x0a
    2408:	20 e0       	ldi	r18, 0x00	; 0
    240a:	30 e0       	ldi	r19, 0x00	; 0
    240c:	40 e8       	ldi	r20, 0x80	; 128
    240e:	5f e3       	ldi	r21, 0x3F	; 63
    2410:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2414:	88 23       	and	r24, r24
    2416:	2c f4       	brge	.+10     	; 0x2422 <LCD_enumInit+0x6cc>
		__ticks = 1;
    2418:	81 e0       	ldi	r24, 0x01	; 1
    241a:	90 e0       	ldi	r25, 0x00	; 0
    241c:	9e 83       	std	Y+6, r25	; 0x06
    241e:	8d 83       	std	Y+5, r24	; 0x05
    2420:	3f c0       	rjmp	.+126    	; 0x24a0 <LCD_enumInit+0x74a>
	else if (__tmp > 65535)
    2422:	6f 81       	ldd	r22, Y+7	; 0x07
    2424:	78 85       	ldd	r23, Y+8	; 0x08
    2426:	89 85       	ldd	r24, Y+9	; 0x09
    2428:	9a 85       	ldd	r25, Y+10	; 0x0a
    242a:	20 e0       	ldi	r18, 0x00	; 0
    242c:	3f ef       	ldi	r19, 0xFF	; 255
    242e:	4f e7       	ldi	r20, 0x7F	; 127
    2430:	57 e4       	ldi	r21, 0x47	; 71
    2432:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2436:	18 16       	cp	r1, r24
    2438:	4c f5       	brge	.+82     	; 0x248c <LCD_enumInit+0x736>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    243a:	6b 85       	ldd	r22, Y+11	; 0x0b
    243c:	7c 85       	ldd	r23, Y+12	; 0x0c
    243e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2440:	9e 85       	ldd	r25, Y+14	; 0x0e
    2442:	20 e0       	ldi	r18, 0x00	; 0
    2444:	30 e0       	ldi	r19, 0x00	; 0
    2446:	40 e2       	ldi	r20, 0x20	; 32
    2448:	51 e4       	ldi	r21, 0x41	; 65
    244a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    244e:	dc 01       	movw	r26, r24
    2450:	cb 01       	movw	r24, r22
    2452:	bc 01       	movw	r22, r24
    2454:	cd 01       	movw	r24, r26
    2456:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    245a:	dc 01       	movw	r26, r24
    245c:	cb 01       	movw	r24, r22
    245e:	9e 83       	std	Y+6, r25	; 0x06
    2460:	8d 83       	std	Y+5, r24	; 0x05
    2462:	0f c0       	rjmp	.+30     	; 0x2482 <LCD_enumInit+0x72c>
    2464:	89 e1       	ldi	r24, 0x19	; 25
    2466:	90 e0       	ldi	r25, 0x00	; 0
    2468:	9c 83       	std	Y+4, r25	; 0x04
    246a:	8b 83       	std	Y+3, r24	; 0x03
    246c:	8b 81       	ldd	r24, Y+3	; 0x03
    246e:	9c 81       	ldd	r25, Y+4	; 0x04
    2470:	01 97       	sbiw	r24, 0x01	; 1
    2472:	f1 f7       	brne	.-4      	; 0x2470 <LCD_enumInit+0x71a>
    2474:	9c 83       	std	Y+4, r25	; 0x04
    2476:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2478:	8d 81       	ldd	r24, Y+5	; 0x05
    247a:	9e 81       	ldd	r25, Y+6	; 0x06
    247c:	01 97       	sbiw	r24, 0x01	; 1
    247e:	9e 83       	std	Y+6, r25	; 0x06
    2480:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2482:	8d 81       	ldd	r24, Y+5	; 0x05
    2484:	9e 81       	ldd	r25, Y+6	; 0x06
    2486:	00 97       	sbiw	r24, 0x00	; 0
    2488:	69 f7       	brne	.-38     	; 0x2464 <LCD_enumInit+0x70e>
    248a:	14 c0       	rjmp	.+40     	; 0x24b4 <LCD_enumInit+0x75e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    248c:	6f 81       	ldd	r22, Y+7	; 0x07
    248e:	78 85       	ldd	r23, Y+8	; 0x08
    2490:	89 85       	ldd	r24, Y+9	; 0x09
    2492:	9a 85       	ldd	r25, Y+10	; 0x0a
    2494:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2498:	dc 01       	movw	r26, r24
    249a:	cb 01       	movw	r24, r22
    249c:	9e 83       	std	Y+6, r25	; 0x06
    249e:	8d 83       	std	Y+5, r24	; 0x05
    24a0:	8d 81       	ldd	r24, Y+5	; 0x05
    24a2:	9e 81       	ldd	r25, Y+6	; 0x06
    24a4:	9a 83       	std	Y+2, r25	; 0x02
    24a6:	89 83       	std	Y+1, r24	; 0x01
    24a8:	89 81       	ldd	r24, Y+1	; 0x01
    24aa:	9a 81       	ldd	r25, Y+2	; 0x02
    24ac:	01 97       	sbiw	r24, 0x01	; 1
    24ae:	f1 f7       	brne	.-4      	; 0x24ac <LCD_enumInit+0x756>
    24b0:	9a 83       	std	Y+2, r25	; 0x02
    24b2:	89 83       	std	Y+1, r24	; 0x01

    _delay_ms(1);

    Local_enumErrorState=LCD_inlenumSendCommand(0x80);
    24b4:	80 e8       	ldi	r24, 0x80	; 128
    24b6:	0e 94 8a 12 	call	0x2514	; 0x2514 <LCD_inlenumSendCommand>
    24ba:	fe 01       	movw	r30, r28
    24bc:	e9 5b       	subi	r30, 0xB9	; 185
    24be:	ff 4f       	sbci	r31, 0xFF	; 255
    24c0:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    24c2:	fe 01       	movw	r30, r28
    24c4:	e9 5b       	subi	r30, 0xB9	; 185
    24c6:	ff 4f       	sbci	r31, 0xFF	; 255
    24c8:	80 81       	ld	r24, Z
    24ca:	81 30       	cpi	r24, 0x01	; 1
    24cc:	41 f0       	breq	.+16     	; 0x24de <LCD_enumInit+0x788>
    24ce:	fe 01       	movw	r30, r28
    24d0:	e9 5b       	subi	r30, 0xB9	; 185
    24d2:	ff 4f       	sbci	r31, 0xFF	; 255
    24d4:	80 81       	ld	r24, Z
    24d6:	29 96       	adiw	r28, 0x09	; 9
    24d8:	8f af       	std	Y+63, r24	; 0x3f
    24da:	29 97       	sbiw	r28, 0x09	; 9
    24dc:	0c c0       	rjmp	.+24     	; 0x24f6 <LCD_enumInit+0x7a0>

    Local_enumErrorState=ES_OK;
    24de:	fe 01       	movw	r30, r28
    24e0:	e9 5b       	subi	r30, 0xB9	; 185
    24e2:	ff 4f       	sbci	r31, 0xFF	; 255
    24e4:	81 e0       	ldi	r24, 0x01	; 1
    24e6:	80 83       	st	Z, r24

	return Local_enumErrorState;
    24e8:	fe 01       	movw	r30, r28
    24ea:	e9 5b       	subi	r30, 0xB9	; 185
    24ec:	ff 4f       	sbci	r31, 0xFF	; 255
    24ee:	80 81       	ld	r24, Z
    24f0:	29 96       	adiw	r28, 0x09	; 9
    24f2:	8f af       	std	Y+63, r24	; 0x3f
    24f4:	29 97       	sbiw	r28, 0x09	; 9
    24f6:	29 96       	adiw	r28, 0x09	; 9
    24f8:	8f ad       	ldd	r24, Y+63	; 0x3f
    24fa:	29 97       	sbiw	r28, 0x09	; 9
}
    24fc:	c8 5b       	subi	r28, 0xB8	; 184
    24fe:	df 4f       	sbci	r29, 0xFF	; 255
    2500:	0f b6       	in	r0, 0x3f	; 63
    2502:	f8 94       	cli
    2504:	de bf       	out	0x3e, r29	; 62
    2506:	0f be       	out	0x3f, r0	; 63
    2508:	cd bf       	out	0x3d, r28	; 61
    250a:	cf 91       	pop	r28
    250c:	df 91       	pop	r29
    250e:	1f 91       	pop	r17
    2510:	0f 91       	pop	r16
    2512:	08 95       	ret

00002514 <LCD_inlenumSendCommand>:

static inline ES_T LCD_inlenumSendCommand(u8 Copy_u8Command)
{
    2514:	df 93       	push	r29
    2516:	cf 93       	push	r28
    2518:	00 d0       	rcall	.+0      	; 0x251a <LCD_inlenumSendCommand+0x6>
    251a:	0f 92       	push	r0
    251c:	cd b7       	in	r28, 0x3d	; 61
    251e:	de b7       	in	r29, 0x3e	; 62
    2520:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    2522:	19 82       	std	Y+1, r1	; 0x01

    Local_enumErrorState=DIO_enumSetPinValue(LCD_RS_PORT,LCD_RS_PIN,LOW);
    2524:	81 e0       	ldi	r24, 0x01	; 1
    2526:	66 e0       	ldi	r22, 0x06	; 6
    2528:	40 e0       	ldi	r20, 0x00	; 0
    252a:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    252e:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2530:	89 81       	ldd	r24, Y+1	; 0x01
    2532:	81 30       	cpi	r24, 0x01	; 1
    2534:	19 f0       	breq	.+6      	; 0x253c <LCD_inlenumSendCommand+0x28>
    2536:	89 81       	ldd	r24, Y+1	; 0x01
    2538:	8b 83       	std	Y+3, r24	; 0x03
    253a:	ae c0       	rjmp	.+348    	; 0x2698 <LCD_inlenumSendCommand+0x184>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
    253c:	81 e0       	ldi	r24, 0x01	; 1
    253e:	64 e0       	ldi	r22, 0x04	; 4
    2540:	40 e0       	ldi	r20, 0x00	; 0
    2542:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    2546:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2548:	89 81       	ldd	r24, Y+1	; 0x01
    254a:	81 30       	cpi	r24, 0x01	; 1
    254c:	19 f0       	breq	.+6      	; 0x2554 <LCD_inlenumSendCommand+0x40>
    254e:	89 81       	ldd	r24, Y+1	; 0x01
    2550:	8b 83       	std	Y+3, r24	; 0x03
    2552:	a2 c0       	rjmp	.+324    	; 0x2698 <LCD_inlenumSendCommand+0x184>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_RW_PORT,LCD_RW_PIN,LOW);
    2554:	81 e0       	ldi	r24, 0x01	; 1
    2556:	65 e0       	ldi	r22, 0x05	; 5
    2558:	40 e0       	ldi	r20, 0x00	; 0
    255a:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    255e:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2560:	89 81       	ldd	r24, Y+1	; 0x01
    2562:	81 30       	cpi	r24, 0x01	; 1
    2564:	19 f0       	breq	.+6      	; 0x256c <LCD_inlenumSendCommand+0x58>
    2566:	89 81       	ldd	r24, Y+1	; 0x01
    2568:	8b 83       	std	Y+3, r24	; 0x03
    256a:	96 c0       	rjmp	.+300    	; 0x2698 <LCD_inlenumSendCommand+0x184>

#if LCD_MODE == EIGHT_BIT

    Local_enumErrorState=DIO_enumSetPinValue(LCD_D7_PORT,LCD_D7_PIN,READ_BIT(Copy_u8Command,7));
    256c:	8a 81       	ldd	r24, Y+2	; 0x02
    256e:	98 2f       	mov	r25, r24
    2570:	99 1f       	adc	r25, r25
    2572:	99 27       	eor	r25, r25
    2574:	99 1f       	adc	r25, r25
    2576:	80 e0       	ldi	r24, 0x00	; 0
    2578:	60 e0       	ldi	r22, 0x00	; 0
    257a:	49 2f       	mov	r20, r25
    257c:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    2580:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2582:	89 81       	ldd	r24, Y+1	; 0x01
    2584:	81 30       	cpi	r24, 0x01	; 1
    2586:	19 f0       	breq	.+6      	; 0x258e <LCD_inlenumSendCommand+0x7a>
    2588:	89 81       	ldd	r24, Y+1	; 0x01
    258a:	8b 83       	std	Y+3, r24	; 0x03
    258c:	85 c0       	rjmp	.+266    	; 0x2698 <LCD_inlenumSendCommand+0x184>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_D6_PORT,LCD_D6_PIN,READ_BIT(Copy_u8Command,6));
    258e:	8a 81       	ldd	r24, Y+2	; 0x02
    2590:	82 95       	swap	r24
    2592:	86 95       	lsr	r24
    2594:	86 95       	lsr	r24
    2596:	83 70       	andi	r24, 0x03	; 3
    2598:	98 2f       	mov	r25, r24
    259a:	91 70       	andi	r25, 0x01	; 1
    259c:	80 e0       	ldi	r24, 0x00	; 0
    259e:	61 e0       	ldi	r22, 0x01	; 1
    25a0:	49 2f       	mov	r20, r25
    25a2:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    25a6:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    25a8:	89 81       	ldd	r24, Y+1	; 0x01
    25aa:	81 30       	cpi	r24, 0x01	; 1
    25ac:	19 f0       	breq	.+6      	; 0x25b4 <LCD_inlenumSendCommand+0xa0>
    25ae:	89 81       	ldd	r24, Y+1	; 0x01
    25b0:	8b 83       	std	Y+3, r24	; 0x03
    25b2:	72 c0       	rjmp	.+228    	; 0x2698 <LCD_inlenumSendCommand+0x184>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_D5_PORT,LCD_D5_PIN,READ_BIT(Copy_u8Command,5));
    25b4:	8a 81       	ldd	r24, Y+2	; 0x02
    25b6:	82 95       	swap	r24
    25b8:	86 95       	lsr	r24
    25ba:	87 70       	andi	r24, 0x07	; 7
    25bc:	98 2f       	mov	r25, r24
    25be:	91 70       	andi	r25, 0x01	; 1
    25c0:	80 e0       	ldi	r24, 0x00	; 0
    25c2:	62 e0       	ldi	r22, 0x02	; 2
    25c4:	49 2f       	mov	r20, r25
    25c6:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    25ca:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    25cc:	89 81       	ldd	r24, Y+1	; 0x01
    25ce:	81 30       	cpi	r24, 0x01	; 1
    25d0:	19 f0       	breq	.+6      	; 0x25d8 <LCD_inlenumSendCommand+0xc4>
    25d2:	89 81       	ldd	r24, Y+1	; 0x01
    25d4:	8b 83       	std	Y+3, r24	; 0x03
    25d6:	60 c0       	rjmp	.+192    	; 0x2698 <LCD_inlenumSendCommand+0x184>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_D4_PORT,LCD_D4_PIN,READ_BIT(Copy_u8Command,4));
    25d8:	8a 81       	ldd	r24, Y+2	; 0x02
    25da:	82 95       	swap	r24
    25dc:	8f 70       	andi	r24, 0x0F	; 15
    25de:	98 2f       	mov	r25, r24
    25e0:	91 70       	andi	r25, 0x01	; 1
    25e2:	80 e0       	ldi	r24, 0x00	; 0
    25e4:	63 e0       	ldi	r22, 0x03	; 3
    25e6:	49 2f       	mov	r20, r25
    25e8:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    25ec:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    25ee:	89 81       	ldd	r24, Y+1	; 0x01
    25f0:	81 30       	cpi	r24, 0x01	; 1
    25f2:	19 f0       	breq	.+6      	; 0x25fa <LCD_inlenumSendCommand+0xe6>
    25f4:	89 81       	ldd	r24, Y+1	; 0x01
    25f6:	8b 83       	std	Y+3, r24	; 0x03
    25f8:	4f c0       	rjmp	.+158    	; 0x2698 <LCD_inlenumSendCommand+0x184>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_D3_PORT,LCD_D3_PIN,READ_BIT(Copy_u8Command,3));
    25fa:	8a 81       	ldd	r24, Y+2	; 0x02
    25fc:	86 95       	lsr	r24
    25fe:	86 95       	lsr	r24
    2600:	86 95       	lsr	r24
    2602:	98 2f       	mov	r25, r24
    2604:	91 70       	andi	r25, 0x01	; 1
    2606:	80 e0       	ldi	r24, 0x00	; 0
    2608:	64 e0       	ldi	r22, 0x04	; 4
    260a:	49 2f       	mov	r20, r25
    260c:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    2610:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2612:	89 81       	ldd	r24, Y+1	; 0x01
    2614:	81 30       	cpi	r24, 0x01	; 1
    2616:	19 f0       	breq	.+6      	; 0x261e <LCD_inlenumSendCommand+0x10a>
    2618:	89 81       	ldd	r24, Y+1	; 0x01
    261a:	8b 83       	std	Y+3, r24	; 0x03
    261c:	3d c0       	rjmp	.+122    	; 0x2698 <LCD_inlenumSendCommand+0x184>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_D2_PORT,LCD_D2_PIN,READ_BIT(Copy_u8Command,2));
    261e:	8a 81       	ldd	r24, Y+2	; 0x02
    2620:	86 95       	lsr	r24
    2622:	86 95       	lsr	r24
    2624:	98 2f       	mov	r25, r24
    2626:	91 70       	andi	r25, 0x01	; 1
    2628:	80 e0       	ldi	r24, 0x00	; 0
    262a:	65 e0       	ldi	r22, 0x05	; 5
    262c:	49 2f       	mov	r20, r25
    262e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    2632:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2634:	89 81       	ldd	r24, Y+1	; 0x01
    2636:	81 30       	cpi	r24, 0x01	; 1
    2638:	19 f0       	breq	.+6      	; 0x2640 <LCD_inlenumSendCommand+0x12c>
    263a:	89 81       	ldd	r24, Y+1	; 0x01
    263c:	8b 83       	std	Y+3, r24	; 0x03
    263e:	2c c0       	rjmp	.+88     	; 0x2698 <LCD_inlenumSendCommand+0x184>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_D1_PORT,LCD_D1_PIN,READ_BIT(Copy_u8Command,1));
    2640:	8a 81       	ldd	r24, Y+2	; 0x02
    2642:	86 95       	lsr	r24
    2644:	98 2f       	mov	r25, r24
    2646:	91 70       	andi	r25, 0x01	; 1
    2648:	80 e0       	ldi	r24, 0x00	; 0
    264a:	66 e0       	ldi	r22, 0x06	; 6
    264c:	49 2f       	mov	r20, r25
    264e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    2652:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2654:	89 81       	ldd	r24, Y+1	; 0x01
    2656:	81 30       	cpi	r24, 0x01	; 1
    2658:	19 f0       	breq	.+6      	; 0x2660 <LCD_inlenumSendCommand+0x14c>
    265a:	89 81       	ldd	r24, Y+1	; 0x01
    265c:	8b 83       	std	Y+3, r24	; 0x03
    265e:	1c c0       	rjmp	.+56     	; 0x2698 <LCD_inlenumSendCommand+0x184>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_D0_PORT,LCD_D0_PIN,READ_BIT(Copy_u8Command,0));
    2660:	8a 81       	ldd	r24, Y+2	; 0x02
    2662:	98 2f       	mov	r25, r24
    2664:	91 70       	andi	r25, 0x01	; 1
    2666:	80 e0       	ldi	r24, 0x00	; 0
    2668:	67 e0       	ldi	r22, 0x07	; 7
    266a:	49 2f       	mov	r20, r25
    266c:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    2670:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2672:	89 81       	ldd	r24, Y+1	; 0x01
    2674:	81 30       	cpi	r24, 0x01	; 1
    2676:	19 f0       	breq	.+6      	; 0x267e <LCD_inlenumSendCommand+0x16a>
    2678:	89 81       	ldd	r24, Y+1	; 0x01
    267a:	8b 83       	std	Y+3, r24	; 0x03
    267c:	0d c0       	rjmp	.+26     	; 0x2698 <LCD_inlenumSendCommand+0x184>

    Local_enumErrorState=LCD_inlenumLatch();
    267e:	0e 94 53 13 	call	0x26a6	; 0x26a6 <LCD_inlenumLatch>
    2682:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2684:	89 81       	ldd	r24, Y+1	; 0x01
    2686:	81 30       	cpi	r24, 0x01	; 1
    2688:	19 f0       	breq	.+6      	; 0x2690 <LCD_inlenumSendCommand+0x17c>
    268a:	89 81       	ldd	r24, Y+1	; 0x01
    268c:	8b 83       	std	Y+3, r24	; 0x03
    268e:	04 c0       	rjmp	.+8      	; 0x2698 <LCD_inlenumSendCommand+0x184>

#error"wrong LCD_MODE"

#endif

	Local_enumErrorState=ES_OK;
    2690:	81 e0       	ldi	r24, 0x01	; 1
    2692:	89 83       	std	Y+1, r24	; 0x01

	return Local_enumErrorState;
    2694:	89 81       	ldd	r24, Y+1	; 0x01
    2696:	8b 83       	std	Y+3, r24	; 0x03
    2698:	8b 81       	ldd	r24, Y+3	; 0x03
}
    269a:	0f 90       	pop	r0
    269c:	0f 90       	pop	r0
    269e:	0f 90       	pop	r0
    26a0:	cf 91       	pop	r28
    26a2:	df 91       	pop	r29
    26a4:	08 95       	ret

000026a6 <LCD_inlenumLatch>:

static inline ES_T LCD_inlenumLatch(void)
{
    26a6:	df 93       	push	r29
    26a8:	cf 93       	push	r28
    26aa:	cd b7       	in	r28, 0x3d	; 61
    26ac:	de b7       	in	r29, 0x3e	; 62
    26ae:	6e 97       	sbiw	r28, 0x1e	; 30
    26b0:	0f b6       	in	r0, 0x3f	; 63
    26b2:	f8 94       	cli
    26b4:	de bf       	out	0x3e, r29	; 62
    26b6:	0f be       	out	0x3f, r0	; 63
    26b8:	cd bf       	out	0x3d, r28	; 61
	ES_T Local_enumErrorState=ES_NOK;
    26ba:	1d 8e       	std	Y+29, r1	; 0x1d

	Local_enumErrorState=DIO_enumSetPinValue(LCD_EN_PORT,LCD_EN_PIN,HIGH);
    26bc:	81 e0       	ldi	r24, 0x01	; 1
    26be:	64 e0       	ldi	r22, 0x04	; 4
    26c0:	41 e0       	ldi	r20, 0x01	; 1
    26c2:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    26c6:	8d 8f       	std	Y+29, r24	; 0x1d
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    26c8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    26ca:	81 30       	cpi	r24, 0x01	; 1
    26cc:	19 f0       	breq	.+6      	; 0x26d4 <LCD_inlenumLatch+0x2e>
    26ce:	8d 8d       	ldd	r24, Y+29	; 0x1d
    26d0:	8e 8f       	std	Y+30, r24	; 0x1e
    26d2:	f4 c0       	rjmp	.+488    	; 0x28bc <LCD_inlenumLatch+0x216>
    26d4:	80 e0       	ldi	r24, 0x00	; 0
    26d6:	90 e0       	ldi	r25, 0x00	; 0
    26d8:	a0 e0       	ldi	r26, 0x00	; 0
    26da:	b0 e4       	ldi	r27, 0x40	; 64
    26dc:	89 8f       	std	Y+25, r24	; 0x19
    26de:	9a 8f       	std	Y+26, r25	; 0x1a
    26e0:	ab 8f       	std	Y+27, r26	; 0x1b
    26e2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26e4:	69 8d       	ldd	r22, Y+25	; 0x19
    26e6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    26e8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    26ea:	9c 8d       	ldd	r25, Y+28	; 0x1c
    26ec:	20 e0       	ldi	r18, 0x00	; 0
    26ee:	30 e0       	ldi	r19, 0x00	; 0
    26f0:	4a e7       	ldi	r20, 0x7A	; 122
    26f2:	53 e4       	ldi	r21, 0x43	; 67
    26f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26f8:	dc 01       	movw	r26, r24
    26fa:	cb 01       	movw	r24, r22
    26fc:	8d 8b       	std	Y+21, r24	; 0x15
    26fe:	9e 8b       	std	Y+22, r25	; 0x16
    2700:	af 8b       	std	Y+23, r26	; 0x17
    2702:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2704:	6d 89       	ldd	r22, Y+21	; 0x15
    2706:	7e 89       	ldd	r23, Y+22	; 0x16
    2708:	8f 89       	ldd	r24, Y+23	; 0x17
    270a:	98 8d       	ldd	r25, Y+24	; 0x18
    270c:	20 e0       	ldi	r18, 0x00	; 0
    270e:	30 e0       	ldi	r19, 0x00	; 0
    2710:	40 e8       	ldi	r20, 0x80	; 128
    2712:	5f e3       	ldi	r21, 0x3F	; 63
    2714:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2718:	88 23       	and	r24, r24
    271a:	2c f4       	brge	.+10     	; 0x2726 <LCD_inlenumLatch+0x80>
		__ticks = 1;
    271c:	81 e0       	ldi	r24, 0x01	; 1
    271e:	90 e0       	ldi	r25, 0x00	; 0
    2720:	9c 8b       	std	Y+20, r25	; 0x14
    2722:	8b 8b       	std	Y+19, r24	; 0x13
    2724:	3f c0       	rjmp	.+126    	; 0x27a4 <LCD_inlenumLatch+0xfe>
	else if (__tmp > 65535)
    2726:	6d 89       	ldd	r22, Y+21	; 0x15
    2728:	7e 89       	ldd	r23, Y+22	; 0x16
    272a:	8f 89       	ldd	r24, Y+23	; 0x17
    272c:	98 8d       	ldd	r25, Y+24	; 0x18
    272e:	20 e0       	ldi	r18, 0x00	; 0
    2730:	3f ef       	ldi	r19, 0xFF	; 255
    2732:	4f e7       	ldi	r20, 0x7F	; 127
    2734:	57 e4       	ldi	r21, 0x47	; 71
    2736:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    273a:	18 16       	cp	r1, r24
    273c:	4c f5       	brge	.+82     	; 0x2790 <LCD_inlenumLatch+0xea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    273e:	69 8d       	ldd	r22, Y+25	; 0x19
    2740:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2742:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2744:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2746:	20 e0       	ldi	r18, 0x00	; 0
    2748:	30 e0       	ldi	r19, 0x00	; 0
    274a:	40 e2       	ldi	r20, 0x20	; 32
    274c:	51 e4       	ldi	r21, 0x41	; 65
    274e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2752:	dc 01       	movw	r26, r24
    2754:	cb 01       	movw	r24, r22
    2756:	bc 01       	movw	r22, r24
    2758:	cd 01       	movw	r24, r26
    275a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    275e:	dc 01       	movw	r26, r24
    2760:	cb 01       	movw	r24, r22
    2762:	9c 8b       	std	Y+20, r25	; 0x14
    2764:	8b 8b       	std	Y+19, r24	; 0x13
    2766:	0f c0       	rjmp	.+30     	; 0x2786 <LCD_inlenumLatch+0xe0>
    2768:	89 e1       	ldi	r24, 0x19	; 25
    276a:	90 e0       	ldi	r25, 0x00	; 0
    276c:	9a 8b       	std	Y+18, r25	; 0x12
    276e:	89 8b       	std	Y+17, r24	; 0x11
    2770:	89 89       	ldd	r24, Y+17	; 0x11
    2772:	9a 89       	ldd	r25, Y+18	; 0x12
    2774:	01 97       	sbiw	r24, 0x01	; 1
    2776:	f1 f7       	brne	.-4      	; 0x2774 <LCD_inlenumLatch+0xce>
    2778:	9a 8b       	std	Y+18, r25	; 0x12
    277a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    277c:	8b 89       	ldd	r24, Y+19	; 0x13
    277e:	9c 89       	ldd	r25, Y+20	; 0x14
    2780:	01 97       	sbiw	r24, 0x01	; 1
    2782:	9c 8b       	std	Y+20, r25	; 0x14
    2784:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2786:	8b 89       	ldd	r24, Y+19	; 0x13
    2788:	9c 89       	ldd	r25, Y+20	; 0x14
    278a:	00 97       	sbiw	r24, 0x00	; 0
    278c:	69 f7       	brne	.-38     	; 0x2768 <LCD_inlenumLatch+0xc2>
    278e:	14 c0       	rjmp	.+40     	; 0x27b8 <LCD_inlenumLatch+0x112>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2790:	6d 89       	ldd	r22, Y+21	; 0x15
    2792:	7e 89       	ldd	r23, Y+22	; 0x16
    2794:	8f 89       	ldd	r24, Y+23	; 0x17
    2796:	98 8d       	ldd	r25, Y+24	; 0x18
    2798:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    279c:	dc 01       	movw	r26, r24
    279e:	cb 01       	movw	r24, r22
    27a0:	9c 8b       	std	Y+20, r25	; 0x14
    27a2:	8b 8b       	std	Y+19, r24	; 0x13
    27a4:	8b 89       	ldd	r24, Y+19	; 0x13
    27a6:	9c 89       	ldd	r25, Y+20	; 0x14
    27a8:	98 8b       	std	Y+16, r25	; 0x10
    27aa:	8f 87       	std	Y+15, r24	; 0x0f
    27ac:	8f 85       	ldd	r24, Y+15	; 0x0f
    27ae:	98 89       	ldd	r25, Y+16	; 0x10
    27b0:	01 97       	sbiw	r24, 0x01	; 1
    27b2:	f1 f7       	brne	.-4      	; 0x27b0 <LCD_inlenumLatch+0x10a>
    27b4:	98 8b       	std	Y+16, r25	; 0x10
    27b6:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	Local_enumErrorState=DIO_enumSetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
    27b8:	81 e0       	ldi	r24, 0x01	; 1
    27ba:	64 e0       	ldi	r22, 0x04	; 4
    27bc:	40 e0       	ldi	r20, 0x00	; 0
    27be:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    27c2:	8d 8f       	std	Y+29, r24	; 0x1d
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    27c4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    27c6:	81 30       	cpi	r24, 0x01	; 1
    27c8:	19 f0       	breq	.+6      	; 0x27d0 <LCD_inlenumLatch+0x12a>
    27ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    27cc:	8e 8f       	std	Y+30, r24	; 0x1e
    27ce:	76 c0       	rjmp	.+236    	; 0x28bc <LCD_inlenumLatch+0x216>
    27d0:	80 e0       	ldi	r24, 0x00	; 0
    27d2:	90 e0       	ldi	r25, 0x00	; 0
    27d4:	a0 ea       	ldi	r26, 0xA0	; 160
    27d6:	b0 e4       	ldi	r27, 0x40	; 64
    27d8:	8b 87       	std	Y+11, r24	; 0x0b
    27da:	9c 87       	std	Y+12, r25	; 0x0c
    27dc:	ad 87       	std	Y+13, r26	; 0x0d
    27de:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27e0:	6b 85       	ldd	r22, Y+11	; 0x0b
    27e2:	7c 85       	ldd	r23, Y+12	; 0x0c
    27e4:	8d 85       	ldd	r24, Y+13	; 0x0d
    27e6:	9e 85       	ldd	r25, Y+14	; 0x0e
    27e8:	20 e0       	ldi	r18, 0x00	; 0
    27ea:	30 e0       	ldi	r19, 0x00	; 0
    27ec:	4a e7       	ldi	r20, 0x7A	; 122
    27ee:	53 e4       	ldi	r21, 0x43	; 67
    27f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27f4:	dc 01       	movw	r26, r24
    27f6:	cb 01       	movw	r24, r22
    27f8:	8f 83       	std	Y+7, r24	; 0x07
    27fa:	98 87       	std	Y+8, r25	; 0x08
    27fc:	a9 87       	std	Y+9, r26	; 0x09
    27fe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2800:	6f 81       	ldd	r22, Y+7	; 0x07
    2802:	78 85       	ldd	r23, Y+8	; 0x08
    2804:	89 85       	ldd	r24, Y+9	; 0x09
    2806:	9a 85       	ldd	r25, Y+10	; 0x0a
    2808:	20 e0       	ldi	r18, 0x00	; 0
    280a:	30 e0       	ldi	r19, 0x00	; 0
    280c:	40 e8       	ldi	r20, 0x80	; 128
    280e:	5f e3       	ldi	r21, 0x3F	; 63
    2810:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2814:	88 23       	and	r24, r24
    2816:	2c f4       	brge	.+10     	; 0x2822 <LCD_inlenumLatch+0x17c>
		__ticks = 1;
    2818:	81 e0       	ldi	r24, 0x01	; 1
    281a:	90 e0       	ldi	r25, 0x00	; 0
    281c:	9e 83       	std	Y+6, r25	; 0x06
    281e:	8d 83       	std	Y+5, r24	; 0x05
    2820:	3f c0       	rjmp	.+126    	; 0x28a0 <LCD_inlenumLatch+0x1fa>
	else if (__tmp > 65535)
    2822:	6f 81       	ldd	r22, Y+7	; 0x07
    2824:	78 85       	ldd	r23, Y+8	; 0x08
    2826:	89 85       	ldd	r24, Y+9	; 0x09
    2828:	9a 85       	ldd	r25, Y+10	; 0x0a
    282a:	20 e0       	ldi	r18, 0x00	; 0
    282c:	3f ef       	ldi	r19, 0xFF	; 255
    282e:	4f e7       	ldi	r20, 0x7F	; 127
    2830:	57 e4       	ldi	r21, 0x47	; 71
    2832:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2836:	18 16       	cp	r1, r24
    2838:	4c f5       	brge	.+82     	; 0x288c <LCD_inlenumLatch+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    283a:	6b 85       	ldd	r22, Y+11	; 0x0b
    283c:	7c 85       	ldd	r23, Y+12	; 0x0c
    283e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2840:	9e 85       	ldd	r25, Y+14	; 0x0e
    2842:	20 e0       	ldi	r18, 0x00	; 0
    2844:	30 e0       	ldi	r19, 0x00	; 0
    2846:	40 e2       	ldi	r20, 0x20	; 32
    2848:	51 e4       	ldi	r21, 0x41	; 65
    284a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    284e:	dc 01       	movw	r26, r24
    2850:	cb 01       	movw	r24, r22
    2852:	bc 01       	movw	r22, r24
    2854:	cd 01       	movw	r24, r26
    2856:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    285a:	dc 01       	movw	r26, r24
    285c:	cb 01       	movw	r24, r22
    285e:	9e 83       	std	Y+6, r25	; 0x06
    2860:	8d 83       	std	Y+5, r24	; 0x05
    2862:	0f c0       	rjmp	.+30     	; 0x2882 <LCD_inlenumLatch+0x1dc>
    2864:	89 e1       	ldi	r24, 0x19	; 25
    2866:	90 e0       	ldi	r25, 0x00	; 0
    2868:	9c 83       	std	Y+4, r25	; 0x04
    286a:	8b 83       	std	Y+3, r24	; 0x03
    286c:	8b 81       	ldd	r24, Y+3	; 0x03
    286e:	9c 81       	ldd	r25, Y+4	; 0x04
    2870:	01 97       	sbiw	r24, 0x01	; 1
    2872:	f1 f7       	brne	.-4      	; 0x2870 <LCD_inlenumLatch+0x1ca>
    2874:	9c 83       	std	Y+4, r25	; 0x04
    2876:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2878:	8d 81       	ldd	r24, Y+5	; 0x05
    287a:	9e 81       	ldd	r25, Y+6	; 0x06
    287c:	01 97       	sbiw	r24, 0x01	; 1
    287e:	9e 83       	std	Y+6, r25	; 0x06
    2880:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2882:	8d 81       	ldd	r24, Y+5	; 0x05
    2884:	9e 81       	ldd	r25, Y+6	; 0x06
    2886:	00 97       	sbiw	r24, 0x00	; 0
    2888:	69 f7       	brne	.-38     	; 0x2864 <LCD_inlenumLatch+0x1be>
    288a:	14 c0       	rjmp	.+40     	; 0x28b4 <LCD_inlenumLatch+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    288c:	6f 81       	ldd	r22, Y+7	; 0x07
    288e:	78 85       	ldd	r23, Y+8	; 0x08
    2890:	89 85       	ldd	r24, Y+9	; 0x09
    2892:	9a 85       	ldd	r25, Y+10	; 0x0a
    2894:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2898:	dc 01       	movw	r26, r24
    289a:	cb 01       	movw	r24, r22
    289c:	9e 83       	std	Y+6, r25	; 0x06
    289e:	8d 83       	std	Y+5, r24	; 0x05
    28a0:	8d 81       	ldd	r24, Y+5	; 0x05
    28a2:	9e 81       	ldd	r25, Y+6	; 0x06
    28a4:	9a 83       	std	Y+2, r25	; 0x02
    28a6:	89 83       	std	Y+1, r24	; 0x01
    28a8:	89 81       	ldd	r24, Y+1	; 0x01
    28aa:	9a 81       	ldd	r25, Y+2	; 0x02
    28ac:	01 97       	sbiw	r24, 0x01	; 1
    28ae:	f1 f7       	brne	.-4      	; 0x28ac <LCD_inlenumLatch+0x206>
    28b0:	9a 83       	std	Y+2, r25	; 0x02
    28b2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);

	Local_enumErrorState=ES_OK;
    28b4:	81 e0       	ldi	r24, 0x01	; 1
    28b6:	8d 8f       	std	Y+29, r24	; 0x1d

	return Local_enumErrorState;
    28b8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    28ba:	8e 8f       	std	Y+30, r24	; 0x1e
    28bc:	8e 8d       	ldd	r24, Y+30	; 0x1e
}
    28be:	6e 96       	adiw	r28, 0x1e	; 30
    28c0:	0f b6       	in	r0, 0x3f	; 63
    28c2:	f8 94       	cli
    28c4:	de bf       	out	0x3e, r29	; 62
    28c6:	0f be       	out	0x3f, r0	; 63
    28c8:	cd bf       	out	0x3d, r28	; 61
    28ca:	cf 91       	pop	r28
    28cc:	df 91       	pop	r29
    28ce:	08 95       	ret

000028d0 <LCD_enumSendChar>:

ES_T LCD_enumSendChar(u8 Copy_u8Char)
{
    28d0:	df 93       	push	r29
    28d2:	cf 93       	push	r28
    28d4:	00 d0       	rcall	.+0      	; 0x28d6 <LCD_enumSendChar+0x6>
    28d6:	cd b7       	in	r28, 0x3d	; 61
    28d8:	de b7       	in	r29, 0x3e	; 62
    28da:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    28dc:	19 82       	std	Y+1, r1	; 0x01

	Local_enumErrorState=LCD_inlenumSendChar(Copy_u8Char);
    28de:	8a 81       	ldd	r24, Y+2	; 0x02
    28e0:	0e 94 79 14 	call	0x28f2	; 0x28f2 <LCD_inlenumSendChar>
    28e4:	89 83       	std	Y+1, r24	; 0x01

	return Local_enumErrorState;
    28e6:	89 81       	ldd	r24, Y+1	; 0x01
}
    28e8:	0f 90       	pop	r0
    28ea:	0f 90       	pop	r0
    28ec:	cf 91       	pop	r28
    28ee:	df 91       	pop	r29
    28f0:	08 95       	ret

000028f2 <LCD_inlenumSendChar>:

static inline ES_T LCD_inlenumSendChar(u8 Copy_u8Char)
{
    28f2:	df 93       	push	r29
    28f4:	cf 93       	push	r28
    28f6:	00 d0       	rcall	.+0      	; 0x28f8 <LCD_inlenumSendChar+0x6>
    28f8:	0f 92       	push	r0
    28fa:	cd b7       	in	r28, 0x3d	; 61
    28fc:	de b7       	in	r29, 0x3e	; 62
    28fe:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    2900:	19 82       	std	Y+1, r1	; 0x01

	Local_enumErrorState=DIO_enumSetPinValue(LCD_RS_PORT,LCD_RS_PIN,HIGH);
    2902:	81 e0       	ldi	r24, 0x01	; 1
    2904:	66 e0       	ldi	r22, 0x06	; 6
    2906:	41 e0       	ldi	r20, 0x01	; 1
    2908:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    290c:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    290e:	89 81       	ldd	r24, Y+1	; 0x01
    2910:	81 30       	cpi	r24, 0x01	; 1
    2912:	19 f0       	breq	.+6      	; 0x291a <LCD_inlenumSendChar+0x28>
    2914:	89 81       	ldd	r24, Y+1	; 0x01
    2916:	8b 83       	std	Y+3, r24	; 0x03
    2918:	ac c0       	rjmp	.+344    	; 0x2a72 <LCD_inlenumSendChar+0x180>
	Local_enumErrorState=DIO_enumSetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
    291a:	81 e0       	ldi	r24, 0x01	; 1
    291c:	64 e0       	ldi	r22, 0x04	; 4
    291e:	40 e0       	ldi	r20, 0x00	; 0
    2920:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    2924:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2926:	89 81       	ldd	r24, Y+1	; 0x01
    2928:	81 30       	cpi	r24, 0x01	; 1
    292a:	19 f0       	breq	.+6      	; 0x2932 <LCD_inlenumSendChar+0x40>
    292c:	89 81       	ldd	r24, Y+1	; 0x01
    292e:	8b 83       	std	Y+3, r24	; 0x03
    2930:	a0 c0       	rjmp	.+320    	; 0x2a72 <LCD_inlenumSendChar+0x180>
	Local_enumErrorState=DIO_enumSetPinValue(LCD_RW_PORT,LCD_RW_PIN,LOW);
    2932:	81 e0       	ldi	r24, 0x01	; 1
    2934:	65 e0       	ldi	r22, 0x05	; 5
    2936:	40 e0       	ldi	r20, 0x00	; 0
    2938:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    293c:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    293e:	89 81       	ldd	r24, Y+1	; 0x01
    2940:	81 30       	cpi	r24, 0x01	; 1
    2942:	19 f0       	breq	.+6      	; 0x294a <LCD_inlenumSendChar+0x58>
    2944:	89 81       	ldd	r24, Y+1	; 0x01
    2946:	8b 83       	std	Y+3, r24	; 0x03
    2948:	94 c0       	rjmp	.+296    	; 0x2a72 <LCD_inlenumSendChar+0x180>

#if LCD_MODE == EIGHT_BIT

	Local_enumErrorState=DIO_enumSetPinValue(LCD_D7_PORT,LCD_D7_PIN,READ_BIT(Copy_u8Char,7));
    294a:	8a 81       	ldd	r24, Y+2	; 0x02
    294c:	98 2f       	mov	r25, r24
    294e:	99 1f       	adc	r25, r25
    2950:	99 27       	eor	r25, r25
    2952:	99 1f       	adc	r25, r25
    2954:	80 e0       	ldi	r24, 0x00	; 0
    2956:	60 e0       	ldi	r22, 0x00	; 0
    2958:	49 2f       	mov	r20, r25
    295a:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    295e:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2960:	89 81       	ldd	r24, Y+1	; 0x01
    2962:	81 30       	cpi	r24, 0x01	; 1
    2964:	19 f0       	breq	.+6      	; 0x296c <LCD_inlenumSendChar+0x7a>
    2966:	89 81       	ldd	r24, Y+1	; 0x01
    2968:	8b 83       	std	Y+3, r24	; 0x03
    296a:	83 c0       	rjmp	.+262    	; 0x2a72 <LCD_inlenumSendChar+0x180>
	Local_enumErrorState=DIO_enumSetPinValue(LCD_D6_PORT,LCD_D6_PIN,READ_BIT(Copy_u8Char,6));
    296c:	8a 81       	ldd	r24, Y+2	; 0x02
    296e:	82 95       	swap	r24
    2970:	86 95       	lsr	r24
    2972:	86 95       	lsr	r24
    2974:	83 70       	andi	r24, 0x03	; 3
    2976:	98 2f       	mov	r25, r24
    2978:	91 70       	andi	r25, 0x01	; 1
    297a:	80 e0       	ldi	r24, 0x00	; 0
    297c:	61 e0       	ldi	r22, 0x01	; 1
    297e:	49 2f       	mov	r20, r25
    2980:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    2984:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2986:	89 81       	ldd	r24, Y+1	; 0x01
    2988:	81 30       	cpi	r24, 0x01	; 1
    298a:	19 f0       	breq	.+6      	; 0x2992 <LCD_inlenumSendChar+0xa0>
    298c:	89 81       	ldd	r24, Y+1	; 0x01
    298e:	8b 83       	std	Y+3, r24	; 0x03
    2990:	70 c0       	rjmp	.+224    	; 0x2a72 <LCD_inlenumSendChar+0x180>
	Local_enumErrorState=DIO_enumSetPinValue(LCD_D5_PORT,LCD_D5_PIN,READ_BIT(Copy_u8Char,5));
    2992:	8a 81       	ldd	r24, Y+2	; 0x02
    2994:	82 95       	swap	r24
    2996:	86 95       	lsr	r24
    2998:	87 70       	andi	r24, 0x07	; 7
    299a:	98 2f       	mov	r25, r24
    299c:	91 70       	andi	r25, 0x01	; 1
    299e:	80 e0       	ldi	r24, 0x00	; 0
    29a0:	62 e0       	ldi	r22, 0x02	; 2
    29a2:	49 2f       	mov	r20, r25
    29a4:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    29a8:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    29aa:	89 81       	ldd	r24, Y+1	; 0x01
    29ac:	81 30       	cpi	r24, 0x01	; 1
    29ae:	19 f0       	breq	.+6      	; 0x29b6 <LCD_inlenumSendChar+0xc4>
    29b0:	89 81       	ldd	r24, Y+1	; 0x01
    29b2:	8b 83       	std	Y+3, r24	; 0x03
    29b4:	5e c0       	rjmp	.+188    	; 0x2a72 <LCD_inlenumSendChar+0x180>
	Local_enumErrorState=DIO_enumSetPinValue(LCD_D4_PORT,LCD_D4_PIN,READ_BIT(Copy_u8Char,4));
    29b6:	8a 81       	ldd	r24, Y+2	; 0x02
    29b8:	82 95       	swap	r24
    29ba:	8f 70       	andi	r24, 0x0F	; 15
    29bc:	98 2f       	mov	r25, r24
    29be:	91 70       	andi	r25, 0x01	; 1
    29c0:	80 e0       	ldi	r24, 0x00	; 0
    29c2:	63 e0       	ldi	r22, 0x03	; 3
    29c4:	49 2f       	mov	r20, r25
    29c6:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    29ca:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    29cc:	89 81       	ldd	r24, Y+1	; 0x01
    29ce:	81 30       	cpi	r24, 0x01	; 1
    29d0:	19 f0       	breq	.+6      	; 0x29d8 <LCD_inlenumSendChar+0xe6>
    29d2:	89 81       	ldd	r24, Y+1	; 0x01
    29d4:	8b 83       	std	Y+3, r24	; 0x03
    29d6:	4d c0       	rjmp	.+154    	; 0x2a72 <LCD_inlenumSendChar+0x180>
	Local_enumErrorState=DIO_enumSetPinValue(LCD_D3_PORT,LCD_D3_PIN,READ_BIT(Copy_u8Char,3));
    29d8:	8a 81       	ldd	r24, Y+2	; 0x02
    29da:	86 95       	lsr	r24
    29dc:	86 95       	lsr	r24
    29de:	86 95       	lsr	r24
    29e0:	98 2f       	mov	r25, r24
    29e2:	91 70       	andi	r25, 0x01	; 1
    29e4:	80 e0       	ldi	r24, 0x00	; 0
    29e6:	64 e0       	ldi	r22, 0x04	; 4
    29e8:	49 2f       	mov	r20, r25
    29ea:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    29ee:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    29f0:	89 81       	ldd	r24, Y+1	; 0x01
    29f2:	81 30       	cpi	r24, 0x01	; 1
    29f4:	19 f0       	breq	.+6      	; 0x29fc <LCD_inlenumSendChar+0x10a>
    29f6:	89 81       	ldd	r24, Y+1	; 0x01
    29f8:	8b 83       	std	Y+3, r24	; 0x03
    29fa:	3b c0       	rjmp	.+118    	; 0x2a72 <LCD_inlenumSendChar+0x180>
	Local_enumErrorState=DIO_enumSetPinValue(LCD_D2_PORT,LCD_D2_PIN,READ_BIT(Copy_u8Char,2));
    29fc:	8a 81       	ldd	r24, Y+2	; 0x02
    29fe:	86 95       	lsr	r24
    2a00:	86 95       	lsr	r24
    2a02:	98 2f       	mov	r25, r24
    2a04:	91 70       	andi	r25, 0x01	; 1
    2a06:	80 e0       	ldi	r24, 0x00	; 0
    2a08:	65 e0       	ldi	r22, 0x05	; 5
    2a0a:	49 2f       	mov	r20, r25
    2a0c:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    2a10:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2a12:	89 81       	ldd	r24, Y+1	; 0x01
    2a14:	81 30       	cpi	r24, 0x01	; 1
    2a16:	19 f0       	breq	.+6      	; 0x2a1e <LCD_inlenumSendChar+0x12c>
    2a18:	89 81       	ldd	r24, Y+1	; 0x01
    2a1a:	8b 83       	std	Y+3, r24	; 0x03
    2a1c:	2a c0       	rjmp	.+84     	; 0x2a72 <LCD_inlenumSendChar+0x180>
	Local_enumErrorState=DIO_enumSetPinValue(LCD_D1_PORT,LCD_D1_PIN,READ_BIT(Copy_u8Char,1));
    2a1e:	8a 81       	ldd	r24, Y+2	; 0x02
    2a20:	86 95       	lsr	r24
    2a22:	98 2f       	mov	r25, r24
    2a24:	91 70       	andi	r25, 0x01	; 1
    2a26:	80 e0       	ldi	r24, 0x00	; 0
    2a28:	66 e0       	ldi	r22, 0x06	; 6
    2a2a:	49 2f       	mov	r20, r25
    2a2c:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    2a30:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2a32:	89 81       	ldd	r24, Y+1	; 0x01
    2a34:	81 30       	cpi	r24, 0x01	; 1
    2a36:	19 f0       	breq	.+6      	; 0x2a3e <LCD_inlenumSendChar+0x14c>
    2a38:	89 81       	ldd	r24, Y+1	; 0x01
    2a3a:	8b 83       	std	Y+3, r24	; 0x03
    2a3c:	1a c0       	rjmp	.+52     	; 0x2a72 <LCD_inlenumSendChar+0x180>
	Local_enumErrorState=DIO_enumSetPinValue(LCD_D0_PORT,LCD_D0_PIN,READ_BIT(Copy_u8Char,0));
    2a3e:	8a 81       	ldd	r24, Y+2	; 0x02
    2a40:	98 2f       	mov	r25, r24
    2a42:	91 70       	andi	r25, 0x01	; 1
    2a44:	80 e0       	ldi	r24, 0x00	; 0
    2a46:	67 e0       	ldi	r22, 0x07	; 7
    2a48:	49 2f       	mov	r20, r25
    2a4a:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    2a4e:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2a50:	89 81       	ldd	r24, Y+1	; 0x01
    2a52:	81 30       	cpi	r24, 0x01	; 1
    2a54:	19 f0       	breq	.+6      	; 0x2a5c <LCD_inlenumSendChar+0x16a>
    2a56:	89 81       	ldd	r24, Y+1	; 0x01
    2a58:	8b 83       	std	Y+3, r24	; 0x03
    2a5a:	0b c0       	rjmp	.+22     	; 0x2a72 <LCD_inlenumSendChar+0x180>

	Local_enumErrorState=LCD_inlenumLatch();
    2a5c:	0e 94 53 13 	call	0x26a6	; 0x26a6 <LCD_inlenumLatch>
    2a60:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2a62:	89 81       	ldd	r24, Y+1	; 0x01
    2a64:	81 30       	cpi	r24, 0x01	; 1
    2a66:	19 f0       	breq	.+6      	; 0x2a6e <LCD_inlenumSendChar+0x17c>
    2a68:	89 81       	ldd	r24, Y+1	; 0x01
    2a6a:	8b 83       	std	Y+3, r24	; 0x03
    2a6c:	02 c0       	rjmp	.+4      	; 0x2a72 <LCD_inlenumSendChar+0x180>

#error"wrong LCD_MODE"

#endif

	return Local_enumErrorState;
    2a6e:	89 81       	ldd	r24, Y+1	; 0x01
    2a70:	8b 83       	std	Y+3, r24	; 0x03
    2a72:	8b 81       	ldd	r24, Y+3	; 0x03
}
    2a74:	0f 90       	pop	r0
    2a76:	0f 90       	pop	r0
    2a78:	0f 90       	pop	r0
    2a7a:	cf 91       	pop	r28
    2a7c:	df 91       	pop	r29
    2a7e:	08 95       	ret

00002a80 <LCD_enumSendCommand>:

ES_T LCD_enumSendCommand(u8 Copy_u8Command)
{
    2a80:	df 93       	push	r29
    2a82:	cf 93       	push	r28
    2a84:	00 d0       	rcall	.+0      	; 0x2a86 <LCD_enumSendCommand+0x6>
    2a86:	cd b7       	in	r28, 0x3d	; 61
    2a88:	de b7       	in	r29, 0x3e	; 62
    2a8a:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    2a8c:	19 82       	std	Y+1, r1	; 0x01

	Local_enumErrorState=LCD_inlenumSendCommand(Copy_u8Command);
    2a8e:	8a 81       	ldd	r24, Y+2	; 0x02
    2a90:	0e 94 8a 12 	call	0x2514	; 0x2514 <LCD_inlenumSendCommand>
    2a94:	89 83       	std	Y+1, r24	; 0x01

	return Local_enumErrorState;
    2a96:	89 81       	ldd	r24, Y+1	; 0x01
}
    2a98:	0f 90       	pop	r0
    2a9a:	0f 90       	pop	r0
    2a9c:	cf 91       	pop	r28
    2a9e:	df 91       	pop	r29
    2aa0:	08 95       	ret

00002aa2 <LCD_enumSendString>:

ES_T LCD_enumSendString(u8* Copy_pu8String)
{
    2aa2:	df 93       	push	r29
    2aa4:	cf 93       	push	r28
    2aa6:	00 d0       	rcall	.+0      	; 0x2aa8 <LCD_enumSendString+0x6>
    2aa8:	0f 92       	push	r0
    2aaa:	cd b7       	in	r28, 0x3d	; 61
    2aac:	de b7       	in	r29, 0x3e	; 62
    2aae:	9b 83       	std	Y+3, r25	; 0x03
    2ab0:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    2ab2:	19 82       	std	Y+1, r1	; 0x01

	Local_enumErrorState=LCD_inlenumSendString(Copy_pu8String);
    2ab4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ab6:	9b 81       	ldd	r25, Y+3	; 0x03
    2ab8:	0e 94 66 15 	call	0x2acc	; 0x2acc <LCD_inlenumSendString>
    2abc:	89 83       	std	Y+1, r24	; 0x01

	return Local_enumErrorState;
    2abe:	89 81       	ldd	r24, Y+1	; 0x01
}
    2ac0:	0f 90       	pop	r0
    2ac2:	0f 90       	pop	r0
    2ac4:	0f 90       	pop	r0
    2ac6:	cf 91       	pop	r28
    2ac8:	df 91       	pop	r29
    2aca:	08 95       	ret

00002acc <LCD_inlenumSendString>:

static inline ES_T LCD_inlenumSendString(u8* Copy_pu8String)
{
    2acc:	df 93       	push	r29
    2ace:	cf 93       	push	r28
    2ad0:	00 d0       	rcall	.+0      	; 0x2ad2 <LCD_inlenumSendString+0x6>
    2ad2:	00 d0       	rcall	.+0      	; 0x2ad4 <LCD_inlenumSendString+0x8>
    2ad4:	cd b7       	in	r28, 0x3d	; 61
    2ad6:	de b7       	in	r29, 0x3e	; 62
    2ad8:	9b 83       	std	Y+3, r25	; 0x03
    2ada:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    2adc:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pu8String!=NULL)
    2ade:	8a 81       	ldd	r24, Y+2	; 0x02
    2ae0:	9b 81       	ldd	r25, Y+3	; 0x03
    2ae2:	00 97       	sbiw	r24, 0x00	; 0
    2ae4:	d1 f0       	breq	.+52     	; 0x2b1a <LCD_inlenumSendString+0x4e>
	{
		for(;;Copy_pu8String++)
		{
			if(*Copy_pu8String!=0)
    2ae6:	ea 81       	ldd	r30, Y+2	; 0x02
    2ae8:	fb 81       	ldd	r31, Y+3	; 0x03
    2aea:	80 81       	ld	r24, Z
    2aec:	88 23       	and	r24, r24
    2aee:	91 f0       	breq	.+36     	; 0x2b14 <LCD_inlenumSendString+0x48>
			{
				Local_enumErrorState=LCD_inlenumSendChar(*Copy_pu8String);
    2af0:	ea 81       	ldd	r30, Y+2	; 0x02
    2af2:	fb 81       	ldd	r31, Y+3	; 0x03
    2af4:	80 81       	ld	r24, Z
    2af6:	0e 94 79 14 	call	0x28f2	; 0x28f2 <LCD_inlenumSendChar>
    2afa:	89 83       	std	Y+1, r24	; 0x01
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2afc:	89 81       	ldd	r24, Y+1	; 0x01
    2afe:	81 30       	cpi	r24, 0x01	; 1
    2b00:	19 f0       	breq	.+6      	; 0x2b08 <LCD_inlenumSendString+0x3c>
    2b02:	89 81       	ldd	r24, Y+1	; 0x01
    2b04:	8c 83       	std	Y+4, r24	; 0x04
    2b06:	0d c0       	rjmp	.+26     	; 0x2b22 <LCD_inlenumSendString+0x56>
{
	ES_T Local_enumErrorState=ES_NOK;

	if (Copy_pu8String!=NULL)
	{
		for(;;Copy_pu8String++)
    2b08:	8a 81       	ldd	r24, Y+2	; 0x02
    2b0a:	9b 81       	ldd	r25, Y+3	; 0x03
    2b0c:	01 96       	adiw	r24, 0x01	; 1
    2b0e:	9b 83       	std	Y+3, r25	; 0x03
    2b10:	8a 83       	std	Y+2, r24	; 0x02
    2b12:	e9 cf       	rjmp	.-46     	; 0x2ae6 <LCD_inlenumSendString+0x1a>
			else
			{
				break;
			}
		}
		Local_enumErrorState=ES_OK;
    2b14:	81 e0       	ldi	r24, 0x01	; 1
    2b16:	89 83       	std	Y+1, r24	; 0x01
    2b18:	02 c0       	rjmp	.+4      	; 0x2b1e <LCD_inlenumSendString+0x52>
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    2b1a:	82 e0       	ldi	r24, 0x02	; 2
    2b1c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    2b1e:	89 81       	ldd	r24, Y+1	; 0x01
    2b20:	8c 83       	std	Y+4, r24	; 0x04
    2b22:	8c 81       	ldd	r24, Y+4	; 0x04
}
    2b24:	0f 90       	pop	r0
    2b26:	0f 90       	pop	r0
    2b28:	0f 90       	pop	r0
    2b2a:	0f 90       	pop	r0
    2b2c:	cf 91       	pop	r28
    2b2e:	df 91       	pop	r29
    2b30:	08 95       	ret

00002b32 <LCD_enumGoTOPosition>:

ES_T LCD_enumGoTOPosition(u8 Copy_u8Row,u8 Copy_u8Col)
{
    2b32:	df 93       	push	r29
    2b34:	cf 93       	push	r28
    2b36:	00 d0       	rcall	.+0      	; 0x2b38 <LCD_enumGoTOPosition+0x6>
    2b38:	00 d0       	rcall	.+0      	; 0x2b3a <LCD_enumGoTOPosition+0x8>
    2b3a:	0f 92       	push	r0
    2b3c:	cd b7       	in	r28, 0x3d	; 61
    2b3e:	de b7       	in	r29, 0x3e	; 62
    2b40:	8b 83       	std	Y+3, r24	; 0x03
    2b42:	6c 83       	std	Y+4, r22	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    2b44:	1a 82       	std	Y+2, r1	; 0x02

	if ((Copy_u8Row<=2&&Copy_u8Row>=1)&&(Copy_u8Col<=16&&Copy_u8Col>=1))
    2b46:	8b 81       	ldd	r24, Y+3	; 0x03
    2b48:	83 30       	cpi	r24, 0x03	; 3
    2b4a:	70 f5       	brcc	.+92     	; 0x2ba8 <LCD_enumGoTOPosition+0x76>
    2b4c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b4e:	88 23       	and	r24, r24
    2b50:	59 f1       	breq	.+86     	; 0x2ba8 <LCD_enumGoTOPosition+0x76>
    2b52:	8c 81       	ldd	r24, Y+4	; 0x04
    2b54:	81 31       	cpi	r24, 0x11	; 17
    2b56:	40 f5       	brcc	.+80     	; 0x2ba8 <LCD_enumGoTOPosition+0x76>
    2b58:	8c 81       	ldd	r24, Y+4	; 0x04
    2b5a:	88 23       	and	r24, r24
    2b5c:	29 f1       	breq	.+74     	; 0x2ba8 <LCD_enumGoTOPosition+0x76>
	{
		u8 Local_u8Position=0;
    2b5e:	19 82       	std	Y+1, r1	; 0x01
		if(Copy_u8Row==1)
    2b60:	8b 81       	ldd	r24, Y+3	; 0x03
    2b62:	81 30       	cpi	r24, 0x01	; 1
    2b64:	79 f4       	brne	.+30     	; 0x2b84 <LCD_enumGoTOPosition+0x52>
		{
			Local_u8Position=0x80;
    2b66:	80 e8       	ldi	r24, 0x80	; 128
    2b68:	89 83       	std	Y+1, r24	; 0x01
			Local_enumErrorState=LCD_inlenumSendCommand(Local_u8Position+Copy_u8Col-1);
    2b6a:	99 81       	ldd	r25, Y+1	; 0x01
    2b6c:	8c 81       	ldd	r24, Y+4	; 0x04
    2b6e:	89 0f       	add	r24, r25
    2b70:	81 50       	subi	r24, 0x01	; 1
    2b72:	0e 94 8a 12 	call	0x2514	; 0x2514 <LCD_inlenumSendCommand>
    2b76:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2b78:	8a 81       	ldd	r24, Y+2	; 0x02
    2b7a:	81 30       	cpi	r24, 0x01	; 1
    2b7c:	b9 f0       	breq	.+46     	; 0x2bac <LCD_enumGoTOPosition+0x7a>
    2b7e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b80:	8d 83       	std	Y+5, r24	; 0x05
    2b82:	16 c0       	rjmp	.+44     	; 0x2bb0 <LCD_enumGoTOPosition+0x7e>
		}
		else if (Copy_u8Row==2)
    2b84:	8b 81       	ldd	r24, Y+3	; 0x03
    2b86:	82 30       	cpi	r24, 0x02	; 2
    2b88:	89 f4       	brne	.+34     	; 0x2bac <LCD_enumGoTOPosition+0x7a>
		{
			Local_u8Position=0xC0;
    2b8a:	80 ec       	ldi	r24, 0xC0	; 192
    2b8c:	89 83       	std	Y+1, r24	; 0x01
			Local_enumErrorState=LCD_inlenumSendCommand(Local_u8Position+Copy_u8Col-1);
    2b8e:	99 81       	ldd	r25, Y+1	; 0x01
    2b90:	8c 81       	ldd	r24, Y+4	; 0x04
    2b92:	89 0f       	add	r24, r25
    2b94:	81 50       	subi	r24, 0x01	; 1
    2b96:	0e 94 8a 12 	call	0x2514	; 0x2514 <LCD_inlenumSendCommand>
    2b9a:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2b9c:	8a 81       	ldd	r24, Y+2	; 0x02
    2b9e:	81 30       	cpi	r24, 0x01	; 1
    2ba0:	29 f0       	breq	.+10     	; 0x2bac <LCD_enumGoTOPosition+0x7a>
    2ba2:	8a 81       	ldd	r24, Y+2	; 0x02
    2ba4:	8d 83       	std	Y+5, r24	; 0x05
    2ba6:	04 c0       	rjmp	.+8      	; 0x2bb0 <LCD_enumGoTOPosition+0x7e>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    2ba8:	83 e0       	ldi	r24, 0x03	; 3
    2baa:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enumErrorState;
    2bac:	8a 81       	ldd	r24, Y+2	; 0x02
    2bae:	8d 83       	std	Y+5, r24	; 0x05
    2bb0:	8d 81       	ldd	r24, Y+5	; 0x05
}
    2bb2:	0f 90       	pop	r0
    2bb4:	0f 90       	pop	r0
    2bb6:	0f 90       	pop	r0
    2bb8:	0f 90       	pop	r0
    2bba:	0f 90       	pop	r0
    2bbc:	cf 91       	pop	r28
    2bbe:	df 91       	pop	r29
    2bc0:	08 95       	ret

00002bc2 <LCD_enumDisplayIntNum>:

ES_T LCD_enumDisplayIntNum(s64 Copy_s64Num)
{
    2bc2:	df 93       	push	r29
    2bc4:	cf 93       	push	r28
    2bc6:	cd b7       	in	r28, 0x3d	; 61
    2bc8:	de b7       	in	r29, 0x3e	; 62
    2bca:	29 97       	sbiw	r28, 0x09	; 9
    2bcc:	0f b6       	in	r0, 0x3f	; 63
    2bce:	f8 94       	cli
    2bd0:	de bf       	out	0x3e, r29	; 62
    2bd2:	0f be       	out	0x3f, r0	; 63
    2bd4:	cd bf       	out	0x3d, r28	; 61
    2bd6:	2a 83       	std	Y+2, r18	; 0x02
    2bd8:	3b 83       	std	Y+3, r19	; 0x03
    2bda:	4c 83       	std	Y+4, r20	; 0x04
    2bdc:	5d 83       	std	Y+5, r21	; 0x05
    2bde:	6e 83       	std	Y+6, r22	; 0x06
    2be0:	7f 83       	std	Y+7, r23	; 0x07
    2be2:	88 87       	std	Y+8, r24	; 0x08
    2be4:	99 87       	std	Y+9, r25	; 0x09
	ES_T Local_enumErrorState=ES_NOK;
    2be6:	19 82       	std	Y+1, r1	; 0x01

	Local_enumErrorState=LCD_inlenumDisplayIntNum(Copy_s64Num);
    2be8:	8a 81       	ldd	r24, Y+2	; 0x02
    2bea:	9b 81       	ldd	r25, Y+3	; 0x03
    2bec:	ac 81       	ldd	r26, Y+4	; 0x04
    2bee:	bd 81       	ldd	r27, Y+5	; 0x05
    2bf0:	bc 01       	movw	r22, r24
    2bf2:	cd 01       	movw	r24, r26
    2bf4:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <LCD_inlenumDisplayIntNum>
    2bf8:	89 83       	std	Y+1, r24	; 0x01

	return Local_enumErrorState;
    2bfa:	89 81       	ldd	r24, Y+1	; 0x01
}
    2bfc:	29 96       	adiw	r28, 0x09	; 9
    2bfe:	0f b6       	in	r0, 0x3f	; 63
    2c00:	f8 94       	cli
    2c02:	de bf       	out	0x3e, r29	; 62
    2c04:	0f be       	out	0x3f, r0	; 63
    2c06:	cd bf       	out	0x3d, r28	; 61
    2c08:	cf 91       	pop	r28
    2c0a:	df 91       	pop	r29
    2c0c:	08 95       	ret

00002c0e <LCD_inlenumDisplayIntNum>:

static inline ES_T LCD_inlenumDisplayIntNum(s32 Copy_s64Num)
{
    2c0e:	0f 93       	push	r16
    2c10:	1f 93       	push	r17
    2c12:	df 93       	push	r29
    2c14:	cf 93       	push	r28
    2c16:	cd b7       	in	r28, 0x3d	; 61
    2c18:	de b7       	in	r29, 0x3e	; 62
    2c1a:	61 97       	sbiw	r28, 0x11	; 17
    2c1c:	0f b6       	in	r0, 0x3f	; 63
    2c1e:	f8 94       	cli
    2c20:	de bf       	out	0x3e, r29	; 62
    2c22:	0f be       	out	0x3f, r0	; 63
    2c24:	cd bf       	out	0x3d, r28	; 61
    2c26:	6d 87       	std	Y+13, r22	; 0x0d
    2c28:	7e 87       	std	Y+14, r23	; 0x0e
    2c2a:	8f 87       	std	Y+15, r24	; 0x0f
    2c2c:	98 8b       	std	Y+16, r25	; 0x10
	ES_T Local_enumErrorState=ES_NOK;
    2c2e:	1a 82       	std	Y+2, r1	; 0x02

	if(Copy_s64Num < 0)
    2c30:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c32:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c34:	af 85       	ldd	r26, Y+15	; 0x0f
    2c36:	b8 89       	ldd	r27, Y+16	; 0x10
    2c38:	bb 23       	and	r27, r27
    2c3a:	cc f4       	brge	.+50     	; 0x2c6e <LCD_inlenumDisplayIntNum+0x60>
	{
		Local_enumErrorState=LCD_inlenumSendChar('-');
    2c3c:	8d e2       	ldi	r24, 0x2D	; 45
    2c3e:	0e 94 79 14 	call	0x28f2	; 0x28f2 <LCD_inlenumSendChar>
    2c42:	8a 83       	std	Y+2, r24	; 0x02
		if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2c44:	8a 81       	ldd	r24, Y+2	; 0x02
    2c46:	81 30       	cpi	r24, 0x01	; 1
    2c48:	19 f0       	breq	.+6      	; 0x2c50 <LCD_inlenumDisplayIntNum+0x42>
    2c4a:	8a 81       	ldd	r24, Y+2	; 0x02
    2c4c:	89 8b       	std	Y+17, r24	; 0x11
    2c4e:	77 c0       	rjmp	.+238    	; 0x2d3e <LCD_inlenumDisplayIntNum+0x130>
		Copy_s64Num *= -1;
    2c50:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c52:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c54:	af 85       	ldd	r26, Y+15	; 0x0f
    2c56:	b8 89       	ldd	r27, Y+16	; 0x10
    2c58:	b0 95       	com	r27
    2c5a:	a0 95       	com	r26
    2c5c:	90 95       	com	r25
    2c5e:	81 95       	neg	r24
    2c60:	9f 4f       	sbci	r25, 0xFF	; 255
    2c62:	af 4f       	sbci	r26, 0xFF	; 255
    2c64:	bf 4f       	sbci	r27, 0xFF	; 255
    2c66:	8d 87       	std	Y+13, r24	; 0x0d
    2c68:	9e 87       	std	Y+14, r25	; 0x0e
    2c6a:	af 87       	std	Y+15, r26	; 0x0f
    2c6c:	b8 8b       	std	Y+16, r27	; 0x10
	}

	u8 Local_Au8Buffer[10];
	u8 Local_u8Index = 0;
    2c6e:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_s64Num == 0)
    2c70:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c72:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c74:	af 85       	ldd	r26, Y+15	; 0x0f
    2c76:	b8 89       	ldd	r27, Y+16	; 0x10
    2c78:	00 97       	sbiw	r24, 0x00	; 0
    2c7a:	a1 05       	cpc	r26, r1
    2c7c:	b1 05       	cpc	r27, r1
    2c7e:	c9 f5       	brne	.+114    	; 0x2cf2 <LCD_inlenumDisplayIntNum+0xe4>
	{
		Local_enumErrorState=LCD_inlenumSendChar('0');
    2c80:	80 e3       	ldi	r24, 0x30	; 48
    2c82:	0e 94 79 14 	call	0x28f2	; 0x28f2 <LCD_inlenumSendChar>
    2c86:	8a 83       	std	Y+2, r24	; 0x02
		if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2c88:	8a 81       	ldd	r24, Y+2	; 0x02
    2c8a:	81 30       	cpi	r24, 0x01	; 1
    2c8c:	09 f4       	brne	.+2      	; 0x2c90 <LCD_inlenumDisplayIntNum+0x82>
    2c8e:	53 c0       	rjmp	.+166    	; 0x2d36 <LCD_inlenumDisplayIntNum+0x128>
    2c90:	8a 81       	ldd	r24, Y+2	; 0x02
    2c92:	89 8b       	std	Y+17, r24	; 0x11
    2c94:	54 c0       	rjmp	.+168    	; 0x2d3e <LCD_inlenumDisplayIntNum+0x130>
	}
	else
	{
		while(Copy_s64Num > 0)
		{
			Local_Au8Buffer[Local_u8Index++] = (Copy_s64Num % 10) + '0';
    2c96:	89 81       	ldd	r24, Y+1	; 0x01
    2c98:	08 2f       	mov	r16, r24
    2c9a:	10 e0       	ldi	r17, 0x00	; 0
    2c9c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c9e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ca0:	af 85       	ldd	r26, Y+15	; 0x0f
    2ca2:	b8 89       	ldd	r27, Y+16	; 0x10
    2ca4:	2a e0       	ldi	r18, 0x0A	; 10
    2ca6:	30 e0       	ldi	r19, 0x00	; 0
    2ca8:	40 e0       	ldi	r20, 0x00	; 0
    2caa:	50 e0       	ldi	r21, 0x00	; 0
    2cac:	bc 01       	movw	r22, r24
    2cae:	cd 01       	movw	r24, r26
    2cb0:	0e 94 4e 2f 	call	0x5e9c	; 0x5e9c <__divmodsi4>
    2cb4:	dc 01       	movw	r26, r24
    2cb6:	cb 01       	movw	r24, r22
    2cb8:	28 2f       	mov	r18, r24
    2cba:	20 5d       	subi	r18, 0xD0	; 208
    2cbc:	ce 01       	movw	r24, r28
    2cbe:	03 96       	adiw	r24, 0x03	; 3
    2cc0:	fc 01       	movw	r30, r24
    2cc2:	e0 0f       	add	r30, r16
    2cc4:	f1 1f       	adc	r31, r17
    2cc6:	20 83       	st	Z, r18
    2cc8:	89 81       	ldd	r24, Y+1	; 0x01
    2cca:	8f 5f       	subi	r24, 0xFF	; 255
    2ccc:	89 83       	std	Y+1, r24	; 0x01
			Copy_s64Num /= 10;
    2cce:	8d 85       	ldd	r24, Y+13	; 0x0d
    2cd0:	9e 85       	ldd	r25, Y+14	; 0x0e
    2cd2:	af 85       	ldd	r26, Y+15	; 0x0f
    2cd4:	b8 89       	ldd	r27, Y+16	; 0x10
    2cd6:	2a e0       	ldi	r18, 0x0A	; 10
    2cd8:	30 e0       	ldi	r19, 0x00	; 0
    2cda:	40 e0       	ldi	r20, 0x00	; 0
    2cdc:	50 e0       	ldi	r21, 0x00	; 0
    2cde:	bc 01       	movw	r22, r24
    2ce0:	cd 01       	movw	r24, r26
    2ce2:	0e 94 4e 2f 	call	0x5e9c	; 0x5e9c <__divmodsi4>
    2ce6:	da 01       	movw	r26, r20
    2ce8:	c9 01       	movw	r24, r18
    2cea:	8d 87       	std	Y+13, r24	; 0x0d
    2cec:	9e 87       	std	Y+14, r25	; 0x0e
    2cee:	af 87       	std	Y+15, r26	; 0x0f
    2cf0:	b8 8b       	std	Y+16, r27	; 0x10
		Local_enumErrorState=LCD_inlenumSendChar('0');
		if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
	}
	else
	{
		while(Copy_s64Num > 0)
    2cf2:	8d 85       	ldd	r24, Y+13	; 0x0d
    2cf4:	9e 85       	ldd	r25, Y+14	; 0x0e
    2cf6:	af 85       	ldd	r26, Y+15	; 0x0f
    2cf8:	b8 89       	ldd	r27, Y+16	; 0x10
    2cfa:	18 16       	cp	r1, r24
    2cfc:	19 06       	cpc	r1, r25
    2cfe:	1a 06       	cpc	r1, r26
    2d00:	1b 06       	cpc	r1, r27
    2d02:	4c f2       	brlt	.-110    	; 0x2c96 <LCD_inlenumDisplayIntNum+0x88>
    2d04:	15 c0       	rjmp	.+42     	; 0x2d30 <LCD_inlenumDisplayIntNum+0x122>
			Copy_s64Num /= 10;
		}

		while(Local_u8Index > 0)
		{
			Local_enumErrorState=LCD_inlenumSendChar(Local_Au8Buffer[--Local_u8Index]);
    2d06:	89 81       	ldd	r24, Y+1	; 0x01
    2d08:	81 50       	subi	r24, 0x01	; 1
    2d0a:	89 83       	std	Y+1, r24	; 0x01
    2d0c:	89 81       	ldd	r24, Y+1	; 0x01
    2d0e:	28 2f       	mov	r18, r24
    2d10:	30 e0       	ldi	r19, 0x00	; 0
    2d12:	ce 01       	movw	r24, r28
    2d14:	03 96       	adiw	r24, 0x03	; 3
    2d16:	fc 01       	movw	r30, r24
    2d18:	e2 0f       	add	r30, r18
    2d1a:	f3 1f       	adc	r31, r19
    2d1c:	80 81       	ld	r24, Z
    2d1e:	0e 94 79 14 	call	0x28f2	; 0x28f2 <LCD_inlenumSendChar>
    2d22:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2d24:	8a 81       	ldd	r24, Y+2	; 0x02
    2d26:	81 30       	cpi	r24, 0x01	; 1
    2d28:	19 f0       	breq	.+6      	; 0x2d30 <LCD_inlenumDisplayIntNum+0x122>
    2d2a:	8a 81       	ldd	r24, Y+2	; 0x02
    2d2c:	89 8b       	std	Y+17, r24	; 0x11
    2d2e:	07 c0       	rjmp	.+14     	; 0x2d3e <LCD_inlenumDisplayIntNum+0x130>
		{
			Local_Au8Buffer[Local_u8Index++] = (Copy_s64Num % 10) + '0';
			Copy_s64Num /= 10;
		}

		while(Local_u8Index > 0)
    2d30:	89 81       	ldd	r24, Y+1	; 0x01
    2d32:	88 23       	and	r24, r24
    2d34:	41 f7       	brne	.-48     	; 0x2d06 <LCD_inlenumDisplayIntNum+0xf8>
			Local_enumErrorState=LCD_inlenumSendChar(Local_Au8Buffer[--Local_u8Index]);
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
		}
	}

	Local_enumErrorState=ES_OK;
    2d36:	81 e0       	ldi	r24, 0x01	; 1
    2d38:	8a 83       	std	Y+2, r24	; 0x02

	return Local_enumErrorState;
    2d3a:	8a 81       	ldd	r24, Y+2	; 0x02
    2d3c:	89 8b       	std	Y+17, r24	; 0x11
    2d3e:	89 89       	ldd	r24, Y+17	; 0x11
}
    2d40:	61 96       	adiw	r28, 0x11	; 17
    2d42:	0f b6       	in	r0, 0x3f	; 63
    2d44:	f8 94       	cli
    2d46:	de bf       	out	0x3e, r29	; 62
    2d48:	0f be       	out	0x3f, r0	; 63
    2d4a:	cd bf       	out	0x3d, r28	; 61
    2d4c:	cf 91       	pop	r28
    2d4e:	df 91       	pop	r29
    2d50:	1f 91       	pop	r17
    2d52:	0f 91       	pop	r16
    2d54:	08 95       	ret

00002d56 <LCD_enumDisplayFloatNum>:

ES_T LCD_enumDisplayFloatNum(f32 Copy_f32Num)
{
    2d56:	df 93       	push	r29
    2d58:	cf 93       	push	r28
    2d5a:	cd b7       	in	r28, 0x3d	; 61
    2d5c:	de b7       	in	r29, 0x3e	; 62
    2d5e:	2f 97       	sbiw	r28, 0x0f	; 15
    2d60:	0f b6       	in	r0, 0x3f	; 63
    2d62:	f8 94       	cli
    2d64:	de bf       	out	0x3e, r29	; 62
    2d66:	0f be       	out	0x3f, r0	; 63
    2d68:	cd bf       	out	0x3d, r28	; 61
    2d6a:	6b 87       	std	Y+11, r22	; 0x0b
    2d6c:	7c 87       	std	Y+12, r23	; 0x0c
    2d6e:	8d 87       	std	Y+13, r24	; 0x0d
    2d70:	9e 87       	std	Y+14, r25	; 0x0e
	ES_T Local_enumErrorState=ES_NOK;
    2d72:	1a 86       	std	Y+10, r1	; 0x0a

	if(Copy_f32Num<0)
    2d74:	6b 85       	ldd	r22, Y+11	; 0x0b
    2d76:	7c 85       	ldd	r23, Y+12	; 0x0c
    2d78:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d7a:	9e 85       	ldd	r25, Y+14	; 0x0e
    2d7c:	20 e0       	ldi	r18, 0x00	; 0
    2d7e:	30 e0       	ldi	r19, 0x00	; 0
    2d80:	40 e0       	ldi	r20, 0x00	; 0
    2d82:	50 e0       	ldi	r21, 0x00	; 0
    2d84:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2d88:	88 23       	and	r24, r24
    2d8a:	9c f4       	brge	.+38     	; 0x2db2 <LCD_enumDisplayFloatNum+0x5c>
	{
		Local_enumErrorState=LCD_inlenumSendChar('-');
    2d8c:	8d e2       	ldi	r24, 0x2D	; 45
    2d8e:	0e 94 79 14 	call	0x28f2	; 0x28f2 <LCD_inlenumSendChar>
    2d92:	8a 87       	std	Y+10, r24	; 0x0a
		if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2d94:	8a 85       	ldd	r24, Y+10	; 0x0a
    2d96:	81 30       	cpi	r24, 0x01	; 1
    2d98:	19 f0       	breq	.+6      	; 0x2da0 <LCD_enumDisplayFloatNum+0x4a>
    2d9a:	8a 85       	ldd	r24, Y+10	; 0x0a
    2d9c:	8f 87       	std	Y+15, r24	; 0x0f
    2d9e:	9b c0       	rjmp	.+310    	; 0x2ed6 <LCD_enumDisplayFloatNum+0x180>
		Copy_f32Num*=-1;
    2da0:	8b 85       	ldd	r24, Y+11	; 0x0b
    2da2:	9c 85       	ldd	r25, Y+12	; 0x0c
    2da4:	ad 85       	ldd	r26, Y+13	; 0x0d
    2da6:	be 85       	ldd	r27, Y+14	; 0x0e
    2da8:	b0 58       	subi	r27, 0x80	; 128
    2daa:	8b 87       	std	Y+11, r24	; 0x0b
    2dac:	9c 87       	std	Y+12, r25	; 0x0c
    2dae:	ad 87       	std	Y+13, r26	; 0x0d
    2db0:	be 87       	std	Y+14, r27	; 0x0e
	}

	u16 Local_u16Left = (u16)Copy_f32Num;
    2db2:	6b 85       	ldd	r22, Y+11	; 0x0b
    2db4:	7c 85       	ldd	r23, Y+12	; 0x0c
    2db6:	8d 85       	ldd	r24, Y+13	; 0x0d
    2db8:	9e 85       	ldd	r25, Y+14	; 0x0e
    2dba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2dbe:	dc 01       	movw	r26, r24
    2dc0:	cb 01       	movw	r24, r22
    2dc2:	99 87       	std	Y+9, r25	; 0x09
    2dc4:	88 87       	std	Y+8, r24	; 0x08

	Local_enumErrorState=LCD_inlenumDisplayIntNum(Local_u16Left);
    2dc6:	88 85       	ldd	r24, Y+8	; 0x08
    2dc8:	99 85       	ldd	r25, Y+9	; 0x09
    2dca:	cc 01       	movw	r24, r24
    2dcc:	a0 e0       	ldi	r26, 0x00	; 0
    2dce:	b0 e0       	ldi	r27, 0x00	; 0
    2dd0:	bc 01       	movw	r22, r24
    2dd2:	cd 01       	movw	r24, r26
    2dd4:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <LCD_inlenumDisplayIntNum>
    2dd8:	8a 87       	std	Y+10, r24	; 0x0a
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2dda:	8a 85       	ldd	r24, Y+10	; 0x0a
    2ddc:	81 30       	cpi	r24, 0x01	; 1
    2dde:	19 f0       	breq	.+6      	; 0x2de6 <LCD_enumDisplayFloatNum+0x90>
    2de0:	8a 85       	ldd	r24, Y+10	; 0x0a
    2de2:	8f 87       	std	Y+15, r24	; 0x0f
    2de4:	78 c0       	rjmp	.+240    	; 0x2ed6 <LCD_enumDisplayFloatNum+0x180>
	Local_enumErrorState=LCD_inlenumSendChar('.');
    2de6:	8e e2       	ldi	r24, 0x2E	; 46
    2de8:	0e 94 79 14 	call	0x28f2	; 0x28f2 <LCD_inlenumSendChar>
    2dec:	8a 87       	std	Y+10, r24	; 0x0a
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2dee:	8a 85       	ldd	r24, Y+10	; 0x0a
    2df0:	81 30       	cpi	r24, 0x01	; 1
    2df2:	19 f0       	breq	.+6      	; 0x2dfa <LCD_enumDisplayFloatNum+0xa4>
    2df4:	8a 85       	ldd	r24, Y+10	; 0x0a
    2df6:	8f 87       	std	Y+15, r24	; 0x0f
    2df8:	6e c0       	rjmp	.+220    	; 0x2ed6 <LCD_enumDisplayFloatNum+0x180>

	f32 Local_f32Fraction=Copy_f32Num-(f32)Local_u16Left+.00005;
    2dfa:	88 85       	ldd	r24, Y+8	; 0x08
    2dfc:	99 85       	ldd	r25, Y+9	; 0x09
    2dfe:	cc 01       	movw	r24, r24
    2e00:	a0 e0       	ldi	r26, 0x00	; 0
    2e02:	b0 e0       	ldi	r27, 0x00	; 0
    2e04:	bc 01       	movw	r22, r24
    2e06:	cd 01       	movw	r24, r26
    2e08:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__floatunsisf>
    2e0c:	9b 01       	movw	r18, r22
    2e0e:	ac 01       	movw	r20, r24
    2e10:	6b 85       	ldd	r22, Y+11	; 0x0b
    2e12:	7c 85       	ldd	r23, Y+12	; 0x0c
    2e14:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e16:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e18:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    2e1c:	dc 01       	movw	r26, r24
    2e1e:	cb 01       	movw	r24, r22
    2e20:	bc 01       	movw	r22, r24
    2e22:	cd 01       	movw	r24, r26
    2e24:	27 e1       	ldi	r18, 0x17	; 23
    2e26:	37 eb       	ldi	r19, 0xB7	; 183
    2e28:	41 e5       	ldi	r20, 0x51	; 81
    2e2a:	58 e3       	ldi	r21, 0x38	; 56
    2e2c:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__addsf3>
    2e30:	dc 01       	movw	r26, r24
    2e32:	cb 01       	movw	r24, r22
    2e34:	8c 83       	std	Y+4, r24	; 0x04
    2e36:	9d 83       	std	Y+5, r25	; 0x05
    2e38:	ae 83       	std	Y+6, r26	; 0x06
    2e3a:	bf 83       	std	Y+7, r27	; 0x07
	for (int i=0;i<4;i++)
    2e3c:	1b 82       	std	Y+3, r1	; 0x03
    2e3e:	1a 82       	std	Y+2, r1	; 0x02
    2e40:	42 c0       	rjmp	.+132    	; 0x2ec6 <LCD_enumDisplayFloatNum+0x170>
	{
		Local_f32Fraction *= 10;
    2e42:	6c 81       	ldd	r22, Y+4	; 0x04
    2e44:	7d 81       	ldd	r23, Y+5	; 0x05
    2e46:	8e 81       	ldd	r24, Y+6	; 0x06
    2e48:	9f 81       	ldd	r25, Y+7	; 0x07
    2e4a:	20 e0       	ldi	r18, 0x00	; 0
    2e4c:	30 e0       	ldi	r19, 0x00	; 0
    2e4e:	40 e2       	ldi	r20, 0x20	; 32
    2e50:	51 e4       	ldi	r21, 0x41	; 65
    2e52:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e56:	dc 01       	movw	r26, r24
    2e58:	cb 01       	movw	r24, r22
    2e5a:	8c 83       	std	Y+4, r24	; 0x04
    2e5c:	9d 83       	std	Y+5, r25	; 0x05
    2e5e:	ae 83       	std	Y+6, r26	; 0x06
    2e60:	bf 83       	std	Y+7, r27	; 0x07
		u8 Local_u8Digit = (u8)Local_f32Fraction;
    2e62:	6c 81       	ldd	r22, Y+4	; 0x04
    2e64:	7d 81       	ldd	r23, Y+5	; 0x05
    2e66:	8e 81       	ldd	r24, Y+6	; 0x06
    2e68:	9f 81       	ldd	r25, Y+7	; 0x07
    2e6a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e6e:	dc 01       	movw	r26, r24
    2e70:	cb 01       	movw	r24, r22
    2e72:	89 83       	std	Y+1, r24	; 0x01
		Local_enumErrorState=LCD_inlenumSendChar(Local_u8Digit + '0');
    2e74:	89 81       	ldd	r24, Y+1	; 0x01
    2e76:	80 5d       	subi	r24, 0xD0	; 208
    2e78:	0e 94 79 14 	call	0x28f2	; 0x28f2 <LCD_inlenumSendChar>
    2e7c:	8a 87       	std	Y+10, r24	; 0x0a
		if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2e7e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2e80:	81 30       	cpi	r24, 0x01	; 1
    2e82:	19 f0       	breq	.+6      	; 0x2e8a <LCD_enumDisplayFloatNum+0x134>
    2e84:	8a 85       	ldd	r24, Y+10	; 0x0a
    2e86:	8f 87       	std	Y+15, r24	; 0x0f
    2e88:	26 c0       	rjmp	.+76     	; 0x2ed6 <LCD_enumDisplayFloatNum+0x180>
		Local_f32Fraction -= Local_u8Digit;
    2e8a:	89 81       	ldd	r24, Y+1	; 0x01
    2e8c:	88 2f       	mov	r24, r24
    2e8e:	90 e0       	ldi	r25, 0x00	; 0
    2e90:	aa 27       	eor	r26, r26
    2e92:	97 fd       	sbrc	r25, 7
    2e94:	a0 95       	com	r26
    2e96:	ba 2f       	mov	r27, r26
    2e98:	bc 01       	movw	r22, r24
    2e9a:	cd 01       	movw	r24, r26
    2e9c:	0e 94 a1 03 	call	0x742	; 0x742 <__floatsisf>
    2ea0:	9b 01       	movw	r18, r22
    2ea2:	ac 01       	movw	r20, r24
    2ea4:	6c 81       	ldd	r22, Y+4	; 0x04
    2ea6:	7d 81       	ldd	r23, Y+5	; 0x05
    2ea8:	8e 81       	ldd	r24, Y+6	; 0x06
    2eaa:	9f 81       	ldd	r25, Y+7	; 0x07
    2eac:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    2eb0:	dc 01       	movw	r26, r24
    2eb2:	cb 01       	movw	r24, r22
    2eb4:	8c 83       	std	Y+4, r24	; 0x04
    2eb6:	9d 83       	std	Y+5, r25	; 0x05
    2eb8:	ae 83       	std	Y+6, r26	; 0x06
    2eba:	bf 83       	std	Y+7, r27	; 0x07
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
	Local_enumErrorState=LCD_inlenumSendChar('.');
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;

	f32 Local_f32Fraction=Copy_f32Num-(f32)Local_u16Left+.00005;
	for (int i=0;i<4;i++)
    2ebc:	8a 81       	ldd	r24, Y+2	; 0x02
    2ebe:	9b 81       	ldd	r25, Y+3	; 0x03
    2ec0:	01 96       	adiw	r24, 0x01	; 1
    2ec2:	9b 83       	std	Y+3, r25	; 0x03
    2ec4:	8a 83       	std	Y+2, r24	; 0x02
    2ec6:	8a 81       	ldd	r24, Y+2	; 0x02
    2ec8:	9b 81       	ldd	r25, Y+3	; 0x03
    2eca:	84 30       	cpi	r24, 0x04	; 4
    2ecc:	91 05       	cpc	r25, r1
    2ece:	0c f4       	brge	.+2      	; 0x2ed2 <LCD_enumDisplayFloatNum+0x17c>
    2ed0:	b8 cf       	rjmp	.-144    	; 0x2e42 <LCD_enumDisplayFloatNum+0xec>
		Local_enumErrorState=LCD_inlenumSendChar(Local_u8Digit + '0');
		if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
		Local_f32Fraction -= Local_u8Digit;
	}

	return Local_enumErrorState;
    2ed2:	8a 85       	ldd	r24, Y+10	; 0x0a
    2ed4:	8f 87       	std	Y+15, r24	; 0x0f
    2ed6:	8f 85       	ldd	r24, Y+15	; 0x0f
}
    2ed8:	2f 96       	adiw	r28, 0x0f	; 15
    2eda:	0f b6       	in	r0, 0x3f	; 63
    2edc:	f8 94       	cli
    2ede:	de bf       	out	0x3e, r29	; 62
    2ee0:	0f be       	out	0x3f, r0	; 63
    2ee2:	cd bf       	out	0x3d, r28	; 61
    2ee4:	cf 91       	pop	r28
    2ee6:	df 91       	pop	r29
    2ee8:	08 95       	ret

00002eea <LCD_enumSendCustomChar>:

ES_T LCD_enumSendCustomChar(u8 Copy_u8Pos,u8* Copy_pu8Char)
{
    2eea:	df 93       	push	r29
    2eec:	cf 93       	push	r28
    2eee:	00 d0       	rcall	.+0      	; 0x2ef0 <LCD_enumSendCustomChar+0x6>
    2ef0:	00 d0       	rcall	.+0      	; 0x2ef2 <LCD_enumSendCustomChar+0x8>
    2ef2:	00 d0       	rcall	.+0      	; 0x2ef4 <LCD_enumSendCustomChar+0xa>
    2ef4:	cd b7       	in	r28, 0x3d	; 61
    2ef6:	de b7       	in	r29, 0x3e	; 62
    2ef8:	8b 83       	std	Y+3, r24	; 0x03
    2efa:	7d 83       	std	Y+5, r23	; 0x05
    2efc:	6c 83       	std	Y+4, r22	; 0x04

	ES_T Local_enumErrorState=ES_NOK;
    2efe:	1a 82       	std	Y+2, r1	; 0x02

	if (Copy_pu8Char!=NULL)
    2f00:	8c 81       	ldd	r24, Y+4	; 0x04
    2f02:	9d 81       	ldd	r25, Y+5	; 0x05
    2f04:	00 97       	sbiw	r24, 0x00	; 0
    2f06:	09 f4       	brne	.+2      	; 0x2f0a <LCD_enumSendCustomChar+0x20>
    2f08:	3e c0       	rjmp	.+124    	; 0x2f86 <LCD_enumSendCustomChar+0x9c>
	{
		if(Copy_u8Pos<=7&&Copy_u8Pos>=0)
    2f0a:	8b 81       	ldd	r24, Y+3	; 0x03
    2f0c:	88 30       	cpi	r24, 0x08	; 8
    2f0e:	c0 f5       	brcc	.+112    	; 0x2f80 <LCD_enumSendCustomChar+0x96>
		{
			u8 Local_u8Counter=0;
    2f10:	19 82       	std	Y+1, r1	; 0x01

			Local_enumErrorState=LCD_inlenumSendCommand(0x40+Copy_u8Pos*8);
    2f12:	8b 81       	ldd	r24, Y+3	; 0x03
    2f14:	88 2f       	mov	r24, r24
    2f16:	90 e0       	ldi	r25, 0x00	; 0
    2f18:	08 96       	adiw	r24, 0x08	; 8
    2f1a:	88 0f       	add	r24, r24
    2f1c:	99 1f       	adc	r25, r25
    2f1e:	88 0f       	add	r24, r24
    2f20:	99 1f       	adc	r25, r25
    2f22:	88 0f       	add	r24, r24
    2f24:	99 1f       	adc	r25, r25
    2f26:	0e 94 8a 12 	call	0x2514	; 0x2514 <LCD_inlenumSendCommand>
    2f2a:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2f2c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f2e:	81 30       	cpi	r24, 0x01	; 1
    2f30:	19 f0       	breq	.+6      	; 0x2f38 <LCD_enumSendCustomChar+0x4e>
    2f32:	8a 81       	ldd	r24, Y+2	; 0x02
    2f34:	8e 83       	std	Y+6, r24	; 0x06
    2f36:	2b c0       	rjmp	.+86     	; 0x2f8e <LCD_enumSendCustomChar+0xa4>

			for (Local_u8Counter=0;Local_u8Counter< 8;Local_u8Counter++)
    2f38:	19 82       	std	Y+1, r1	; 0x01
    2f3a:	15 c0       	rjmp	.+42     	; 0x2f66 <LCD_enumSendCustomChar+0x7c>
			{
				Local_enumErrorState=LCD_inlenumSendChar(Copy_pu8Char[Local_u8Counter]);
    2f3c:	89 81       	ldd	r24, Y+1	; 0x01
    2f3e:	28 2f       	mov	r18, r24
    2f40:	30 e0       	ldi	r19, 0x00	; 0
    2f42:	8c 81       	ldd	r24, Y+4	; 0x04
    2f44:	9d 81       	ldd	r25, Y+5	; 0x05
    2f46:	fc 01       	movw	r30, r24
    2f48:	e2 0f       	add	r30, r18
    2f4a:	f3 1f       	adc	r31, r19
    2f4c:	80 81       	ld	r24, Z
    2f4e:	0e 94 79 14 	call	0x28f2	; 0x28f2 <LCD_inlenumSendChar>
    2f52:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2f54:	8a 81       	ldd	r24, Y+2	; 0x02
    2f56:	81 30       	cpi	r24, 0x01	; 1
    2f58:	19 f0       	breq	.+6      	; 0x2f60 <LCD_enumSendCustomChar+0x76>
    2f5a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f5c:	8e 83       	std	Y+6, r24	; 0x06
    2f5e:	17 c0       	rjmp	.+46     	; 0x2f8e <LCD_enumSendCustomChar+0xa4>
			u8 Local_u8Counter=0;

			Local_enumErrorState=LCD_inlenumSendCommand(0x40+Copy_u8Pos*8);
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;

			for (Local_u8Counter=0;Local_u8Counter< 8;Local_u8Counter++)
    2f60:	89 81       	ldd	r24, Y+1	; 0x01
    2f62:	8f 5f       	subi	r24, 0xFF	; 255
    2f64:	89 83       	std	Y+1, r24	; 0x01
    2f66:	89 81       	ldd	r24, Y+1	; 0x01
    2f68:	88 30       	cpi	r24, 0x08	; 8
    2f6a:	40 f3       	brcs	.-48     	; 0x2f3c <LCD_enumSendCustomChar+0x52>
			{
				Local_enumErrorState=LCD_inlenumSendChar(Copy_pu8Char[Local_u8Counter]);
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
			}

			Local_enumErrorState=LCD_inlenumSendCommand(0x80);
    2f6c:	80 e8       	ldi	r24, 0x80	; 128
    2f6e:	0e 94 8a 12 	call	0x2514	; 0x2514 <LCD_inlenumSendCommand>
    2f72:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2f74:	8a 81       	ldd	r24, Y+2	; 0x02
    2f76:	81 30       	cpi	r24, 0x01	; 1
    2f78:	41 f0       	breq	.+16     	; 0x2f8a <LCD_enumSendCustomChar+0xa0>
    2f7a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f7c:	8e 83       	std	Y+6, r24	; 0x06
    2f7e:	07 c0       	rjmp	.+14     	; 0x2f8e <LCD_enumSendCustomChar+0xa4>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    2f80:	83 e0       	ldi	r24, 0x03	; 3
    2f82:	8a 83       	std	Y+2, r24	; 0x02
    2f84:	02 c0       	rjmp	.+4      	; 0x2f8a <LCD_enumSendCustomChar+0xa0>
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    2f86:	82 e0       	ldi	r24, 0x02	; 2
    2f88:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enumErrorState;
    2f8a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f8c:	8e 83       	std	Y+6, r24	; 0x06
    2f8e:	8e 81       	ldd	r24, Y+6	; 0x06
}
    2f90:	26 96       	adiw	r28, 0x06	; 6
    2f92:	0f b6       	in	r0, 0x3f	; 63
    2f94:	f8 94       	cli
    2f96:	de bf       	out	0x3e, r29	; 62
    2f98:	0f be       	out	0x3f, r0	; 63
    2f9a:	cd bf       	out	0x3d, r28	; 61
    2f9c:	cf 91       	pop	r28
    2f9e:	df 91       	pop	r29
    2fa0:	08 95       	ret

00002fa2 <LCD_enumClear>:

ES_T LCD_enumClear(void)
{
    2fa2:	df 93       	push	r29
    2fa4:	cf 93       	push	r28
    2fa6:	0f 92       	push	r0
    2fa8:	cd b7       	in	r28, 0x3d	; 61
    2faa:	de b7       	in	r29, 0x3e	; 62
	ES_T Local_enumErrorState=ES_NOK;
    2fac:	19 82       	std	Y+1, r1	; 0x01

	Local_enumErrorState=LCD_inlenumSendCommand(0x01);
    2fae:	81 e0       	ldi	r24, 0x01	; 1
    2fb0:	0e 94 8a 12 	call	0x2514	; 0x2514 <LCD_inlenumSendCommand>
    2fb4:	89 83       	std	Y+1, r24	; 0x01

	return Local_enumErrorState;
    2fb6:	89 81       	ldd	r24, Y+1	; 0x01
}
    2fb8:	0f 90       	pop	r0
    2fba:	cf 91       	pop	r28
    2fbc:	df 91       	pop	r29
    2fbe:	08 95       	ret

00002fc0 <LED_enumInit>:
#include "../include/MCAL/DIO/DIO_int.h"
#include "../include/HAL/LED/LED_priv.h"
#include "../include/HAL/LED/LED_config.h"

ES_T LED_enumInit(LED_T* Copy_pstrLeds)
{
    2fc0:	df 93       	push	r29
    2fc2:	cf 93       	push	r28
    2fc4:	00 d0       	rcall	.+0      	; 0x2fc6 <LED_enumInit+0x6>
    2fc6:	00 d0       	rcall	.+0      	; 0x2fc8 <LED_enumInit+0x8>
    2fc8:	cd b7       	in	r28, 0x3d	; 61
    2fca:	de b7       	in	r29, 0x3e	; 62
    2fcc:	9c 83       	std	Y+4, r25	; 0x04
    2fce:	8b 83       	std	Y+3, r24	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    2fd0:	1a 82       	std	Y+2, r1	; 0x02

	if (Copy_pstrLeds!=NULL)
    2fd2:	8b 81       	ldd	r24, Y+3	; 0x03
    2fd4:	9c 81       	ldd	r25, Y+4	; 0x04
    2fd6:	00 97       	sbiw	r24, 0x00	; 0
    2fd8:	09 f4       	brne	.+2      	; 0x2fdc <LED_enumInit+0x1c>
    2fda:	23 c1       	rjmp	.+582    	; 0x3222 <LED_enumInit+0x262>
	{
		u8 Local_u8Counter=0;
    2fdc:	19 82       	std	Y+1, r1	; 0x01
		for (Local_u8Counter=0;Local_u8Counter<LED_NUM;Local_u8Counter++)
    2fde:	19 82       	std	Y+1, r1	; 0x01
    2fe0:	1b c1       	rjmp	.+566    	; 0x3218 <LED_enumInit+0x258>
		{
			Local_enumErrorState=DIO_enumSetPinDirection (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,OUTPUT);
    2fe2:	89 81       	ldd	r24, Y+1	; 0x01
    2fe4:	88 2f       	mov	r24, r24
    2fe6:	90 e0       	ldi	r25, 0x00	; 0
    2fe8:	9c 01       	movw	r18, r24
    2fea:	22 0f       	add	r18, r18
    2fec:	33 1f       	adc	r19, r19
    2fee:	22 0f       	add	r18, r18
    2ff0:	33 1f       	adc	r19, r19
    2ff2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ff4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ff6:	fc 01       	movw	r30, r24
    2ff8:	e2 0f       	add	r30, r18
    2ffa:	f3 1f       	adc	r31, r19
    2ffc:	40 81       	ld	r20, Z
    2ffe:	89 81       	ldd	r24, Y+1	; 0x01
    3000:	88 2f       	mov	r24, r24
    3002:	90 e0       	ldi	r25, 0x00	; 0
    3004:	9c 01       	movw	r18, r24
    3006:	22 0f       	add	r18, r18
    3008:	33 1f       	adc	r19, r19
    300a:	22 0f       	add	r18, r18
    300c:	33 1f       	adc	r19, r19
    300e:	8b 81       	ldd	r24, Y+3	; 0x03
    3010:	9c 81       	ldd	r25, Y+4	; 0x04
    3012:	fc 01       	movw	r30, r24
    3014:	e2 0f       	add	r30, r18
    3016:	f3 1f       	adc	r31, r19
    3018:	91 81       	ldd	r25, Z+1	; 0x01
    301a:	84 2f       	mov	r24, r20
    301c:	69 2f       	mov	r22, r25
    301e:	41 e0       	ldi	r20, 0x01	; 1
    3020:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    3024:	8a 83       	std	Y+2, r24	; 0x02

			if(Copy_pstrLeds[Local_u8Counter].LED_u8Connection==LED_SINK)
    3026:	89 81       	ldd	r24, Y+1	; 0x01
    3028:	88 2f       	mov	r24, r24
    302a:	90 e0       	ldi	r25, 0x00	; 0
    302c:	9c 01       	movw	r18, r24
    302e:	22 0f       	add	r18, r18
    3030:	33 1f       	adc	r19, r19
    3032:	22 0f       	add	r18, r18
    3034:	33 1f       	adc	r19, r19
    3036:	8b 81       	ldd	r24, Y+3	; 0x03
    3038:	9c 81       	ldd	r25, Y+4	; 0x04
    303a:	fc 01       	movw	r30, r24
    303c:	e2 0f       	add	r30, r18
    303e:	f3 1f       	adc	r31, r19
    3040:	82 81       	ldd	r24, Z+2	; 0x02
    3042:	88 23       	and	r24, r24
    3044:	09 f0       	breq	.+2      	; 0x3048 <LED_enumInit+0x88>
    3046:	69 c0       	rjmp	.+210    	; 0x311a <LED_enumInit+0x15a>
			{
				if (Copy_pstrLeds[Local_u8Counter].LED_u8InitState==LED_ON)
    3048:	89 81       	ldd	r24, Y+1	; 0x01
    304a:	88 2f       	mov	r24, r24
    304c:	90 e0       	ldi	r25, 0x00	; 0
    304e:	9c 01       	movw	r18, r24
    3050:	22 0f       	add	r18, r18
    3052:	33 1f       	adc	r19, r19
    3054:	22 0f       	add	r18, r18
    3056:	33 1f       	adc	r19, r19
    3058:	8b 81       	ldd	r24, Y+3	; 0x03
    305a:	9c 81       	ldd	r25, Y+4	; 0x04
    305c:	fc 01       	movw	r30, r24
    305e:	e2 0f       	add	r30, r18
    3060:	f3 1f       	adc	r31, r19
    3062:	83 81       	ldd	r24, Z+3	; 0x03
    3064:	88 23       	and	r24, r24
    3066:	19 f5       	brne	.+70     	; 0x30ae <LED_enumInit+0xee>
				{
					Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,LOW);
    3068:	89 81       	ldd	r24, Y+1	; 0x01
    306a:	88 2f       	mov	r24, r24
    306c:	90 e0       	ldi	r25, 0x00	; 0
    306e:	9c 01       	movw	r18, r24
    3070:	22 0f       	add	r18, r18
    3072:	33 1f       	adc	r19, r19
    3074:	22 0f       	add	r18, r18
    3076:	33 1f       	adc	r19, r19
    3078:	8b 81       	ldd	r24, Y+3	; 0x03
    307a:	9c 81       	ldd	r25, Y+4	; 0x04
    307c:	fc 01       	movw	r30, r24
    307e:	e2 0f       	add	r30, r18
    3080:	f3 1f       	adc	r31, r19
    3082:	40 81       	ld	r20, Z
    3084:	89 81       	ldd	r24, Y+1	; 0x01
    3086:	88 2f       	mov	r24, r24
    3088:	90 e0       	ldi	r25, 0x00	; 0
    308a:	9c 01       	movw	r18, r24
    308c:	22 0f       	add	r18, r18
    308e:	33 1f       	adc	r19, r19
    3090:	22 0f       	add	r18, r18
    3092:	33 1f       	adc	r19, r19
    3094:	8b 81       	ldd	r24, Y+3	; 0x03
    3096:	9c 81       	ldd	r25, Y+4	; 0x04
    3098:	fc 01       	movw	r30, r24
    309a:	e2 0f       	add	r30, r18
    309c:	f3 1f       	adc	r31, r19
    309e:	91 81       	ldd	r25, Z+1	; 0x01
    30a0:	84 2f       	mov	r24, r20
    30a2:	69 2f       	mov	r22, r25
    30a4:	40 e0       	ldi	r20, 0x00	; 0
    30a6:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    30aa:	8a 83       	std	Y+2, r24	; 0x02
    30ac:	b2 c0       	rjmp	.+356    	; 0x3212 <LED_enumInit+0x252>
				}
				else if (Copy_pstrLeds[Local_u8Counter].LED_u8InitState==LED_OFF)
    30ae:	89 81       	ldd	r24, Y+1	; 0x01
    30b0:	88 2f       	mov	r24, r24
    30b2:	90 e0       	ldi	r25, 0x00	; 0
    30b4:	9c 01       	movw	r18, r24
    30b6:	22 0f       	add	r18, r18
    30b8:	33 1f       	adc	r19, r19
    30ba:	22 0f       	add	r18, r18
    30bc:	33 1f       	adc	r19, r19
    30be:	8b 81       	ldd	r24, Y+3	; 0x03
    30c0:	9c 81       	ldd	r25, Y+4	; 0x04
    30c2:	fc 01       	movw	r30, r24
    30c4:	e2 0f       	add	r30, r18
    30c6:	f3 1f       	adc	r31, r19
    30c8:	83 81       	ldd	r24, Z+3	; 0x03
    30ca:	81 30       	cpi	r24, 0x01	; 1
    30cc:	19 f5       	brne	.+70     	; 0x3114 <LED_enumInit+0x154>
				{
					Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,HIGH);
    30ce:	89 81       	ldd	r24, Y+1	; 0x01
    30d0:	88 2f       	mov	r24, r24
    30d2:	90 e0       	ldi	r25, 0x00	; 0
    30d4:	9c 01       	movw	r18, r24
    30d6:	22 0f       	add	r18, r18
    30d8:	33 1f       	adc	r19, r19
    30da:	22 0f       	add	r18, r18
    30dc:	33 1f       	adc	r19, r19
    30de:	8b 81       	ldd	r24, Y+3	; 0x03
    30e0:	9c 81       	ldd	r25, Y+4	; 0x04
    30e2:	fc 01       	movw	r30, r24
    30e4:	e2 0f       	add	r30, r18
    30e6:	f3 1f       	adc	r31, r19
    30e8:	40 81       	ld	r20, Z
    30ea:	89 81       	ldd	r24, Y+1	; 0x01
    30ec:	88 2f       	mov	r24, r24
    30ee:	90 e0       	ldi	r25, 0x00	; 0
    30f0:	9c 01       	movw	r18, r24
    30f2:	22 0f       	add	r18, r18
    30f4:	33 1f       	adc	r19, r19
    30f6:	22 0f       	add	r18, r18
    30f8:	33 1f       	adc	r19, r19
    30fa:	8b 81       	ldd	r24, Y+3	; 0x03
    30fc:	9c 81       	ldd	r25, Y+4	; 0x04
    30fe:	fc 01       	movw	r30, r24
    3100:	e2 0f       	add	r30, r18
    3102:	f3 1f       	adc	r31, r19
    3104:	91 81       	ldd	r25, Z+1	; 0x01
    3106:	84 2f       	mov	r24, r20
    3108:	69 2f       	mov	r22, r25
    310a:	41 e0       	ldi	r20, 0x01	; 1
    310c:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3110:	8a 83       	std	Y+2, r24	; 0x02
    3112:	7f c0       	rjmp	.+254    	; 0x3212 <LED_enumInit+0x252>
				}
				else
				{
					Local_u8Counter=ES_OUT_OF_RANGE;
    3114:	83 e0       	ldi	r24, 0x03	; 3
    3116:	89 83       	std	Y+1, r24	; 0x01
    3118:	7c c0       	rjmp	.+248    	; 0x3212 <LED_enumInit+0x252>
				}
			}
			else if(Copy_pstrLeds[Local_u8Counter].LED_u8Connection==LED_SOURCE)
    311a:	89 81       	ldd	r24, Y+1	; 0x01
    311c:	88 2f       	mov	r24, r24
    311e:	90 e0       	ldi	r25, 0x00	; 0
    3120:	9c 01       	movw	r18, r24
    3122:	22 0f       	add	r18, r18
    3124:	33 1f       	adc	r19, r19
    3126:	22 0f       	add	r18, r18
    3128:	33 1f       	adc	r19, r19
    312a:	8b 81       	ldd	r24, Y+3	; 0x03
    312c:	9c 81       	ldd	r25, Y+4	; 0x04
    312e:	fc 01       	movw	r30, r24
    3130:	e2 0f       	add	r30, r18
    3132:	f3 1f       	adc	r31, r19
    3134:	82 81       	ldd	r24, Z+2	; 0x02
    3136:	81 30       	cpi	r24, 0x01	; 1
    3138:	09 f0       	breq	.+2      	; 0x313c <LED_enumInit+0x17c>
    313a:	69 c0       	rjmp	.+210    	; 0x320e <LED_enumInit+0x24e>
			{
				if (Copy_pstrLeds[Local_u8Counter].LED_u8InitState==LED_ON)
    313c:	89 81       	ldd	r24, Y+1	; 0x01
    313e:	88 2f       	mov	r24, r24
    3140:	90 e0       	ldi	r25, 0x00	; 0
    3142:	9c 01       	movw	r18, r24
    3144:	22 0f       	add	r18, r18
    3146:	33 1f       	adc	r19, r19
    3148:	22 0f       	add	r18, r18
    314a:	33 1f       	adc	r19, r19
    314c:	8b 81       	ldd	r24, Y+3	; 0x03
    314e:	9c 81       	ldd	r25, Y+4	; 0x04
    3150:	fc 01       	movw	r30, r24
    3152:	e2 0f       	add	r30, r18
    3154:	f3 1f       	adc	r31, r19
    3156:	83 81       	ldd	r24, Z+3	; 0x03
    3158:	88 23       	and	r24, r24
    315a:	19 f5       	brne	.+70     	; 0x31a2 <LED_enumInit+0x1e2>
				{
					Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,HIGH);
    315c:	89 81       	ldd	r24, Y+1	; 0x01
    315e:	88 2f       	mov	r24, r24
    3160:	90 e0       	ldi	r25, 0x00	; 0
    3162:	9c 01       	movw	r18, r24
    3164:	22 0f       	add	r18, r18
    3166:	33 1f       	adc	r19, r19
    3168:	22 0f       	add	r18, r18
    316a:	33 1f       	adc	r19, r19
    316c:	8b 81       	ldd	r24, Y+3	; 0x03
    316e:	9c 81       	ldd	r25, Y+4	; 0x04
    3170:	fc 01       	movw	r30, r24
    3172:	e2 0f       	add	r30, r18
    3174:	f3 1f       	adc	r31, r19
    3176:	40 81       	ld	r20, Z
    3178:	89 81       	ldd	r24, Y+1	; 0x01
    317a:	88 2f       	mov	r24, r24
    317c:	90 e0       	ldi	r25, 0x00	; 0
    317e:	9c 01       	movw	r18, r24
    3180:	22 0f       	add	r18, r18
    3182:	33 1f       	adc	r19, r19
    3184:	22 0f       	add	r18, r18
    3186:	33 1f       	adc	r19, r19
    3188:	8b 81       	ldd	r24, Y+3	; 0x03
    318a:	9c 81       	ldd	r25, Y+4	; 0x04
    318c:	fc 01       	movw	r30, r24
    318e:	e2 0f       	add	r30, r18
    3190:	f3 1f       	adc	r31, r19
    3192:	91 81       	ldd	r25, Z+1	; 0x01
    3194:	84 2f       	mov	r24, r20
    3196:	69 2f       	mov	r22, r25
    3198:	41 e0       	ldi	r20, 0x01	; 1
    319a:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    319e:	8a 83       	std	Y+2, r24	; 0x02
    31a0:	38 c0       	rjmp	.+112    	; 0x3212 <LED_enumInit+0x252>
				}
				else if (Copy_pstrLeds[Local_u8Counter].LED_u8InitState==LED_OFF)
    31a2:	89 81       	ldd	r24, Y+1	; 0x01
    31a4:	88 2f       	mov	r24, r24
    31a6:	90 e0       	ldi	r25, 0x00	; 0
    31a8:	9c 01       	movw	r18, r24
    31aa:	22 0f       	add	r18, r18
    31ac:	33 1f       	adc	r19, r19
    31ae:	22 0f       	add	r18, r18
    31b0:	33 1f       	adc	r19, r19
    31b2:	8b 81       	ldd	r24, Y+3	; 0x03
    31b4:	9c 81       	ldd	r25, Y+4	; 0x04
    31b6:	fc 01       	movw	r30, r24
    31b8:	e2 0f       	add	r30, r18
    31ba:	f3 1f       	adc	r31, r19
    31bc:	83 81       	ldd	r24, Z+3	; 0x03
    31be:	81 30       	cpi	r24, 0x01	; 1
    31c0:	19 f5       	brne	.+70     	; 0x3208 <LED_enumInit+0x248>
				{
					Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,LOW);
    31c2:	89 81       	ldd	r24, Y+1	; 0x01
    31c4:	88 2f       	mov	r24, r24
    31c6:	90 e0       	ldi	r25, 0x00	; 0
    31c8:	9c 01       	movw	r18, r24
    31ca:	22 0f       	add	r18, r18
    31cc:	33 1f       	adc	r19, r19
    31ce:	22 0f       	add	r18, r18
    31d0:	33 1f       	adc	r19, r19
    31d2:	8b 81       	ldd	r24, Y+3	; 0x03
    31d4:	9c 81       	ldd	r25, Y+4	; 0x04
    31d6:	fc 01       	movw	r30, r24
    31d8:	e2 0f       	add	r30, r18
    31da:	f3 1f       	adc	r31, r19
    31dc:	40 81       	ld	r20, Z
    31de:	89 81       	ldd	r24, Y+1	; 0x01
    31e0:	88 2f       	mov	r24, r24
    31e2:	90 e0       	ldi	r25, 0x00	; 0
    31e4:	9c 01       	movw	r18, r24
    31e6:	22 0f       	add	r18, r18
    31e8:	33 1f       	adc	r19, r19
    31ea:	22 0f       	add	r18, r18
    31ec:	33 1f       	adc	r19, r19
    31ee:	8b 81       	ldd	r24, Y+3	; 0x03
    31f0:	9c 81       	ldd	r25, Y+4	; 0x04
    31f2:	fc 01       	movw	r30, r24
    31f4:	e2 0f       	add	r30, r18
    31f6:	f3 1f       	adc	r31, r19
    31f8:	91 81       	ldd	r25, Z+1	; 0x01
    31fa:	84 2f       	mov	r24, r20
    31fc:	69 2f       	mov	r22, r25
    31fe:	40 e0       	ldi	r20, 0x00	; 0
    3200:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3204:	8a 83       	std	Y+2, r24	; 0x02
    3206:	05 c0       	rjmp	.+10     	; 0x3212 <LED_enumInit+0x252>
				}
				else
				{
					Local_enumErrorState=ES_OUT_OF_RANGE;
    3208:	83 e0       	ldi	r24, 0x03	; 3
    320a:	8a 83       	std	Y+2, r24	; 0x02
    320c:	02 c0       	rjmp	.+4      	; 0x3212 <LED_enumInit+0x252>
				}
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    320e:	83 e0       	ldi	r24, 0x03	; 3
    3210:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;

	if (Copy_pstrLeds!=NULL)
	{
		u8 Local_u8Counter=0;
		for (Local_u8Counter=0;Local_u8Counter<LED_NUM;Local_u8Counter++)
    3212:	89 81       	ldd	r24, Y+1	; 0x01
    3214:	8f 5f       	subi	r24, 0xFF	; 255
    3216:	89 83       	std	Y+1, r24	; 0x01
    3218:	89 81       	ldd	r24, Y+1	; 0x01
    321a:	83 30       	cpi	r24, 0x03	; 3
    321c:	08 f4       	brcc	.+2      	; 0x3220 <LED_enumInit+0x260>
    321e:	e1 ce       	rjmp	.-574    	; 0x2fe2 <LED_enumInit+0x22>
    3220:	02 c0       	rjmp	.+4      	; 0x3226 <LED_enumInit+0x266>
			}
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    3222:	82 e0       	ldi	r24, 0x02	; 2
    3224:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enumErrorState;
    3226:	8a 81       	ldd	r24, Y+2	; 0x02
}
    3228:	0f 90       	pop	r0
    322a:	0f 90       	pop	r0
    322c:	0f 90       	pop	r0
    322e:	0f 90       	pop	r0
    3230:	cf 91       	pop	r28
    3232:	df 91       	pop	r29
    3234:	08 95       	ret

00003236 <LED_enumLedOn>:
ES_T LED_enumLedOn(LED_T* Copy_pstrLed)
{
    3236:	df 93       	push	r29
    3238:	cf 93       	push	r28
    323a:	00 d0       	rcall	.+0      	; 0x323c <LED_enumLedOn+0x6>
    323c:	0f 92       	push	r0
    323e:	cd b7       	in	r28, 0x3d	; 61
    3240:	de b7       	in	r29, 0x3e	; 62
    3242:	9b 83       	std	Y+3, r25	; 0x03
    3244:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    3246:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pstrLed!=NULL)
    3248:	8a 81       	ldd	r24, Y+2	; 0x02
    324a:	9b 81       	ldd	r25, Y+3	; 0x03
    324c:	00 97       	sbiw	r24, 0x00	; 0
    324e:	29 f1       	breq	.+74     	; 0x329a <LED_enumLedOn+0x64>
	{
		if(Copy_pstrLed->LED_u8Connection==LED_SINK)
    3250:	ea 81       	ldd	r30, Y+2	; 0x02
    3252:	fb 81       	ldd	r31, Y+3	; 0x03
    3254:	82 81       	ldd	r24, Z+2	; 0x02
    3256:	88 23       	and	r24, r24
    3258:	61 f4       	brne	.+24     	; 0x3272 <LED_enumLedOn+0x3c>
		{
			Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLed->LED_u8PortID,Copy_pstrLed->LED_u8PinID,LOW);
    325a:	ea 81       	ldd	r30, Y+2	; 0x02
    325c:	fb 81       	ldd	r31, Y+3	; 0x03
    325e:	80 81       	ld	r24, Z
    3260:	ea 81       	ldd	r30, Y+2	; 0x02
    3262:	fb 81       	ldd	r31, Y+3	; 0x03
    3264:	91 81       	ldd	r25, Z+1	; 0x01
    3266:	69 2f       	mov	r22, r25
    3268:	40 e0       	ldi	r20, 0x00	; 0
    326a:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    326e:	89 83       	std	Y+1, r24	; 0x01
    3270:	16 c0       	rjmp	.+44     	; 0x329e <LED_enumLedOn+0x68>
		}
		else if(Copy_pstrLed->LED_u8Connection==LED_SOURCE)
    3272:	ea 81       	ldd	r30, Y+2	; 0x02
    3274:	fb 81       	ldd	r31, Y+3	; 0x03
    3276:	82 81       	ldd	r24, Z+2	; 0x02
    3278:	81 30       	cpi	r24, 0x01	; 1
    327a:	61 f4       	brne	.+24     	; 0x3294 <LED_enumLedOn+0x5e>
		{
			Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLed->LED_u8PortID,Copy_pstrLed->LED_u8PinID,HIGH);
    327c:	ea 81       	ldd	r30, Y+2	; 0x02
    327e:	fb 81       	ldd	r31, Y+3	; 0x03
    3280:	80 81       	ld	r24, Z
    3282:	ea 81       	ldd	r30, Y+2	; 0x02
    3284:	fb 81       	ldd	r31, Y+3	; 0x03
    3286:	91 81       	ldd	r25, Z+1	; 0x01
    3288:	69 2f       	mov	r22, r25
    328a:	41 e0       	ldi	r20, 0x01	; 1
    328c:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3290:	89 83       	std	Y+1, r24	; 0x01
    3292:	05 c0       	rjmp	.+10     	; 0x329e <LED_enumLedOn+0x68>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    3294:	83 e0       	ldi	r24, 0x03	; 3
    3296:	89 83       	std	Y+1, r24	; 0x01
    3298:	02 c0       	rjmp	.+4      	; 0x329e <LED_enumLedOn+0x68>
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    329a:	82 e0       	ldi	r24, 0x02	; 2
    329c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    329e:	89 81       	ldd	r24, Y+1	; 0x01
}
    32a0:	0f 90       	pop	r0
    32a2:	0f 90       	pop	r0
    32a4:	0f 90       	pop	r0
    32a6:	cf 91       	pop	r28
    32a8:	df 91       	pop	r29
    32aa:	08 95       	ret

000032ac <LED_enumLedOff>:
ES_T LED_enumLedOff(LED_T* Copy_pstrLed)
{
    32ac:	df 93       	push	r29
    32ae:	cf 93       	push	r28
    32b0:	00 d0       	rcall	.+0      	; 0x32b2 <LED_enumLedOff+0x6>
    32b2:	0f 92       	push	r0
    32b4:	cd b7       	in	r28, 0x3d	; 61
    32b6:	de b7       	in	r29, 0x3e	; 62
    32b8:	9b 83       	std	Y+3, r25	; 0x03
    32ba:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    32bc:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pstrLed!=NULL)
    32be:	8a 81       	ldd	r24, Y+2	; 0x02
    32c0:	9b 81       	ldd	r25, Y+3	; 0x03
    32c2:	00 97       	sbiw	r24, 0x00	; 0
    32c4:	29 f1       	breq	.+74     	; 0x3310 <LED_enumLedOff+0x64>
	{
		if(Copy_pstrLed->LED_u8Connection==LED_SINK)
    32c6:	ea 81       	ldd	r30, Y+2	; 0x02
    32c8:	fb 81       	ldd	r31, Y+3	; 0x03
    32ca:	82 81       	ldd	r24, Z+2	; 0x02
    32cc:	88 23       	and	r24, r24
    32ce:	61 f4       	brne	.+24     	; 0x32e8 <LED_enumLedOff+0x3c>
		{
			Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLed->LED_u8PortID,Copy_pstrLed->LED_u8PinID,HIGH);
    32d0:	ea 81       	ldd	r30, Y+2	; 0x02
    32d2:	fb 81       	ldd	r31, Y+3	; 0x03
    32d4:	80 81       	ld	r24, Z
    32d6:	ea 81       	ldd	r30, Y+2	; 0x02
    32d8:	fb 81       	ldd	r31, Y+3	; 0x03
    32da:	91 81       	ldd	r25, Z+1	; 0x01
    32dc:	69 2f       	mov	r22, r25
    32de:	41 e0       	ldi	r20, 0x01	; 1
    32e0:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    32e4:	89 83       	std	Y+1, r24	; 0x01
    32e6:	16 c0       	rjmp	.+44     	; 0x3314 <LED_enumLedOff+0x68>
		}
		else if(Copy_pstrLed->LED_u8Connection==LED_SOURCE)
    32e8:	ea 81       	ldd	r30, Y+2	; 0x02
    32ea:	fb 81       	ldd	r31, Y+3	; 0x03
    32ec:	82 81       	ldd	r24, Z+2	; 0x02
    32ee:	81 30       	cpi	r24, 0x01	; 1
    32f0:	61 f4       	brne	.+24     	; 0x330a <LED_enumLedOff+0x5e>
		{
			Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLed->LED_u8PortID,Copy_pstrLed->LED_u8PinID,LOW);
    32f2:	ea 81       	ldd	r30, Y+2	; 0x02
    32f4:	fb 81       	ldd	r31, Y+3	; 0x03
    32f6:	80 81       	ld	r24, Z
    32f8:	ea 81       	ldd	r30, Y+2	; 0x02
    32fa:	fb 81       	ldd	r31, Y+3	; 0x03
    32fc:	91 81       	ldd	r25, Z+1	; 0x01
    32fe:	69 2f       	mov	r22, r25
    3300:	40 e0       	ldi	r20, 0x00	; 0
    3302:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3306:	89 83       	std	Y+1, r24	; 0x01
    3308:	05 c0       	rjmp	.+10     	; 0x3314 <LED_enumLedOff+0x68>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    330a:	83 e0       	ldi	r24, 0x03	; 3
    330c:	89 83       	std	Y+1, r24	; 0x01
    330e:	02 c0       	rjmp	.+4      	; 0x3314 <LED_enumLedOff+0x68>
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    3310:	82 e0       	ldi	r24, 0x02	; 2
    3312:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    3314:	89 81       	ldd	r24, Y+1	; 0x01
}
    3316:	0f 90       	pop	r0
    3318:	0f 90       	pop	r0
    331a:	0f 90       	pop	r0
    331c:	cf 91       	pop	r28
    331e:	df 91       	pop	r29
    3320:	08 95       	ret

00003322 <SEV_SEG_enumInit>:
#include "../include/HAL/Seven_Segment/SEV_SEG_priv.h"

extern SEV_SEG_T SEV_SEG_AstrSegments [SEV_SEG_NUM];

ES_T SEV_SEG_enumInit(SEV_SEG_T* Copy_pstrSegments)
{
    3322:	df 93       	push	r29
    3324:	cf 93       	push	r28
    3326:	00 d0       	rcall	.+0      	; 0x3328 <SEV_SEG_enumInit+0x6>
    3328:	00 d0       	rcall	.+0      	; 0x332a <SEV_SEG_enumInit+0x8>
    332a:	0f 92       	push	r0
    332c:	cd b7       	in	r28, 0x3d	; 61
    332e:	de b7       	in	r29, 0x3e	; 62
    3330:	9c 83       	std	Y+4, r25	; 0x04
    3332:	8b 83       	std	Y+3, r24	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    3334:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Counter=0;
    3336:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_pstrSegments!=NULL)
    3338:	8b 81       	ldd	r24, Y+3	; 0x03
    333a:	9c 81       	ldd	r25, Y+4	; 0x04
    333c:	00 97       	sbiw	r24, 0x00	; 0
    333e:	09 f4       	brne	.+2      	; 0x3342 <SEV_SEG_enumInit+0x20>
    3340:	e1 c7       	rjmp	.+4034   	; 0x4304 <SEV_SEG_enumInit+0xfe2>
	{
		for (Local_u8Counter=0;Local_u8Counter<SEV_SEG_NUM;Local_u8Counter++)
    3342:	19 82       	std	Y+1, r1	; 0x01
    3344:	0c 94 7d 21 	jmp	0x42fa	; 0x42fa <SEV_SEG_enumInit+0xfd8>
		{
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APin,OUTPUT);
    3348:	89 81       	ldd	r24, Y+1	; 0x01
    334a:	48 2f       	mov	r20, r24
    334c:	50 e0       	ldi	r21, 0x00	; 0
    334e:	ca 01       	movw	r24, r20
    3350:	88 0f       	add	r24, r24
    3352:	99 1f       	adc	r25, r25
    3354:	9c 01       	movw	r18, r24
    3356:	22 0f       	add	r18, r18
    3358:	33 1f       	adc	r19, r19
    335a:	22 0f       	add	r18, r18
    335c:	33 1f       	adc	r19, r19
    335e:	22 0f       	add	r18, r18
    3360:	33 1f       	adc	r19, r19
    3362:	82 0f       	add	r24, r18
    3364:	93 1f       	adc	r25, r19
    3366:	9c 01       	movw	r18, r24
    3368:	24 0f       	add	r18, r20
    336a:	35 1f       	adc	r19, r21
    336c:	8b 81       	ldd	r24, Y+3	; 0x03
    336e:	9c 81       	ldd	r25, Y+4	; 0x04
    3370:	fc 01       	movw	r30, r24
    3372:	e2 0f       	add	r30, r18
    3374:	f3 1f       	adc	r31, r19
    3376:	60 81       	ld	r22, Z
    3378:	89 81       	ldd	r24, Y+1	; 0x01
    337a:	48 2f       	mov	r20, r24
    337c:	50 e0       	ldi	r21, 0x00	; 0
    337e:	ca 01       	movw	r24, r20
    3380:	88 0f       	add	r24, r24
    3382:	99 1f       	adc	r25, r25
    3384:	9c 01       	movw	r18, r24
    3386:	22 0f       	add	r18, r18
    3388:	33 1f       	adc	r19, r19
    338a:	22 0f       	add	r18, r18
    338c:	33 1f       	adc	r19, r19
    338e:	22 0f       	add	r18, r18
    3390:	33 1f       	adc	r19, r19
    3392:	82 0f       	add	r24, r18
    3394:	93 1f       	adc	r25, r19
    3396:	9c 01       	movw	r18, r24
    3398:	24 0f       	add	r18, r20
    339a:	35 1f       	adc	r19, r21
    339c:	8b 81       	ldd	r24, Y+3	; 0x03
    339e:	9c 81       	ldd	r25, Y+4	; 0x04
    33a0:	fc 01       	movw	r30, r24
    33a2:	e2 0f       	add	r30, r18
    33a4:	f3 1f       	adc	r31, r19
    33a6:	91 81       	ldd	r25, Z+1	; 0x01
    33a8:	86 2f       	mov	r24, r22
    33aa:	69 2f       	mov	r22, r25
    33ac:	41 e0       	ldi	r20, 0x01	; 1
    33ae:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    33b2:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    33b4:	8a 81       	ldd	r24, Y+2	; 0x02
    33b6:	81 30       	cpi	r24, 0x01	; 1
    33b8:	21 f0       	breq	.+8      	; 0x33c2 <SEV_SEG_enumInit+0xa0>
    33ba:	8a 81       	ldd	r24, Y+2	; 0x02
    33bc:	8d 83       	std	Y+5, r24	; 0x05
    33be:	0c 94 86 21 	jmp	0x430c	; 0x430c <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPin,OUTPUT);
    33c2:	89 81       	ldd	r24, Y+1	; 0x01
    33c4:	48 2f       	mov	r20, r24
    33c6:	50 e0       	ldi	r21, 0x00	; 0
    33c8:	ca 01       	movw	r24, r20
    33ca:	88 0f       	add	r24, r24
    33cc:	99 1f       	adc	r25, r25
    33ce:	9c 01       	movw	r18, r24
    33d0:	22 0f       	add	r18, r18
    33d2:	33 1f       	adc	r19, r19
    33d4:	22 0f       	add	r18, r18
    33d6:	33 1f       	adc	r19, r19
    33d8:	22 0f       	add	r18, r18
    33da:	33 1f       	adc	r19, r19
    33dc:	82 0f       	add	r24, r18
    33de:	93 1f       	adc	r25, r19
    33e0:	9c 01       	movw	r18, r24
    33e2:	24 0f       	add	r18, r20
    33e4:	35 1f       	adc	r19, r21
    33e6:	8b 81       	ldd	r24, Y+3	; 0x03
    33e8:	9c 81       	ldd	r25, Y+4	; 0x04
    33ea:	fc 01       	movw	r30, r24
    33ec:	e2 0f       	add	r30, r18
    33ee:	f3 1f       	adc	r31, r19
    33f0:	62 81       	ldd	r22, Z+2	; 0x02
    33f2:	89 81       	ldd	r24, Y+1	; 0x01
    33f4:	48 2f       	mov	r20, r24
    33f6:	50 e0       	ldi	r21, 0x00	; 0
    33f8:	ca 01       	movw	r24, r20
    33fa:	88 0f       	add	r24, r24
    33fc:	99 1f       	adc	r25, r25
    33fe:	9c 01       	movw	r18, r24
    3400:	22 0f       	add	r18, r18
    3402:	33 1f       	adc	r19, r19
    3404:	22 0f       	add	r18, r18
    3406:	33 1f       	adc	r19, r19
    3408:	22 0f       	add	r18, r18
    340a:	33 1f       	adc	r19, r19
    340c:	82 0f       	add	r24, r18
    340e:	93 1f       	adc	r25, r19
    3410:	9c 01       	movw	r18, r24
    3412:	24 0f       	add	r18, r20
    3414:	35 1f       	adc	r19, r21
    3416:	8b 81       	ldd	r24, Y+3	; 0x03
    3418:	9c 81       	ldd	r25, Y+4	; 0x04
    341a:	fc 01       	movw	r30, r24
    341c:	e2 0f       	add	r30, r18
    341e:	f3 1f       	adc	r31, r19
    3420:	93 81       	ldd	r25, Z+3	; 0x03
    3422:	86 2f       	mov	r24, r22
    3424:	69 2f       	mov	r22, r25
    3426:	41 e0       	ldi	r20, 0x01	; 1
    3428:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    342c:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    342e:	8a 81       	ldd	r24, Y+2	; 0x02
    3430:	81 30       	cpi	r24, 0x01	; 1
    3432:	19 f0       	breq	.+6      	; 0x343a <SEV_SEG_enumInit+0x118>
    3434:	8a 81       	ldd	r24, Y+2	; 0x02
    3436:	8d 83       	std	Y+5, r24	; 0x05
    3438:	69 c7       	rjmp	.+3794   	; 0x430c <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPin,OUTPUT);
    343a:	89 81       	ldd	r24, Y+1	; 0x01
    343c:	48 2f       	mov	r20, r24
    343e:	50 e0       	ldi	r21, 0x00	; 0
    3440:	ca 01       	movw	r24, r20
    3442:	88 0f       	add	r24, r24
    3444:	99 1f       	adc	r25, r25
    3446:	9c 01       	movw	r18, r24
    3448:	22 0f       	add	r18, r18
    344a:	33 1f       	adc	r19, r19
    344c:	22 0f       	add	r18, r18
    344e:	33 1f       	adc	r19, r19
    3450:	22 0f       	add	r18, r18
    3452:	33 1f       	adc	r19, r19
    3454:	82 0f       	add	r24, r18
    3456:	93 1f       	adc	r25, r19
    3458:	9c 01       	movw	r18, r24
    345a:	24 0f       	add	r18, r20
    345c:	35 1f       	adc	r19, r21
    345e:	8b 81       	ldd	r24, Y+3	; 0x03
    3460:	9c 81       	ldd	r25, Y+4	; 0x04
    3462:	fc 01       	movw	r30, r24
    3464:	e2 0f       	add	r30, r18
    3466:	f3 1f       	adc	r31, r19
    3468:	64 81       	ldd	r22, Z+4	; 0x04
    346a:	89 81       	ldd	r24, Y+1	; 0x01
    346c:	48 2f       	mov	r20, r24
    346e:	50 e0       	ldi	r21, 0x00	; 0
    3470:	ca 01       	movw	r24, r20
    3472:	88 0f       	add	r24, r24
    3474:	99 1f       	adc	r25, r25
    3476:	9c 01       	movw	r18, r24
    3478:	22 0f       	add	r18, r18
    347a:	33 1f       	adc	r19, r19
    347c:	22 0f       	add	r18, r18
    347e:	33 1f       	adc	r19, r19
    3480:	22 0f       	add	r18, r18
    3482:	33 1f       	adc	r19, r19
    3484:	82 0f       	add	r24, r18
    3486:	93 1f       	adc	r25, r19
    3488:	9c 01       	movw	r18, r24
    348a:	24 0f       	add	r18, r20
    348c:	35 1f       	adc	r19, r21
    348e:	8b 81       	ldd	r24, Y+3	; 0x03
    3490:	9c 81       	ldd	r25, Y+4	; 0x04
    3492:	fc 01       	movw	r30, r24
    3494:	e2 0f       	add	r30, r18
    3496:	f3 1f       	adc	r31, r19
    3498:	95 81       	ldd	r25, Z+5	; 0x05
    349a:	86 2f       	mov	r24, r22
    349c:	69 2f       	mov	r22, r25
    349e:	41 e0       	ldi	r20, 0x01	; 1
    34a0:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    34a4:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    34a6:	8a 81       	ldd	r24, Y+2	; 0x02
    34a8:	81 30       	cpi	r24, 0x01	; 1
    34aa:	19 f0       	breq	.+6      	; 0x34b2 <SEV_SEG_enumInit+0x190>
    34ac:	8a 81       	ldd	r24, Y+2	; 0x02
    34ae:	8d 83       	std	Y+5, r24	; 0x05
    34b0:	2d c7       	rjmp	.+3674   	; 0x430c <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPin,OUTPUT);
    34b2:	89 81       	ldd	r24, Y+1	; 0x01
    34b4:	48 2f       	mov	r20, r24
    34b6:	50 e0       	ldi	r21, 0x00	; 0
    34b8:	ca 01       	movw	r24, r20
    34ba:	88 0f       	add	r24, r24
    34bc:	99 1f       	adc	r25, r25
    34be:	9c 01       	movw	r18, r24
    34c0:	22 0f       	add	r18, r18
    34c2:	33 1f       	adc	r19, r19
    34c4:	22 0f       	add	r18, r18
    34c6:	33 1f       	adc	r19, r19
    34c8:	22 0f       	add	r18, r18
    34ca:	33 1f       	adc	r19, r19
    34cc:	82 0f       	add	r24, r18
    34ce:	93 1f       	adc	r25, r19
    34d0:	9c 01       	movw	r18, r24
    34d2:	24 0f       	add	r18, r20
    34d4:	35 1f       	adc	r19, r21
    34d6:	8b 81       	ldd	r24, Y+3	; 0x03
    34d8:	9c 81       	ldd	r25, Y+4	; 0x04
    34da:	fc 01       	movw	r30, r24
    34dc:	e2 0f       	add	r30, r18
    34de:	f3 1f       	adc	r31, r19
    34e0:	66 81       	ldd	r22, Z+6	; 0x06
    34e2:	89 81       	ldd	r24, Y+1	; 0x01
    34e4:	48 2f       	mov	r20, r24
    34e6:	50 e0       	ldi	r21, 0x00	; 0
    34e8:	ca 01       	movw	r24, r20
    34ea:	88 0f       	add	r24, r24
    34ec:	99 1f       	adc	r25, r25
    34ee:	9c 01       	movw	r18, r24
    34f0:	22 0f       	add	r18, r18
    34f2:	33 1f       	adc	r19, r19
    34f4:	22 0f       	add	r18, r18
    34f6:	33 1f       	adc	r19, r19
    34f8:	22 0f       	add	r18, r18
    34fa:	33 1f       	adc	r19, r19
    34fc:	82 0f       	add	r24, r18
    34fe:	93 1f       	adc	r25, r19
    3500:	9c 01       	movw	r18, r24
    3502:	24 0f       	add	r18, r20
    3504:	35 1f       	adc	r19, r21
    3506:	8b 81       	ldd	r24, Y+3	; 0x03
    3508:	9c 81       	ldd	r25, Y+4	; 0x04
    350a:	fc 01       	movw	r30, r24
    350c:	e2 0f       	add	r30, r18
    350e:	f3 1f       	adc	r31, r19
    3510:	97 81       	ldd	r25, Z+7	; 0x07
    3512:	86 2f       	mov	r24, r22
    3514:	69 2f       	mov	r22, r25
    3516:	41 e0       	ldi	r20, 0x01	; 1
    3518:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    351c:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    351e:	8a 81       	ldd	r24, Y+2	; 0x02
    3520:	81 30       	cpi	r24, 0x01	; 1
    3522:	19 f0       	breq	.+6      	; 0x352a <SEV_SEG_enumInit+0x208>
    3524:	8a 81       	ldd	r24, Y+2	; 0x02
    3526:	8d 83       	std	Y+5, r24	; 0x05
    3528:	f1 c6       	rjmp	.+3554   	; 0x430c <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPin,OUTPUT);
    352a:	89 81       	ldd	r24, Y+1	; 0x01
    352c:	48 2f       	mov	r20, r24
    352e:	50 e0       	ldi	r21, 0x00	; 0
    3530:	ca 01       	movw	r24, r20
    3532:	88 0f       	add	r24, r24
    3534:	99 1f       	adc	r25, r25
    3536:	9c 01       	movw	r18, r24
    3538:	22 0f       	add	r18, r18
    353a:	33 1f       	adc	r19, r19
    353c:	22 0f       	add	r18, r18
    353e:	33 1f       	adc	r19, r19
    3540:	22 0f       	add	r18, r18
    3542:	33 1f       	adc	r19, r19
    3544:	82 0f       	add	r24, r18
    3546:	93 1f       	adc	r25, r19
    3548:	9c 01       	movw	r18, r24
    354a:	24 0f       	add	r18, r20
    354c:	35 1f       	adc	r19, r21
    354e:	8b 81       	ldd	r24, Y+3	; 0x03
    3550:	9c 81       	ldd	r25, Y+4	; 0x04
    3552:	fc 01       	movw	r30, r24
    3554:	e2 0f       	add	r30, r18
    3556:	f3 1f       	adc	r31, r19
    3558:	60 85       	ldd	r22, Z+8	; 0x08
    355a:	89 81       	ldd	r24, Y+1	; 0x01
    355c:	48 2f       	mov	r20, r24
    355e:	50 e0       	ldi	r21, 0x00	; 0
    3560:	ca 01       	movw	r24, r20
    3562:	88 0f       	add	r24, r24
    3564:	99 1f       	adc	r25, r25
    3566:	9c 01       	movw	r18, r24
    3568:	22 0f       	add	r18, r18
    356a:	33 1f       	adc	r19, r19
    356c:	22 0f       	add	r18, r18
    356e:	33 1f       	adc	r19, r19
    3570:	22 0f       	add	r18, r18
    3572:	33 1f       	adc	r19, r19
    3574:	82 0f       	add	r24, r18
    3576:	93 1f       	adc	r25, r19
    3578:	9c 01       	movw	r18, r24
    357a:	24 0f       	add	r18, r20
    357c:	35 1f       	adc	r19, r21
    357e:	8b 81       	ldd	r24, Y+3	; 0x03
    3580:	9c 81       	ldd	r25, Y+4	; 0x04
    3582:	fc 01       	movw	r30, r24
    3584:	e2 0f       	add	r30, r18
    3586:	f3 1f       	adc	r31, r19
    3588:	91 85       	ldd	r25, Z+9	; 0x09
    358a:	86 2f       	mov	r24, r22
    358c:	69 2f       	mov	r22, r25
    358e:	41 e0       	ldi	r20, 0x01	; 1
    3590:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    3594:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3596:	8a 81       	ldd	r24, Y+2	; 0x02
    3598:	81 30       	cpi	r24, 0x01	; 1
    359a:	19 f0       	breq	.+6      	; 0x35a2 <SEV_SEG_enumInit+0x280>
    359c:	8a 81       	ldd	r24, Y+2	; 0x02
    359e:	8d 83       	std	Y+5, r24	; 0x05
    35a0:	b5 c6       	rjmp	.+3434   	; 0x430c <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPin,OUTPUT);
    35a2:	89 81       	ldd	r24, Y+1	; 0x01
    35a4:	48 2f       	mov	r20, r24
    35a6:	50 e0       	ldi	r21, 0x00	; 0
    35a8:	ca 01       	movw	r24, r20
    35aa:	88 0f       	add	r24, r24
    35ac:	99 1f       	adc	r25, r25
    35ae:	9c 01       	movw	r18, r24
    35b0:	22 0f       	add	r18, r18
    35b2:	33 1f       	adc	r19, r19
    35b4:	22 0f       	add	r18, r18
    35b6:	33 1f       	adc	r19, r19
    35b8:	22 0f       	add	r18, r18
    35ba:	33 1f       	adc	r19, r19
    35bc:	82 0f       	add	r24, r18
    35be:	93 1f       	adc	r25, r19
    35c0:	9c 01       	movw	r18, r24
    35c2:	24 0f       	add	r18, r20
    35c4:	35 1f       	adc	r19, r21
    35c6:	8b 81       	ldd	r24, Y+3	; 0x03
    35c8:	9c 81       	ldd	r25, Y+4	; 0x04
    35ca:	fc 01       	movw	r30, r24
    35cc:	e2 0f       	add	r30, r18
    35ce:	f3 1f       	adc	r31, r19
    35d0:	62 85       	ldd	r22, Z+10	; 0x0a
    35d2:	89 81       	ldd	r24, Y+1	; 0x01
    35d4:	48 2f       	mov	r20, r24
    35d6:	50 e0       	ldi	r21, 0x00	; 0
    35d8:	ca 01       	movw	r24, r20
    35da:	88 0f       	add	r24, r24
    35dc:	99 1f       	adc	r25, r25
    35de:	9c 01       	movw	r18, r24
    35e0:	22 0f       	add	r18, r18
    35e2:	33 1f       	adc	r19, r19
    35e4:	22 0f       	add	r18, r18
    35e6:	33 1f       	adc	r19, r19
    35e8:	22 0f       	add	r18, r18
    35ea:	33 1f       	adc	r19, r19
    35ec:	82 0f       	add	r24, r18
    35ee:	93 1f       	adc	r25, r19
    35f0:	9c 01       	movw	r18, r24
    35f2:	24 0f       	add	r18, r20
    35f4:	35 1f       	adc	r19, r21
    35f6:	8b 81       	ldd	r24, Y+3	; 0x03
    35f8:	9c 81       	ldd	r25, Y+4	; 0x04
    35fa:	fc 01       	movw	r30, r24
    35fc:	e2 0f       	add	r30, r18
    35fe:	f3 1f       	adc	r31, r19
    3600:	93 85       	ldd	r25, Z+11	; 0x0b
    3602:	86 2f       	mov	r24, r22
    3604:	69 2f       	mov	r22, r25
    3606:	41 e0       	ldi	r20, 0x01	; 1
    3608:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    360c:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    360e:	8a 81       	ldd	r24, Y+2	; 0x02
    3610:	81 30       	cpi	r24, 0x01	; 1
    3612:	19 f0       	breq	.+6      	; 0x361a <SEV_SEG_enumInit+0x2f8>
    3614:	8a 81       	ldd	r24, Y+2	; 0x02
    3616:	8d 83       	std	Y+5, r24	; 0x05
    3618:	79 c6       	rjmp	.+3314   	; 0x430c <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPin,OUTPUT);
    361a:	89 81       	ldd	r24, Y+1	; 0x01
    361c:	48 2f       	mov	r20, r24
    361e:	50 e0       	ldi	r21, 0x00	; 0
    3620:	ca 01       	movw	r24, r20
    3622:	88 0f       	add	r24, r24
    3624:	99 1f       	adc	r25, r25
    3626:	9c 01       	movw	r18, r24
    3628:	22 0f       	add	r18, r18
    362a:	33 1f       	adc	r19, r19
    362c:	22 0f       	add	r18, r18
    362e:	33 1f       	adc	r19, r19
    3630:	22 0f       	add	r18, r18
    3632:	33 1f       	adc	r19, r19
    3634:	82 0f       	add	r24, r18
    3636:	93 1f       	adc	r25, r19
    3638:	9c 01       	movw	r18, r24
    363a:	24 0f       	add	r18, r20
    363c:	35 1f       	adc	r19, r21
    363e:	8b 81       	ldd	r24, Y+3	; 0x03
    3640:	9c 81       	ldd	r25, Y+4	; 0x04
    3642:	fc 01       	movw	r30, r24
    3644:	e2 0f       	add	r30, r18
    3646:	f3 1f       	adc	r31, r19
    3648:	64 85       	ldd	r22, Z+12	; 0x0c
    364a:	89 81       	ldd	r24, Y+1	; 0x01
    364c:	48 2f       	mov	r20, r24
    364e:	50 e0       	ldi	r21, 0x00	; 0
    3650:	ca 01       	movw	r24, r20
    3652:	88 0f       	add	r24, r24
    3654:	99 1f       	adc	r25, r25
    3656:	9c 01       	movw	r18, r24
    3658:	22 0f       	add	r18, r18
    365a:	33 1f       	adc	r19, r19
    365c:	22 0f       	add	r18, r18
    365e:	33 1f       	adc	r19, r19
    3660:	22 0f       	add	r18, r18
    3662:	33 1f       	adc	r19, r19
    3664:	82 0f       	add	r24, r18
    3666:	93 1f       	adc	r25, r19
    3668:	9c 01       	movw	r18, r24
    366a:	24 0f       	add	r18, r20
    366c:	35 1f       	adc	r19, r21
    366e:	8b 81       	ldd	r24, Y+3	; 0x03
    3670:	9c 81       	ldd	r25, Y+4	; 0x04
    3672:	fc 01       	movw	r30, r24
    3674:	e2 0f       	add	r30, r18
    3676:	f3 1f       	adc	r31, r19
    3678:	95 85       	ldd	r25, Z+13	; 0x0d
    367a:	86 2f       	mov	r24, r22
    367c:	69 2f       	mov	r22, r25
    367e:	41 e0       	ldi	r20, 0x01	; 1
    3680:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    3684:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3686:	8a 81       	ldd	r24, Y+2	; 0x02
    3688:	81 30       	cpi	r24, 0x01	; 1
    368a:	19 f0       	breq	.+6      	; 0x3692 <SEV_SEG_enumInit+0x370>
    368c:	8a 81       	ldd	r24, Y+2	; 0x02
    368e:	8d 83       	std	Y+5, r24	; 0x05
    3690:	3d c6       	rjmp	.+3194   	; 0x430c <SEV_SEG_enumInit+0xfea>

			if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_CATHODE)
    3692:	89 81       	ldd	r24, Y+1	; 0x01
    3694:	48 2f       	mov	r20, r24
    3696:	50 e0       	ldi	r21, 0x00	; 0
    3698:	ca 01       	movw	r24, r20
    369a:	88 0f       	add	r24, r24
    369c:	99 1f       	adc	r25, r25
    369e:	9c 01       	movw	r18, r24
    36a0:	22 0f       	add	r18, r18
    36a2:	33 1f       	adc	r19, r19
    36a4:	22 0f       	add	r18, r18
    36a6:	33 1f       	adc	r19, r19
    36a8:	22 0f       	add	r18, r18
    36aa:	33 1f       	adc	r19, r19
    36ac:	82 0f       	add	r24, r18
    36ae:	93 1f       	adc	r25, r19
    36b0:	9c 01       	movw	r18, r24
    36b2:	24 0f       	add	r18, r20
    36b4:	35 1f       	adc	r19, r21
    36b6:	8b 81       	ldd	r24, Y+3	; 0x03
    36b8:	9c 81       	ldd	r25, Y+4	; 0x04
    36ba:	fc 01       	movw	r30, r24
    36bc:	e2 0f       	add	r30, r18
    36be:	f3 1f       	adc	r31, r19
    36c0:	82 89       	ldd	r24, Z+18	; 0x12
    36c2:	81 30       	cpi	r24, 0x01	; 1
    36c4:	09 f0       	breq	.+2      	; 0x36c8 <SEV_SEG_enumInit+0x3a6>
    36c6:	a5 c1       	rjmp	.+842    	; 0x3a12 <SEV_SEG_enumInit+0x6f0>
			{
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APin,LOW);
    36c8:	89 81       	ldd	r24, Y+1	; 0x01
    36ca:	48 2f       	mov	r20, r24
    36cc:	50 e0       	ldi	r21, 0x00	; 0
    36ce:	ca 01       	movw	r24, r20
    36d0:	88 0f       	add	r24, r24
    36d2:	99 1f       	adc	r25, r25
    36d4:	9c 01       	movw	r18, r24
    36d6:	22 0f       	add	r18, r18
    36d8:	33 1f       	adc	r19, r19
    36da:	22 0f       	add	r18, r18
    36dc:	33 1f       	adc	r19, r19
    36de:	22 0f       	add	r18, r18
    36e0:	33 1f       	adc	r19, r19
    36e2:	82 0f       	add	r24, r18
    36e4:	93 1f       	adc	r25, r19
    36e6:	9c 01       	movw	r18, r24
    36e8:	24 0f       	add	r18, r20
    36ea:	35 1f       	adc	r19, r21
    36ec:	8b 81       	ldd	r24, Y+3	; 0x03
    36ee:	9c 81       	ldd	r25, Y+4	; 0x04
    36f0:	fc 01       	movw	r30, r24
    36f2:	e2 0f       	add	r30, r18
    36f4:	f3 1f       	adc	r31, r19
    36f6:	60 81       	ld	r22, Z
    36f8:	89 81       	ldd	r24, Y+1	; 0x01
    36fa:	48 2f       	mov	r20, r24
    36fc:	50 e0       	ldi	r21, 0x00	; 0
    36fe:	ca 01       	movw	r24, r20
    3700:	88 0f       	add	r24, r24
    3702:	99 1f       	adc	r25, r25
    3704:	9c 01       	movw	r18, r24
    3706:	22 0f       	add	r18, r18
    3708:	33 1f       	adc	r19, r19
    370a:	22 0f       	add	r18, r18
    370c:	33 1f       	adc	r19, r19
    370e:	22 0f       	add	r18, r18
    3710:	33 1f       	adc	r19, r19
    3712:	82 0f       	add	r24, r18
    3714:	93 1f       	adc	r25, r19
    3716:	9c 01       	movw	r18, r24
    3718:	24 0f       	add	r18, r20
    371a:	35 1f       	adc	r19, r21
    371c:	8b 81       	ldd	r24, Y+3	; 0x03
    371e:	9c 81       	ldd	r25, Y+4	; 0x04
    3720:	fc 01       	movw	r30, r24
    3722:	e2 0f       	add	r30, r18
    3724:	f3 1f       	adc	r31, r19
    3726:	91 81       	ldd	r25, Z+1	; 0x01
    3728:	86 2f       	mov	r24, r22
    372a:	69 2f       	mov	r22, r25
    372c:	40 e0       	ldi	r20, 0x00	; 0
    372e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3732:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3734:	8a 81       	ldd	r24, Y+2	; 0x02
    3736:	81 30       	cpi	r24, 0x01	; 1
    3738:	19 f0       	breq	.+6      	; 0x3740 <SEV_SEG_enumInit+0x41e>
    373a:	8a 81       	ldd	r24, Y+2	; 0x02
    373c:	8d 83       	std	Y+5, r24	; 0x05
    373e:	e6 c5       	rjmp	.+3020   	; 0x430c <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPin,LOW);
    3740:	89 81       	ldd	r24, Y+1	; 0x01
    3742:	48 2f       	mov	r20, r24
    3744:	50 e0       	ldi	r21, 0x00	; 0
    3746:	ca 01       	movw	r24, r20
    3748:	88 0f       	add	r24, r24
    374a:	99 1f       	adc	r25, r25
    374c:	9c 01       	movw	r18, r24
    374e:	22 0f       	add	r18, r18
    3750:	33 1f       	adc	r19, r19
    3752:	22 0f       	add	r18, r18
    3754:	33 1f       	adc	r19, r19
    3756:	22 0f       	add	r18, r18
    3758:	33 1f       	adc	r19, r19
    375a:	82 0f       	add	r24, r18
    375c:	93 1f       	adc	r25, r19
    375e:	9c 01       	movw	r18, r24
    3760:	24 0f       	add	r18, r20
    3762:	35 1f       	adc	r19, r21
    3764:	8b 81       	ldd	r24, Y+3	; 0x03
    3766:	9c 81       	ldd	r25, Y+4	; 0x04
    3768:	fc 01       	movw	r30, r24
    376a:	e2 0f       	add	r30, r18
    376c:	f3 1f       	adc	r31, r19
    376e:	62 81       	ldd	r22, Z+2	; 0x02
    3770:	89 81       	ldd	r24, Y+1	; 0x01
    3772:	48 2f       	mov	r20, r24
    3774:	50 e0       	ldi	r21, 0x00	; 0
    3776:	ca 01       	movw	r24, r20
    3778:	88 0f       	add	r24, r24
    377a:	99 1f       	adc	r25, r25
    377c:	9c 01       	movw	r18, r24
    377e:	22 0f       	add	r18, r18
    3780:	33 1f       	adc	r19, r19
    3782:	22 0f       	add	r18, r18
    3784:	33 1f       	adc	r19, r19
    3786:	22 0f       	add	r18, r18
    3788:	33 1f       	adc	r19, r19
    378a:	82 0f       	add	r24, r18
    378c:	93 1f       	adc	r25, r19
    378e:	9c 01       	movw	r18, r24
    3790:	24 0f       	add	r18, r20
    3792:	35 1f       	adc	r19, r21
    3794:	8b 81       	ldd	r24, Y+3	; 0x03
    3796:	9c 81       	ldd	r25, Y+4	; 0x04
    3798:	fc 01       	movw	r30, r24
    379a:	e2 0f       	add	r30, r18
    379c:	f3 1f       	adc	r31, r19
    379e:	93 81       	ldd	r25, Z+3	; 0x03
    37a0:	86 2f       	mov	r24, r22
    37a2:	69 2f       	mov	r22, r25
    37a4:	40 e0       	ldi	r20, 0x00	; 0
    37a6:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    37aa:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    37ac:	8a 81       	ldd	r24, Y+2	; 0x02
    37ae:	81 30       	cpi	r24, 0x01	; 1
    37b0:	19 f0       	breq	.+6      	; 0x37b8 <SEV_SEG_enumInit+0x496>
    37b2:	8a 81       	ldd	r24, Y+2	; 0x02
    37b4:	8d 83       	std	Y+5, r24	; 0x05
    37b6:	aa c5       	rjmp	.+2900   	; 0x430c <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPin,LOW);
    37b8:	89 81       	ldd	r24, Y+1	; 0x01
    37ba:	48 2f       	mov	r20, r24
    37bc:	50 e0       	ldi	r21, 0x00	; 0
    37be:	ca 01       	movw	r24, r20
    37c0:	88 0f       	add	r24, r24
    37c2:	99 1f       	adc	r25, r25
    37c4:	9c 01       	movw	r18, r24
    37c6:	22 0f       	add	r18, r18
    37c8:	33 1f       	adc	r19, r19
    37ca:	22 0f       	add	r18, r18
    37cc:	33 1f       	adc	r19, r19
    37ce:	22 0f       	add	r18, r18
    37d0:	33 1f       	adc	r19, r19
    37d2:	82 0f       	add	r24, r18
    37d4:	93 1f       	adc	r25, r19
    37d6:	9c 01       	movw	r18, r24
    37d8:	24 0f       	add	r18, r20
    37da:	35 1f       	adc	r19, r21
    37dc:	8b 81       	ldd	r24, Y+3	; 0x03
    37de:	9c 81       	ldd	r25, Y+4	; 0x04
    37e0:	fc 01       	movw	r30, r24
    37e2:	e2 0f       	add	r30, r18
    37e4:	f3 1f       	adc	r31, r19
    37e6:	64 81       	ldd	r22, Z+4	; 0x04
    37e8:	89 81       	ldd	r24, Y+1	; 0x01
    37ea:	48 2f       	mov	r20, r24
    37ec:	50 e0       	ldi	r21, 0x00	; 0
    37ee:	ca 01       	movw	r24, r20
    37f0:	88 0f       	add	r24, r24
    37f2:	99 1f       	adc	r25, r25
    37f4:	9c 01       	movw	r18, r24
    37f6:	22 0f       	add	r18, r18
    37f8:	33 1f       	adc	r19, r19
    37fa:	22 0f       	add	r18, r18
    37fc:	33 1f       	adc	r19, r19
    37fe:	22 0f       	add	r18, r18
    3800:	33 1f       	adc	r19, r19
    3802:	82 0f       	add	r24, r18
    3804:	93 1f       	adc	r25, r19
    3806:	9c 01       	movw	r18, r24
    3808:	24 0f       	add	r18, r20
    380a:	35 1f       	adc	r19, r21
    380c:	8b 81       	ldd	r24, Y+3	; 0x03
    380e:	9c 81       	ldd	r25, Y+4	; 0x04
    3810:	fc 01       	movw	r30, r24
    3812:	e2 0f       	add	r30, r18
    3814:	f3 1f       	adc	r31, r19
    3816:	95 81       	ldd	r25, Z+5	; 0x05
    3818:	86 2f       	mov	r24, r22
    381a:	69 2f       	mov	r22, r25
    381c:	40 e0       	ldi	r20, 0x00	; 0
    381e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3822:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3824:	8a 81       	ldd	r24, Y+2	; 0x02
    3826:	81 30       	cpi	r24, 0x01	; 1
    3828:	19 f0       	breq	.+6      	; 0x3830 <SEV_SEG_enumInit+0x50e>
    382a:	8a 81       	ldd	r24, Y+2	; 0x02
    382c:	8d 83       	std	Y+5, r24	; 0x05
    382e:	6e c5       	rjmp	.+2780   	; 0x430c <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPin,LOW);
    3830:	89 81       	ldd	r24, Y+1	; 0x01
    3832:	48 2f       	mov	r20, r24
    3834:	50 e0       	ldi	r21, 0x00	; 0
    3836:	ca 01       	movw	r24, r20
    3838:	88 0f       	add	r24, r24
    383a:	99 1f       	adc	r25, r25
    383c:	9c 01       	movw	r18, r24
    383e:	22 0f       	add	r18, r18
    3840:	33 1f       	adc	r19, r19
    3842:	22 0f       	add	r18, r18
    3844:	33 1f       	adc	r19, r19
    3846:	22 0f       	add	r18, r18
    3848:	33 1f       	adc	r19, r19
    384a:	82 0f       	add	r24, r18
    384c:	93 1f       	adc	r25, r19
    384e:	9c 01       	movw	r18, r24
    3850:	24 0f       	add	r18, r20
    3852:	35 1f       	adc	r19, r21
    3854:	8b 81       	ldd	r24, Y+3	; 0x03
    3856:	9c 81       	ldd	r25, Y+4	; 0x04
    3858:	fc 01       	movw	r30, r24
    385a:	e2 0f       	add	r30, r18
    385c:	f3 1f       	adc	r31, r19
    385e:	66 81       	ldd	r22, Z+6	; 0x06
    3860:	89 81       	ldd	r24, Y+1	; 0x01
    3862:	48 2f       	mov	r20, r24
    3864:	50 e0       	ldi	r21, 0x00	; 0
    3866:	ca 01       	movw	r24, r20
    3868:	88 0f       	add	r24, r24
    386a:	99 1f       	adc	r25, r25
    386c:	9c 01       	movw	r18, r24
    386e:	22 0f       	add	r18, r18
    3870:	33 1f       	adc	r19, r19
    3872:	22 0f       	add	r18, r18
    3874:	33 1f       	adc	r19, r19
    3876:	22 0f       	add	r18, r18
    3878:	33 1f       	adc	r19, r19
    387a:	82 0f       	add	r24, r18
    387c:	93 1f       	adc	r25, r19
    387e:	9c 01       	movw	r18, r24
    3880:	24 0f       	add	r18, r20
    3882:	35 1f       	adc	r19, r21
    3884:	8b 81       	ldd	r24, Y+3	; 0x03
    3886:	9c 81       	ldd	r25, Y+4	; 0x04
    3888:	fc 01       	movw	r30, r24
    388a:	e2 0f       	add	r30, r18
    388c:	f3 1f       	adc	r31, r19
    388e:	97 81       	ldd	r25, Z+7	; 0x07
    3890:	86 2f       	mov	r24, r22
    3892:	69 2f       	mov	r22, r25
    3894:	40 e0       	ldi	r20, 0x00	; 0
    3896:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    389a:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    389c:	8a 81       	ldd	r24, Y+2	; 0x02
    389e:	81 30       	cpi	r24, 0x01	; 1
    38a0:	19 f0       	breq	.+6      	; 0x38a8 <SEV_SEG_enumInit+0x586>
    38a2:	8a 81       	ldd	r24, Y+2	; 0x02
    38a4:	8d 83       	std	Y+5, r24	; 0x05
    38a6:	32 c5       	rjmp	.+2660   	; 0x430c <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPin,LOW);
    38a8:	89 81       	ldd	r24, Y+1	; 0x01
    38aa:	48 2f       	mov	r20, r24
    38ac:	50 e0       	ldi	r21, 0x00	; 0
    38ae:	ca 01       	movw	r24, r20
    38b0:	88 0f       	add	r24, r24
    38b2:	99 1f       	adc	r25, r25
    38b4:	9c 01       	movw	r18, r24
    38b6:	22 0f       	add	r18, r18
    38b8:	33 1f       	adc	r19, r19
    38ba:	22 0f       	add	r18, r18
    38bc:	33 1f       	adc	r19, r19
    38be:	22 0f       	add	r18, r18
    38c0:	33 1f       	adc	r19, r19
    38c2:	82 0f       	add	r24, r18
    38c4:	93 1f       	adc	r25, r19
    38c6:	9c 01       	movw	r18, r24
    38c8:	24 0f       	add	r18, r20
    38ca:	35 1f       	adc	r19, r21
    38cc:	8b 81       	ldd	r24, Y+3	; 0x03
    38ce:	9c 81       	ldd	r25, Y+4	; 0x04
    38d0:	fc 01       	movw	r30, r24
    38d2:	e2 0f       	add	r30, r18
    38d4:	f3 1f       	adc	r31, r19
    38d6:	60 85       	ldd	r22, Z+8	; 0x08
    38d8:	89 81       	ldd	r24, Y+1	; 0x01
    38da:	48 2f       	mov	r20, r24
    38dc:	50 e0       	ldi	r21, 0x00	; 0
    38de:	ca 01       	movw	r24, r20
    38e0:	88 0f       	add	r24, r24
    38e2:	99 1f       	adc	r25, r25
    38e4:	9c 01       	movw	r18, r24
    38e6:	22 0f       	add	r18, r18
    38e8:	33 1f       	adc	r19, r19
    38ea:	22 0f       	add	r18, r18
    38ec:	33 1f       	adc	r19, r19
    38ee:	22 0f       	add	r18, r18
    38f0:	33 1f       	adc	r19, r19
    38f2:	82 0f       	add	r24, r18
    38f4:	93 1f       	adc	r25, r19
    38f6:	9c 01       	movw	r18, r24
    38f8:	24 0f       	add	r18, r20
    38fa:	35 1f       	adc	r19, r21
    38fc:	8b 81       	ldd	r24, Y+3	; 0x03
    38fe:	9c 81       	ldd	r25, Y+4	; 0x04
    3900:	fc 01       	movw	r30, r24
    3902:	e2 0f       	add	r30, r18
    3904:	f3 1f       	adc	r31, r19
    3906:	91 85       	ldd	r25, Z+9	; 0x09
    3908:	86 2f       	mov	r24, r22
    390a:	69 2f       	mov	r22, r25
    390c:	40 e0       	ldi	r20, 0x00	; 0
    390e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3912:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3914:	8a 81       	ldd	r24, Y+2	; 0x02
    3916:	81 30       	cpi	r24, 0x01	; 1
    3918:	19 f0       	breq	.+6      	; 0x3920 <SEV_SEG_enumInit+0x5fe>
    391a:	8a 81       	ldd	r24, Y+2	; 0x02
    391c:	8d 83       	std	Y+5, r24	; 0x05
    391e:	f6 c4       	rjmp	.+2540   	; 0x430c <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPin,LOW);
    3920:	89 81       	ldd	r24, Y+1	; 0x01
    3922:	48 2f       	mov	r20, r24
    3924:	50 e0       	ldi	r21, 0x00	; 0
    3926:	ca 01       	movw	r24, r20
    3928:	88 0f       	add	r24, r24
    392a:	99 1f       	adc	r25, r25
    392c:	9c 01       	movw	r18, r24
    392e:	22 0f       	add	r18, r18
    3930:	33 1f       	adc	r19, r19
    3932:	22 0f       	add	r18, r18
    3934:	33 1f       	adc	r19, r19
    3936:	22 0f       	add	r18, r18
    3938:	33 1f       	adc	r19, r19
    393a:	82 0f       	add	r24, r18
    393c:	93 1f       	adc	r25, r19
    393e:	9c 01       	movw	r18, r24
    3940:	24 0f       	add	r18, r20
    3942:	35 1f       	adc	r19, r21
    3944:	8b 81       	ldd	r24, Y+3	; 0x03
    3946:	9c 81       	ldd	r25, Y+4	; 0x04
    3948:	fc 01       	movw	r30, r24
    394a:	e2 0f       	add	r30, r18
    394c:	f3 1f       	adc	r31, r19
    394e:	62 85       	ldd	r22, Z+10	; 0x0a
    3950:	89 81       	ldd	r24, Y+1	; 0x01
    3952:	48 2f       	mov	r20, r24
    3954:	50 e0       	ldi	r21, 0x00	; 0
    3956:	ca 01       	movw	r24, r20
    3958:	88 0f       	add	r24, r24
    395a:	99 1f       	adc	r25, r25
    395c:	9c 01       	movw	r18, r24
    395e:	22 0f       	add	r18, r18
    3960:	33 1f       	adc	r19, r19
    3962:	22 0f       	add	r18, r18
    3964:	33 1f       	adc	r19, r19
    3966:	22 0f       	add	r18, r18
    3968:	33 1f       	adc	r19, r19
    396a:	82 0f       	add	r24, r18
    396c:	93 1f       	adc	r25, r19
    396e:	9c 01       	movw	r18, r24
    3970:	24 0f       	add	r18, r20
    3972:	35 1f       	adc	r19, r21
    3974:	8b 81       	ldd	r24, Y+3	; 0x03
    3976:	9c 81       	ldd	r25, Y+4	; 0x04
    3978:	fc 01       	movw	r30, r24
    397a:	e2 0f       	add	r30, r18
    397c:	f3 1f       	adc	r31, r19
    397e:	93 85       	ldd	r25, Z+11	; 0x0b
    3980:	86 2f       	mov	r24, r22
    3982:	69 2f       	mov	r22, r25
    3984:	40 e0       	ldi	r20, 0x00	; 0
    3986:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    398a:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    398c:	8a 81       	ldd	r24, Y+2	; 0x02
    398e:	81 30       	cpi	r24, 0x01	; 1
    3990:	19 f0       	breq	.+6      	; 0x3998 <SEV_SEG_enumInit+0x676>
    3992:	8a 81       	ldd	r24, Y+2	; 0x02
    3994:	8d 83       	std	Y+5, r24	; 0x05
    3996:	ba c4       	rjmp	.+2420   	; 0x430c <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPin,LOW);
    3998:	89 81       	ldd	r24, Y+1	; 0x01
    399a:	48 2f       	mov	r20, r24
    399c:	50 e0       	ldi	r21, 0x00	; 0
    399e:	ca 01       	movw	r24, r20
    39a0:	88 0f       	add	r24, r24
    39a2:	99 1f       	adc	r25, r25
    39a4:	9c 01       	movw	r18, r24
    39a6:	22 0f       	add	r18, r18
    39a8:	33 1f       	adc	r19, r19
    39aa:	22 0f       	add	r18, r18
    39ac:	33 1f       	adc	r19, r19
    39ae:	22 0f       	add	r18, r18
    39b0:	33 1f       	adc	r19, r19
    39b2:	82 0f       	add	r24, r18
    39b4:	93 1f       	adc	r25, r19
    39b6:	9c 01       	movw	r18, r24
    39b8:	24 0f       	add	r18, r20
    39ba:	35 1f       	adc	r19, r21
    39bc:	8b 81       	ldd	r24, Y+3	; 0x03
    39be:	9c 81       	ldd	r25, Y+4	; 0x04
    39c0:	fc 01       	movw	r30, r24
    39c2:	e2 0f       	add	r30, r18
    39c4:	f3 1f       	adc	r31, r19
    39c6:	64 85       	ldd	r22, Z+12	; 0x0c
    39c8:	89 81       	ldd	r24, Y+1	; 0x01
    39ca:	48 2f       	mov	r20, r24
    39cc:	50 e0       	ldi	r21, 0x00	; 0
    39ce:	ca 01       	movw	r24, r20
    39d0:	88 0f       	add	r24, r24
    39d2:	99 1f       	adc	r25, r25
    39d4:	9c 01       	movw	r18, r24
    39d6:	22 0f       	add	r18, r18
    39d8:	33 1f       	adc	r19, r19
    39da:	22 0f       	add	r18, r18
    39dc:	33 1f       	adc	r19, r19
    39de:	22 0f       	add	r18, r18
    39e0:	33 1f       	adc	r19, r19
    39e2:	82 0f       	add	r24, r18
    39e4:	93 1f       	adc	r25, r19
    39e6:	9c 01       	movw	r18, r24
    39e8:	24 0f       	add	r18, r20
    39ea:	35 1f       	adc	r19, r21
    39ec:	8b 81       	ldd	r24, Y+3	; 0x03
    39ee:	9c 81       	ldd	r25, Y+4	; 0x04
    39f0:	fc 01       	movw	r30, r24
    39f2:	e2 0f       	add	r30, r18
    39f4:	f3 1f       	adc	r31, r19
    39f6:	95 85       	ldd	r25, Z+13	; 0x0d
    39f8:	86 2f       	mov	r24, r22
    39fa:	69 2f       	mov	r22, r25
    39fc:	40 e0       	ldi	r20, 0x00	; 0
    39fe:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3a02:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3a04:	8a 81       	ldd	r24, Y+2	; 0x02
    3a06:	81 30       	cpi	r24, 0x01	; 1
    3a08:	09 f4       	brne	.+2      	; 0x3a0c <SEV_SEG_enumInit+0x6ea>
    3a0a:	c4 c1       	rjmp	.+904    	; 0x3d94 <SEV_SEG_enumInit+0xa72>
    3a0c:	8a 81       	ldd	r24, Y+2	; 0x02
    3a0e:	8d 83       	std	Y+5, r24	; 0x05
    3a10:	7d c4       	rjmp	.+2298   	; 0x430c <SEV_SEG_enumInit+0xfea>
			}
			else if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_ANODE)
    3a12:	89 81       	ldd	r24, Y+1	; 0x01
    3a14:	48 2f       	mov	r20, r24
    3a16:	50 e0       	ldi	r21, 0x00	; 0
    3a18:	ca 01       	movw	r24, r20
    3a1a:	88 0f       	add	r24, r24
    3a1c:	99 1f       	adc	r25, r25
    3a1e:	9c 01       	movw	r18, r24
    3a20:	22 0f       	add	r18, r18
    3a22:	33 1f       	adc	r19, r19
    3a24:	22 0f       	add	r18, r18
    3a26:	33 1f       	adc	r19, r19
    3a28:	22 0f       	add	r18, r18
    3a2a:	33 1f       	adc	r19, r19
    3a2c:	82 0f       	add	r24, r18
    3a2e:	93 1f       	adc	r25, r19
    3a30:	9c 01       	movw	r18, r24
    3a32:	24 0f       	add	r18, r20
    3a34:	35 1f       	adc	r19, r21
    3a36:	8b 81       	ldd	r24, Y+3	; 0x03
    3a38:	9c 81       	ldd	r25, Y+4	; 0x04
    3a3a:	fc 01       	movw	r30, r24
    3a3c:	e2 0f       	add	r30, r18
    3a3e:	f3 1f       	adc	r31, r19
    3a40:	82 89       	ldd	r24, Z+18	; 0x12
    3a42:	88 23       	and	r24, r24
    3a44:	09 f0       	breq	.+2      	; 0x3a48 <SEV_SEG_enumInit+0x726>
    3a46:	a4 c1       	rjmp	.+840    	; 0x3d90 <SEV_SEG_enumInit+0xa6e>
			{
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APin,HIGH);
    3a48:	89 81       	ldd	r24, Y+1	; 0x01
    3a4a:	48 2f       	mov	r20, r24
    3a4c:	50 e0       	ldi	r21, 0x00	; 0
    3a4e:	ca 01       	movw	r24, r20
    3a50:	88 0f       	add	r24, r24
    3a52:	99 1f       	adc	r25, r25
    3a54:	9c 01       	movw	r18, r24
    3a56:	22 0f       	add	r18, r18
    3a58:	33 1f       	adc	r19, r19
    3a5a:	22 0f       	add	r18, r18
    3a5c:	33 1f       	adc	r19, r19
    3a5e:	22 0f       	add	r18, r18
    3a60:	33 1f       	adc	r19, r19
    3a62:	82 0f       	add	r24, r18
    3a64:	93 1f       	adc	r25, r19
    3a66:	9c 01       	movw	r18, r24
    3a68:	24 0f       	add	r18, r20
    3a6a:	35 1f       	adc	r19, r21
    3a6c:	8b 81       	ldd	r24, Y+3	; 0x03
    3a6e:	9c 81       	ldd	r25, Y+4	; 0x04
    3a70:	fc 01       	movw	r30, r24
    3a72:	e2 0f       	add	r30, r18
    3a74:	f3 1f       	adc	r31, r19
    3a76:	60 81       	ld	r22, Z
    3a78:	89 81       	ldd	r24, Y+1	; 0x01
    3a7a:	48 2f       	mov	r20, r24
    3a7c:	50 e0       	ldi	r21, 0x00	; 0
    3a7e:	ca 01       	movw	r24, r20
    3a80:	88 0f       	add	r24, r24
    3a82:	99 1f       	adc	r25, r25
    3a84:	9c 01       	movw	r18, r24
    3a86:	22 0f       	add	r18, r18
    3a88:	33 1f       	adc	r19, r19
    3a8a:	22 0f       	add	r18, r18
    3a8c:	33 1f       	adc	r19, r19
    3a8e:	22 0f       	add	r18, r18
    3a90:	33 1f       	adc	r19, r19
    3a92:	82 0f       	add	r24, r18
    3a94:	93 1f       	adc	r25, r19
    3a96:	9c 01       	movw	r18, r24
    3a98:	24 0f       	add	r18, r20
    3a9a:	35 1f       	adc	r19, r21
    3a9c:	8b 81       	ldd	r24, Y+3	; 0x03
    3a9e:	9c 81       	ldd	r25, Y+4	; 0x04
    3aa0:	fc 01       	movw	r30, r24
    3aa2:	e2 0f       	add	r30, r18
    3aa4:	f3 1f       	adc	r31, r19
    3aa6:	91 81       	ldd	r25, Z+1	; 0x01
    3aa8:	86 2f       	mov	r24, r22
    3aaa:	69 2f       	mov	r22, r25
    3aac:	41 e0       	ldi	r20, 0x01	; 1
    3aae:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3ab2:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3ab4:	8a 81       	ldd	r24, Y+2	; 0x02
    3ab6:	81 30       	cpi	r24, 0x01	; 1
    3ab8:	19 f0       	breq	.+6      	; 0x3ac0 <SEV_SEG_enumInit+0x79e>
    3aba:	8a 81       	ldd	r24, Y+2	; 0x02
    3abc:	8d 83       	std	Y+5, r24	; 0x05
    3abe:	26 c4       	rjmp	.+2124   	; 0x430c <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPin,HIGH);
    3ac0:	89 81       	ldd	r24, Y+1	; 0x01
    3ac2:	48 2f       	mov	r20, r24
    3ac4:	50 e0       	ldi	r21, 0x00	; 0
    3ac6:	ca 01       	movw	r24, r20
    3ac8:	88 0f       	add	r24, r24
    3aca:	99 1f       	adc	r25, r25
    3acc:	9c 01       	movw	r18, r24
    3ace:	22 0f       	add	r18, r18
    3ad0:	33 1f       	adc	r19, r19
    3ad2:	22 0f       	add	r18, r18
    3ad4:	33 1f       	adc	r19, r19
    3ad6:	22 0f       	add	r18, r18
    3ad8:	33 1f       	adc	r19, r19
    3ada:	82 0f       	add	r24, r18
    3adc:	93 1f       	adc	r25, r19
    3ade:	9c 01       	movw	r18, r24
    3ae0:	24 0f       	add	r18, r20
    3ae2:	35 1f       	adc	r19, r21
    3ae4:	8b 81       	ldd	r24, Y+3	; 0x03
    3ae6:	9c 81       	ldd	r25, Y+4	; 0x04
    3ae8:	fc 01       	movw	r30, r24
    3aea:	e2 0f       	add	r30, r18
    3aec:	f3 1f       	adc	r31, r19
    3aee:	62 81       	ldd	r22, Z+2	; 0x02
    3af0:	89 81       	ldd	r24, Y+1	; 0x01
    3af2:	48 2f       	mov	r20, r24
    3af4:	50 e0       	ldi	r21, 0x00	; 0
    3af6:	ca 01       	movw	r24, r20
    3af8:	88 0f       	add	r24, r24
    3afa:	99 1f       	adc	r25, r25
    3afc:	9c 01       	movw	r18, r24
    3afe:	22 0f       	add	r18, r18
    3b00:	33 1f       	adc	r19, r19
    3b02:	22 0f       	add	r18, r18
    3b04:	33 1f       	adc	r19, r19
    3b06:	22 0f       	add	r18, r18
    3b08:	33 1f       	adc	r19, r19
    3b0a:	82 0f       	add	r24, r18
    3b0c:	93 1f       	adc	r25, r19
    3b0e:	9c 01       	movw	r18, r24
    3b10:	24 0f       	add	r18, r20
    3b12:	35 1f       	adc	r19, r21
    3b14:	8b 81       	ldd	r24, Y+3	; 0x03
    3b16:	9c 81       	ldd	r25, Y+4	; 0x04
    3b18:	fc 01       	movw	r30, r24
    3b1a:	e2 0f       	add	r30, r18
    3b1c:	f3 1f       	adc	r31, r19
    3b1e:	93 81       	ldd	r25, Z+3	; 0x03
    3b20:	86 2f       	mov	r24, r22
    3b22:	69 2f       	mov	r22, r25
    3b24:	41 e0       	ldi	r20, 0x01	; 1
    3b26:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3b2a:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3b2c:	8a 81       	ldd	r24, Y+2	; 0x02
    3b2e:	81 30       	cpi	r24, 0x01	; 1
    3b30:	19 f0       	breq	.+6      	; 0x3b38 <SEV_SEG_enumInit+0x816>
    3b32:	8a 81       	ldd	r24, Y+2	; 0x02
    3b34:	8d 83       	std	Y+5, r24	; 0x05
    3b36:	ea c3       	rjmp	.+2004   	; 0x430c <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPin,HIGH);
    3b38:	89 81       	ldd	r24, Y+1	; 0x01
    3b3a:	48 2f       	mov	r20, r24
    3b3c:	50 e0       	ldi	r21, 0x00	; 0
    3b3e:	ca 01       	movw	r24, r20
    3b40:	88 0f       	add	r24, r24
    3b42:	99 1f       	adc	r25, r25
    3b44:	9c 01       	movw	r18, r24
    3b46:	22 0f       	add	r18, r18
    3b48:	33 1f       	adc	r19, r19
    3b4a:	22 0f       	add	r18, r18
    3b4c:	33 1f       	adc	r19, r19
    3b4e:	22 0f       	add	r18, r18
    3b50:	33 1f       	adc	r19, r19
    3b52:	82 0f       	add	r24, r18
    3b54:	93 1f       	adc	r25, r19
    3b56:	9c 01       	movw	r18, r24
    3b58:	24 0f       	add	r18, r20
    3b5a:	35 1f       	adc	r19, r21
    3b5c:	8b 81       	ldd	r24, Y+3	; 0x03
    3b5e:	9c 81       	ldd	r25, Y+4	; 0x04
    3b60:	fc 01       	movw	r30, r24
    3b62:	e2 0f       	add	r30, r18
    3b64:	f3 1f       	adc	r31, r19
    3b66:	64 81       	ldd	r22, Z+4	; 0x04
    3b68:	89 81       	ldd	r24, Y+1	; 0x01
    3b6a:	48 2f       	mov	r20, r24
    3b6c:	50 e0       	ldi	r21, 0x00	; 0
    3b6e:	ca 01       	movw	r24, r20
    3b70:	88 0f       	add	r24, r24
    3b72:	99 1f       	adc	r25, r25
    3b74:	9c 01       	movw	r18, r24
    3b76:	22 0f       	add	r18, r18
    3b78:	33 1f       	adc	r19, r19
    3b7a:	22 0f       	add	r18, r18
    3b7c:	33 1f       	adc	r19, r19
    3b7e:	22 0f       	add	r18, r18
    3b80:	33 1f       	adc	r19, r19
    3b82:	82 0f       	add	r24, r18
    3b84:	93 1f       	adc	r25, r19
    3b86:	9c 01       	movw	r18, r24
    3b88:	24 0f       	add	r18, r20
    3b8a:	35 1f       	adc	r19, r21
    3b8c:	8b 81       	ldd	r24, Y+3	; 0x03
    3b8e:	9c 81       	ldd	r25, Y+4	; 0x04
    3b90:	fc 01       	movw	r30, r24
    3b92:	e2 0f       	add	r30, r18
    3b94:	f3 1f       	adc	r31, r19
    3b96:	95 81       	ldd	r25, Z+5	; 0x05
    3b98:	86 2f       	mov	r24, r22
    3b9a:	69 2f       	mov	r22, r25
    3b9c:	41 e0       	ldi	r20, 0x01	; 1
    3b9e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3ba2:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3ba4:	8a 81       	ldd	r24, Y+2	; 0x02
    3ba6:	81 30       	cpi	r24, 0x01	; 1
    3ba8:	19 f0       	breq	.+6      	; 0x3bb0 <SEV_SEG_enumInit+0x88e>
    3baa:	8a 81       	ldd	r24, Y+2	; 0x02
    3bac:	8d 83       	std	Y+5, r24	; 0x05
    3bae:	ae c3       	rjmp	.+1884   	; 0x430c <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPin,HIGH);
    3bb0:	89 81       	ldd	r24, Y+1	; 0x01
    3bb2:	48 2f       	mov	r20, r24
    3bb4:	50 e0       	ldi	r21, 0x00	; 0
    3bb6:	ca 01       	movw	r24, r20
    3bb8:	88 0f       	add	r24, r24
    3bba:	99 1f       	adc	r25, r25
    3bbc:	9c 01       	movw	r18, r24
    3bbe:	22 0f       	add	r18, r18
    3bc0:	33 1f       	adc	r19, r19
    3bc2:	22 0f       	add	r18, r18
    3bc4:	33 1f       	adc	r19, r19
    3bc6:	22 0f       	add	r18, r18
    3bc8:	33 1f       	adc	r19, r19
    3bca:	82 0f       	add	r24, r18
    3bcc:	93 1f       	adc	r25, r19
    3bce:	9c 01       	movw	r18, r24
    3bd0:	24 0f       	add	r18, r20
    3bd2:	35 1f       	adc	r19, r21
    3bd4:	8b 81       	ldd	r24, Y+3	; 0x03
    3bd6:	9c 81       	ldd	r25, Y+4	; 0x04
    3bd8:	fc 01       	movw	r30, r24
    3bda:	e2 0f       	add	r30, r18
    3bdc:	f3 1f       	adc	r31, r19
    3bde:	66 81       	ldd	r22, Z+6	; 0x06
    3be0:	89 81       	ldd	r24, Y+1	; 0x01
    3be2:	48 2f       	mov	r20, r24
    3be4:	50 e0       	ldi	r21, 0x00	; 0
    3be6:	ca 01       	movw	r24, r20
    3be8:	88 0f       	add	r24, r24
    3bea:	99 1f       	adc	r25, r25
    3bec:	9c 01       	movw	r18, r24
    3bee:	22 0f       	add	r18, r18
    3bf0:	33 1f       	adc	r19, r19
    3bf2:	22 0f       	add	r18, r18
    3bf4:	33 1f       	adc	r19, r19
    3bf6:	22 0f       	add	r18, r18
    3bf8:	33 1f       	adc	r19, r19
    3bfa:	82 0f       	add	r24, r18
    3bfc:	93 1f       	adc	r25, r19
    3bfe:	9c 01       	movw	r18, r24
    3c00:	24 0f       	add	r18, r20
    3c02:	35 1f       	adc	r19, r21
    3c04:	8b 81       	ldd	r24, Y+3	; 0x03
    3c06:	9c 81       	ldd	r25, Y+4	; 0x04
    3c08:	fc 01       	movw	r30, r24
    3c0a:	e2 0f       	add	r30, r18
    3c0c:	f3 1f       	adc	r31, r19
    3c0e:	97 81       	ldd	r25, Z+7	; 0x07
    3c10:	86 2f       	mov	r24, r22
    3c12:	69 2f       	mov	r22, r25
    3c14:	41 e0       	ldi	r20, 0x01	; 1
    3c16:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3c1a:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3c1c:	8a 81       	ldd	r24, Y+2	; 0x02
    3c1e:	81 30       	cpi	r24, 0x01	; 1
    3c20:	19 f0       	breq	.+6      	; 0x3c28 <SEV_SEG_enumInit+0x906>
    3c22:	8a 81       	ldd	r24, Y+2	; 0x02
    3c24:	8d 83       	std	Y+5, r24	; 0x05
    3c26:	72 c3       	rjmp	.+1764   	; 0x430c <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPin,HIGH);
    3c28:	89 81       	ldd	r24, Y+1	; 0x01
    3c2a:	48 2f       	mov	r20, r24
    3c2c:	50 e0       	ldi	r21, 0x00	; 0
    3c2e:	ca 01       	movw	r24, r20
    3c30:	88 0f       	add	r24, r24
    3c32:	99 1f       	adc	r25, r25
    3c34:	9c 01       	movw	r18, r24
    3c36:	22 0f       	add	r18, r18
    3c38:	33 1f       	adc	r19, r19
    3c3a:	22 0f       	add	r18, r18
    3c3c:	33 1f       	adc	r19, r19
    3c3e:	22 0f       	add	r18, r18
    3c40:	33 1f       	adc	r19, r19
    3c42:	82 0f       	add	r24, r18
    3c44:	93 1f       	adc	r25, r19
    3c46:	9c 01       	movw	r18, r24
    3c48:	24 0f       	add	r18, r20
    3c4a:	35 1f       	adc	r19, r21
    3c4c:	8b 81       	ldd	r24, Y+3	; 0x03
    3c4e:	9c 81       	ldd	r25, Y+4	; 0x04
    3c50:	fc 01       	movw	r30, r24
    3c52:	e2 0f       	add	r30, r18
    3c54:	f3 1f       	adc	r31, r19
    3c56:	60 85       	ldd	r22, Z+8	; 0x08
    3c58:	89 81       	ldd	r24, Y+1	; 0x01
    3c5a:	48 2f       	mov	r20, r24
    3c5c:	50 e0       	ldi	r21, 0x00	; 0
    3c5e:	ca 01       	movw	r24, r20
    3c60:	88 0f       	add	r24, r24
    3c62:	99 1f       	adc	r25, r25
    3c64:	9c 01       	movw	r18, r24
    3c66:	22 0f       	add	r18, r18
    3c68:	33 1f       	adc	r19, r19
    3c6a:	22 0f       	add	r18, r18
    3c6c:	33 1f       	adc	r19, r19
    3c6e:	22 0f       	add	r18, r18
    3c70:	33 1f       	adc	r19, r19
    3c72:	82 0f       	add	r24, r18
    3c74:	93 1f       	adc	r25, r19
    3c76:	9c 01       	movw	r18, r24
    3c78:	24 0f       	add	r18, r20
    3c7a:	35 1f       	adc	r19, r21
    3c7c:	8b 81       	ldd	r24, Y+3	; 0x03
    3c7e:	9c 81       	ldd	r25, Y+4	; 0x04
    3c80:	fc 01       	movw	r30, r24
    3c82:	e2 0f       	add	r30, r18
    3c84:	f3 1f       	adc	r31, r19
    3c86:	91 85       	ldd	r25, Z+9	; 0x09
    3c88:	86 2f       	mov	r24, r22
    3c8a:	69 2f       	mov	r22, r25
    3c8c:	41 e0       	ldi	r20, 0x01	; 1
    3c8e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3c92:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3c94:	8a 81       	ldd	r24, Y+2	; 0x02
    3c96:	81 30       	cpi	r24, 0x01	; 1
    3c98:	19 f0       	breq	.+6      	; 0x3ca0 <SEV_SEG_enumInit+0x97e>
    3c9a:	8a 81       	ldd	r24, Y+2	; 0x02
    3c9c:	8d 83       	std	Y+5, r24	; 0x05
    3c9e:	36 c3       	rjmp	.+1644   	; 0x430c <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPin,HIGH);
    3ca0:	89 81       	ldd	r24, Y+1	; 0x01
    3ca2:	48 2f       	mov	r20, r24
    3ca4:	50 e0       	ldi	r21, 0x00	; 0
    3ca6:	ca 01       	movw	r24, r20
    3ca8:	88 0f       	add	r24, r24
    3caa:	99 1f       	adc	r25, r25
    3cac:	9c 01       	movw	r18, r24
    3cae:	22 0f       	add	r18, r18
    3cb0:	33 1f       	adc	r19, r19
    3cb2:	22 0f       	add	r18, r18
    3cb4:	33 1f       	adc	r19, r19
    3cb6:	22 0f       	add	r18, r18
    3cb8:	33 1f       	adc	r19, r19
    3cba:	82 0f       	add	r24, r18
    3cbc:	93 1f       	adc	r25, r19
    3cbe:	9c 01       	movw	r18, r24
    3cc0:	24 0f       	add	r18, r20
    3cc2:	35 1f       	adc	r19, r21
    3cc4:	8b 81       	ldd	r24, Y+3	; 0x03
    3cc6:	9c 81       	ldd	r25, Y+4	; 0x04
    3cc8:	fc 01       	movw	r30, r24
    3cca:	e2 0f       	add	r30, r18
    3ccc:	f3 1f       	adc	r31, r19
    3cce:	62 85       	ldd	r22, Z+10	; 0x0a
    3cd0:	89 81       	ldd	r24, Y+1	; 0x01
    3cd2:	48 2f       	mov	r20, r24
    3cd4:	50 e0       	ldi	r21, 0x00	; 0
    3cd6:	ca 01       	movw	r24, r20
    3cd8:	88 0f       	add	r24, r24
    3cda:	99 1f       	adc	r25, r25
    3cdc:	9c 01       	movw	r18, r24
    3cde:	22 0f       	add	r18, r18
    3ce0:	33 1f       	adc	r19, r19
    3ce2:	22 0f       	add	r18, r18
    3ce4:	33 1f       	adc	r19, r19
    3ce6:	22 0f       	add	r18, r18
    3ce8:	33 1f       	adc	r19, r19
    3cea:	82 0f       	add	r24, r18
    3cec:	93 1f       	adc	r25, r19
    3cee:	9c 01       	movw	r18, r24
    3cf0:	24 0f       	add	r18, r20
    3cf2:	35 1f       	adc	r19, r21
    3cf4:	8b 81       	ldd	r24, Y+3	; 0x03
    3cf6:	9c 81       	ldd	r25, Y+4	; 0x04
    3cf8:	fc 01       	movw	r30, r24
    3cfa:	e2 0f       	add	r30, r18
    3cfc:	f3 1f       	adc	r31, r19
    3cfe:	93 85       	ldd	r25, Z+11	; 0x0b
    3d00:	86 2f       	mov	r24, r22
    3d02:	69 2f       	mov	r22, r25
    3d04:	41 e0       	ldi	r20, 0x01	; 1
    3d06:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3d0a:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3d0c:	8a 81       	ldd	r24, Y+2	; 0x02
    3d0e:	81 30       	cpi	r24, 0x01	; 1
    3d10:	19 f0       	breq	.+6      	; 0x3d18 <SEV_SEG_enumInit+0x9f6>
    3d12:	8a 81       	ldd	r24, Y+2	; 0x02
    3d14:	8d 83       	std	Y+5, r24	; 0x05
    3d16:	fa c2       	rjmp	.+1524   	; 0x430c <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPin,HIGH);
    3d18:	89 81       	ldd	r24, Y+1	; 0x01
    3d1a:	48 2f       	mov	r20, r24
    3d1c:	50 e0       	ldi	r21, 0x00	; 0
    3d1e:	ca 01       	movw	r24, r20
    3d20:	88 0f       	add	r24, r24
    3d22:	99 1f       	adc	r25, r25
    3d24:	9c 01       	movw	r18, r24
    3d26:	22 0f       	add	r18, r18
    3d28:	33 1f       	adc	r19, r19
    3d2a:	22 0f       	add	r18, r18
    3d2c:	33 1f       	adc	r19, r19
    3d2e:	22 0f       	add	r18, r18
    3d30:	33 1f       	adc	r19, r19
    3d32:	82 0f       	add	r24, r18
    3d34:	93 1f       	adc	r25, r19
    3d36:	9c 01       	movw	r18, r24
    3d38:	24 0f       	add	r18, r20
    3d3a:	35 1f       	adc	r19, r21
    3d3c:	8b 81       	ldd	r24, Y+3	; 0x03
    3d3e:	9c 81       	ldd	r25, Y+4	; 0x04
    3d40:	fc 01       	movw	r30, r24
    3d42:	e2 0f       	add	r30, r18
    3d44:	f3 1f       	adc	r31, r19
    3d46:	64 85       	ldd	r22, Z+12	; 0x0c
    3d48:	89 81       	ldd	r24, Y+1	; 0x01
    3d4a:	48 2f       	mov	r20, r24
    3d4c:	50 e0       	ldi	r21, 0x00	; 0
    3d4e:	ca 01       	movw	r24, r20
    3d50:	88 0f       	add	r24, r24
    3d52:	99 1f       	adc	r25, r25
    3d54:	9c 01       	movw	r18, r24
    3d56:	22 0f       	add	r18, r18
    3d58:	33 1f       	adc	r19, r19
    3d5a:	22 0f       	add	r18, r18
    3d5c:	33 1f       	adc	r19, r19
    3d5e:	22 0f       	add	r18, r18
    3d60:	33 1f       	adc	r19, r19
    3d62:	82 0f       	add	r24, r18
    3d64:	93 1f       	adc	r25, r19
    3d66:	9c 01       	movw	r18, r24
    3d68:	24 0f       	add	r18, r20
    3d6a:	35 1f       	adc	r19, r21
    3d6c:	8b 81       	ldd	r24, Y+3	; 0x03
    3d6e:	9c 81       	ldd	r25, Y+4	; 0x04
    3d70:	fc 01       	movw	r30, r24
    3d72:	e2 0f       	add	r30, r18
    3d74:	f3 1f       	adc	r31, r19
    3d76:	95 85       	ldd	r25, Z+13	; 0x0d
    3d78:	86 2f       	mov	r24, r22
    3d7a:	69 2f       	mov	r22, r25
    3d7c:	41 e0       	ldi	r20, 0x01	; 1
    3d7e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3d82:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3d84:	8a 81       	ldd	r24, Y+2	; 0x02
    3d86:	81 30       	cpi	r24, 0x01	; 1
    3d88:	29 f0       	breq	.+10     	; 0x3d94 <SEV_SEG_enumInit+0xa72>
    3d8a:	8a 81       	ldd	r24, Y+2	; 0x02
    3d8c:	8d 83       	std	Y+5, r24	; 0x05
    3d8e:	be c2       	rjmp	.+1404   	; 0x430c <SEV_SEG_enumInit+0xfea>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    3d90:	83 e0       	ldi	r24, 0x03	; 3
    3d92:	8a 83       	std	Y+2, r24	; 0x02
			}

			if (Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port<=DIO_PORTD
    3d94:	89 81       	ldd	r24, Y+1	; 0x01
    3d96:	48 2f       	mov	r20, r24
    3d98:	50 e0       	ldi	r21, 0x00	; 0
    3d9a:	ca 01       	movw	r24, r20
    3d9c:	88 0f       	add	r24, r24
    3d9e:	99 1f       	adc	r25, r25
    3da0:	9c 01       	movw	r18, r24
    3da2:	22 0f       	add	r18, r18
    3da4:	33 1f       	adc	r19, r19
    3da6:	22 0f       	add	r18, r18
    3da8:	33 1f       	adc	r19, r19
    3daa:	22 0f       	add	r18, r18
    3dac:	33 1f       	adc	r19, r19
    3dae:	82 0f       	add	r24, r18
    3db0:	93 1f       	adc	r25, r19
    3db2:	9c 01       	movw	r18, r24
    3db4:	24 0f       	add	r18, r20
    3db6:	35 1f       	adc	r19, r21
    3db8:	8b 81       	ldd	r24, Y+3	; 0x03
    3dba:	9c 81       	ldd	r25, Y+4	; 0x04
    3dbc:	fc 01       	movw	r30, r24
    3dbe:	e2 0f       	add	r30, r18
    3dc0:	f3 1f       	adc	r31, r19
    3dc2:	86 85       	ldd	r24, Z+14	; 0x0e
    3dc4:	84 30       	cpi	r24, 0x04	; 4
    3dc6:	08 f0       	brcs	.+2      	; 0x3dca <SEV_SEG_enumInit+0xaa8>
    3dc8:	07 c1       	rjmp	.+526    	; 0x3fd8 <SEV_SEG_enumInit+0xcb6>
    3dca:	89 81       	ldd	r24, Y+1	; 0x01
    3dcc:	48 2f       	mov	r20, r24
    3dce:	50 e0       	ldi	r21, 0x00	; 0
    3dd0:	ca 01       	movw	r24, r20
    3dd2:	88 0f       	add	r24, r24
    3dd4:	99 1f       	adc	r25, r25
    3dd6:	9c 01       	movw	r18, r24
    3dd8:	22 0f       	add	r18, r18
    3dda:	33 1f       	adc	r19, r19
    3ddc:	22 0f       	add	r18, r18
    3dde:	33 1f       	adc	r19, r19
    3de0:	22 0f       	add	r18, r18
    3de2:	33 1f       	adc	r19, r19
    3de4:	82 0f       	add	r24, r18
    3de6:	93 1f       	adc	r25, r19
    3de8:	9c 01       	movw	r18, r24
    3dea:	24 0f       	add	r18, r20
    3dec:	35 1f       	adc	r19, r21
    3dee:	8b 81       	ldd	r24, Y+3	; 0x03
    3df0:	9c 81       	ldd	r25, Y+4	; 0x04
    3df2:	fc 01       	movw	r30, r24
    3df4:	e2 0f       	add	r30, r18
    3df6:	f3 1f       	adc	r31, r19
    3df8:	87 85       	ldd	r24, Z+15	; 0x0f
    3dfa:	88 30       	cpi	r24, 0x08	; 8
    3dfc:	08 f0       	brcs	.+2      	; 0x3e00 <SEV_SEG_enumInit+0xade>
    3dfe:	ec c0       	rjmp	.+472    	; 0x3fd8 <SEV_SEG_enumInit+0xcb6>
				&&Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Pin<=DIO_PIN7)
			{
				Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Pin,OUTPUT);
    3e00:	89 81       	ldd	r24, Y+1	; 0x01
    3e02:	48 2f       	mov	r20, r24
    3e04:	50 e0       	ldi	r21, 0x00	; 0
    3e06:	ca 01       	movw	r24, r20
    3e08:	88 0f       	add	r24, r24
    3e0a:	99 1f       	adc	r25, r25
    3e0c:	9c 01       	movw	r18, r24
    3e0e:	22 0f       	add	r18, r18
    3e10:	33 1f       	adc	r19, r19
    3e12:	22 0f       	add	r18, r18
    3e14:	33 1f       	adc	r19, r19
    3e16:	22 0f       	add	r18, r18
    3e18:	33 1f       	adc	r19, r19
    3e1a:	82 0f       	add	r24, r18
    3e1c:	93 1f       	adc	r25, r19
    3e1e:	9c 01       	movw	r18, r24
    3e20:	24 0f       	add	r18, r20
    3e22:	35 1f       	adc	r19, r21
    3e24:	8b 81       	ldd	r24, Y+3	; 0x03
    3e26:	9c 81       	ldd	r25, Y+4	; 0x04
    3e28:	fc 01       	movw	r30, r24
    3e2a:	e2 0f       	add	r30, r18
    3e2c:	f3 1f       	adc	r31, r19
    3e2e:	66 85       	ldd	r22, Z+14	; 0x0e
    3e30:	89 81       	ldd	r24, Y+1	; 0x01
    3e32:	48 2f       	mov	r20, r24
    3e34:	50 e0       	ldi	r21, 0x00	; 0
    3e36:	ca 01       	movw	r24, r20
    3e38:	88 0f       	add	r24, r24
    3e3a:	99 1f       	adc	r25, r25
    3e3c:	9c 01       	movw	r18, r24
    3e3e:	22 0f       	add	r18, r18
    3e40:	33 1f       	adc	r19, r19
    3e42:	22 0f       	add	r18, r18
    3e44:	33 1f       	adc	r19, r19
    3e46:	22 0f       	add	r18, r18
    3e48:	33 1f       	adc	r19, r19
    3e4a:	82 0f       	add	r24, r18
    3e4c:	93 1f       	adc	r25, r19
    3e4e:	9c 01       	movw	r18, r24
    3e50:	24 0f       	add	r18, r20
    3e52:	35 1f       	adc	r19, r21
    3e54:	8b 81       	ldd	r24, Y+3	; 0x03
    3e56:	9c 81       	ldd	r25, Y+4	; 0x04
    3e58:	fc 01       	movw	r30, r24
    3e5a:	e2 0f       	add	r30, r18
    3e5c:	f3 1f       	adc	r31, r19
    3e5e:	97 85       	ldd	r25, Z+15	; 0x0f
    3e60:	86 2f       	mov	r24, r22
    3e62:	69 2f       	mov	r22, r25
    3e64:	41 e0       	ldi	r20, 0x01	; 1
    3e66:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    3e6a:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3e6c:	8a 81       	ldd	r24, Y+2	; 0x02
    3e6e:	81 30       	cpi	r24, 0x01	; 1
    3e70:	19 f0       	breq	.+6      	; 0x3e78 <SEV_SEG_enumInit+0xb56>
    3e72:	8a 81       	ldd	r24, Y+2	; 0x02
    3e74:	8d 83       	std	Y+5, r24	; 0x05
    3e76:	4a c2       	rjmp	.+1172   	; 0x430c <SEV_SEG_enumInit+0xfea>

				if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_CATHODE)
    3e78:	89 81       	ldd	r24, Y+1	; 0x01
    3e7a:	48 2f       	mov	r20, r24
    3e7c:	50 e0       	ldi	r21, 0x00	; 0
    3e7e:	ca 01       	movw	r24, r20
    3e80:	88 0f       	add	r24, r24
    3e82:	99 1f       	adc	r25, r25
    3e84:	9c 01       	movw	r18, r24
    3e86:	22 0f       	add	r18, r18
    3e88:	33 1f       	adc	r19, r19
    3e8a:	22 0f       	add	r18, r18
    3e8c:	33 1f       	adc	r19, r19
    3e8e:	22 0f       	add	r18, r18
    3e90:	33 1f       	adc	r19, r19
    3e92:	82 0f       	add	r24, r18
    3e94:	93 1f       	adc	r25, r19
    3e96:	9c 01       	movw	r18, r24
    3e98:	24 0f       	add	r18, r20
    3e9a:	35 1f       	adc	r19, r21
    3e9c:	8b 81       	ldd	r24, Y+3	; 0x03
    3e9e:	9c 81       	ldd	r25, Y+4	; 0x04
    3ea0:	fc 01       	movw	r30, r24
    3ea2:	e2 0f       	add	r30, r18
    3ea4:	f3 1f       	adc	r31, r19
    3ea6:	82 89       	ldd	r24, Z+18	; 0x12
    3ea8:	81 30       	cpi	r24, 0x01	; 1
    3eaa:	e9 f5       	brne	.+122    	; 0x3f26 <SEV_SEG_enumInit+0xc04>
				{
					Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Pin,LOW);
    3eac:	89 81       	ldd	r24, Y+1	; 0x01
    3eae:	48 2f       	mov	r20, r24
    3eb0:	50 e0       	ldi	r21, 0x00	; 0
    3eb2:	ca 01       	movw	r24, r20
    3eb4:	88 0f       	add	r24, r24
    3eb6:	99 1f       	adc	r25, r25
    3eb8:	9c 01       	movw	r18, r24
    3eba:	22 0f       	add	r18, r18
    3ebc:	33 1f       	adc	r19, r19
    3ebe:	22 0f       	add	r18, r18
    3ec0:	33 1f       	adc	r19, r19
    3ec2:	22 0f       	add	r18, r18
    3ec4:	33 1f       	adc	r19, r19
    3ec6:	82 0f       	add	r24, r18
    3ec8:	93 1f       	adc	r25, r19
    3eca:	9c 01       	movw	r18, r24
    3ecc:	24 0f       	add	r18, r20
    3ece:	35 1f       	adc	r19, r21
    3ed0:	8b 81       	ldd	r24, Y+3	; 0x03
    3ed2:	9c 81       	ldd	r25, Y+4	; 0x04
    3ed4:	fc 01       	movw	r30, r24
    3ed6:	e2 0f       	add	r30, r18
    3ed8:	f3 1f       	adc	r31, r19
    3eda:	66 85       	ldd	r22, Z+14	; 0x0e
    3edc:	89 81       	ldd	r24, Y+1	; 0x01
    3ede:	48 2f       	mov	r20, r24
    3ee0:	50 e0       	ldi	r21, 0x00	; 0
    3ee2:	ca 01       	movw	r24, r20
    3ee4:	88 0f       	add	r24, r24
    3ee6:	99 1f       	adc	r25, r25
    3ee8:	9c 01       	movw	r18, r24
    3eea:	22 0f       	add	r18, r18
    3eec:	33 1f       	adc	r19, r19
    3eee:	22 0f       	add	r18, r18
    3ef0:	33 1f       	adc	r19, r19
    3ef2:	22 0f       	add	r18, r18
    3ef4:	33 1f       	adc	r19, r19
    3ef6:	82 0f       	add	r24, r18
    3ef8:	93 1f       	adc	r25, r19
    3efa:	9c 01       	movw	r18, r24
    3efc:	24 0f       	add	r18, r20
    3efe:	35 1f       	adc	r19, r21
    3f00:	8b 81       	ldd	r24, Y+3	; 0x03
    3f02:	9c 81       	ldd	r25, Y+4	; 0x04
    3f04:	fc 01       	movw	r30, r24
    3f06:	e2 0f       	add	r30, r18
    3f08:	f3 1f       	adc	r31, r19
    3f0a:	97 85       	ldd	r25, Z+15	; 0x0f
    3f0c:	86 2f       	mov	r24, r22
    3f0e:	69 2f       	mov	r22, r25
    3f10:	40 e0       	ldi	r20, 0x00	; 0
    3f12:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3f16:	8a 83       	std	Y+2, r24	; 0x02
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3f18:	8a 81       	ldd	r24, Y+2	; 0x02
    3f1a:	81 30       	cpi	r24, 0x01	; 1
    3f1c:	09 f4       	brne	.+2      	; 0x3f20 <SEV_SEG_enumInit+0xbfe>
    3f1e:	92 c0       	rjmp	.+292    	; 0x4044 <SEV_SEG_enumInit+0xd22>
    3f20:	8a 81       	ldd	r24, Y+2	; 0x02
    3f22:	8d 83       	std	Y+5, r24	; 0x05
    3f24:	f3 c1       	rjmp	.+998    	; 0x430c <SEV_SEG_enumInit+0xfea>
				}
				else if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_ANODE)
    3f26:	89 81       	ldd	r24, Y+1	; 0x01
    3f28:	48 2f       	mov	r20, r24
    3f2a:	50 e0       	ldi	r21, 0x00	; 0
    3f2c:	ca 01       	movw	r24, r20
    3f2e:	88 0f       	add	r24, r24
    3f30:	99 1f       	adc	r25, r25
    3f32:	9c 01       	movw	r18, r24
    3f34:	22 0f       	add	r18, r18
    3f36:	33 1f       	adc	r19, r19
    3f38:	22 0f       	add	r18, r18
    3f3a:	33 1f       	adc	r19, r19
    3f3c:	22 0f       	add	r18, r18
    3f3e:	33 1f       	adc	r19, r19
    3f40:	82 0f       	add	r24, r18
    3f42:	93 1f       	adc	r25, r19
    3f44:	9c 01       	movw	r18, r24
    3f46:	24 0f       	add	r18, r20
    3f48:	35 1f       	adc	r19, r21
    3f4a:	8b 81       	ldd	r24, Y+3	; 0x03
    3f4c:	9c 81       	ldd	r25, Y+4	; 0x04
    3f4e:	fc 01       	movw	r30, r24
    3f50:	e2 0f       	add	r30, r18
    3f52:	f3 1f       	adc	r31, r19
    3f54:	82 89       	ldd	r24, Z+18	; 0x12
    3f56:	88 23       	and	r24, r24
    3f58:	e1 f5       	brne	.+120    	; 0x3fd2 <SEV_SEG_enumInit+0xcb0>
				{
					Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Pin,HIGH);
    3f5a:	89 81       	ldd	r24, Y+1	; 0x01
    3f5c:	48 2f       	mov	r20, r24
    3f5e:	50 e0       	ldi	r21, 0x00	; 0
    3f60:	ca 01       	movw	r24, r20
    3f62:	88 0f       	add	r24, r24
    3f64:	99 1f       	adc	r25, r25
    3f66:	9c 01       	movw	r18, r24
    3f68:	22 0f       	add	r18, r18
    3f6a:	33 1f       	adc	r19, r19
    3f6c:	22 0f       	add	r18, r18
    3f6e:	33 1f       	adc	r19, r19
    3f70:	22 0f       	add	r18, r18
    3f72:	33 1f       	adc	r19, r19
    3f74:	82 0f       	add	r24, r18
    3f76:	93 1f       	adc	r25, r19
    3f78:	9c 01       	movw	r18, r24
    3f7a:	24 0f       	add	r18, r20
    3f7c:	35 1f       	adc	r19, r21
    3f7e:	8b 81       	ldd	r24, Y+3	; 0x03
    3f80:	9c 81       	ldd	r25, Y+4	; 0x04
    3f82:	fc 01       	movw	r30, r24
    3f84:	e2 0f       	add	r30, r18
    3f86:	f3 1f       	adc	r31, r19
    3f88:	66 85       	ldd	r22, Z+14	; 0x0e
    3f8a:	89 81       	ldd	r24, Y+1	; 0x01
    3f8c:	48 2f       	mov	r20, r24
    3f8e:	50 e0       	ldi	r21, 0x00	; 0
    3f90:	ca 01       	movw	r24, r20
    3f92:	88 0f       	add	r24, r24
    3f94:	99 1f       	adc	r25, r25
    3f96:	9c 01       	movw	r18, r24
    3f98:	22 0f       	add	r18, r18
    3f9a:	33 1f       	adc	r19, r19
    3f9c:	22 0f       	add	r18, r18
    3f9e:	33 1f       	adc	r19, r19
    3fa0:	22 0f       	add	r18, r18
    3fa2:	33 1f       	adc	r19, r19
    3fa4:	82 0f       	add	r24, r18
    3fa6:	93 1f       	adc	r25, r19
    3fa8:	9c 01       	movw	r18, r24
    3faa:	24 0f       	add	r18, r20
    3fac:	35 1f       	adc	r19, r21
    3fae:	8b 81       	ldd	r24, Y+3	; 0x03
    3fb0:	9c 81       	ldd	r25, Y+4	; 0x04
    3fb2:	fc 01       	movw	r30, r24
    3fb4:	e2 0f       	add	r30, r18
    3fb6:	f3 1f       	adc	r31, r19
    3fb8:	97 85       	ldd	r25, Z+15	; 0x0f
    3fba:	86 2f       	mov	r24, r22
    3fbc:	69 2f       	mov	r22, r25
    3fbe:	41 e0       	ldi	r20, 0x01	; 1
    3fc0:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    3fc4:	8a 83       	std	Y+2, r24	; 0x02
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3fc6:	8a 81       	ldd	r24, Y+2	; 0x02
    3fc8:	81 30       	cpi	r24, 0x01	; 1
    3fca:	e1 f1       	breq	.+120    	; 0x4044 <SEV_SEG_enumInit+0xd22>
    3fcc:	8a 81       	ldd	r24, Y+2	; 0x02
    3fce:	8d 83       	std	Y+5, r24	; 0x05
    3fd0:	9d c1       	rjmp	.+826    	; 0x430c <SEV_SEG_enumInit+0xfea>
				}
				else
				{
					Local_enumErrorState=ES_OUT_OF_RANGE;
    3fd2:	83 e0       	ldi	r24, 0x03	; 3
    3fd4:	8a 83       	std	Y+2, r24	; 0x02
    3fd6:	36 c0       	rjmp	.+108    	; 0x4044 <SEV_SEG_enumInit+0xd22>
				}
			}
			else if (Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    3fd8:	89 81       	ldd	r24, Y+1	; 0x01
    3fda:	48 2f       	mov	r20, r24
    3fdc:	50 e0       	ldi	r21, 0x00	; 0
    3fde:	ca 01       	movw	r24, r20
    3fe0:	88 0f       	add	r24, r24
    3fe2:	99 1f       	adc	r25, r25
    3fe4:	9c 01       	movw	r18, r24
    3fe6:	22 0f       	add	r18, r18
    3fe8:	33 1f       	adc	r19, r19
    3fea:	22 0f       	add	r18, r18
    3fec:	33 1f       	adc	r19, r19
    3fee:	22 0f       	add	r18, r18
    3ff0:	33 1f       	adc	r19, r19
    3ff2:	82 0f       	add	r24, r18
    3ff4:	93 1f       	adc	r25, r19
    3ff6:	9c 01       	movw	r18, r24
    3ff8:	24 0f       	add	r18, r20
    3ffa:	35 1f       	adc	r19, r21
    3ffc:	8b 81       	ldd	r24, Y+3	; 0x03
    3ffe:	9c 81       	ldd	r25, Y+4	; 0x04
    4000:	fc 01       	movw	r30, r24
    4002:	e2 0f       	add	r30, r18
    4004:	f3 1f       	adc	r31, r19
    4006:	86 85       	ldd	r24, Z+14	; 0x0e
    4008:	88 30       	cpi	r24, 0x08	; 8
    400a:	d1 f4       	brne	.+52     	; 0x4040 <SEV_SEG_enumInit+0xd1e>
    400c:	89 81       	ldd	r24, Y+1	; 0x01
    400e:	48 2f       	mov	r20, r24
    4010:	50 e0       	ldi	r21, 0x00	; 0
    4012:	ca 01       	movw	r24, r20
    4014:	88 0f       	add	r24, r24
    4016:	99 1f       	adc	r25, r25
    4018:	9c 01       	movw	r18, r24
    401a:	22 0f       	add	r18, r18
    401c:	33 1f       	adc	r19, r19
    401e:	22 0f       	add	r18, r18
    4020:	33 1f       	adc	r19, r19
    4022:	22 0f       	add	r18, r18
    4024:	33 1f       	adc	r19, r19
    4026:	82 0f       	add	r24, r18
    4028:	93 1f       	adc	r25, r19
    402a:	9c 01       	movw	r18, r24
    402c:	24 0f       	add	r18, r20
    402e:	35 1f       	adc	r19, r21
    4030:	8b 81       	ldd	r24, Y+3	; 0x03
    4032:	9c 81       	ldd	r25, Y+4	; 0x04
    4034:	fc 01       	movw	r30, r24
    4036:	e2 0f       	add	r30, r18
    4038:	f3 1f       	adc	r31, r19
    403a:	87 85       	ldd	r24, Z+15	; 0x0f
    403c:	88 30       	cpi	r24, 0x08	; 8
    403e:	11 f0       	breq	.+4      	; 0x4044 <SEV_SEG_enumInit+0xd22>
			{

			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    4040:	83 e0       	ldi	r24, 0x03	; 3
    4042:	8a 83       	std	Y+2, r24	; 0x02
			}

			if (Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port<=DIO_PORTD
    4044:	89 81       	ldd	r24, Y+1	; 0x01
    4046:	48 2f       	mov	r20, r24
    4048:	50 e0       	ldi	r21, 0x00	; 0
    404a:	ca 01       	movw	r24, r20
    404c:	88 0f       	add	r24, r24
    404e:	99 1f       	adc	r25, r25
    4050:	9c 01       	movw	r18, r24
    4052:	22 0f       	add	r18, r18
    4054:	33 1f       	adc	r19, r19
    4056:	22 0f       	add	r18, r18
    4058:	33 1f       	adc	r19, r19
    405a:	22 0f       	add	r18, r18
    405c:	33 1f       	adc	r19, r19
    405e:	82 0f       	add	r24, r18
    4060:	93 1f       	adc	r25, r19
    4062:	9c 01       	movw	r18, r24
    4064:	24 0f       	add	r18, r20
    4066:	35 1f       	adc	r19, r21
    4068:	8b 81       	ldd	r24, Y+3	; 0x03
    406a:	9c 81       	ldd	r25, Y+4	; 0x04
    406c:	fc 01       	movw	r30, r24
    406e:	e2 0f       	add	r30, r18
    4070:	f3 1f       	adc	r31, r19
    4072:	80 89       	ldd	r24, Z+16	; 0x10
    4074:	84 30       	cpi	r24, 0x04	; 4
    4076:	08 f0       	brcs	.+2      	; 0x407a <SEV_SEG_enumInit+0xd58>
    4078:	07 c1       	rjmp	.+526    	; 0x4288 <SEV_SEG_enumInit+0xf66>
    407a:	89 81       	ldd	r24, Y+1	; 0x01
    407c:	48 2f       	mov	r20, r24
    407e:	50 e0       	ldi	r21, 0x00	; 0
    4080:	ca 01       	movw	r24, r20
    4082:	88 0f       	add	r24, r24
    4084:	99 1f       	adc	r25, r25
    4086:	9c 01       	movw	r18, r24
    4088:	22 0f       	add	r18, r18
    408a:	33 1f       	adc	r19, r19
    408c:	22 0f       	add	r18, r18
    408e:	33 1f       	adc	r19, r19
    4090:	22 0f       	add	r18, r18
    4092:	33 1f       	adc	r19, r19
    4094:	82 0f       	add	r24, r18
    4096:	93 1f       	adc	r25, r19
    4098:	9c 01       	movw	r18, r24
    409a:	24 0f       	add	r18, r20
    409c:	35 1f       	adc	r19, r21
    409e:	8b 81       	ldd	r24, Y+3	; 0x03
    40a0:	9c 81       	ldd	r25, Y+4	; 0x04
    40a2:	fc 01       	movw	r30, r24
    40a4:	e2 0f       	add	r30, r18
    40a6:	f3 1f       	adc	r31, r19
    40a8:	81 89       	ldd	r24, Z+17	; 0x11
    40aa:	88 30       	cpi	r24, 0x08	; 8
    40ac:	08 f0       	brcs	.+2      	; 0x40b0 <SEV_SEG_enumInit+0xd8e>
    40ae:	ec c0       	rjmp	.+472    	; 0x4288 <SEV_SEG_enumInit+0xf66>
				&&Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
			{
				Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Pin,OUTPUT);
    40b0:	89 81       	ldd	r24, Y+1	; 0x01
    40b2:	48 2f       	mov	r20, r24
    40b4:	50 e0       	ldi	r21, 0x00	; 0
    40b6:	ca 01       	movw	r24, r20
    40b8:	88 0f       	add	r24, r24
    40ba:	99 1f       	adc	r25, r25
    40bc:	9c 01       	movw	r18, r24
    40be:	22 0f       	add	r18, r18
    40c0:	33 1f       	adc	r19, r19
    40c2:	22 0f       	add	r18, r18
    40c4:	33 1f       	adc	r19, r19
    40c6:	22 0f       	add	r18, r18
    40c8:	33 1f       	adc	r19, r19
    40ca:	82 0f       	add	r24, r18
    40cc:	93 1f       	adc	r25, r19
    40ce:	9c 01       	movw	r18, r24
    40d0:	24 0f       	add	r18, r20
    40d2:	35 1f       	adc	r19, r21
    40d4:	8b 81       	ldd	r24, Y+3	; 0x03
    40d6:	9c 81       	ldd	r25, Y+4	; 0x04
    40d8:	fc 01       	movw	r30, r24
    40da:	e2 0f       	add	r30, r18
    40dc:	f3 1f       	adc	r31, r19
    40de:	60 89       	ldd	r22, Z+16	; 0x10
    40e0:	89 81       	ldd	r24, Y+1	; 0x01
    40e2:	48 2f       	mov	r20, r24
    40e4:	50 e0       	ldi	r21, 0x00	; 0
    40e6:	ca 01       	movw	r24, r20
    40e8:	88 0f       	add	r24, r24
    40ea:	99 1f       	adc	r25, r25
    40ec:	9c 01       	movw	r18, r24
    40ee:	22 0f       	add	r18, r18
    40f0:	33 1f       	adc	r19, r19
    40f2:	22 0f       	add	r18, r18
    40f4:	33 1f       	adc	r19, r19
    40f6:	22 0f       	add	r18, r18
    40f8:	33 1f       	adc	r19, r19
    40fa:	82 0f       	add	r24, r18
    40fc:	93 1f       	adc	r25, r19
    40fe:	9c 01       	movw	r18, r24
    4100:	24 0f       	add	r18, r20
    4102:	35 1f       	adc	r19, r21
    4104:	8b 81       	ldd	r24, Y+3	; 0x03
    4106:	9c 81       	ldd	r25, Y+4	; 0x04
    4108:	fc 01       	movw	r30, r24
    410a:	e2 0f       	add	r30, r18
    410c:	f3 1f       	adc	r31, r19
    410e:	91 89       	ldd	r25, Z+17	; 0x11
    4110:	86 2f       	mov	r24, r22
    4112:	69 2f       	mov	r22, r25
    4114:	41 e0       	ldi	r20, 0x01	; 1
    4116:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    411a:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    411c:	8a 81       	ldd	r24, Y+2	; 0x02
    411e:	81 30       	cpi	r24, 0x01	; 1
    4120:	19 f0       	breq	.+6      	; 0x4128 <SEV_SEG_enumInit+0xe06>
    4122:	8a 81       	ldd	r24, Y+2	; 0x02
    4124:	8d 83       	std	Y+5, r24	; 0x05
    4126:	f2 c0       	rjmp	.+484    	; 0x430c <SEV_SEG_enumInit+0xfea>

				if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_CATHODE)
    4128:	89 81       	ldd	r24, Y+1	; 0x01
    412a:	48 2f       	mov	r20, r24
    412c:	50 e0       	ldi	r21, 0x00	; 0
    412e:	ca 01       	movw	r24, r20
    4130:	88 0f       	add	r24, r24
    4132:	99 1f       	adc	r25, r25
    4134:	9c 01       	movw	r18, r24
    4136:	22 0f       	add	r18, r18
    4138:	33 1f       	adc	r19, r19
    413a:	22 0f       	add	r18, r18
    413c:	33 1f       	adc	r19, r19
    413e:	22 0f       	add	r18, r18
    4140:	33 1f       	adc	r19, r19
    4142:	82 0f       	add	r24, r18
    4144:	93 1f       	adc	r25, r19
    4146:	9c 01       	movw	r18, r24
    4148:	24 0f       	add	r18, r20
    414a:	35 1f       	adc	r19, r21
    414c:	8b 81       	ldd	r24, Y+3	; 0x03
    414e:	9c 81       	ldd	r25, Y+4	; 0x04
    4150:	fc 01       	movw	r30, r24
    4152:	e2 0f       	add	r30, r18
    4154:	f3 1f       	adc	r31, r19
    4156:	82 89       	ldd	r24, Z+18	; 0x12
    4158:	81 30       	cpi	r24, 0x01	; 1
    415a:	e9 f5       	brne	.+122    	; 0x41d6 <SEV_SEG_enumInit+0xeb4>
				{
					Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Pin,LOW);
    415c:	89 81       	ldd	r24, Y+1	; 0x01
    415e:	48 2f       	mov	r20, r24
    4160:	50 e0       	ldi	r21, 0x00	; 0
    4162:	ca 01       	movw	r24, r20
    4164:	88 0f       	add	r24, r24
    4166:	99 1f       	adc	r25, r25
    4168:	9c 01       	movw	r18, r24
    416a:	22 0f       	add	r18, r18
    416c:	33 1f       	adc	r19, r19
    416e:	22 0f       	add	r18, r18
    4170:	33 1f       	adc	r19, r19
    4172:	22 0f       	add	r18, r18
    4174:	33 1f       	adc	r19, r19
    4176:	82 0f       	add	r24, r18
    4178:	93 1f       	adc	r25, r19
    417a:	9c 01       	movw	r18, r24
    417c:	24 0f       	add	r18, r20
    417e:	35 1f       	adc	r19, r21
    4180:	8b 81       	ldd	r24, Y+3	; 0x03
    4182:	9c 81       	ldd	r25, Y+4	; 0x04
    4184:	fc 01       	movw	r30, r24
    4186:	e2 0f       	add	r30, r18
    4188:	f3 1f       	adc	r31, r19
    418a:	60 89       	ldd	r22, Z+16	; 0x10
    418c:	89 81       	ldd	r24, Y+1	; 0x01
    418e:	48 2f       	mov	r20, r24
    4190:	50 e0       	ldi	r21, 0x00	; 0
    4192:	ca 01       	movw	r24, r20
    4194:	88 0f       	add	r24, r24
    4196:	99 1f       	adc	r25, r25
    4198:	9c 01       	movw	r18, r24
    419a:	22 0f       	add	r18, r18
    419c:	33 1f       	adc	r19, r19
    419e:	22 0f       	add	r18, r18
    41a0:	33 1f       	adc	r19, r19
    41a2:	22 0f       	add	r18, r18
    41a4:	33 1f       	adc	r19, r19
    41a6:	82 0f       	add	r24, r18
    41a8:	93 1f       	adc	r25, r19
    41aa:	9c 01       	movw	r18, r24
    41ac:	24 0f       	add	r18, r20
    41ae:	35 1f       	adc	r19, r21
    41b0:	8b 81       	ldd	r24, Y+3	; 0x03
    41b2:	9c 81       	ldd	r25, Y+4	; 0x04
    41b4:	fc 01       	movw	r30, r24
    41b6:	e2 0f       	add	r30, r18
    41b8:	f3 1f       	adc	r31, r19
    41ba:	91 89       	ldd	r25, Z+17	; 0x11
    41bc:	86 2f       	mov	r24, r22
    41be:	69 2f       	mov	r22, r25
    41c0:	40 e0       	ldi	r20, 0x00	; 0
    41c2:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    41c6:	8a 83       	std	Y+2, r24	; 0x02
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    41c8:	8a 81       	ldd	r24, Y+2	; 0x02
    41ca:	81 30       	cpi	r24, 0x01	; 1
    41cc:	09 f4       	brne	.+2      	; 0x41d0 <SEV_SEG_enumInit+0xeae>
    41ce:	92 c0       	rjmp	.+292    	; 0x42f4 <SEV_SEG_enumInit+0xfd2>
    41d0:	8a 81       	ldd	r24, Y+2	; 0x02
    41d2:	8d 83       	std	Y+5, r24	; 0x05
    41d4:	9b c0       	rjmp	.+310    	; 0x430c <SEV_SEG_enumInit+0xfea>
				}
				else if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_ANODE)
    41d6:	89 81       	ldd	r24, Y+1	; 0x01
    41d8:	48 2f       	mov	r20, r24
    41da:	50 e0       	ldi	r21, 0x00	; 0
    41dc:	ca 01       	movw	r24, r20
    41de:	88 0f       	add	r24, r24
    41e0:	99 1f       	adc	r25, r25
    41e2:	9c 01       	movw	r18, r24
    41e4:	22 0f       	add	r18, r18
    41e6:	33 1f       	adc	r19, r19
    41e8:	22 0f       	add	r18, r18
    41ea:	33 1f       	adc	r19, r19
    41ec:	22 0f       	add	r18, r18
    41ee:	33 1f       	adc	r19, r19
    41f0:	82 0f       	add	r24, r18
    41f2:	93 1f       	adc	r25, r19
    41f4:	9c 01       	movw	r18, r24
    41f6:	24 0f       	add	r18, r20
    41f8:	35 1f       	adc	r19, r21
    41fa:	8b 81       	ldd	r24, Y+3	; 0x03
    41fc:	9c 81       	ldd	r25, Y+4	; 0x04
    41fe:	fc 01       	movw	r30, r24
    4200:	e2 0f       	add	r30, r18
    4202:	f3 1f       	adc	r31, r19
    4204:	82 89       	ldd	r24, Z+18	; 0x12
    4206:	88 23       	and	r24, r24
    4208:	e1 f5       	brne	.+120    	; 0x4282 <SEV_SEG_enumInit+0xf60>
				{
					Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Pin,HIGH);
    420a:	89 81       	ldd	r24, Y+1	; 0x01
    420c:	48 2f       	mov	r20, r24
    420e:	50 e0       	ldi	r21, 0x00	; 0
    4210:	ca 01       	movw	r24, r20
    4212:	88 0f       	add	r24, r24
    4214:	99 1f       	adc	r25, r25
    4216:	9c 01       	movw	r18, r24
    4218:	22 0f       	add	r18, r18
    421a:	33 1f       	adc	r19, r19
    421c:	22 0f       	add	r18, r18
    421e:	33 1f       	adc	r19, r19
    4220:	22 0f       	add	r18, r18
    4222:	33 1f       	adc	r19, r19
    4224:	82 0f       	add	r24, r18
    4226:	93 1f       	adc	r25, r19
    4228:	9c 01       	movw	r18, r24
    422a:	24 0f       	add	r18, r20
    422c:	35 1f       	adc	r19, r21
    422e:	8b 81       	ldd	r24, Y+3	; 0x03
    4230:	9c 81       	ldd	r25, Y+4	; 0x04
    4232:	fc 01       	movw	r30, r24
    4234:	e2 0f       	add	r30, r18
    4236:	f3 1f       	adc	r31, r19
    4238:	60 89       	ldd	r22, Z+16	; 0x10
    423a:	89 81       	ldd	r24, Y+1	; 0x01
    423c:	48 2f       	mov	r20, r24
    423e:	50 e0       	ldi	r21, 0x00	; 0
    4240:	ca 01       	movw	r24, r20
    4242:	88 0f       	add	r24, r24
    4244:	99 1f       	adc	r25, r25
    4246:	9c 01       	movw	r18, r24
    4248:	22 0f       	add	r18, r18
    424a:	33 1f       	adc	r19, r19
    424c:	22 0f       	add	r18, r18
    424e:	33 1f       	adc	r19, r19
    4250:	22 0f       	add	r18, r18
    4252:	33 1f       	adc	r19, r19
    4254:	82 0f       	add	r24, r18
    4256:	93 1f       	adc	r25, r19
    4258:	9c 01       	movw	r18, r24
    425a:	24 0f       	add	r18, r20
    425c:	35 1f       	adc	r19, r21
    425e:	8b 81       	ldd	r24, Y+3	; 0x03
    4260:	9c 81       	ldd	r25, Y+4	; 0x04
    4262:	fc 01       	movw	r30, r24
    4264:	e2 0f       	add	r30, r18
    4266:	f3 1f       	adc	r31, r19
    4268:	91 89       	ldd	r25, Z+17	; 0x11
    426a:	86 2f       	mov	r24, r22
    426c:	69 2f       	mov	r22, r25
    426e:	41 e0       	ldi	r20, 0x01	; 1
    4270:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    4274:	8a 83       	std	Y+2, r24	; 0x02
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4276:	8a 81       	ldd	r24, Y+2	; 0x02
    4278:	81 30       	cpi	r24, 0x01	; 1
    427a:	e1 f1       	breq	.+120    	; 0x42f4 <SEV_SEG_enumInit+0xfd2>
    427c:	8a 81       	ldd	r24, Y+2	; 0x02
    427e:	8d 83       	std	Y+5, r24	; 0x05
    4280:	45 c0       	rjmp	.+138    	; 0x430c <SEV_SEG_enumInit+0xfea>
				}
				else
				{
					Local_enumErrorState=ES_OUT_OF_RANGE;
    4282:	83 e0       	ldi	r24, 0x03	; 3
    4284:	8a 83       	std	Y+2, r24	; 0x02
    4286:	36 c0       	rjmp	.+108    	; 0x42f4 <SEV_SEG_enumInit+0xfd2>
				}
			}
			else if (Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port==NOT_CONNECTED
    4288:	89 81       	ldd	r24, Y+1	; 0x01
    428a:	48 2f       	mov	r20, r24
    428c:	50 e0       	ldi	r21, 0x00	; 0
    428e:	ca 01       	movw	r24, r20
    4290:	88 0f       	add	r24, r24
    4292:	99 1f       	adc	r25, r25
    4294:	9c 01       	movw	r18, r24
    4296:	22 0f       	add	r18, r18
    4298:	33 1f       	adc	r19, r19
    429a:	22 0f       	add	r18, r18
    429c:	33 1f       	adc	r19, r19
    429e:	22 0f       	add	r18, r18
    42a0:	33 1f       	adc	r19, r19
    42a2:	82 0f       	add	r24, r18
    42a4:	93 1f       	adc	r25, r19
    42a6:	9c 01       	movw	r18, r24
    42a8:	24 0f       	add	r18, r20
    42aa:	35 1f       	adc	r19, r21
    42ac:	8b 81       	ldd	r24, Y+3	; 0x03
    42ae:	9c 81       	ldd	r25, Y+4	; 0x04
    42b0:	fc 01       	movw	r30, r24
    42b2:	e2 0f       	add	r30, r18
    42b4:	f3 1f       	adc	r31, r19
    42b6:	80 89       	ldd	r24, Z+16	; 0x10
    42b8:	88 30       	cpi	r24, 0x08	; 8
    42ba:	d1 f4       	brne	.+52     	; 0x42f0 <SEV_SEG_enumInit+0xfce>
    42bc:	89 81       	ldd	r24, Y+1	; 0x01
    42be:	48 2f       	mov	r20, r24
    42c0:	50 e0       	ldi	r21, 0x00	; 0
    42c2:	ca 01       	movw	r24, r20
    42c4:	88 0f       	add	r24, r24
    42c6:	99 1f       	adc	r25, r25
    42c8:	9c 01       	movw	r18, r24
    42ca:	22 0f       	add	r18, r18
    42cc:	33 1f       	adc	r19, r19
    42ce:	22 0f       	add	r18, r18
    42d0:	33 1f       	adc	r19, r19
    42d2:	22 0f       	add	r18, r18
    42d4:	33 1f       	adc	r19, r19
    42d6:	82 0f       	add	r24, r18
    42d8:	93 1f       	adc	r25, r19
    42da:	9c 01       	movw	r18, r24
    42dc:	24 0f       	add	r18, r20
    42de:	35 1f       	adc	r19, r21
    42e0:	8b 81       	ldd	r24, Y+3	; 0x03
    42e2:	9c 81       	ldd	r25, Y+4	; 0x04
    42e4:	fc 01       	movw	r30, r24
    42e6:	e2 0f       	add	r30, r18
    42e8:	f3 1f       	adc	r31, r19
    42ea:	81 89       	ldd	r24, Z+17	; 0x11
    42ec:	88 30       	cpi	r24, 0x08	; 8
    42ee:	11 f0       	breq	.+4      	; 0x42f4 <SEV_SEG_enumInit+0xfd2>
			{

			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    42f0:	83 e0       	ldi	r24, 0x03	; 3
    42f2:	8a 83       	std	Y+2, r24	; 0x02
{
	ES_T Local_enumErrorState=ES_NOK;
	u8 Local_u8Counter=0;
	if (Copy_pstrSegments!=NULL)
	{
		for (Local_u8Counter=0;Local_u8Counter<SEV_SEG_NUM;Local_u8Counter++)
    42f4:	89 81       	ldd	r24, Y+1	; 0x01
    42f6:	8f 5f       	subi	r24, 0xFF	; 255
    42f8:	89 83       	std	Y+1, r24	; 0x01
    42fa:	89 81       	ldd	r24, Y+1	; 0x01
    42fc:	82 30       	cpi	r24, 0x02	; 2
    42fe:	08 f4       	brcc	.+2      	; 0x4302 <SEV_SEG_enumInit+0xfe0>
    4300:	23 c8       	rjmp	.-4026   	; 0x3348 <SEV_SEG_enumInit+0x26>
    4302:	02 c0       	rjmp	.+4      	; 0x4308 <SEV_SEG_enumInit+0xfe6>
			}
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    4304:	82 e0       	ldi	r24, 0x02	; 2
    4306:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enumErrorState;
    4308:	8a 81       	ldd	r24, Y+2	; 0x02
    430a:	8d 83       	std	Y+5, r24	; 0x05
    430c:	8d 81       	ldd	r24, Y+5	; 0x05
}
    430e:	0f 90       	pop	r0
    4310:	0f 90       	pop	r0
    4312:	0f 90       	pop	r0
    4314:	0f 90       	pop	r0
    4316:	0f 90       	pop	r0
    4318:	cf 91       	pop	r28
    431a:	df 91       	pop	r29
    431c:	08 95       	ret

0000431e <SEV_SEG_enumNUMDisplay>:
ES_T SEV_SEG_enumNUMDisplay(u8 Copy_u8SegmentID,u8 Copy_u8Number)
{
    431e:	df 93       	push	r29
    4320:	cf 93       	push	r28
    4322:	cd b7       	in	r28, 0x3d	; 61
    4324:	de b7       	in	r29, 0x3e	; 62
    4326:	69 97       	sbiw	r28, 0x19	; 25
    4328:	0f b6       	in	r0, 0x3f	; 63
    432a:	f8 94       	cli
    432c:	de bf       	out	0x3e, r29	; 62
    432e:	0f be       	out	0x3f, r0	; 63
    4330:	cd bf       	out	0x3d, r28	; 61
    4332:	8a 83       	std	Y+2, r24	; 0x02
    4334:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    4336:	19 82       	std	Y+1, r1	; 0x01

	if ((Copy_u8SegmentID<SEV_SEG_NUM)&&((Copy_u8Number>=0&&Copy_u8Number<=9)
    4338:	8a 81       	ldd	r24, Y+2	; 0x02
    433a:	82 30       	cpi	r24, 0x02	; 2
    433c:	08 f0       	brcs	.+2      	; 0x4340 <SEV_SEG_enumNUMDisplay+0x22>
    433e:	44 c4       	rjmp	.+2184   	; 0x4bc8 <SEV_SEG_enumNUMDisplay+0x8aa>
    4340:	8b 81       	ldd	r24, Y+3	; 0x03
    4342:	8a 30       	cpi	r24, 0x0A	; 10
    4344:	70 f0       	brcs	.+28     	; 0x4362 <SEV_SEG_enumNUMDisplay+0x44>
    4346:	8b 81       	ldd	r24, Y+3	; 0x03
    4348:	81 34       	cpi	r24, 0x41	; 65
    434a:	18 f0       	brcs	.+6      	; 0x4352 <SEV_SEG_enumNUMDisplay+0x34>
    434c:	8b 81       	ldd	r24, Y+3	; 0x03
    434e:	87 34       	cpi	r24, 0x47	; 71
    4350:	40 f0       	brcs	.+16     	; 0x4362 <SEV_SEG_enumNUMDisplay+0x44>
    4352:	8b 81       	ldd	r24, Y+3	; 0x03
    4354:	81 36       	cpi	r24, 0x61	; 97
    4356:	08 f4       	brcc	.+2      	; 0x435a <SEV_SEG_enumNUMDisplay+0x3c>
    4358:	37 c4       	rjmp	.+2158   	; 0x4bc8 <SEV_SEG_enumNUMDisplay+0x8aa>
    435a:	8b 81       	ldd	r24, Y+3	; 0x03
    435c:	87 36       	cpi	r24, 0x67	; 103
    435e:	08 f0       	brcs	.+2      	; 0x4362 <SEV_SEG_enumNUMDisplay+0x44>
    4360:	33 c4       	rjmp	.+2150   	; 0x4bc8 <SEV_SEG_enumNUMDisplay+0x8aa>
		||(Copy_u8Number>='A'&&Copy_u8Number<='F')||(Copy_u8Number>='a'&&Copy_u8Number<='f')))
	{
		if (Copy_u8Number=='a'||Copy_u8Number=='A')Copy_u8Number=10;
    4362:	8b 81       	ldd	r24, Y+3	; 0x03
    4364:	81 36       	cpi	r24, 0x61	; 97
    4366:	19 f0       	breq	.+6      	; 0x436e <SEV_SEG_enumNUMDisplay+0x50>
    4368:	8b 81       	ldd	r24, Y+3	; 0x03
    436a:	81 34       	cpi	r24, 0x41	; 65
    436c:	11 f4       	brne	.+4      	; 0x4372 <SEV_SEG_enumNUMDisplay+0x54>
    436e:	8a e0       	ldi	r24, 0x0A	; 10
    4370:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='b'||Copy_u8Number=='B')Copy_u8Number=11;
    4372:	8b 81       	ldd	r24, Y+3	; 0x03
    4374:	82 36       	cpi	r24, 0x62	; 98
    4376:	19 f0       	breq	.+6      	; 0x437e <SEV_SEG_enumNUMDisplay+0x60>
    4378:	8b 81       	ldd	r24, Y+3	; 0x03
    437a:	82 34       	cpi	r24, 0x42	; 66
    437c:	11 f4       	brne	.+4      	; 0x4382 <SEV_SEG_enumNUMDisplay+0x64>
    437e:	8b e0       	ldi	r24, 0x0B	; 11
    4380:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='c'||Copy_u8Number=='C')Copy_u8Number=12;
    4382:	8b 81       	ldd	r24, Y+3	; 0x03
    4384:	83 36       	cpi	r24, 0x63	; 99
    4386:	19 f0       	breq	.+6      	; 0x438e <SEV_SEG_enumNUMDisplay+0x70>
    4388:	8b 81       	ldd	r24, Y+3	; 0x03
    438a:	83 34       	cpi	r24, 0x43	; 67
    438c:	11 f4       	brne	.+4      	; 0x4392 <SEV_SEG_enumNUMDisplay+0x74>
    438e:	8c e0       	ldi	r24, 0x0C	; 12
    4390:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='d'||Copy_u8Number=='D')Copy_u8Number=13;
    4392:	8b 81       	ldd	r24, Y+3	; 0x03
    4394:	84 36       	cpi	r24, 0x64	; 100
    4396:	19 f0       	breq	.+6      	; 0x439e <SEV_SEG_enumNUMDisplay+0x80>
    4398:	8b 81       	ldd	r24, Y+3	; 0x03
    439a:	84 34       	cpi	r24, 0x44	; 68
    439c:	11 f4       	brne	.+4      	; 0x43a2 <SEV_SEG_enumNUMDisplay+0x84>
    439e:	8d e0       	ldi	r24, 0x0D	; 13
    43a0:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='e'||Copy_u8Number=='E')Copy_u8Number=14;
    43a2:	8b 81       	ldd	r24, Y+3	; 0x03
    43a4:	85 36       	cpi	r24, 0x65	; 101
    43a6:	19 f0       	breq	.+6      	; 0x43ae <SEV_SEG_enumNUMDisplay+0x90>
    43a8:	8b 81       	ldd	r24, Y+3	; 0x03
    43aa:	85 34       	cpi	r24, 0x45	; 69
    43ac:	11 f4       	brne	.+4      	; 0x43b2 <SEV_SEG_enumNUMDisplay+0x94>
    43ae:	8e e0       	ldi	r24, 0x0E	; 14
    43b0:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='f'||Copy_u8Number=='F')Copy_u8Number=15;
    43b2:	8b 81       	ldd	r24, Y+3	; 0x03
    43b4:	86 36       	cpi	r24, 0x66	; 102
    43b6:	19 f0       	breq	.+6      	; 0x43be <SEV_SEG_enumNUMDisplay+0xa0>
    43b8:	8b 81       	ldd	r24, Y+3	; 0x03
    43ba:	86 34       	cpi	r24, 0x46	; 70
    43bc:	11 f4       	brne	.+4      	; 0x43c2 <SEV_SEG_enumNUMDisplay+0xa4>
    43be:	8f e0       	ldi	r24, 0x0F	; 15
    43c0:	8b 83       	std	Y+3, r24	; 0x03

		if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    43c2:	8a 81       	ldd	r24, Y+2	; 0x02
    43c4:	48 2f       	mov	r20, r24
    43c6:	50 e0       	ldi	r21, 0x00	; 0
    43c8:	ca 01       	movw	r24, r20
    43ca:	88 0f       	add	r24, r24
    43cc:	99 1f       	adc	r25, r25
    43ce:	9c 01       	movw	r18, r24
    43d0:	22 0f       	add	r18, r18
    43d2:	33 1f       	adc	r19, r19
    43d4:	22 0f       	add	r18, r18
    43d6:	33 1f       	adc	r19, r19
    43d8:	22 0f       	add	r18, r18
    43da:	33 1f       	adc	r19, r19
    43dc:	82 0f       	add	r24, r18
    43de:	93 1f       	adc	r25, r19
    43e0:	84 0f       	add	r24, r20
    43e2:	95 1f       	adc	r25, r21
    43e4:	fc 01       	movw	r30, r24
    43e6:	ea 54       	subi	r30, 0x4A	; 74
    43e8:	fe 4f       	sbci	r31, 0xFE	; 254
    43ea:	80 81       	ld	r24, Z
    43ec:	81 30       	cpi	r24, 0x01	; 1
    43ee:	09 f0       	breq	.+2      	; 0x43f2 <SEV_SEG_enumNUMDisplay+0xd4>
    43f0:	c9 c1       	rjmp	.+914    	; 0x4784 <SEV_SEG_enumNUMDisplay+0x466>
		{
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],0));
    43f2:	8a 81       	ldd	r24, Y+2	; 0x02
    43f4:	48 2f       	mov	r20, r24
    43f6:	50 e0       	ldi	r21, 0x00	; 0
    43f8:	ca 01       	movw	r24, r20
    43fa:	88 0f       	add	r24, r24
    43fc:	99 1f       	adc	r25, r25
    43fe:	9c 01       	movw	r18, r24
    4400:	22 0f       	add	r18, r18
    4402:	33 1f       	adc	r19, r19
    4404:	22 0f       	add	r18, r18
    4406:	33 1f       	adc	r19, r19
    4408:	22 0f       	add	r18, r18
    440a:	33 1f       	adc	r19, r19
    440c:	82 0f       	add	r24, r18
    440e:	93 1f       	adc	r25, r19
    4410:	84 0f       	add	r24, r20
    4412:	95 1f       	adc	r25, r21
    4414:	fc 01       	movw	r30, r24
    4416:	ec 55       	subi	r30, 0x5C	; 92
    4418:	fe 4f       	sbci	r31, 0xFE	; 254
    441a:	60 81       	ld	r22, Z
    441c:	8a 81       	ldd	r24, Y+2	; 0x02
    441e:	48 2f       	mov	r20, r24
    4420:	50 e0       	ldi	r21, 0x00	; 0
    4422:	ca 01       	movw	r24, r20
    4424:	88 0f       	add	r24, r24
    4426:	99 1f       	adc	r25, r25
    4428:	9c 01       	movw	r18, r24
    442a:	22 0f       	add	r18, r18
    442c:	33 1f       	adc	r19, r19
    442e:	22 0f       	add	r18, r18
    4430:	33 1f       	adc	r19, r19
    4432:	22 0f       	add	r18, r18
    4434:	33 1f       	adc	r19, r19
    4436:	82 0f       	add	r24, r18
    4438:	93 1f       	adc	r25, r19
    443a:	84 0f       	add	r24, r20
    443c:	95 1f       	adc	r25, r21
    443e:	fc 01       	movw	r30, r24
    4440:	eb 55       	subi	r30, 0x5B	; 91
    4442:	fe 4f       	sbci	r31, 0xFE	; 254
    4444:	20 81       	ld	r18, Z
    4446:	8b 81       	ldd	r24, Y+3	; 0x03
    4448:	88 2f       	mov	r24, r24
    444a:	90 e0       	ldi	r25, 0x00	; 0
    444c:	fc 01       	movw	r30, r24
    444e:	e6 53       	subi	r30, 0x36	; 54
    4450:	fe 4f       	sbci	r31, 0xFE	; 254
    4452:	80 81       	ld	r24, Z
    4454:	98 2f       	mov	r25, r24
    4456:	91 70       	andi	r25, 0x01	; 1
    4458:	86 2f       	mov	r24, r22
    445a:	62 2f       	mov	r22, r18
    445c:	49 2f       	mov	r20, r25
    445e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    4462:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4464:	89 81       	ldd	r24, Y+1	; 0x01
    4466:	81 30       	cpi	r24, 0x01	; 1
    4468:	19 f0       	breq	.+6      	; 0x4470 <SEV_SEG_enumNUMDisplay+0x152>
    446a:	89 81       	ldd	r24, Y+1	; 0x01
    446c:	89 8f       	std	Y+25, r24	; 0x19
    446e:	b0 c3       	rjmp	.+1888   	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],1));
    4470:	8a 81       	ldd	r24, Y+2	; 0x02
    4472:	48 2f       	mov	r20, r24
    4474:	50 e0       	ldi	r21, 0x00	; 0
    4476:	ca 01       	movw	r24, r20
    4478:	88 0f       	add	r24, r24
    447a:	99 1f       	adc	r25, r25
    447c:	9c 01       	movw	r18, r24
    447e:	22 0f       	add	r18, r18
    4480:	33 1f       	adc	r19, r19
    4482:	22 0f       	add	r18, r18
    4484:	33 1f       	adc	r19, r19
    4486:	22 0f       	add	r18, r18
    4488:	33 1f       	adc	r19, r19
    448a:	82 0f       	add	r24, r18
    448c:	93 1f       	adc	r25, r19
    448e:	84 0f       	add	r24, r20
    4490:	95 1f       	adc	r25, r21
    4492:	fc 01       	movw	r30, r24
    4494:	ea 55       	subi	r30, 0x5A	; 90
    4496:	fe 4f       	sbci	r31, 0xFE	; 254
    4498:	60 81       	ld	r22, Z
    449a:	8a 81       	ldd	r24, Y+2	; 0x02
    449c:	48 2f       	mov	r20, r24
    449e:	50 e0       	ldi	r21, 0x00	; 0
    44a0:	ca 01       	movw	r24, r20
    44a2:	88 0f       	add	r24, r24
    44a4:	99 1f       	adc	r25, r25
    44a6:	9c 01       	movw	r18, r24
    44a8:	22 0f       	add	r18, r18
    44aa:	33 1f       	adc	r19, r19
    44ac:	22 0f       	add	r18, r18
    44ae:	33 1f       	adc	r19, r19
    44b0:	22 0f       	add	r18, r18
    44b2:	33 1f       	adc	r19, r19
    44b4:	82 0f       	add	r24, r18
    44b6:	93 1f       	adc	r25, r19
    44b8:	84 0f       	add	r24, r20
    44ba:	95 1f       	adc	r25, r21
    44bc:	fc 01       	movw	r30, r24
    44be:	e9 55       	subi	r30, 0x59	; 89
    44c0:	fe 4f       	sbci	r31, 0xFE	; 254
    44c2:	20 81       	ld	r18, Z
    44c4:	8b 81       	ldd	r24, Y+3	; 0x03
    44c6:	88 2f       	mov	r24, r24
    44c8:	90 e0       	ldi	r25, 0x00	; 0
    44ca:	fc 01       	movw	r30, r24
    44cc:	e6 53       	subi	r30, 0x36	; 54
    44ce:	fe 4f       	sbci	r31, 0xFE	; 254
    44d0:	80 81       	ld	r24, Z
    44d2:	86 95       	lsr	r24
    44d4:	98 2f       	mov	r25, r24
    44d6:	91 70       	andi	r25, 0x01	; 1
    44d8:	86 2f       	mov	r24, r22
    44da:	62 2f       	mov	r22, r18
    44dc:	49 2f       	mov	r20, r25
    44de:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    44e2:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    44e4:	89 81       	ldd	r24, Y+1	; 0x01
    44e6:	81 30       	cpi	r24, 0x01	; 1
    44e8:	19 f0       	breq	.+6      	; 0x44f0 <SEV_SEG_enumNUMDisplay+0x1d2>
    44ea:	89 81       	ldd	r24, Y+1	; 0x01
    44ec:	89 8f       	std	Y+25, r24	; 0x19
    44ee:	70 c3       	rjmp	.+1760   	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],2));
    44f0:	8a 81       	ldd	r24, Y+2	; 0x02
    44f2:	48 2f       	mov	r20, r24
    44f4:	50 e0       	ldi	r21, 0x00	; 0
    44f6:	ca 01       	movw	r24, r20
    44f8:	88 0f       	add	r24, r24
    44fa:	99 1f       	adc	r25, r25
    44fc:	9c 01       	movw	r18, r24
    44fe:	22 0f       	add	r18, r18
    4500:	33 1f       	adc	r19, r19
    4502:	22 0f       	add	r18, r18
    4504:	33 1f       	adc	r19, r19
    4506:	22 0f       	add	r18, r18
    4508:	33 1f       	adc	r19, r19
    450a:	82 0f       	add	r24, r18
    450c:	93 1f       	adc	r25, r19
    450e:	84 0f       	add	r24, r20
    4510:	95 1f       	adc	r25, r21
    4512:	fc 01       	movw	r30, r24
    4514:	e8 55       	subi	r30, 0x58	; 88
    4516:	fe 4f       	sbci	r31, 0xFE	; 254
    4518:	60 81       	ld	r22, Z
    451a:	8a 81       	ldd	r24, Y+2	; 0x02
    451c:	48 2f       	mov	r20, r24
    451e:	50 e0       	ldi	r21, 0x00	; 0
    4520:	ca 01       	movw	r24, r20
    4522:	88 0f       	add	r24, r24
    4524:	99 1f       	adc	r25, r25
    4526:	9c 01       	movw	r18, r24
    4528:	22 0f       	add	r18, r18
    452a:	33 1f       	adc	r19, r19
    452c:	22 0f       	add	r18, r18
    452e:	33 1f       	adc	r19, r19
    4530:	22 0f       	add	r18, r18
    4532:	33 1f       	adc	r19, r19
    4534:	82 0f       	add	r24, r18
    4536:	93 1f       	adc	r25, r19
    4538:	84 0f       	add	r24, r20
    453a:	95 1f       	adc	r25, r21
    453c:	fc 01       	movw	r30, r24
    453e:	e7 55       	subi	r30, 0x57	; 87
    4540:	fe 4f       	sbci	r31, 0xFE	; 254
    4542:	20 81       	ld	r18, Z
    4544:	8b 81       	ldd	r24, Y+3	; 0x03
    4546:	88 2f       	mov	r24, r24
    4548:	90 e0       	ldi	r25, 0x00	; 0
    454a:	fc 01       	movw	r30, r24
    454c:	e6 53       	subi	r30, 0x36	; 54
    454e:	fe 4f       	sbci	r31, 0xFE	; 254
    4550:	80 81       	ld	r24, Z
    4552:	86 95       	lsr	r24
    4554:	86 95       	lsr	r24
    4556:	98 2f       	mov	r25, r24
    4558:	91 70       	andi	r25, 0x01	; 1
    455a:	86 2f       	mov	r24, r22
    455c:	62 2f       	mov	r22, r18
    455e:	49 2f       	mov	r20, r25
    4560:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    4564:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4566:	89 81       	ldd	r24, Y+1	; 0x01
    4568:	81 30       	cpi	r24, 0x01	; 1
    456a:	19 f0       	breq	.+6      	; 0x4572 <SEV_SEG_enumNUMDisplay+0x254>
    456c:	89 81       	ldd	r24, Y+1	; 0x01
    456e:	89 8f       	std	Y+25, r24	; 0x19
    4570:	2f c3       	rjmp	.+1630   	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],3));
    4572:	8a 81       	ldd	r24, Y+2	; 0x02
    4574:	48 2f       	mov	r20, r24
    4576:	50 e0       	ldi	r21, 0x00	; 0
    4578:	ca 01       	movw	r24, r20
    457a:	88 0f       	add	r24, r24
    457c:	99 1f       	adc	r25, r25
    457e:	9c 01       	movw	r18, r24
    4580:	22 0f       	add	r18, r18
    4582:	33 1f       	adc	r19, r19
    4584:	22 0f       	add	r18, r18
    4586:	33 1f       	adc	r19, r19
    4588:	22 0f       	add	r18, r18
    458a:	33 1f       	adc	r19, r19
    458c:	82 0f       	add	r24, r18
    458e:	93 1f       	adc	r25, r19
    4590:	84 0f       	add	r24, r20
    4592:	95 1f       	adc	r25, r21
    4594:	fc 01       	movw	r30, r24
    4596:	e6 55       	subi	r30, 0x56	; 86
    4598:	fe 4f       	sbci	r31, 0xFE	; 254
    459a:	60 81       	ld	r22, Z
    459c:	8a 81       	ldd	r24, Y+2	; 0x02
    459e:	48 2f       	mov	r20, r24
    45a0:	50 e0       	ldi	r21, 0x00	; 0
    45a2:	ca 01       	movw	r24, r20
    45a4:	88 0f       	add	r24, r24
    45a6:	99 1f       	adc	r25, r25
    45a8:	9c 01       	movw	r18, r24
    45aa:	22 0f       	add	r18, r18
    45ac:	33 1f       	adc	r19, r19
    45ae:	22 0f       	add	r18, r18
    45b0:	33 1f       	adc	r19, r19
    45b2:	22 0f       	add	r18, r18
    45b4:	33 1f       	adc	r19, r19
    45b6:	82 0f       	add	r24, r18
    45b8:	93 1f       	adc	r25, r19
    45ba:	84 0f       	add	r24, r20
    45bc:	95 1f       	adc	r25, r21
    45be:	fc 01       	movw	r30, r24
    45c0:	e5 55       	subi	r30, 0x55	; 85
    45c2:	fe 4f       	sbci	r31, 0xFE	; 254
    45c4:	20 81       	ld	r18, Z
    45c6:	8b 81       	ldd	r24, Y+3	; 0x03
    45c8:	88 2f       	mov	r24, r24
    45ca:	90 e0       	ldi	r25, 0x00	; 0
    45cc:	fc 01       	movw	r30, r24
    45ce:	e6 53       	subi	r30, 0x36	; 54
    45d0:	fe 4f       	sbci	r31, 0xFE	; 254
    45d2:	80 81       	ld	r24, Z
    45d4:	86 95       	lsr	r24
    45d6:	86 95       	lsr	r24
    45d8:	86 95       	lsr	r24
    45da:	98 2f       	mov	r25, r24
    45dc:	91 70       	andi	r25, 0x01	; 1
    45de:	86 2f       	mov	r24, r22
    45e0:	62 2f       	mov	r22, r18
    45e2:	49 2f       	mov	r20, r25
    45e4:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    45e8:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    45ea:	89 81       	ldd	r24, Y+1	; 0x01
    45ec:	81 30       	cpi	r24, 0x01	; 1
    45ee:	19 f0       	breq	.+6      	; 0x45f6 <SEV_SEG_enumNUMDisplay+0x2d8>
    45f0:	89 81       	ldd	r24, Y+1	; 0x01
    45f2:	89 8f       	std	Y+25, r24	; 0x19
    45f4:	ed c2       	rjmp	.+1498   	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],4));
    45f6:	8a 81       	ldd	r24, Y+2	; 0x02
    45f8:	48 2f       	mov	r20, r24
    45fa:	50 e0       	ldi	r21, 0x00	; 0
    45fc:	ca 01       	movw	r24, r20
    45fe:	88 0f       	add	r24, r24
    4600:	99 1f       	adc	r25, r25
    4602:	9c 01       	movw	r18, r24
    4604:	22 0f       	add	r18, r18
    4606:	33 1f       	adc	r19, r19
    4608:	22 0f       	add	r18, r18
    460a:	33 1f       	adc	r19, r19
    460c:	22 0f       	add	r18, r18
    460e:	33 1f       	adc	r19, r19
    4610:	82 0f       	add	r24, r18
    4612:	93 1f       	adc	r25, r19
    4614:	84 0f       	add	r24, r20
    4616:	95 1f       	adc	r25, r21
    4618:	fc 01       	movw	r30, r24
    461a:	e4 55       	subi	r30, 0x54	; 84
    461c:	fe 4f       	sbci	r31, 0xFE	; 254
    461e:	60 81       	ld	r22, Z
    4620:	8a 81       	ldd	r24, Y+2	; 0x02
    4622:	48 2f       	mov	r20, r24
    4624:	50 e0       	ldi	r21, 0x00	; 0
    4626:	ca 01       	movw	r24, r20
    4628:	88 0f       	add	r24, r24
    462a:	99 1f       	adc	r25, r25
    462c:	9c 01       	movw	r18, r24
    462e:	22 0f       	add	r18, r18
    4630:	33 1f       	adc	r19, r19
    4632:	22 0f       	add	r18, r18
    4634:	33 1f       	adc	r19, r19
    4636:	22 0f       	add	r18, r18
    4638:	33 1f       	adc	r19, r19
    463a:	82 0f       	add	r24, r18
    463c:	93 1f       	adc	r25, r19
    463e:	84 0f       	add	r24, r20
    4640:	95 1f       	adc	r25, r21
    4642:	fc 01       	movw	r30, r24
    4644:	e3 55       	subi	r30, 0x53	; 83
    4646:	fe 4f       	sbci	r31, 0xFE	; 254
    4648:	20 81       	ld	r18, Z
    464a:	8b 81       	ldd	r24, Y+3	; 0x03
    464c:	88 2f       	mov	r24, r24
    464e:	90 e0       	ldi	r25, 0x00	; 0
    4650:	fc 01       	movw	r30, r24
    4652:	e6 53       	subi	r30, 0x36	; 54
    4654:	fe 4f       	sbci	r31, 0xFE	; 254
    4656:	80 81       	ld	r24, Z
    4658:	82 95       	swap	r24
    465a:	8f 70       	andi	r24, 0x0F	; 15
    465c:	98 2f       	mov	r25, r24
    465e:	91 70       	andi	r25, 0x01	; 1
    4660:	86 2f       	mov	r24, r22
    4662:	62 2f       	mov	r22, r18
    4664:	49 2f       	mov	r20, r25
    4666:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    466a:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    466c:	89 81       	ldd	r24, Y+1	; 0x01
    466e:	81 30       	cpi	r24, 0x01	; 1
    4670:	19 f0       	breq	.+6      	; 0x4678 <SEV_SEG_enumNUMDisplay+0x35a>
    4672:	89 81       	ldd	r24, Y+1	; 0x01
    4674:	89 8f       	std	Y+25, r24	; 0x19
    4676:	ac c2       	rjmp	.+1368   	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],5));
    4678:	8a 81       	ldd	r24, Y+2	; 0x02
    467a:	48 2f       	mov	r20, r24
    467c:	50 e0       	ldi	r21, 0x00	; 0
    467e:	ca 01       	movw	r24, r20
    4680:	88 0f       	add	r24, r24
    4682:	99 1f       	adc	r25, r25
    4684:	9c 01       	movw	r18, r24
    4686:	22 0f       	add	r18, r18
    4688:	33 1f       	adc	r19, r19
    468a:	22 0f       	add	r18, r18
    468c:	33 1f       	adc	r19, r19
    468e:	22 0f       	add	r18, r18
    4690:	33 1f       	adc	r19, r19
    4692:	82 0f       	add	r24, r18
    4694:	93 1f       	adc	r25, r19
    4696:	84 0f       	add	r24, r20
    4698:	95 1f       	adc	r25, r21
    469a:	fc 01       	movw	r30, r24
    469c:	e2 55       	subi	r30, 0x52	; 82
    469e:	fe 4f       	sbci	r31, 0xFE	; 254
    46a0:	60 81       	ld	r22, Z
    46a2:	8a 81       	ldd	r24, Y+2	; 0x02
    46a4:	48 2f       	mov	r20, r24
    46a6:	50 e0       	ldi	r21, 0x00	; 0
    46a8:	ca 01       	movw	r24, r20
    46aa:	88 0f       	add	r24, r24
    46ac:	99 1f       	adc	r25, r25
    46ae:	9c 01       	movw	r18, r24
    46b0:	22 0f       	add	r18, r18
    46b2:	33 1f       	adc	r19, r19
    46b4:	22 0f       	add	r18, r18
    46b6:	33 1f       	adc	r19, r19
    46b8:	22 0f       	add	r18, r18
    46ba:	33 1f       	adc	r19, r19
    46bc:	82 0f       	add	r24, r18
    46be:	93 1f       	adc	r25, r19
    46c0:	84 0f       	add	r24, r20
    46c2:	95 1f       	adc	r25, r21
    46c4:	fc 01       	movw	r30, r24
    46c6:	e1 55       	subi	r30, 0x51	; 81
    46c8:	fe 4f       	sbci	r31, 0xFE	; 254
    46ca:	20 81       	ld	r18, Z
    46cc:	8b 81       	ldd	r24, Y+3	; 0x03
    46ce:	88 2f       	mov	r24, r24
    46d0:	90 e0       	ldi	r25, 0x00	; 0
    46d2:	fc 01       	movw	r30, r24
    46d4:	e6 53       	subi	r30, 0x36	; 54
    46d6:	fe 4f       	sbci	r31, 0xFE	; 254
    46d8:	80 81       	ld	r24, Z
    46da:	82 95       	swap	r24
    46dc:	86 95       	lsr	r24
    46de:	87 70       	andi	r24, 0x07	; 7
    46e0:	98 2f       	mov	r25, r24
    46e2:	91 70       	andi	r25, 0x01	; 1
    46e4:	86 2f       	mov	r24, r22
    46e6:	62 2f       	mov	r22, r18
    46e8:	49 2f       	mov	r20, r25
    46ea:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    46ee:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    46f0:	89 81       	ldd	r24, Y+1	; 0x01
    46f2:	81 30       	cpi	r24, 0x01	; 1
    46f4:	19 f0       	breq	.+6      	; 0x46fc <SEV_SEG_enumNUMDisplay+0x3de>
    46f6:	89 81       	ldd	r24, Y+1	; 0x01
    46f8:	89 8f       	std	Y+25, r24	; 0x19
    46fa:	6a c2       	rjmp	.+1236   	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],6));
    46fc:	8a 81       	ldd	r24, Y+2	; 0x02
    46fe:	48 2f       	mov	r20, r24
    4700:	50 e0       	ldi	r21, 0x00	; 0
    4702:	ca 01       	movw	r24, r20
    4704:	88 0f       	add	r24, r24
    4706:	99 1f       	adc	r25, r25
    4708:	9c 01       	movw	r18, r24
    470a:	22 0f       	add	r18, r18
    470c:	33 1f       	adc	r19, r19
    470e:	22 0f       	add	r18, r18
    4710:	33 1f       	adc	r19, r19
    4712:	22 0f       	add	r18, r18
    4714:	33 1f       	adc	r19, r19
    4716:	82 0f       	add	r24, r18
    4718:	93 1f       	adc	r25, r19
    471a:	84 0f       	add	r24, r20
    471c:	95 1f       	adc	r25, r21
    471e:	fc 01       	movw	r30, r24
    4720:	e0 55       	subi	r30, 0x50	; 80
    4722:	fe 4f       	sbci	r31, 0xFE	; 254
    4724:	60 81       	ld	r22, Z
    4726:	8a 81       	ldd	r24, Y+2	; 0x02
    4728:	48 2f       	mov	r20, r24
    472a:	50 e0       	ldi	r21, 0x00	; 0
    472c:	ca 01       	movw	r24, r20
    472e:	88 0f       	add	r24, r24
    4730:	99 1f       	adc	r25, r25
    4732:	9c 01       	movw	r18, r24
    4734:	22 0f       	add	r18, r18
    4736:	33 1f       	adc	r19, r19
    4738:	22 0f       	add	r18, r18
    473a:	33 1f       	adc	r19, r19
    473c:	22 0f       	add	r18, r18
    473e:	33 1f       	adc	r19, r19
    4740:	82 0f       	add	r24, r18
    4742:	93 1f       	adc	r25, r19
    4744:	84 0f       	add	r24, r20
    4746:	95 1f       	adc	r25, r21
    4748:	fc 01       	movw	r30, r24
    474a:	ef 54       	subi	r30, 0x4F	; 79
    474c:	fe 4f       	sbci	r31, 0xFE	; 254
    474e:	20 81       	ld	r18, Z
    4750:	8b 81       	ldd	r24, Y+3	; 0x03
    4752:	88 2f       	mov	r24, r24
    4754:	90 e0       	ldi	r25, 0x00	; 0
    4756:	fc 01       	movw	r30, r24
    4758:	e6 53       	subi	r30, 0x36	; 54
    475a:	fe 4f       	sbci	r31, 0xFE	; 254
    475c:	80 81       	ld	r24, Z
    475e:	82 95       	swap	r24
    4760:	86 95       	lsr	r24
    4762:	86 95       	lsr	r24
    4764:	83 70       	andi	r24, 0x03	; 3
    4766:	98 2f       	mov	r25, r24
    4768:	91 70       	andi	r25, 0x01	; 1
    476a:	86 2f       	mov	r24, r22
    476c:	62 2f       	mov	r22, r18
    476e:	49 2f       	mov	r20, r25
    4770:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    4774:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4776:	89 81       	ldd	r24, Y+1	; 0x01
    4778:	81 30       	cpi	r24, 0x01	; 1
    477a:	09 f4       	brne	.+2      	; 0x477e <SEV_SEG_enumNUMDisplay+0x460>
    477c:	27 c2       	rjmp	.+1102   	; 0x4bcc <SEV_SEG_enumNUMDisplay+0x8ae>
    477e:	89 81       	ldd	r24, Y+1	; 0x01
    4780:	89 8f       	std	Y+25, r24	; 0x19
    4782:	26 c2       	rjmp	.+1100   	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    4784:	8a 81       	ldd	r24, Y+2	; 0x02
    4786:	48 2f       	mov	r20, r24
    4788:	50 e0       	ldi	r21, 0x00	; 0
    478a:	ca 01       	movw	r24, r20
    478c:	88 0f       	add	r24, r24
    478e:	99 1f       	adc	r25, r25
    4790:	9c 01       	movw	r18, r24
    4792:	22 0f       	add	r18, r18
    4794:	33 1f       	adc	r19, r19
    4796:	22 0f       	add	r18, r18
    4798:	33 1f       	adc	r19, r19
    479a:	22 0f       	add	r18, r18
    479c:	33 1f       	adc	r19, r19
    479e:	82 0f       	add	r24, r18
    47a0:	93 1f       	adc	r25, r19
    47a2:	84 0f       	add	r24, r20
    47a4:	95 1f       	adc	r25, r21
    47a6:	fc 01       	movw	r30, r24
    47a8:	ea 54       	subi	r30, 0x4A	; 74
    47aa:	fe 4f       	sbci	r31, 0xFE	; 254
    47ac:	80 81       	ld	r24, Z
    47ae:	88 23       	and	r24, r24
    47b0:	09 f0       	breq	.+2      	; 0x47b4 <SEV_SEG_enumNUMDisplay+0x496>
    47b2:	07 c2       	rjmp	.+1038   	; 0x4bc2 <SEV_SEG_enumNUMDisplay+0x8a4>
		{
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],0));
    47b4:	8a 81       	ldd	r24, Y+2	; 0x02
    47b6:	48 2f       	mov	r20, r24
    47b8:	50 e0       	ldi	r21, 0x00	; 0
    47ba:	ca 01       	movw	r24, r20
    47bc:	88 0f       	add	r24, r24
    47be:	99 1f       	adc	r25, r25
    47c0:	9c 01       	movw	r18, r24
    47c2:	22 0f       	add	r18, r18
    47c4:	33 1f       	adc	r19, r19
    47c6:	22 0f       	add	r18, r18
    47c8:	33 1f       	adc	r19, r19
    47ca:	22 0f       	add	r18, r18
    47cc:	33 1f       	adc	r19, r19
    47ce:	82 0f       	add	r24, r18
    47d0:	93 1f       	adc	r25, r19
    47d2:	84 0f       	add	r24, r20
    47d4:	95 1f       	adc	r25, r21
    47d6:	fc 01       	movw	r30, r24
    47d8:	ec 55       	subi	r30, 0x5C	; 92
    47da:	fe 4f       	sbci	r31, 0xFE	; 254
    47dc:	80 81       	ld	r24, Z
    47de:	88 8f       	std	Y+24, r24	; 0x18
    47e0:	8a 81       	ldd	r24, Y+2	; 0x02
    47e2:	48 2f       	mov	r20, r24
    47e4:	50 e0       	ldi	r21, 0x00	; 0
    47e6:	ca 01       	movw	r24, r20
    47e8:	88 0f       	add	r24, r24
    47ea:	99 1f       	adc	r25, r25
    47ec:	9c 01       	movw	r18, r24
    47ee:	22 0f       	add	r18, r18
    47f0:	33 1f       	adc	r19, r19
    47f2:	22 0f       	add	r18, r18
    47f4:	33 1f       	adc	r19, r19
    47f6:	22 0f       	add	r18, r18
    47f8:	33 1f       	adc	r19, r19
    47fa:	82 0f       	add	r24, r18
    47fc:	93 1f       	adc	r25, r19
    47fe:	84 0f       	add	r24, r20
    4800:	95 1f       	adc	r25, r21
    4802:	fc 01       	movw	r30, r24
    4804:	eb 55       	subi	r30, 0x5B	; 91
    4806:	fe 4f       	sbci	r31, 0xFE	; 254
    4808:	80 81       	ld	r24, Z
    480a:	8f 8b       	std	Y+23, r24	; 0x17
    480c:	8b 81       	ldd	r24, Y+3	; 0x03
    480e:	88 2f       	mov	r24, r24
    4810:	90 e0       	ldi	r25, 0x00	; 0
    4812:	fc 01       	movw	r30, r24
    4814:	e6 53       	subi	r30, 0x36	; 54
    4816:	fe 4f       	sbci	r31, 0xFE	; 254
    4818:	80 81       	ld	r24, Z
    481a:	88 2f       	mov	r24, r24
    481c:	90 e0       	ldi	r25, 0x00	; 0
    481e:	81 70       	andi	r24, 0x01	; 1
    4820:	90 70       	andi	r25, 0x00	; 0
    4822:	1e 8a       	std	Y+22, r1	; 0x16
    4824:	00 97       	sbiw	r24, 0x00	; 0
    4826:	11 f4       	brne	.+4      	; 0x482c <SEV_SEG_enumNUMDisplay+0x50e>
    4828:	81 e0       	ldi	r24, 0x01	; 1
    482a:	8e 8b       	std	Y+22, r24	; 0x16
    482c:	88 8d       	ldd	r24, Y+24	; 0x18
    482e:	6f 89       	ldd	r22, Y+23	; 0x17
    4830:	4e 89       	ldd	r20, Y+22	; 0x16
    4832:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    4836:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4838:	89 81       	ldd	r24, Y+1	; 0x01
    483a:	81 30       	cpi	r24, 0x01	; 1
    483c:	19 f0       	breq	.+6      	; 0x4844 <SEV_SEG_enumNUMDisplay+0x526>
    483e:	89 81       	ldd	r24, Y+1	; 0x01
    4840:	89 8f       	std	Y+25, r24	; 0x19
    4842:	c6 c1       	rjmp	.+908    	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],1));
    4844:	8a 81       	ldd	r24, Y+2	; 0x02
    4846:	48 2f       	mov	r20, r24
    4848:	50 e0       	ldi	r21, 0x00	; 0
    484a:	ca 01       	movw	r24, r20
    484c:	88 0f       	add	r24, r24
    484e:	99 1f       	adc	r25, r25
    4850:	9c 01       	movw	r18, r24
    4852:	22 0f       	add	r18, r18
    4854:	33 1f       	adc	r19, r19
    4856:	22 0f       	add	r18, r18
    4858:	33 1f       	adc	r19, r19
    485a:	22 0f       	add	r18, r18
    485c:	33 1f       	adc	r19, r19
    485e:	82 0f       	add	r24, r18
    4860:	93 1f       	adc	r25, r19
    4862:	84 0f       	add	r24, r20
    4864:	95 1f       	adc	r25, r21
    4866:	fc 01       	movw	r30, r24
    4868:	ea 55       	subi	r30, 0x5A	; 90
    486a:	fe 4f       	sbci	r31, 0xFE	; 254
    486c:	80 81       	ld	r24, Z
    486e:	8d 8b       	std	Y+21, r24	; 0x15
    4870:	8a 81       	ldd	r24, Y+2	; 0x02
    4872:	48 2f       	mov	r20, r24
    4874:	50 e0       	ldi	r21, 0x00	; 0
    4876:	ca 01       	movw	r24, r20
    4878:	88 0f       	add	r24, r24
    487a:	99 1f       	adc	r25, r25
    487c:	9c 01       	movw	r18, r24
    487e:	22 0f       	add	r18, r18
    4880:	33 1f       	adc	r19, r19
    4882:	22 0f       	add	r18, r18
    4884:	33 1f       	adc	r19, r19
    4886:	22 0f       	add	r18, r18
    4888:	33 1f       	adc	r19, r19
    488a:	82 0f       	add	r24, r18
    488c:	93 1f       	adc	r25, r19
    488e:	84 0f       	add	r24, r20
    4890:	95 1f       	adc	r25, r21
    4892:	fc 01       	movw	r30, r24
    4894:	e9 55       	subi	r30, 0x59	; 89
    4896:	fe 4f       	sbci	r31, 0xFE	; 254
    4898:	80 81       	ld	r24, Z
    489a:	8c 8b       	std	Y+20, r24	; 0x14
    489c:	8b 81       	ldd	r24, Y+3	; 0x03
    489e:	88 2f       	mov	r24, r24
    48a0:	90 e0       	ldi	r25, 0x00	; 0
    48a2:	fc 01       	movw	r30, r24
    48a4:	e6 53       	subi	r30, 0x36	; 54
    48a6:	fe 4f       	sbci	r31, 0xFE	; 254
    48a8:	80 81       	ld	r24, Z
    48aa:	86 95       	lsr	r24
    48ac:	88 2f       	mov	r24, r24
    48ae:	90 e0       	ldi	r25, 0x00	; 0
    48b0:	81 70       	andi	r24, 0x01	; 1
    48b2:	90 70       	andi	r25, 0x00	; 0
    48b4:	1b 8a       	std	Y+19, r1	; 0x13
    48b6:	00 97       	sbiw	r24, 0x00	; 0
    48b8:	11 f4       	brne	.+4      	; 0x48be <SEV_SEG_enumNUMDisplay+0x5a0>
    48ba:	81 e0       	ldi	r24, 0x01	; 1
    48bc:	8b 8b       	std	Y+19, r24	; 0x13
    48be:	8d 89       	ldd	r24, Y+21	; 0x15
    48c0:	6c 89       	ldd	r22, Y+20	; 0x14
    48c2:	4b 89       	ldd	r20, Y+19	; 0x13
    48c4:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    48c8:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    48ca:	89 81       	ldd	r24, Y+1	; 0x01
    48cc:	81 30       	cpi	r24, 0x01	; 1
    48ce:	19 f0       	breq	.+6      	; 0x48d6 <SEV_SEG_enumNUMDisplay+0x5b8>
    48d0:	89 81       	ldd	r24, Y+1	; 0x01
    48d2:	89 8f       	std	Y+25, r24	; 0x19
    48d4:	7d c1       	rjmp	.+762    	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],2));
    48d6:	8a 81       	ldd	r24, Y+2	; 0x02
    48d8:	48 2f       	mov	r20, r24
    48da:	50 e0       	ldi	r21, 0x00	; 0
    48dc:	ca 01       	movw	r24, r20
    48de:	88 0f       	add	r24, r24
    48e0:	99 1f       	adc	r25, r25
    48e2:	9c 01       	movw	r18, r24
    48e4:	22 0f       	add	r18, r18
    48e6:	33 1f       	adc	r19, r19
    48e8:	22 0f       	add	r18, r18
    48ea:	33 1f       	adc	r19, r19
    48ec:	22 0f       	add	r18, r18
    48ee:	33 1f       	adc	r19, r19
    48f0:	82 0f       	add	r24, r18
    48f2:	93 1f       	adc	r25, r19
    48f4:	84 0f       	add	r24, r20
    48f6:	95 1f       	adc	r25, r21
    48f8:	fc 01       	movw	r30, r24
    48fa:	e8 55       	subi	r30, 0x58	; 88
    48fc:	fe 4f       	sbci	r31, 0xFE	; 254
    48fe:	80 81       	ld	r24, Z
    4900:	8a 8b       	std	Y+18, r24	; 0x12
    4902:	8a 81       	ldd	r24, Y+2	; 0x02
    4904:	48 2f       	mov	r20, r24
    4906:	50 e0       	ldi	r21, 0x00	; 0
    4908:	ca 01       	movw	r24, r20
    490a:	88 0f       	add	r24, r24
    490c:	99 1f       	adc	r25, r25
    490e:	9c 01       	movw	r18, r24
    4910:	22 0f       	add	r18, r18
    4912:	33 1f       	adc	r19, r19
    4914:	22 0f       	add	r18, r18
    4916:	33 1f       	adc	r19, r19
    4918:	22 0f       	add	r18, r18
    491a:	33 1f       	adc	r19, r19
    491c:	82 0f       	add	r24, r18
    491e:	93 1f       	adc	r25, r19
    4920:	84 0f       	add	r24, r20
    4922:	95 1f       	adc	r25, r21
    4924:	fc 01       	movw	r30, r24
    4926:	e7 55       	subi	r30, 0x57	; 87
    4928:	fe 4f       	sbci	r31, 0xFE	; 254
    492a:	80 81       	ld	r24, Z
    492c:	89 8b       	std	Y+17, r24	; 0x11
    492e:	8b 81       	ldd	r24, Y+3	; 0x03
    4930:	88 2f       	mov	r24, r24
    4932:	90 e0       	ldi	r25, 0x00	; 0
    4934:	fc 01       	movw	r30, r24
    4936:	e6 53       	subi	r30, 0x36	; 54
    4938:	fe 4f       	sbci	r31, 0xFE	; 254
    493a:	80 81       	ld	r24, Z
    493c:	86 95       	lsr	r24
    493e:	86 95       	lsr	r24
    4940:	88 2f       	mov	r24, r24
    4942:	90 e0       	ldi	r25, 0x00	; 0
    4944:	81 70       	andi	r24, 0x01	; 1
    4946:	90 70       	andi	r25, 0x00	; 0
    4948:	18 8a       	std	Y+16, r1	; 0x10
    494a:	00 97       	sbiw	r24, 0x00	; 0
    494c:	11 f4       	brne	.+4      	; 0x4952 <SEV_SEG_enumNUMDisplay+0x634>
    494e:	81 e0       	ldi	r24, 0x01	; 1
    4950:	88 8b       	std	Y+16, r24	; 0x10
    4952:	8a 89       	ldd	r24, Y+18	; 0x12
    4954:	69 89       	ldd	r22, Y+17	; 0x11
    4956:	48 89       	ldd	r20, Y+16	; 0x10
    4958:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    495c:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    495e:	89 81       	ldd	r24, Y+1	; 0x01
    4960:	81 30       	cpi	r24, 0x01	; 1
    4962:	19 f0       	breq	.+6      	; 0x496a <SEV_SEG_enumNUMDisplay+0x64c>
    4964:	89 81       	ldd	r24, Y+1	; 0x01
    4966:	89 8f       	std	Y+25, r24	; 0x19
    4968:	33 c1       	rjmp	.+614    	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],3));
    496a:	8a 81       	ldd	r24, Y+2	; 0x02
    496c:	48 2f       	mov	r20, r24
    496e:	50 e0       	ldi	r21, 0x00	; 0
    4970:	ca 01       	movw	r24, r20
    4972:	88 0f       	add	r24, r24
    4974:	99 1f       	adc	r25, r25
    4976:	9c 01       	movw	r18, r24
    4978:	22 0f       	add	r18, r18
    497a:	33 1f       	adc	r19, r19
    497c:	22 0f       	add	r18, r18
    497e:	33 1f       	adc	r19, r19
    4980:	22 0f       	add	r18, r18
    4982:	33 1f       	adc	r19, r19
    4984:	82 0f       	add	r24, r18
    4986:	93 1f       	adc	r25, r19
    4988:	84 0f       	add	r24, r20
    498a:	95 1f       	adc	r25, r21
    498c:	fc 01       	movw	r30, r24
    498e:	e6 55       	subi	r30, 0x56	; 86
    4990:	fe 4f       	sbci	r31, 0xFE	; 254
    4992:	80 81       	ld	r24, Z
    4994:	8f 87       	std	Y+15, r24	; 0x0f
    4996:	8a 81       	ldd	r24, Y+2	; 0x02
    4998:	48 2f       	mov	r20, r24
    499a:	50 e0       	ldi	r21, 0x00	; 0
    499c:	ca 01       	movw	r24, r20
    499e:	88 0f       	add	r24, r24
    49a0:	99 1f       	adc	r25, r25
    49a2:	9c 01       	movw	r18, r24
    49a4:	22 0f       	add	r18, r18
    49a6:	33 1f       	adc	r19, r19
    49a8:	22 0f       	add	r18, r18
    49aa:	33 1f       	adc	r19, r19
    49ac:	22 0f       	add	r18, r18
    49ae:	33 1f       	adc	r19, r19
    49b0:	82 0f       	add	r24, r18
    49b2:	93 1f       	adc	r25, r19
    49b4:	84 0f       	add	r24, r20
    49b6:	95 1f       	adc	r25, r21
    49b8:	fc 01       	movw	r30, r24
    49ba:	e5 55       	subi	r30, 0x55	; 85
    49bc:	fe 4f       	sbci	r31, 0xFE	; 254
    49be:	80 81       	ld	r24, Z
    49c0:	8e 87       	std	Y+14, r24	; 0x0e
    49c2:	8b 81       	ldd	r24, Y+3	; 0x03
    49c4:	88 2f       	mov	r24, r24
    49c6:	90 e0       	ldi	r25, 0x00	; 0
    49c8:	fc 01       	movw	r30, r24
    49ca:	e6 53       	subi	r30, 0x36	; 54
    49cc:	fe 4f       	sbci	r31, 0xFE	; 254
    49ce:	80 81       	ld	r24, Z
    49d0:	86 95       	lsr	r24
    49d2:	86 95       	lsr	r24
    49d4:	86 95       	lsr	r24
    49d6:	88 2f       	mov	r24, r24
    49d8:	90 e0       	ldi	r25, 0x00	; 0
    49da:	81 70       	andi	r24, 0x01	; 1
    49dc:	90 70       	andi	r25, 0x00	; 0
    49de:	1d 86       	std	Y+13, r1	; 0x0d
    49e0:	00 97       	sbiw	r24, 0x00	; 0
    49e2:	11 f4       	brne	.+4      	; 0x49e8 <SEV_SEG_enumNUMDisplay+0x6ca>
    49e4:	81 e0       	ldi	r24, 0x01	; 1
    49e6:	8d 87       	std	Y+13, r24	; 0x0d
    49e8:	8f 85       	ldd	r24, Y+15	; 0x0f
    49ea:	6e 85       	ldd	r22, Y+14	; 0x0e
    49ec:	4d 85       	ldd	r20, Y+13	; 0x0d
    49ee:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    49f2:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    49f4:	89 81       	ldd	r24, Y+1	; 0x01
    49f6:	81 30       	cpi	r24, 0x01	; 1
    49f8:	19 f0       	breq	.+6      	; 0x4a00 <SEV_SEG_enumNUMDisplay+0x6e2>
    49fa:	89 81       	ldd	r24, Y+1	; 0x01
    49fc:	89 8f       	std	Y+25, r24	; 0x19
    49fe:	e8 c0       	rjmp	.+464    	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],4));
    4a00:	8a 81       	ldd	r24, Y+2	; 0x02
    4a02:	48 2f       	mov	r20, r24
    4a04:	50 e0       	ldi	r21, 0x00	; 0
    4a06:	ca 01       	movw	r24, r20
    4a08:	88 0f       	add	r24, r24
    4a0a:	99 1f       	adc	r25, r25
    4a0c:	9c 01       	movw	r18, r24
    4a0e:	22 0f       	add	r18, r18
    4a10:	33 1f       	adc	r19, r19
    4a12:	22 0f       	add	r18, r18
    4a14:	33 1f       	adc	r19, r19
    4a16:	22 0f       	add	r18, r18
    4a18:	33 1f       	adc	r19, r19
    4a1a:	82 0f       	add	r24, r18
    4a1c:	93 1f       	adc	r25, r19
    4a1e:	84 0f       	add	r24, r20
    4a20:	95 1f       	adc	r25, r21
    4a22:	fc 01       	movw	r30, r24
    4a24:	e4 55       	subi	r30, 0x54	; 84
    4a26:	fe 4f       	sbci	r31, 0xFE	; 254
    4a28:	80 81       	ld	r24, Z
    4a2a:	8c 87       	std	Y+12, r24	; 0x0c
    4a2c:	8a 81       	ldd	r24, Y+2	; 0x02
    4a2e:	48 2f       	mov	r20, r24
    4a30:	50 e0       	ldi	r21, 0x00	; 0
    4a32:	ca 01       	movw	r24, r20
    4a34:	88 0f       	add	r24, r24
    4a36:	99 1f       	adc	r25, r25
    4a38:	9c 01       	movw	r18, r24
    4a3a:	22 0f       	add	r18, r18
    4a3c:	33 1f       	adc	r19, r19
    4a3e:	22 0f       	add	r18, r18
    4a40:	33 1f       	adc	r19, r19
    4a42:	22 0f       	add	r18, r18
    4a44:	33 1f       	adc	r19, r19
    4a46:	82 0f       	add	r24, r18
    4a48:	93 1f       	adc	r25, r19
    4a4a:	84 0f       	add	r24, r20
    4a4c:	95 1f       	adc	r25, r21
    4a4e:	fc 01       	movw	r30, r24
    4a50:	e3 55       	subi	r30, 0x53	; 83
    4a52:	fe 4f       	sbci	r31, 0xFE	; 254
    4a54:	80 81       	ld	r24, Z
    4a56:	8b 87       	std	Y+11, r24	; 0x0b
    4a58:	8b 81       	ldd	r24, Y+3	; 0x03
    4a5a:	88 2f       	mov	r24, r24
    4a5c:	90 e0       	ldi	r25, 0x00	; 0
    4a5e:	fc 01       	movw	r30, r24
    4a60:	e6 53       	subi	r30, 0x36	; 54
    4a62:	fe 4f       	sbci	r31, 0xFE	; 254
    4a64:	80 81       	ld	r24, Z
    4a66:	82 95       	swap	r24
    4a68:	8f 70       	andi	r24, 0x0F	; 15
    4a6a:	88 2f       	mov	r24, r24
    4a6c:	90 e0       	ldi	r25, 0x00	; 0
    4a6e:	81 70       	andi	r24, 0x01	; 1
    4a70:	90 70       	andi	r25, 0x00	; 0
    4a72:	1a 86       	std	Y+10, r1	; 0x0a
    4a74:	00 97       	sbiw	r24, 0x00	; 0
    4a76:	11 f4       	brne	.+4      	; 0x4a7c <SEV_SEG_enumNUMDisplay+0x75e>
    4a78:	81 e0       	ldi	r24, 0x01	; 1
    4a7a:	8a 87       	std	Y+10, r24	; 0x0a
    4a7c:	8c 85       	ldd	r24, Y+12	; 0x0c
    4a7e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4a80:	4a 85       	ldd	r20, Y+10	; 0x0a
    4a82:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    4a86:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4a88:	89 81       	ldd	r24, Y+1	; 0x01
    4a8a:	81 30       	cpi	r24, 0x01	; 1
    4a8c:	19 f0       	breq	.+6      	; 0x4a94 <SEV_SEG_enumNUMDisplay+0x776>
    4a8e:	89 81       	ldd	r24, Y+1	; 0x01
    4a90:	89 8f       	std	Y+25, r24	; 0x19
    4a92:	9e c0       	rjmp	.+316    	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],5));
    4a94:	8a 81       	ldd	r24, Y+2	; 0x02
    4a96:	48 2f       	mov	r20, r24
    4a98:	50 e0       	ldi	r21, 0x00	; 0
    4a9a:	ca 01       	movw	r24, r20
    4a9c:	88 0f       	add	r24, r24
    4a9e:	99 1f       	adc	r25, r25
    4aa0:	9c 01       	movw	r18, r24
    4aa2:	22 0f       	add	r18, r18
    4aa4:	33 1f       	adc	r19, r19
    4aa6:	22 0f       	add	r18, r18
    4aa8:	33 1f       	adc	r19, r19
    4aaa:	22 0f       	add	r18, r18
    4aac:	33 1f       	adc	r19, r19
    4aae:	82 0f       	add	r24, r18
    4ab0:	93 1f       	adc	r25, r19
    4ab2:	84 0f       	add	r24, r20
    4ab4:	95 1f       	adc	r25, r21
    4ab6:	fc 01       	movw	r30, r24
    4ab8:	e2 55       	subi	r30, 0x52	; 82
    4aba:	fe 4f       	sbci	r31, 0xFE	; 254
    4abc:	80 81       	ld	r24, Z
    4abe:	89 87       	std	Y+9, r24	; 0x09
    4ac0:	8a 81       	ldd	r24, Y+2	; 0x02
    4ac2:	48 2f       	mov	r20, r24
    4ac4:	50 e0       	ldi	r21, 0x00	; 0
    4ac6:	ca 01       	movw	r24, r20
    4ac8:	88 0f       	add	r24, r24
    4aca:	99 1f       	adc	r25, r25
    4acc:	9c 01       	movw	r18, r24
    4ace:	22 0f       	add	r18, r18
    4ad0:	33 1f       	adc	r19, r19
    4ad2:	22 0f       	add	r18, r18
    4ad4:	33 1f       	adc	r19, r19
    4ad6:	22 0f       	add	r18, r18
    4ad8:	33 1f       	adc	r19, r19
    4ada:	82 0f       	add	r24, r18
    4adc:	93 1f       	adc	r25, r19
    4ade:	84 0f       	add	r24, r20
    4ae0:	95 1f       	adc	r25, r21
    4ae2:	fc 01       	movw	r30, r24
    4ae4:	e1 55       	subi	r30, 0x51	; 81
    4ae6:	fe 4f       	sbci	r31, 0xFE	; 254
    4ae8:	80 81       	ld	r24, Z
    4aea:	88 87       	std	Y+8, r24	; 0x08
    4aec:	8b 81       	ldd	r24, Y+3	; 0x03
    4aee:	88 2f       	mov	r24, r24
    4af0:	90 e0       	ldi	r25, 0x00	; 0
    4af2:	fc 01       	movw	r30, r24
    4af4:	e6 53       	subi	r30, 0x36	; 54
    4af6:	fe 4f       	sbci	r31, 0xFE	; 254
    4af8:	80 81       	ld	r24, Z
    4afa:	82 95       	swap	r24
    4afc:	86 95       	lsr	r24
    4afe:	87 70       	andi	r24, 0x07	; 7
    4b00:	88 2f       	mov	r24, r24
    4b02:	90 e0       	ldi	r25, 0x00	; 0
    4b04:	81 70       	andi	r24, 0x01	; 1
    4b06:	90 70       	andi	r25, 0x00	; 0
    4b08:	1f 82       	std	Y+7, r1	; 0x07
    4b0a:	00 97       	sbiw	r24, 0x00	; 0
    4b0c:	11 f4       	brne	.+4      	; 0x4b12 <SEV_SEG_enumNUMDisplay+0x7f4>
    4b0e:	81 e0       	ldi	r24, 0x01	; 1
    4b10:	8f 83       	std	Y+7, r24	; 0x07
    4b12:	89 85       	ldd	r24, Y+9	; 0x09
    4b14:	68 85       	ldd	r22, Y+8	; 0x08
    4b16:	4f 81       	ldd	r20, Y+7	; 0x07
    4b18:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    4b1c:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4b1e:	89 81       	ldd	r24, Y+1	; 0x01
    4b20:	81 30       	cpi	r24, 0x01	; 1
    4b22:	19 f0       	breq	.+6      	; 0x4b2a <SEV_SEG_enumNUMDisplay+0x80c>
    4b24:	89 81       	ldd	r24, Y+1	; 0x01
    4b26:	89 8f       	std	Y+25, r24	; 0x19
    4b28:	53 c0       	rjmp	.+166    	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],6));
    4b2a:	8a 81       	ldd	r24, Y+2	; 0x02
    4b2c:	48 2f       	mov	r20, r24
    4b2e:	50 e0       	ldi	r21, 0x00	; 0
    4b30:	ca 01       	movw	r24, r20
    4b32:	88 0f       	add	r24, r24
    4b34:	99 1f       	adc	r25, r25
    4b36:	9c 01       	movw	r18, r24
    4b38:	22 0f       	add	r18, r18
    4b3a:	33 1f       	adc	r19, r19
    4b3c:	22 0f       	add	r18, r18
    4b3e:	33 1f       	adc	r19, r19
    4b40:	22 0f       	add	r18, r18
    4b42:	33 1f       	adc	r19, r19
    4b44:	82 0f       	add	r24, r18
    4b46:	93 1f       	adc	r25, r19
    4b48:	84 0f       	add	r24, r20
    4b4a:	95 1f       	adc	r25, r21
    4b4c:	fc 01       	movw	r30, r24
    4b4e:	e0 55       	subi	r30, 0x50	; 80
    4b50:	fe 4f       	sbci	r31, 0xFE	; 254
    4b52:	80 81       	ld	r24, Z
    4b54:	8e 83       	std	Y+6, r24	; 0x06
    4b56:	8a 81       	ldd	r24, Y+2	; 0x02
    4b58:	48 2f       	mov	r20, r24
    4b5a:	50 e0       	ldi	r21, 0x00	; 0
    4b5c:	ca 01       	movw	r24, r20
    4b5e:	88 0f       	add	r24, r24
    4b60:	99 1f       	adc	r25, r25
    4b62:	9c 01       	movw	r18, r24
    4b64:	22 0f       	add	r18, r18
    4b66:	33 1f       	adc	r19, r19
    4b68:	22 0f       	add	r18, r18
    4b6a:	33 1f       	adc	r19, r19
    4b6c:	22 0f       	add	r18, r18
    4b6e:	33 1f       	adc	r19, r19
    4b70:	82 0f       	add	r24, r18
    4b72:	93 1f       	adc	r25, r19
    4b74:	84 0f       	add	r24, r20
    4b76:	95 1f       	adc	r25, r21
    4b78:	fc 01       	movw	r30, r24
    4b7a:	ef 54       	subi	r30, 0x4F	; 79
    4b7c:	fe 4f       	sbci	r31, 0xFE	; 254
    4b7e:	80 81       	ld	r24, Z
    4b80:	8d 83       	std	Y+5, r24	; 0x05
    4b82:	8b 81       	ldd	r24, Y+3	; 0x03
    4b84:	88 2f       	mov	r24, r24
    4b86:	90 e0       	ldi	r25, 0x00	; 0
    4b88:	fc 01       	movw	r30, r24
    4b8a:	e6 53       	subi	r30, 0x36	; 54
    4b8c:	fe 4f       	sbci	r31, 0xFE	; 254
    4b8e:	80 81       	ld	r24, Z
    4b90:	82 95       	swap	r24
    4b92:	86 95       	lsr	r24
    4b94:	86 95       	lsr	r24
    4b96:	83 70       	andi	r24, 0x03	; 3
    4b98:	88 2f       	mov	r24, r24
    4b9a:	90 e0       	ldi	r25, 0x00	; 0
    4b9c:	81 70       	andi	r24, 0x01	; 1
    4b9e:	90 70       	andi	r25, 0x00	; 0
    4ba0:	1c 82       	std	Y+4, r1	; 0x04
    4ba2:	00 97       	sbiw	r24, 0x00	; 0
    4ba4:	11 f4       	brne	.+4      	; 0x4baa <SEV_SEG_enumNUMDisplay+0x88c>
    4ba6:	81 e0       	ldi	r24, 0x01	; 1
    4ba8:	8c 83       	std	Y+4, r24	; 0x04
    4baa:	8e 81       	ldd	r24, Y+6	; 0x06
    4bac:	6d 81       	ldd	r22, Y+5	; 0x05
    4bae:	4c 81       	ldd	r20, Y+4	; 0x04
    4bb0:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    4bb4:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4bb6:	89 81       	ldd	r24, Y+1	; 0x01
    4bb8:	81 30       	cpi	r24, 0x01	; 1
    4bba:	41 f0       	breq	.+16     	; 0x4bcc <SEV_SEG_enumNUMDisplay+0x8ae>
    4bbc:	89 81       	ldd	r24, Y+1	; 0x01
    4bbe:	89 8f       	std	Y+25, r24	; 0x19
    4bc0:	07 c0       	rjmp	.+14     	; 0x4bd0 <SEV_SEG_enumNUMDisplay+0x8b2>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    4bc2:	83 e0       	ldi	r24, 0x03	; 3
    4bc4:	89 83       	std	Y+1, r24	; 0x01
    4bc6:	02 c0       	rjmp	.+4      	; 0x4bcc <SEV_SEG_enumNUMDisplay+0x8ae>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    4bc8:	83 e0       	ldi	r24, 0x03	; 3
    4bca:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    4bcc:	89 81       	ldd	r24, Y+1	; 0x01
    4bce:	89 8f       	std	Y+25, r24	; 0x19
    4bd0:	89 8d       	ldd	r24, Y+25	; 0x19
}
    4bd2:	69 96       	adiw	r28, 0x19	; 25
    4bd4:	0f b6       	in	r0, 0x3f	; 63
    4bd6:	f8 94       	cli
    4bd8:	de bf       	out	0x3e, r29	; 62
    4bda:	0f be       	out	0x3f, r0	; 63
    4bdc:	cd bf       	out	0x3d, r28	; 61
    4bde:	cf 91       	pop	r28
    4be0:	df 91       	pop	r29
    4be2:	08 95       	ret

00004be4 <SEV_SEG_enumCMNEnable>:
ES_T SEV_SEG_enumCMNEnable(u8 Copy_u8SegmentID)
{
    4be4:	df 93       	push	r29
    4be6:	cf 93       	push	r28
    4be8:	00 d0       	rcall	.+0      	; 0x4bea <SEV_SEG_enumCMNEnable+0x6>
    4bea:	cd b7       	in	r28, 0x3d	; 61
    4bec:	de b7       	in	r29, 0x3e	; 62
    4bee:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    4bf0:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    4bf2:	8a 81       	ldd	r24, Y+2	; 0x02
    4bf4:	82 30       	cpi	r24, 0x02	; 2
    4bf6:	08 f0       	brcs	.+2      	; 0x4bfa <SEV_SEG_enumCMNEnable+0x16>
    4bf8:	f6 c0       	rjmp	.+492    	; 0x4de6 <SEV_SEG_enumCMNEnable+0x202>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port<=DIO_PORTD
    4bfa:	8a 81       	ldd	r24, Y+2	; 0x02
    4bfc:	48 2f       	mov	r20, r24
    4bfe:	50 e0       	ldi	r21, 0x00	; 0
    4c00:	ca 01       	movw	r24, r20
    4c02:	88 0f       	add	r24, r24
    4c04:	99 1f       	adc	r25, r25
    4c06:	9c 01       	movw	r18, r24
    4c08:	22 0f       	add	r18, r18
    4c0a:	33 1f       	adc	r19, r19
    4c0c:	22 0f       	add	r18, r18
    4c0e:	33 1f       	adc	r19, r19
    4c10:	22 0f       	add	r18, r18
    4c12:	33 1f       	adc	r19, r19
    4c14:	82 0f       	add	r24, r18
    4c16:	93 1f       	adc	r25, r19
    4c18:	84 0f       	add	r24, r20
    4c1a:	95 1f       	adc	r25, r21
    4c1c:	fc 01       	movw	r30, r24
    4c1e:	ee 54       	subi	r30, 0x4E	; 78
    4c20:	fe 4f       	sbci	r31, 0xFE	; 254
    4c22:	80 81       	ld	r24, Z
    4c24:	84 30       	cpi	r24, 0x04	; 4
    4c26:	08 f0       	brcs	.+2      	; 0x4c2a <SEV_SEG_enumCMNEnable+0x46>
    4c28:	ab c0       	rjmp	.+342    	; 0x4d80 <SEV_SEG_enumCMNEnable+0x19c>
    4c2a:	8a 81       	ldd	r24, Y+2	; 0x02
    4c2c:	48 2f       	mov	r20, r24
    4c2e:	50 e0       	ldi	r21, 0x00	; 0
    4c30:	ca 01       	movw	r24, r20
    4c32:	88 0f       	add	r24, r24
    4c34:	99 1f       	adc	r25, r25
    4c36:	9c 01       	movw	r18, r24
    4c38:	22 0f       	add	r18, r18
    4c3a:	33 1f       	adc	r19, r19
    4c3c:	22 0f       	add	r18, r18
    4c3e:	33 1f       	adc	r19, r19
    4c40:	22 0f       	add	r18, r18
    4c42:	33 1f       	adc	r19, r19
    4c44:	82 0f       	add	r24, r18
    4c46:	93 1f       	adc	r25, r19
    4c48:	84 0f       	add	r24, r20
    4c4a:	95 1f       	adc	r25, r21
    4c4c:	fc 01       	movw	r30, r24
    4c4e:	ed 54       	subi	r30, 0x4D	; 77
    4c50:	fe 4f       	sbci	r31, 0xFE	; 254
    4c52:	80 81       	ld	r24, Z
    4c54:	88 30       	cpi	r24, 0x08	; 8
    4c56:	08 f0       	brcs	.+2      	; 0x4c5a <SEV_SEG_enumCMNEnable+0x76>
    4c58:	93 c0       	rjmp	.+294    	; 0x4d80 <SEV_SEG_enumCMNEnable+0x19c>
			&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin<=DIO_PIN7)
		{
			if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    4c5a:	8a 81       	ldd	r24, Y+2	; 0x02
    4c5c:	48 2f       	mov	r20, r24
    4c5e:	50 e0       	ldi	r21, 0x00	; 0
    4c60:	ca 01       	movw	r24, r20
    4c62:	88 0f       	add	r24, r24
    4c64:	99 1f       	adc	r25, r25
    4c66:	9c 01       	movw	r18, r24
    4c68:	22 0f       	add	r18, r18
    4c6a:	33 1f       	adc	r19, r19
    4c6c:	22 0f       	add	r18, r18
    4c6e:	33 1f       	adc	r19, r19
    4c70:	22 0f       	add	r18, r18
    4c72:	33 1f       	adc	r19, r19
    4c74:	82 0f       	add	r24, r18
    4c76:	93 1f       	adc	r25, r19
    4c78:	84 0f       	add	r24, r20
    4c7a:	95 1f       	adc	r25, r21
    4c7c:	fc 01       	movw	r30, r24
    4c7e:	ea 54       	subi	r30, 0x4A	; 74
    4c80:	fe 4f       	sbci	r31, 0xFE	; 254
    4c82:	80 81       	ld	r24, Z
    4c84:	81 30       	cpi	r24, 0x01	; 1
    4c86:	89 f5       	brne	.+98     	; 0x4cea <SEV_SEG_enumCMNEnable+0x106>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,LOW);
    4c88:	8a 81       	ldd	r24, Y+2	; 0x02
    4c8a:	48 2f       	mov	r20, r24
    4c8c:	50 e0       	ldi	r21, 0x00	; 0
    4c8e:	ca 01       	movw	r24, r20
    4c90:	88 0f       	add	r24, r24
    4c92:	99 1f       	adc	r25, r25
    4c94:	9c 01       	movw	r18, r24
    4c96:	22 0f       	add	r18, r18
    4c98:	33 1f       	adc	r19, r19
    4c9a:	22 0f       	add	r18, r18
    4c9c:	33 1f       	adc	r19, r19
    4c9e:	22 0f       	add	r18, r18
    4ca0:	33 1f       	adc	r19, r19
    4ca2:	82 0f       	add	r24, r18
    4ca4:	93 1f       	adc	r25, r19
    4ca6:	84 0f       	add	r24, r20
    4ca8:	95 1f       	adc	r25, r21
    4caa:	fc 01       	movw	r30, r24
    4cac:	ee 54       	subi	r30, 0x4E	; 78
    4cae:	fe 4f       	sbci	r31, 0xFE	; 254
    4cb0:	60 81       	ld	r22, Z
    4cb2:	8a 81       	ldd	r24, Y+2	; 0x02
    4cb4:	48 2f       	mov	r20, r24
    4cb6:	50 e0       	ldi	r21, 0x00	; 0
    4cb8:	ca 01       	movw	r24, r20
    4cba:	88 0f       	add	r24, r24
    4cbc:	99 1f       	adc	r25, r25
    4cbe:	9c 01       	movw	r18, r24
    4cc0:	22 0f       	add	r18, r18
    4cc2:	33 1f       	adc	r19, r19
    4cc4:	22 0f       	add	r18, r18
    4cc6:	33 1f       	adc	r19, r19
    4cc8:	22 0f       	add	r18, r18
    4cca:	33 1f       	adc	r19, r19
    4ccc:	82 0f       	add	r24, r18
    4cce:	93 1f       	adc	r25, r19
    4cd0:	84 0f       	add	r24, r20
    4cd2:	95 1f       	adc	r25, r21
    4cd4:	fc 01       	movw	r30, r24
    4cd6:	ed 54       	subi	r30, 0x4D	; 77
    4cd8:	fe 4f       	sbci	r31, 0xFE	; 254
    4cda:	90 81       	ld	r25, Z
    4cdc:	86 2f       	mov	r24, r22
    4cde:	69 2f       	mov	r22, r25
    4ce0:	40 e0       	ldi	r20, 0x00	; 0
    4ce2:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    4ce6:	89 83       	std	Y+1, r24	; 0x01
    4ce8:	80 c0       	rjmp	.+256    	; 0x4dea <SEV_SEG_enumCMNEnable+0x206>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    4cea:	8a 81       	ldd	r24, Y+2	; 0x02
    4cec:	48 2f       	mov	r20, r24
    4cee:	50 e0       	ldi	r21, 0x00	; 0
    4cf0:	ca 01       	movw	r24, r20
    4cf2:	88 0f       	add	r24, r24
    4cf4:	99 1f       	adc	r25, r25
    4cf6:	9c 01       	movw	r18, r24
    4cf8:	22 0f       	add	r18, r18
    4cfa:	33 1f       	adc	r19, r19
    4cfc:	22 0f       	add	r18, r18
    4cfe:	33 1f       	adc	r19, r19
    4d00:	22 0f       	add	r18, r18
    4d02:	33 1f       	adc	r19, r19
    4d04:	82 0f       	add	r24, r18
    4d06:	93 1f       	adc	r25, r19
    4d08:	84 0f       	add	r24, r20
    4d0a:	95 1f       	adc	r25, r21
    4d0c:	fc 01       	movw	r30, r24
    4d0e:	ea 54       	subi	r30, 0x4A	; 74
    4d10:	fe 4f       	sbci	r31, 0xFE	; 254
    4d12:	80 81       	ld	r24, Z
    4d14:	88 23       	and	r24, r24
    4d16:	89 f5       	brne	.+98     	; 0x4d7a <SEV_SEG_enumCMNEnable+0x196>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,HIGH);
    4d18:	8a 81       	ldd	r24, Y+2	; 0x02
    4d1a:	48 2f       	mov	r20, r24
    4d1c:	50 e0       	ldi	r21, 0x00	; 0
    4d1e:	ca 01       	movw	r24, r20
    4d20:	88 0f       	add	r24, r24
    4d22:	99 1f       	adc	r25, r25
    4d24:	9c 01       	movw	r18, r24
    4d26:	22 0f       	add	r18, r18
    4d28:	33 1f       	adc	r19, r19
    4d2a:	22 0f       	add	r18, r18
    4d2c:	33 1f       	adc	r19, r19
    4d2e:	22 0f       	add	r18, r18
    4d30:	33 1f       	adc	r19, r19
    4d32:	82 0f       	add	r24, r18
    4d34:	93 1f       	adc	r25, r19
    4d36:	84 0f       	add	r24, r20
    4d38:	95 1f       	adc	r25, r21
    4d3a:	fc 01       	movw	r30, r24
    4d3c:	ee 54       	subi	r30, 0x4E	; 78
    4d3e:	fe 4f       	sbci	r31, 0xFE	; 254
    4d40:	60 81       	ld	r22, Z
    4d42:	8a 81       	ldd	r24, Y+2	; 0x02
    4d44:	48 2f       	mov	r20, r24
    4d46:	50 e0       	ldi	r21, 0x00	; 0
    4d48:	ca 01       	movw	r24, r20
    4d4a:	88 0f       	add	r24, r24
    4d4c:	99 1f       	adc	r25, r25
    4d4e:	9c 01       	movw	r18, r24
    4d50:	22 0f       	add	r18, r18
    4d52:	33 1f       	adc	r19, r19
    4d54:	22 0f       	add	r18, r18
    4d56:	33 1f       	adc	r19, r19
    4d58:	22 0f       	add	r18, r18
    4d5a:	33 1f       	adc	r19, r19
    4d5c:	82 0f       	add	r24, r18
    4d5e:	93 1f       	adc	r25, r19
    4d60:	84 0f       	add	r24, r20
    4d62:	95 1f       	adc	r25, r21
    4d64:	fc 01       	movw	r30, r24
    4d66:	ed 54       	subi	r30, 0x4D	; 77
    4d68:	fe 4f       	sbci	r31, 0xFE	; 254
    4d6a:	90 81       	ld	r25, Z
    4d6c:	86 2f       	mov	r24, r22
    4d6e:	69 2f       	mov	r22, r25
    4d70:	41 e0       	ldi	r20, 0x01	; 1
    4d72:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    4d76:	89 83       	std	Y+1, r24	; 0x01
    4d78:	38 c0       	rjmp	.+112    	; 0x4dea <SEV_SEG_enumCMNEnable+0x206>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    4d7a:	83 e0       	ldi	r24, 0x03	; 3
    4d7c:	89 83       	std	Y+1, r24	; 0x01
    4d7e:	35 c0       	rjmp	.+106    	; 0x4dea <SEV_SEG_enumCMNEnable+0x206>
			}
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    4d80:	8a 81       	ldd	r24, Y+2	; 0x02
    4d82:	48 2f       	mov	r20, r24
    4d84:	50 e0       	ldi	r21, 0x00	; 0
    4d86:	ca 01       	movw	r24, r20
    4d88:	88 0f       	add	r24, r24
    4d8a:	99 1f       	adc	r25, r25
    4d8c:	9c 01       	movw	r18, r24
    4d8e:	22 0f       	add	r18, r18
    4d90:	33 1f       	adc	r19, r19
    4d92:	22 0f       	add	r18, r18
    4d94:	33 1f       	adc	r19, r19
    4d96:	22 0f       	add	r18, r18
    4d98:	33 1f       	adc	r19, r19
    4d9a:	82 0f       	add	r24, r18
    4d9c:	93 1f       	adc	r25, r19
    4d9e:	84 0f       	add	r24, r20
    4da0:	95 1f       	adc	r25, r21
    4da2:	fc 01       	movw	r30, r24
    4da4:	ee 54       	subi	r30, 0x4E	; 78
    4da6:	fe 4f       	sbci	r31, 0xFE	; 254
    4da8:	80 81       	ld	r24, Z
    4daa:	88 30       	cpi	r24, 0x08	; 8
    4dac:	c9 f4       	brne	.+50     	; 0x4de0 <SEV_SEG_enumCMNEnable+0x1fc>
    4dae:	8a 81       	ldd	r24, Y+2	; 0x02
    4db0:	48 2f       	mov	r20, r24
    4db2:	50 e0       	ldi	r21, 0x00	; 0
    4db4:	ca 01       	movw	r24, r20
    4db6:	88 0f       	add	r24, r24
    4db8:	99 1f       	adc	r25, r25
    4dba:	9c 01       	movw	r18, r24
    4dbc:	22 0f       	add	r18, r18
    4dbe:	33 1f       	adc	r19, r19
    4dc0:	22 0f       	add	r18, r18
    4dc2:	33 1f       	adc	r19, r19
    4dc4:	22 0f       	add	r18, r18
    4dc6:	33 1f       	adc	r19, r19
    4dc8:	82 0f       	add	r24, r18
    4dca:	93 1f       	adc	r25, r19
    4dcc:	84 0f       	add	r24, r20
    4dce:	95 1f       	adc	r25, r21
    4dd0:	fc 01       	movw	r30, r24
    4dd2:	ed 54       	subi	r30, 0x4D	; 77
    4dd4:	fe 4f       	sbci	r31, 0xFE	; 254
    4dd6:	80 81       	ld	r24, Z
    4dd8:	88 30       	cpi	r24, 0x08	; 8
    4dda:	11 f4       	brne	.+4      	; 0x4de0 <SEV_SEG_enumCMNEnable+0x1fc>
				&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin==NOT_CONNECTED)
		{
			Local_enumErrorState=ES_NOK;
    4ddc:	19 82       	std	Y+1, r1	; 0x01
    4dde:	05 c0       	rjmp	.+10     	; 0x4dea <SEV_SEG_enumCMNEnable+0x206>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    4de0:	83 e0       	ldi	r24, 0x03	; 3
    4de2:	89 83       	std	Y+1, r24	; 0x01
    4de4:	02 c0       	rjmp	.+4      	; 0x4dea <SEV_SEG_enumCMNEnable+0x206>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    4de6:	83 e0       	ldi	r24, 0x03	; 3
    4de8:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    4dea:	89 81       	ldd	r24, Y+1	; 0x01
}
    4dec:	0f 90       	pop	r0
    4dee:	0f 90       	pop	r0
    4df0:	cf 91       	pop	r28
    4df2:	df 91       	pop	r29
    4df4:	08 95       	ret

00004df6 <SEV_SEG_enumCMNDisable>:
ES_T SEV_SEG_enumCMNDisable(u8 Copy_u8SegmentID)
{
    4df6:	df 93       	push	r29
    4df8:	cf 93       	push	r28
    4dfa:	00 d0       	rcall	.+0      	; 0x4dfc <SEV_SEG_enumCMNDisable+0x6>
    4dfc:	cd b7       	in	r28, 0x3d	; 61
    4dfe:	de b7       	in	r29, 0x3e	; 62
    4e00:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    4e02:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    4e04:	8a 81       	ldd	r24, Y+2	; 0x02
    4e06:	82 30       	cpi	r24, 0x02	; 2
    4e08:	08 f0       	brcs	.+2      	; 0x4e0c <SEV_SEG_enumCMNDisable+0x16>
    4e0a:	f6 c0       	rjmp	.+492    	; 0x4ff8 <SEV_SEG_enumCMNDisable+0x202>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port<=DIO_PORTD
    4e0c:	8a 81       	ldd	r24, Y+2	; 0x02
    4e0e:	48 2f       	mov	r20, r24
    4e10:	50 e0       	ldi	r21, 0x00	; 0
    4e12:	ca 01       	movw	r24, r20
    4e14:	88 0f       	add	r24, r24
    4e16:	99 1f       	adc	r25, r25
    4e18:	9c 01       	movw	r18, r24
    4e1a:	22 0f       	add	r18, r18
    4e1c:	33 1f       	adc	r19, r19
    4e1e:	22 0f       	add	r18, r18
    4e20:	33 1f       	adc	r19, r19
    4e22:	22 0f       	add	r18, r18
    4e24:	33 1f       	adc	r19, r19
    4e26:	82 0f       	add	r24, r18
    4e28:	93 1f       	adc	r25, r19
    4e2a:	84 0f       	add	r24, r20
    4e2c:	95 1f       	adc	r25, r21
    4e2e:	fc 01       	movw	r30, r24
    4e30:	ee 54       	subi	r30, 0x4E	; 78
    4e32:	fe 4f       	sbci	r31, 0xFE	; 254
    4e34:	80 81       	ld	r24, Z
    4e36:	84 30       	cpi	r24, 0x04	; 4
    4e38:	08 f0       	brcs	.+2      	; 0x4e3c <SEV_SEG_enumCMNDisable+0x46>
    4e3a:	ab c0       	rjmp	.+342    	; 0x4f92 <SEV_SEG_enumCMNDisable+0x19c>
    4e3c:	8a 81       	ldd	r24, Y+2	; 0x02
    4e3e:	48 2f       	mov	r20, r24
    4e40:	50 e0       	ldi	r21, 0x00	; 0
    4e42:	ca 01       	movw	r24, r20
    4e44:	88 0f       	add	r24, r24
    4e46:	99 1f       	adc	r25, r25
    4e48:	9c 01       	movw	r18, r24
    4e4a:	22 0f       	add	r18, r18
    4e4c:	33 1f       	adc	r19, r19
    4e4e:	22 0f       	add	r18, r18
    4e50:	33 1f       	adc	r19, r19
    4e52:	22 0f       	add	r18, r18
    4e54:	33 1f       	adc	r19, r19
    4e56:	82 0f       	add	r24, r18
    4e58:	93 1f       	adc	r25, r19
    4e5a:	84 0f       	add	r24, r20
    4e5c:	95 1f       	adc	r25, r21
    4e5e:	fc 01       	movw	r30, r24
    4e60:	ed 54       	subi	r30, 0x4D	; 77
    4e62:	fe 4f       	sbci	r31, 0xFE	; 254
    4e64:	80 81       	ld	r24, Z
    4e66:	88 30       	cpi	r24, 0x08	; 8
    4e68:	08 f0       	brcs	.+2      	; 0x4e6c <SEV_SEG_enumCMNDisable+0x76>
    4e6a:	93 c0       	rjmp	.+294    	; 0x4f92 <SEV_SEG_enumCMNDisable+0x19c>
			&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin<=DIO_PIN7)
		{
			if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    4e6c:	8a 81       	ldd	r24, Y+2	; 0x02
    4e6e:	48 2f       	mov	r20, r24
    4e70:	50 e0       	ldi	r21, 0x00	; 0
    4e72:	ca 01       	movw	r24, r20
    4e74:	88 0f       	add	r24, r24
    4e76:	99 1f       	adc	r25, r25
    4e78:	9c 01       	movw	r18, r24
    4e7a:	22 0f       	add	r18, r18
    4e7c:	33 1f       	adc	r19, r19
    4e7e:	22 0f       	add	r18, r18
    4e80:	33 1f       	adc	r19, r19
    4e82:	22 0f       	add	r18, r18
    4e84:	33 1f       	adc	r19, r19
    4e86:	82 0f       	add	r24, r18
    4e88:	93 1f       	adc	r25, r19
    4e8a:	84 0f       	add	r24, r20
    4e8c:	95 1f       	adc	r25, r21
    4e8e:	fc 01       	movw	r30, r24
    4e90:	ea 54       	subi	r30, 0x4A	; 74
    4e92:	fe 4f       	sbci	r31, 0xFE	; 254
    4e94:	80 81       	ld	r24, Z
    4e96:	81 30       	cpi	r24, 0x01	; 1
    4e98:	89 f5       	brne	.+98     	; 0x4efc <SEV_SEG_enumCMNDisable+0x106>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,HIGH);
    4e9a:	8a 81       	ldd	r24, Y+2	; 0x02
    4e9c:	48 2f       	mov	r20, r24
    4e9e:	50 e0       	ldi	r21, 0x00	; 0
    4ea0:	ca 01       	movw	r24, r20
    4ea2:	88 0f       	add	r24, r24
    4ea4:	99 1f       	adc	r25, r25
    4ea6:	9c 01       	movw	r18, r24
    4ea8:	22 0f       	add	r18, r18
    4eaa:	33 1f       	adc	r19, r19
    4eac:	22 0f       	add	r18, r18
    4eae:	33 1f       	adc	r19, r19
    4eb0:	22 0f       	add	r18, r18
    4eb2:	33 1f       	adc	r19, r19
    4eb4:	82 0f       	add	r24, r18
    4eb6:	93 1f       	adc	r25, r19
    4eb8:	84 0f       	add	r24, r20
    4eba:	95 1f       	adc	r25, r21
    4ebc:	fc 01       	movw	r30, r24
    4ebe:	ee 54       	subi	r30, 0x4E	; 78
    4ec0:	fe 4f       	sbci	r31, 0xFE	; 254
    4ec2:	60 81       	ld	r22, Z
    4ec4:	8a 81       	ldd	r24, Y+2	; 0x02
    4ec6:	48 2f       	mov	r20, r24
    4ec8:	50 e0       	ldi	r21, 0x00	; 0
    4eca:	ca 01       	movw	r24, r20
    4ecc:	88 0f       	add	r24, r24
    4ece:	99 1f       	adc	r25, r25
    4ed0:	9c 01       	movw	r18, r24
    4ed2:	22 0f       	add	r18, r18
    4ed4:	33 1f       	adc	r19, r19
    4ed6:	22 0f       	add	r18, r18
    4ed8:	33 1f       	adc	r19, r19
    4eda:	22 0f       	add	r18, r18
    4edc:	33 1f       	adc	r19, r19
    4ede:	82 0f       	add	r24, r18
    4ee0:	93 1f       	adc	r25, r19
    4ee2:	84 0f       	add	r24, r20
    4ee4:	95 1f       	adc	r25, r21
    4ee6:	fc 01       	movw	r30, r24
    4ee8:	ed 54       	subi	r30, 0x4D	; 77
    4eea:	fe 4f       	sbci	r31, 0xFE	; 254
    4eec:	90 81       	ld	r25, Z
    4eee:	86 2f       	mov	r24, r22
    4ef0:	69 2f       	mov	r22, r25
    4ef2:	41 e0       	ldi	r20, 0x01	; 1
    4ef4:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    4ef8:	89 83       	std	Y+1, r24	; 0x01
    4efa:	80 c0       	rjmp	.+256    	; 0x4ffc <SEV_SEG_enumCMNDisable+0x206>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    4efc:	8a 81       	ldd	r24, Y+2	; 0x02
    4efe:	48 2f       	mov	r20, r24
    4f00:	50 e0       	ldi	r21, 0x00	; 0
    4f02:	ca 01       	movw	r24, r20
    4f04:	88 0f       	add	r24, r24
    4f06:	99 1f       	adc	r25, r25
    4f08:	9c 01       	movw	r18, r24
    4f0a:	22 0f       	add	r18, r18
    4f0c:	33 1f       	adc	r19, r19
    4f0e:	22 0f       	add	r18, r18
    4f10:	33 1f       	adc	r19, r19
    4f12:	22 0f       	add	r18, r18
    4f14:	33 1f       	adc	r19, r19
    4f16:	82 0f       	add	r24, r18
    4f18:	93 1f       	adc	r25, r19
    4f1a:	84 0f       	add	r24, r20
    4f1c:	95 1f       	adc	r25, r21
    4f1e:	fc 01       	movw	r30, r24
    4f20:	ea 54       	subi	r30, 0x4A	; 74
    4f22:	fe 4f       	sbci	r31, 0xFE	; 254
    4f24:	80 81       	ld	r24, Z
    4f26:	88 23       	and	r24, r24
    4f28:	89 f5       	brne	.+98     	; 0x4f8c <SEV_SEG_enumCMNDisable+0x196>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,LOW);
    4f2a:	8a 81       	ldd	r24, Y+2	; 0x02
    4f2c:	48 2f       	mov	r20, r24
    4f2e:	50 e0       	ldi	r21, 0x00	; 0
    4f30:	ca 01       	movw	r24, r20
    4f32:	88 0f       	add	r24, r24
    4f34:	99 1f       	adc	r25, r25
    4f36:	9c 01       	movw	r18, r24
    4f38:	22 0f       	add	r18, r18
    4f3a:	33 1f       	adc	r19, r19
    4f3c:	22 0f       	add	r18, r18
    4f3e:	33 1f       	adc	r19, r19
    4f40:	22 0f       	add	r18, r18
    4f42:	33 1f       	adc	r19, r19
    4f44:	82 0f       	add	r24, r18
    4f46:	93 1f       	adc	r25, r19
    4f48:	84 0f       	add	r24, r20
    4f4a:	95 1f       	adc	r25, r21
    4f4c:	fc 01       	movw	r30, r24
    4f4e:	ee 54       	subi	r30, 0x4E	; 78
    4f50:	fe 4f       	sbci	r31, 0xFE	; 254
    4f52:	60 81       	ld	r22, Z
    4f54:	8a 81       	ldd	r24, Y+2	; 0x02
    4f56:	48 2f       	mov	r20, r24
    4f58:	50 e0       	ldi	r21, 0x00	; 0
    4f5a:	ca 01       	movw	r24, r20
    4f5c:	88 0f       	add	r24, r24
    4f5e:	99 1f       	adc	r25, r25
    4f60:	9c 01       	movw	r18, r24
    4f62:	22 0f       	add	r18, r18
    4f64:	33 1f       	adc	r19, r19
    4f66:	22 0f       	add	r18, r18
    4f68:	33 1f       	adc	r19, r19
    4f6a:	22 0f       	add	r18, r18
    4f6c:	33 1f       	adc	r19, r19
    4f6e:	82 0f       	add	r24, r18
    4f70:	93 1f       	adc	r25, r19
    4f72:	84 0f       	add	r24, r20
    4f74:	95 1f       	adc	r25, r21
    4f76:	fc 01       	movw	r30, r24
    4f78:	ed 54       	subi	r30, 0x4D	; 77
    4f7a:	fe 4f       	sbci	r31, 0xFE	; 254
    4f7c:	90 81       	ld	r25, Z
    4f7e:	86 2f       	mov	r24, r22
    4f80:	69 2f       	mov	r22, r25
    4f82:	40 e0       	ldi	r20, 0x00	; 0
    4f84:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    4f88:	89 83       	std	Y+1, r24	; 0x01
    4f8a:	38 c0       	rjmp	.+112    	; 0x4ffc <SEV_SEG_enumCMNDisable+0x206>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    4f8c:	83 e0       	ldi	r24, 0x03	; 3
    4f8e:	89 83       	std	Y+1, r24	; 0x01
    4f90:	35 c0       	rjmp	.+106    	; 0x4ffc <SEV_SEG_enumCMNDisable+0x206>
			}
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    4f92:	8a 81       	ldd	r24, Y+2	; 0x02
    4f94:	48 2f       	mov	r20, r24
    4f96:	50 e0       	ldi	r21, 0x00	; 0
    4f98:	ca 01       	movw	r24, r20
    4f9a:	88 0f       	add	r24, r24
    4f9c:	99 1f       	adc	r25, r25
    4f9e:	9c 01       	movw	r18, r24
    4fa0:	22 0f       	add	r18, r18
    4fa2:	33 1f       	adc	r19, r19
    4fa4:	22 0f       	add	r18, r18
    4fa6:	33 1f       	adc	r19, r19
    4fa8:	22 0f       	add	r18, r18
    4faa:	33 1f       	adc	r19, r19
    4fac:	82 0f       	add	r24, r18
    4fae:	93 1f       	adc	r25, r19
    4fb0:	84 0f       	add	r24, r20
    4fb2:	95 1f       	adc	r25, r21
    4fb4:	fc 01       	movw	r30, r24
    4fb6:	ee 54       	subi	r30, 0x4E	; 78
    4fb8:	fe 4f       	sbci	r31, 0xFE	; 254
    4fba:	80 81       	ld	r24, Z
    4fbc:	88 30       	cpi	r24, 0x08	; 8
    4fbe:	c9 f4       	brne	.+50     	; 0x4ff2 <SEV_SEG_enumCMNDisable+0x1fc>
    4fc0:	8a 81       	ldd	r24, Y+2	; 0x02
    4fc2:	48 2f       	mov	r20, r24
    4fc4:	50 e0       	ldi	r21, 0x00	; 0
    4fc6:	ca 01       	movw	r24, r20
    4fc8:	88 0f       	add	r24, r24
    4fca:	99 1f       	adc	r25, r25
    4fcc:	9c 01       	movw	r18, r24
    4fce:	22 0f       	add	r18, r18
    4fd0:	33 1f       	adc	r19, r19
    4fd2:	22 0f       	add	r18, r18
    4fd4:	33 1f       	adc	r19, r19
    4fd6:	22 0f       	add	r18, r18
    4fd8:	33 1f       	adc	r19, r19
    4fda:	82 0f       	add	r24, r18
    4fdc:	93 1f       	adc	r25, r19
    4fde:	84 0f       	add	r24, r20
    4fe0:	95 1f       	adc	r25, r21
    4fe2:	fc 01       	movw	r30, r24
    4fe4:	ed 54       	subi	r30, 0x4D	; 77
    4fe6:	fe 4f       	sbci	r31, 0xFE	; 254
    4fe8:	80 81       	ld	r24, Z
    4fea:	88 30       	cpi	r24, 0x08	; 8
    4fec:	11 f4       	brne	.+4      	; 0x4ff2 <SEV_SEG_enumCMNDisable+0x1fc>
				&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin==NOT_CONNECTED)
		{
			Local_enumErrorState=ES_NOK;
    4fee:	19 82       	std	Y+1, r1	; 0x01
    4ff0:	05 c0       	rjmp	.+10     	; 0x4ffc <SEV_SEG_enumCMNDisable+0x206>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    4ff2:	83 e0       	ldi	r24, 0x03	; 3
    4ff4:	89 83       	std	Y+1, r24	; 0x01
    4ff6:	02 c0       	rjmp	.+4      	; 0x4ffc <SEV_SEG_enumCMNDisable+0x206>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    4ff8:	83 e0       	ldi	r24, 0x03	; 3
    4ffa:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    4ffc:	89 81       	ldd	r24, Y+1	; 0x01
}
    4ffe:	0f 90       	pop	r0
    5000:	0f 90       	pop	r0
    5002:	cf 91       	pop	r28
    5004:	df 91       	pop	r29
    5006:	08 95       	ret

00005008 <SEV_SEG_enumDOTEnable>:
ES_T SEV_SEG_enumDOTEnable(u8 Copy_u8SegmentID)
{
    5008:	df 93       	push	r29
    500a:	cf 93       	push	r28
    500c:	00 d0       	rcall	.+0      	; 0x500e <SEV_SEG_enumDOTEnable+0x6>
    500e:	cd b7       	in	r28, 0x3d	; 61
    5010:	de b7       	in	r29, 0x3e	; 62
    5012:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    5014:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    5016:	8a 81       	ldd	r24, Y+2	; 0x02
    5018:	82 30       	cpi	r24, 0x02	; 2
    501a:	08 f0       	brcs	.+2      	; 0x501e <SEV_SEG_enumDOTEnable+0x16>
    501c:	f6 c0       	rjmp	.+492    	; 0x520a <SEV_SEG_enumDOTEnable+0x202>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port<=DIO_PORTD
    501e:	8a 81       	ldd	r24, Y+2	; 0x02
    5020:	48 2f       	mov	r20, r24
    5022:	50 e0       	ldi	r21, 0x00	; 0
    5024:	ca 01       	movw	r24, r20
    5026:	88 0f       	add	r24, r24
    5028:	99 1f       	adc	r25, r25
    502a:	9c 01       	movw	r18, r24
    502c:	22 0f       	add	r18, r18
    502e:	33 1f       	adc	r19, r19
    5030:	22 0f       	add	r18, r18
    5032:	33 1f       	adc	r19, r19
    5034:	22 0f       	add	r18, r18
    5036:	33 1f       	adc	r19, r19
    5038:	82 0f       	add	r24, r18
    503a:	93 1f       	adc	r25, r19
    503c:	84 0f       	add	r24, r20
    503e:	95 1f       	adc	r25, r21
    5040:	fc 01       	movw	r30, r24
    5042:	ec 54       	subi	r30, 0x4C	; 76
    5044:	fe 4f       	sbci	r31, 0xFE	; 254
    5046:	80 81       	ld	r24, Z
    5048:	84 30       	cpi	r24, 0x04	; 4
    504a:	08 f0       	brcs	.+2      	; 0x504e <SEV_SEG_enumDOTEnable+0x46>
    504c:	ab c0       	rjmp	.+342    	; 0x51a4 <SEV_SEG_enumDOTEnable+0x19c>
    504e:	8a 81       	ldd	r24, Y+2	; 0x02
    5050:	48 2f       	mov	r20, r24
    5052:	50 e0       	ldi	r21, 0x00	; 0
    5054:	ca 01       	movw	r24, r20
    5056:	88 0f       	add	r24, r24
    5058:	99 1f       	adc	r25, r25
    505a:	9c 01       	movw	r18, r24
    505c:	22 0f       	add	r18, r18
    505e:	33 1f       	adc	r19, r19
    5060:	22 0f       	add	r18, r18
    5062:	33 1f       	adc	r19, r19
    5064:	22 0f       	add	r18, r18
    5066:	33 1f       	adc	r19, r19
    5068:	82 0f       	add	r24, r18
    506a:	93 1f       	adc	r25, r19
    506c:	84 0f       	add	r24, r20
    506e:	95 1f       	adc	r25, r21
    5070:	fc 01       	movw	r30, r24
    5072:	eb 54       	subi	r30, 0x4B	; 75
    5074:	fe 4f       	sbci	r31, 0xFE	; 254
    5076:	80 81       	ld	r24, Z
    5078:	88 30       	cpi	r24, 0x08	; 8
    507a:	08 f0       	brcs	.+2      	; 0x507e <SEV_SEG_enumDOTEnable+0x76>
    507c:	93 c0       	rjmp	.+294    	; 0x51a4 <SEV_SEG_enumDOTEnable+0x19c>
			&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
		{
			if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    507e:	8a 81       	ldd	r24, Y+2	; 0x02
    5080:	48 2f       	mov	r20, r24
    5082:	50 e0       	ldi	r21, 0x00	; 0
    5084:	ca 01       	movw	r24, r20
    5086:	88 0f       	add	r24, r24
    5088:	99 1f       	adc	r25, r25
    508a:	9c 01       	movw	r18, r24
    508c:	22 0f       	add	r18, r18
    508e:	33 1f       	adc	r19, r19
    5090:	22 0f       	add	r18, r18
    5092:	33 1f       	adc	r19, r19
    5094:	22 0f       	add	r18, r18
    5096:	33 1f       	adc	r19, r19
    5098:	82 0f       	add	r24, r18
    509a:	93 1f       	adc	r25, r19
    509c:	84 0f       	add	r24, r20
    509e:	95 1f       	adc	r25, r21
    50a0:	fc 01       	movw	r30, r24
    50a2:	ea 54       	subi	r30, 0x4A	; 74
    50a4:	fe 4f       	sbci	r31, 0xFE	; 254
    50a6:	80 81       	ld	r24, Z
    50a8:	81 30       	cpi	r24, 0x01	; 1
    50aa:	89 f5       	brne	.+98     	; 0x510e <SEV_SEG_enumDOTEnable+0x106>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin,HIGH);
    50ac:	8a 81       	ldd	r24, Y+2	; 0x02
    50ae:	48 2f       	mov	r20, r24
    50b0:	50 e0       	ldi	r21, 0x00	; 0
    50b2:	ca 01       	movw	r24, r20
    50b4:	88 0f       	add	r24, r24
    50b6:	99 1f       	adc	r25, r25
    50b8:	9c 01       	movw	r18, r24
    50ba:	22 0f       	add	r18, r18
    50bc:	33 1f       	adc	r19, r19
    50be:	22 0f       	add	r18, r18
    50c0:	33 1f       	adc	r19, r19
    50c2:	22 0f       	add	r18, r18
    50c4:	33 1f       	adc	r19, r19
    50c6:	82 0f       	add	r24, r18
    50c8:	93 1f       	adc	r25, r19
    50ca:	84 0f       	add	r24, r20
    50cc:	95 1f       	adc	r25, r21
    50ce:	fc 01       	movw	r30, r24
    50d0:	ec 54       	subi	r30, 0x4C	; 76
    50d2:	fe 4f       	sbci	r31, 0xFE	; 254
    50d4:	60 81       	ld	r22, Z
    50d6:	8a 81       	ldd	r24, Y+2	; 0x02
    50d8:	48 2f       	mov	r20, r24
    50da:	50 e0       	ldi	r21, 0x00	; 0
    50dc:	ca 01       	movw	r24, r20
    50de:	88 0f       	add	r24, r24
    50e0:	99 1f       	adc	r25, r25
    50e2:	9c 01       	movw	r18, r24
    50e4:	22 0f       	add	r18, r18
    50e6:	33 1f       	adc	r19, r19
    50e8:	22 0f       	add	r18, r18
    50ea:	33 1f       	adc	r19, r19
    50ec:	22 0f       	add	r18, r18
    50ee:	33 1f       	adc	r19, r19
    50f0:	82 0f       	add	r24, r18
    50f2:	93 1f       	adc	r25, r19
    50f4:	84 0f       	add	r24, r20
    50f6:	95 1f       	adc	r25, r21
    50f8:	fc 01       	movw	r30, r24
    50fa:	eb 54       	subi	r30, 0x4B	; 75
    50fc:	fe 4f       	sbci	r31, 0xFE	; 254
    50fe:	90 81       	ld	r25, Z
    5100:	86 2f       	mov	r24, r22
    5102:	69 2f       	mov	r22, r25
    5104:	41 e0       	ldi	r20, 0x01	; 1
    5106:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    510a:	89 83       	std	Y+1, r24	; 0x01
    510c:	80 c0       	rjmp	.+256    	; 0x520e <SEV_SEG_enumDOTEnable+0x206>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    510e:	8a 81       	ldd	r24, Y+2	; 0x02
    5110:	48 2f       	mov	r20, r24
    5112:	50 e0       	ldi	r21, 0x00	; 0
    5114:	ca 01       	movw	r24, r20
    5116:	88 0f       	add	r24, r24
    5118:	99 1f       	adc	r25, r25
    511a:	9c 01       	movw	r18, r24
    511c:	22 0f       	add	r18, r18
    511e:	33 1f       	adc	r19, r19
    5120:	22 0f       	add	r18, r18
    5122:	33 1f       	adc	r19, r19
    5124:	22 0f       	add	r18, r18
    5126:	33 1f       	adc	r19, r19
    5128:	82 0f       	add	r24, r18
    512a:	93 1f       	adc	r25, r19
    512c:	84 0f       	add	r24, r20
    512e:	95 1f       	adc	r25, r21
    5130:	fc 01       	movw	r30, r24
    5132:	ea 54       	subi	r30, 0x4A	; 74
    5134:	fe 4f       	sbci	r31, 0xFE	; 254
    5136:	80 81       	ld	r24, Z
    5138:	88 23       	and	r24, r24
    513a:	89 f5       	brne	.+98     	; 0x519e <SEV_SEG_enumDOTEnable+0x196>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,LOW);
    513c:	8a 81       	ldd	r24, Y+2	; 0x02
    513e:	48 2f       	mov	r20, r24
    5140:	50 e0       	ldi	r21, 0x00	; 0
    5142:	ca 01       	movw	r24, r20
    5144:	88 0f       	add	r24, r24
    5146:	99 1f       	adc	r25, r25
    5148:	9c 01       	movw	r18, r24
    514a:	22 0f       	add	r18, r18
    514c:	33 1f       	adc	r19, r19
    514e:	22 0f       	add	r18, r18
    5150:	33 1f       	adc	r19, r19
    5152:	22 0f       	add	r18, r18
    5154:	33 1f       	adc	r19, r19
    5156:	82 0f       	add	r24, r18
    5158:	93 1f       	adc	r25, r19
    515a:	84 0f       	add	r24, r20
    515c:	95 1f       	adc	r25, r21
    515e:	fc 01       	movw	r30, r24
    5160:	ee 54       	subi	r30, 0x4E	; 78
    5162:	fe 4f       	sbci	r31, 0xFE	; 254
    5164:	60 81       	ld	r22, Z
    5166:	8a 81       	ldd	r24, Y+2	; 0x02
    5168:	48 2f       	mov	r20, r24
    516a:	50 e0       	ldi	r21, 0x00	; 0
    516c:	ca 01       	movw	r24, r20
    516e:	88 0f       	add	r24, r24
    5170:	99 1f       	adc	r25, r25
    5172:	9c 01       	movw	r18, r24
    5174:	22 0f       	add	r18, r18
    5176:	33 1f       	adc	r19, r19
    5178:	22 0f       	add	r18, r18
    517a:	33 1f       	adc	r19, r19
    517c:	22 0f       	add	r18, r18
    517e:	33 1f       	adc	r19, r19
    5180:	82 0f       	add	r24, r18
    5182:	93 1f       	adc	r25, r19
    5184:	84 0f       	add	r24, r20
    5186:	95 1f       	adc	r25, r21
    5188:	fc 01       	movw	r30, r24
    518a:	ed 54       	subi	r30, 0x4D	; 77
    518c:	fe 4f       	sbci	r31, 0xFE	; 254
    518e:	90 81       	ld	r25, Z
    5190:	86 2f       	mov	r24, r22
    5192:	69 2f       	mov	r22, r25
    5194:	40 e0       	ldi	r20, 0x00	; 0
    5196:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    519a:	89 83       	std	Y+1, r24	; 0x01
    519c:	38 c0       	rjmp	.+112    	; 0x520e <SEV_SEG_enumDOTEnable+0x206>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    519e:	83 e0       	ldi	r24, 0x03	; 3
    51a0:	89 83       	std	Y+1, r24	; 0x01
    51a2:	35 c0       	rjmp	.+106    	; 0x520e <SEV_SEG_enumDOTEnable+0x206>
			}
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    51a4:	8a 81       	ldd	r24, Y+2	; 0x02
    51a6:	48 2f       	mov	r20, r24
    51a8:	50 e0       	ldi	r21, 0x00	; 0
    51aa:	ca 01       	movw	r24, r20
    51ac:	88 0f       	add	r24, r24
    51ae:	99 1f       	adc	r25, r25
    51b0:	9c 01       	movw	r18, r24
    51b2:	22 0f       	add	r18, r18
    51b4:	33 1f       	adc	r19, r19
    51b6:	22 0f       	add	r18, r18
    51b8:	33 1f       	adc	r19, r19
    51ba:	22 0f       	add	r18, r18
    51bc:	33 1f       	adc	r19, r19
    51be:	82 0f       	add	r24, r18
    51c0:	93 1f       	adc	r25, r19
    51c2:	84 0f       	add	r24, r20
    51c4:	95 1f       	adc	r25, r21
    51c6:	fc 01       	movw	r30, r24
    51c8:	ee 54       	subi	r30, 0x4E	; 78
    51ca:	fe 4f       	sbci	r31, 0xFE	; 254
    51cc:	80 81       	ld	r24, Z
    51ce:	88 30       	cpi	r24, 0x08	; 8
    51d0:	c9 f4       	brne	.+50     	; 0x5204 <SEV_SEG_enumDOTEnable+0x1fc>
    51d2:	8a 81       	ldd	r24, Y+2	; 0x02
    51d4:	48 2f       	mov	r20, r24
    51d6:	50 e0       	ldi	r21, 0x00	; 0
    51d8:	ca 01       	movw	r24, r20
    51da:	88 0f       	add	r24, r24
    51dc:	99 1f       	adc	r25, r25
    51de:	9c 01       	movw	r18, r24
    51e0:	22 0f       	add	r18, r18
    51e2:	33 1f       	adc	r19, r19
    51e4:	22 0f       	add	r18, r18
    51e6:	33 1f       	adc	r19, r19
    51e8:	22 0f       	add	r18, r18
    51ea:	33 1f       	adc	r19, r19
    51ec:	82 0f       	add	r24, r18
    51ee:	93 1f       	adc	r25, r19
    51f0:	84 0f       	add	r24, r20
    51f2:	95 1f       	adc	r25, r21
    51f4:	fc 01       	movw	r30, r24
    51f6:	ed 54       	subi	r30, 0x4D	; 77
    51f8:	fe 4f       	sbci	r31, 0xFE	; 254
    51fa:	80 81       	ld	r24, Z
    51fc:	88 30       	cpi	r24, 0x08	; 8
    51fe:	11 f4       	brne	.+4      	; 0x5204 <SEV_SEG_enumDOTEnable+0x1fc>
				&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin==NOT_CONNECTED)
		{
			Local_enumErrorState=ES_NOK;
    5200:	19 82       	std	Y+1, r1	; 0x01
    5202:	05 c0       	rjmp	.+10     	; 0x520e <SEV_SEG_enumDOTEnable+0x206>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    5204:	83 e0       	ldi	r24, 0x03	; 3
    5206:	89 83       	std	Y+1, r24	; 0x01
    5208:	02 c0       	rjmp	.+4      	; 0x520e <SEV_SEG_enumDOTEnable+0x206>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    520a:	83 e0       	ldi	r24, 0x03	; 3
    520c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    520e:	89 81       	ldd	r24, Y+1	; 0x01
}
    5210:	0f 90       	pop	r0
    5212:	0f 90       	pop	r0
    5214:	cf 91       	pop	r28
    5216:	df 91       	pop	r29
    5218:	08 95       	ret

0000521a <SEV_SEG_enumDOTDisable>:
ES_T SEV_SEG_enumDOTDisable(u8 Copy_u8SegmentID)
{
    521a:	df 93       	push	r29
    521c:	cf 93       	push	r28
    521e:	00 d0       	rcall	.+0      	; 0x5220 <SEV_SEG_enumDOTDisable+0x6>
    5220:	cd b7       	in	r28, 0x3d	; 61
    5222:	de b7       	in	r29, 0x3e	; 62
    5224:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    5226:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    5228:	8a 81       	ldd	r24, Y+2	; 0x02
    522a:	82 30       	cpi	r24, 0x02	; 2
    522c:	08 f0       	brcs	.+2      	; 0x5230 <SEV_SEG_enumDOTDisable+0x16>
    522e:	f6 c0       	rjmp	.+492    	; 0x541c <SEV_SEG_enumDOTDisable+0x202>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port<=DIO_PORTD
    5230:	8a 81       	ldd	r24, Y+2	; 0x02
    5232:	48 2f       	mov	r20, r24
    5234:	50 e0       	ldi	r21, 0x00	; 0
    5236:	ca 01       	movw	r24, r20
    5238:	88 0f       	add	r24, r24
    523a:	99 1f       	adc	r25, r25
    523c:	9c 01       	movw	r18, r24
    523e:	22 0f       	add	r18, r18
    5240:	33 1f       	adc	r19, r19
    5242:	22 0f       	add	r18, r18
    5244:	33 1f       	adc	r19, r19
    5246:	22 0f       	add	r18, r18
    5248:	33 1f       	adc	r19, r19
    524a:	82 0f       	add	r24, r18
    524c:	93 1f       	adc	r25, r19
    524e:	84 0f       	add	r24, r20
    5250:	95 1f       	adc	r25, r21
    5252:	fc 01       	movw	r30, r24
    5254:	ec 54       	subi	r30, 0x4C	; 76
    5256:	fe 4f       	sbci	r31, 0xFE	; 254
    5258:	80 81       	ld	r24, Z
    525a:	84 30       	cpi	r24, 0x04	; 4
    525c:	08 f0       	brcs	.+2      	; 0x5260 <SEV_SEG_enumDOTDisable+0x46>
    525e:	ab c0       	rjmp	.+342    	; 0x53b6 <SEV_SEG_enumDOTDisable+0x19c>
    5260:	8a 81       	ldd	r24, Y+2	; 0x02
    5262:	48 2f       	mov	r20, r24
    5264:	50 e0       	ldi	r21, 0x00	; 0
    5266:	ca 01       	movw	r24, r20
    5268:	88 0f       	add	r24, r24
    526a:	99 1f       	adc	r25, r25
    526c:	9c 01       	movw	r18, r24
    526e:	22 0f       	add	r18, r18
    5270:	33 1f       	adc	r19, r19
    5272:	22 0f       	add	r18, r18
    5274:	33 1f       	adc	r19, r19
    5276:	22 0f       	add	r18, r18
    5278:	33 1f       	adc	r19, r19
    527a:	82 0f       	add	r24, r18
    527c:	93 1f       	adc	r25, r19
    527e:	84 0f       	add	r24, r20
    5280:	95 1f       	adc	r25, r21
    5282:	fc 01       	movw	r30, r24
    5284:	eb 54       	subi	r30, 0x4B	; 75
    5286:	fe 4f       	sbci	r31, 0xFE	; 254
    5288:	80 81       	ld	r24, Z
    528a:	88 30       	cpi	r24, 0x08	; 8
    528c:	08 f0       	brcs	.+2      	; 0x5290 <SEV_SEG_enumDOTDisable+0x76>
    528e:	93 c0       	rjmp	.+294    	; 0x53b6 <SEV_SEG_enumDOTDisable+0x19c>
			&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
		{
			if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    5290:	8a 81       	ldd	r24, Y+2	; 0x02
    5292:	48 2f       	mov	r20, r24
    5294:	50 e0       	ldi	r21, 0x00	; 0
    5296:	ca 01       	movw	r24, r20
    5298:	88 0f       	add	r24, r24
    529a:	99 1f       	adc	r25, r25
    529c:	9c 01       	movw	r18, r24
    529e:	22 0f       	add	r18, r18
    52a0:	33 1f       	adc	r19, r19
    52a2:	22 0f       	add	r18, r18
    52a4:	33 1f       	adc	r19, r19
    52a6:	22 0f       	add	r18, r18
    52a8:	33 1f       	adc	r19, r19
    52aa:	82 0f       	add	r24, r18
    52ac:	93 1f       	adc	r25, r19
    52ae:	84 0f       	add	r24, r20
    52b0:	95 1f       	adc	r25, r21
    52b2:	fc 01       	movw	r30, r24
    52b4:	ea 54       	subi	r30, 0x4A	; 74
    52b6:	fe 4f       	sbci	r31, 0xFE	; 254
    52b8:	80 81       	ld	r24, Z
    52ba:	81 30       	cpi	r24, 0x01	; 1
    52bc:	89 f5       	brne	.+98     	; 0x5320 <SEV_SEG_enumDOTDisable+0x106>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin,LOW);
    52be:	8a 81       	ldd	r24, Y+2	; 0x02
    52c0:	48 2f       	mov	r20, r24
    52c2:	50 e0       	ldi	r21, 0x00	; 0
    52c4:	ca 01       	movw	r24, r20
    52c6:	88 0f       	add	r24, r24
    52c8:	99 1f       	adc	r25, r25
    52ca:	9c 01       	movw	r18, r24
    52cc:	22 0f       	add	r18, r18
    52ce:	33 1f       	adc	r19, r19
    52d0:	22 0f       	add	r18, r18
    52d2:	33 1f       	adc	r19, r19
    52d4:	22 0f       	add	r18, r18
    52d6:	33 1f       	adc	r19, r19
    52d8:	82 0f       	add	r24, r18
    52da:	93 1f       	adc	r25, r19
    52dc:	84 0f       	add	r24, r20
    52de:	95 1f       	adc	r25, r21
    52e0:	fc 01       	movw	r30, r24
    52e2:	ec 54       	subi	r30, 0x4C	; 76
    52e4:	fe 4f       	sbci	r31, 0xFE	; 254
    52e6:	60 81       	ld	r22, Z
    52e8:	8a 81       	ldd	r24, Y+2	; 0x02
    52ea:	48 2f       	mov	r20, r24
    52ec:	50 e0       	ldi	r21, 0x00	; 0
    52ee:	ca 01       	movw	r24, r20
    52f0:	88 0f       	add	r24, r24
    52f2:	99 1f       	adc	r25, r25
    52f4:	9c 01       	movw	r18, r24
    52f6:	22 0f       	add	r18, r18
    52f8:	33 1f       	adc	r19, r19
    52fa:	22 0f       	add	r18, r18
    52fc:	33 1f       	adc	r19, r19
    52fe:	22 0f       	add	r18, r18
    5300:	33 1f       	adc	r19, r19
    5302:	82 0f       	add	r24, r18
    5304:	93 1f       	adc	r25, r19
    5306:	84 0f       	add	r24, r20
    5308:	95 1f       	adc	r25, r21
    530a:	fc 01       	movw	r30, r24
    530c:	eb 54       	subi	r30, 0x4B	; 75
    530e:	fe 4f       	sbci	r31, 0xFE	; 254
    5310:	90 81       	ld	r25, Z
    5312:	86 2f       	mov	r24, r22
    5314:	69 2f       	mov	r22, r25
    5316:	40 e0       	ldi	r20, 0x00	; 0
    5318:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    531c:	89 83       	std	Y+1, r24	; 0x01
    531e:	80 c0       	rjmp	.+256    	; 0x5420 <SEV_SEG_enumDOTDisable+0x206>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    5320:	8a 81       	ldd	r24, Y+2	; 0x02
    5322:	48 2f       	mov	r20, r24
    5324:	50 e0       	ldi	r21, 0x00	; 0
    5326:	ca 01       	movw	r24, r20
    5328:	88 0f       	add	r24, r24
    532a:	99 1f       	adc	r25, r25
    532c:	9c 01       	movw	r18, r24
    532e:	22 0f       	add	r18, r18
    5330:	33 1f       	adc	r19, r19
    5332:	22 0f       	add	r18, r18
    5334:	33 1f       	adc	r19, r19
    5336:	22 0f       	add	r18, r18
    5338:	33 1f       	adc	r19, r19
    533a:	82 0f       	add	r24, r18
    533c:	93 1f       	adc	r25, r19
    533e:	84 0f       	add	r24, r20
    5340:	95 1f       	adc	r25, r21
    5342:	fc 01       	movw	r30, r24
    5344:	ea 54       	subi	r30, 0x4A	; 74
    5346:	fe 4f       	sbci	r31, 0xFE	; 254
    5348:	80 81       	ld	r24, Z
    534a:	88 23       	and	r24, r24
    534c:	89 f5       	brne	.+98     	; 0x53b0 <SEV_SEG_enumDOTDisable+0x196>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,HIGH);
    534e:	8a 81       	ldd	r24, Y+2	; 0x02
    5350:	48 2f       	mov	r20, r24
    5352:	50 e0       	ldi	r21, 0x00	; 0
    5354:	ca 01       	movw	r24, r20
    5356:	88 0f       	add	r24, r24
    5358:	99 1f       	adc	r25, r25
    535a:	9c 01       	movw	r18, r24
    535c:	22 0f       	add	r18, r18
    535e:	33 1f       	adc	r19, r19
    5360:	22 0f       	add	r18, r18
    5362:	33 1f       	adc	r19, r19
    5364:	22 0f       	add	r18, r18
    5366:	33 1f       	adc	r19, r19
    5368:	82 0f       	add	r24, r18
    536a:	93 1f       	adc	r25, r19
    536c:	84 0f       	add	r24, r20
    536e:	95 1f       	adc	r25, r21
    5370:	fc 01       	movw	r30, r24
    5372:	ee 54       	subi	r30, 0x4E	; 78
    5374:	fe 4f       	sbci	r31, 0xFE	; 254
    5376:	60 81       	ld	r22, Z
    5378:	8a 81       	ldd	r24, Y+2	; 0x02
    537a:	48 2f       	mov	r20, r24
    537c:	50 e0       	ldi	r21, 0x00	; 0
    537e:	ca 01       	movw	r24, r20
    5380:	88 0f       	add	r24, r24
    5382:	99 1f       	adc	r25, r25
    5384:	9c 01       	movw	r18, r24
    5386:	22 0f       	add	r18, r18
    5388:	33 1f       	adc	r19, r19
    538a:	22 0f       	add	r18, r18
    538c:	33 1f       	adc	r19, r19
    538e:	22 0f       	add	r18, r18
    5390:	33 1f       	adc	r19, r19
    5392:	82 0f       	add	r24, r18
    5394:	93 1f       	adc	r25, r19
    5396:	84 0f       	add	r24, r20
    5398:	95 1f       	adc	r25, r21
    539a:	fc 01       	movw	r30, r24
    539c:	ed 54       	subi	r30, 0x4D	; 77
    539e:	fe 4f       	sbci	r31, 0xFE	; 254
    53a0:	90 81       	ld	r25, Z
    53a2:	86 2f       	mov	r24, r22
    53a4:	69 2f       	mov	r22, r25
    53a6:	41 e0       	ldi	r20, 0x01	; 1
    53a8:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    53ac:	89 83       	std	Y+1, r24	; 0x01
    53ae:	38 c0       	rjmp	.+112    	; 0x5420 <SEV_SEG_enumDOTDisable+0x206>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    53b0:	83 e0       	ldi	r24, 0x03	; 3
    53b2:	89 83       	std	Y+1, r24	; 0x01
    53b4:	35 c0       	rjmp	.+106    	; 0x5420 <SEV_SEG_enumDOTDisable+0x206>
			}
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    53b6:	8a 81       	ldd	r24, Y+2	; 0x02
    53b8:	48 2f       	mov	r20, r24
    53ba:	50 e0       	ldi	r21, 0x00	; 0
    53bc:	ca 01       	movw	r24, r20
    53be:	88 0f       	add	r24, r24
    53c0:	99 1f       	adc	r25, r25
    53c2:	9c 01       	movw	r18, r24
    53c4:	22 0f       	add	r18, r18
    53c6:	33 1f       	adc	r19, r19
    53c8:	22 0f       	add	r18, r18
    53ca:	33 1f       	adc	r19, r19
    53cc:	22 0f       	add	r18, r18
    53ce:	33 1f       	adc	r19, r19
    53d0:	82 0f       	add	r24, r18
    53d2:	93 1f       	adc	r25, r19
    53d4:	84 0f       	add	r24, r20
    53d6:	95 1f       	adc	r25, r21
    53d8:	fc 01       	movw	r30, r24
    53da:	ee 54       	subi	r30, 0x4E	; 78
    53dc:	fe 4f       	sbci	r31, 0xFE	; 254
    53de:	80 81       	ld	r24, Z
    53e0:	88 30       	cpi	r24, 0x08	; 8
    53e2:	c9 f4       	brne	.+50     	; 0x5416 <SEV_SEG_enumDOTDisable+0x1fc>
    53e4:	8a 81       	ldd	r24, Y+2	; 0x02
    53e6:	48 2f       	mov	r20, r24
    53e8:	50 e0       	ldi	r21, 0x00	; 0
    53ea:	ca 01       	movw	r24, r20
    53ec:	88 0f       	add	r24, r24
    53ee:	99 1f       	adc	r25, r25
    53f0:	9c 01       	movw	r18, r24
    53f2:	22 0f       	add	r18, r18
    53f4:	33 1f       	adc	r19, r19
    53f6:	22 0f       	add	r18, r18
    53f8:	33 1f       	adc	r19, r19
    53fa:	22 0f       	add	r18, r18
    53fc:	33 1f       	adc	r19, r19
    53fe:	82 0f       	add	r24, r18
    5400:	93 1f       	adc	r25, r19
    5402:	84 0f       	add	r24, r20
    5404:	95 1f       	adc	r25, r21
    5406:	fc 01       	movw	r30, r24
    5408:	ed 54       	subi	r30, 0x4D	; 77
    540a:	fe 4f       	sbci	r31, 0xFE	; 254
    540c:	80 81       	ld	r24, Z
    540e:	88 30       	cpi	r24, 0x08	; 8
    5410:	11 f4       	brne	.+4      	; 0x5416 <SEV_SEG_enumDOTDisable+0x1fc>
				&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin==NOT_CONNECTED)
		{
			Local_enumErrorState=ES_NOK;
    5412:	19 82       	std	Y+1, r1	; 0x01
    5414:	05 c0       	rjmp	.+10     	; 0x5420 <SEV_SEG_enumDOTDisable+0x206>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    5416:	83 e0       	ldi	r24, 0x03	; 3
    5418:	89 83       	std	Y+1, r24	; 0x01
    541a:	02 c0       	rjmp	.+4      	; 0x5420 <SEV_SEG_enumDOTDisable+0x206>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    541c:	83 e0       	ldi	r24, 0x03	; 3
    541e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    5420:	89 81       	ldd	r24, Y+1	; 0x01
}
    5422:	0f 90       	pop	r0
    5424:	0f 90       	pop	r0
    5426:	cf 91       	pop	r28
    5428:	df 91       	pop	r29
    542a:	08 95       	ret

0000542c <SEV_SEG_enumSEGClear>:
ES_T SEV_SEG_enumSEGClear(u8 Copy_u8SegmentID)
{
    542c:	df 93       	push	r29
    542e:	cf 93       	push	r28
    5430:	00 d0       	rcall	.+0      	; 0x5432 <SEV_SEG_enumSEGClear+0x6>
    5432:	0f 92       	push	r0
    5434:	cd b7       	in	r28, 0x3d	; 61
    5436:	de b7       	in	r29, 0x3e	; 62
    5438:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    543a:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    543c:	8a 81       	ldd	r24, Y+2	; 0x02
    543e:	82 30       	cpi	r24, 0x02	; 2
    5440:	08 f0       	brcs	.+2      	; 0x5444 <SEV_SEG_enumSEGClear+0x18>
    5442:	55 c4       	rjmp	.+2218   	; 0x5cee <SEV_SEG_enumSEGClear+0x8c2>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    5444:	8a 81       	ldd	r24, Y+2	; 0x02
    5446:	48 2f       	mov	r20, r24
    5448:	50 e0       	ldi	r21, 0x00	; 0
    544a:	ca 01       	movw	r24, r20
    544c:	88 0f       	add	r24, r24
    544e:	99 1f       	adc	r25, r25
    5450:	9c 01       	movw	r18, r24
    5452:	22 0f       	add	r18, r18
    5454:	33 1f       	adc	r19, r19
    5456:	22 0f       	add	r18, r18
    5458:	33 1f       	adc	r19, r19
    545a:	22 0f       	add	r18, r18
    545c:	33 1f       	adc	r19, r19
    545e:	82 0f       	add	r24, r18
    5460:	93 1f       	adc	r25, r19
    5462:	84 0f       	add	r24, r20
    5464:	95 1f       	adc	r25, r21
    5466:	fc 01       	movw	r30, r24
    5468:	ea 54       	subi	r30, 0x4A	; 74
    546a:	fe 4f       	sbci	r31, 0xFE	; 254
    546c:	80 81       	ld	r24, Z
    546e:	81 30       	cpi	r24, 0x01	; 1
    5470:	09 f0       	breq	.+2      	; 0x5474 <SEV_SEG_enumSEGClear+0x48>
    5472:	12 c2       	rjmp	.+1060   	; 0x5898 <SEV_SEG_enumSEGClear+0x46c>
		{
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APin,LOW);
    5474:	8a 81       	ldd	r24, Y+2	; 0x02
    5476:	48 2f       	mov	r20, r24
    5478:	50 e0       	ldi	r21, 0x00	; 0
    547a:	ca 01       	movw	r24, r20
    547c:	88 0f       	add	r24, r24
    547e:	99 1f       	adc	r25, r25
    5480:	9c 01       	movw	r18, r24
    5482:	22 0f       	add	r18, r18
    5484:	33 1f       	adc	r19, r19
    5486:	22 0f       	add	r18, r18
    5488:	33 1f       	adc	r19, r19
    548a:	22 0f       	add	r18, r18
    548c:	33 1f       	adc	r19, r19
    548e:	82 0f       	add	r24, r18
    5490:	93 1f       	adc	r25, r19
    5492:	84 0f       	add	r24, r20
    5494:	95 1f       	adc	r25, r21
    5496:	fc 01       	movw	r30, r24
    5498:	ec 55       	subi	r30, 0x5C	; 92
    549a:	fe 4f       	sbci	r31, 0xFE	; 254
    549c:	60 81       	ld	r22, Z
    549e:	8a 81       	ldd	r24, Y+2	; 0x02
    54a0:	48 2f       	mov	r20, r24
    54a2:	50 e0       	ldi	r21, 0x00	; 0
    54a4:	ca 01       	movw	r24, r20
    54a6:	88 0f       	add	r24, r24
    54a8:	99 1f       	adc	r25, r25
    54aa:	9c 01       	movw	r18, r24
    54ac:	22 0f       	add	r18, r18
    54ae:	33 1f       	adc	r19, r19
    54b0:	22 0f       	add	r18, r18
    54b2:	33 1f       	adc	r19, r19
    54b4:	22 0f       	add	r18, r18
    54b6:	33 1f       	adc	r19, r19
    54b8:	82 0f       	add	r24, r18
    54ba:	93 1f       	adc	r25, r19
    54bc:	84 0f       	add	r24, r20
    54be:	95 1f       	adc	r25, r21
    54c0:	fc 01       	movw	r30, r24
    54c2:	eb 55       	subi	r30, 0x5B	; 91
    54c4:	fe 4f       	sbci	r31, 0xFE	; 254
    54c6:	90 81       	ld	r25, Z
    54c8:	86 2f       	mov	r24, r22
    54ca:	69 2f       	mov	r22, r25
    54cc:	40 e0       	ldi	r20, 0x00	; 0
    54ce:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    54d2:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    54d4:	89 81       	ldd	r24, Y+1	; 0x01
    54d6:	81 30       	cpi	r24, 0x01	; 1
    54d8:	19 f0       	breq	.+6      	; 0x54e0 <SEV_SEG_enumSEGClear+0xb4>
    54da:	89 81       	ldd	r24, Y+1	; 0x01
    54dc:	8b 83       	std	Y+3, r24	; 0x03
    54de:	0b c4       	rjmp	.+2070   	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPin,LOW);
    54e0:	8a 81       	ldd	r24, Y+2	; 0x02
    54e2:	48 2f       	mov	r20, r24
    54e4:	50 e0       	ldi	r21, 0x00	; 0
    54e6:	ca 01       	movw	r24, r20
    54e8:	88 0f       	add	r24, r24
    54ea:	99 1f       	adc	r25, r25
    54ec:	9c 01       	movw	r18, r24
    54ee:	22 0f       	add	r18, r18
    54f0:	33 1f       	adc	r19, r19
    54f2:	22 0f       	add	r18, r18
    54f4:	33 1f       	adc	r19, r19
    54f6:	22 0f       	add	r18, r18
    54f8:	33 1f       	adc	r19, r19
    54fa:	82 0f       	add	r24, r18
    54fc:	93 1f       	adc	r25, r19
    54fe:	84 0f       	add	r24, r20
    5500:	95 1f       	adc	r25, r21
    5502:	fc 01       	movw	r30, r24
    5504:	ea 55       	subi	r30, 0x5A	; 90
    5506:	fe 4f       	sbci	r31, 0xFE	; 254
    5508:	60 81       	ld	r22, Z
    550a:	8a 81       	ldd	r24, Y+2	; 0x02
    550c:	48 2f       	mov	r20, r24
    550e:	50 e0       	ldi	r21, 0x00	; 0
    5510:	ca 01       	movw	r24, r20
    5512:	88 0f       	add	r24, r24
    5514:	99 1f       	adc	r25, r25
    5516:	9c 01       	movw	r18, r24
    5518:	22 0f       	add	r18, r18
    551a:	33 1f       	adc	r19, r19
    551c:	22 0f       	add	r18, r18
    551e:	33 1f       	adc	r19, r19
    5520:	22 0f       	add	r18, r18
    5522:	33 1f       	adc	r19, r19
    5524:	82 0f       	add	r24, r18
    5526:	93 1f       	adc	r25, r19
    5528:	84 0f       	add	r24, r20
    552a:	95 1f       	adc	r25, r21
    552c:	fc 01       	movw	r30, r24
    552e:	e9 55       	subi	r30, 0x59	; 89
    5530:	fe 4f       	sbci	r31, 0xFE	; 254
    5532:	90 81       	ld	r25, Z
    5534:	86 2f       	mov	r24, r22
    5536:	69 2f       	mov	r22, r25
    5538:	40 e0       	ldi	r20, 0x00	; 0
    553a:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    553e:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5540:	89 81       	ldd	r24, Y+1	; 0x01
    5542:	81 30       	cpi	r24, 0x01	; 1
    5544:	19 f0       	breq	.+6      	; 0x554c <SEV_SEG_enumSEGClear+0x120>
    5546:	89 81       	ldd	r24, Y+1	; 0x01
    5548:	8b 83       	std	Y+3, r24	; 0x03
    554a:	d5 c3       	rjmp	.+1962   	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPin,LOW);
    554c:	8a 81       	ldd	r24, Y+2	; 0x02
    554e:	48 2f       	mov	r20, r24
    5550:	50 e0       	ldi	r21, 0x00	; 0
    5552:	ca 01       	movw	r24, r20
    5554:	88 0f       	add	r24, r24
    5556:	99 1f       	adc	r25, r25
    5558:	9c 01       	movw	r18, r24
    555a:	22 0f       	add	r18, r18
    555c:	33 1f       	adc	r19, r19
    555e:	22 0f       	add	r18, r18
    5560:	33 1f       	adc	r19, r19
    5562:	22 0f       	add	r18, r18
    5564:	33 1f       	adc	r19, r19
    5566:	82 0f       	add	r24, r18
    5568:	93 1f       	adc	r25, r19
    556a:	84 0f       	add	r24, r20
    556c:	95 1f       	adc	r25, r21
    556e:	fc 01       	movw	r30, r24
    5570:	e8 55       	subi	r30, 0x58	; 88
    5572:	fe 4f       	sbci	r31, 0xFE	; 254
    5574:	60 81       	ld	r22, Z
    5576:	8a 81       	ldd	r24, Y+2	; 0x02
    5578:	48 2f       	mov	r20, r24
    557a:	50 e0       	ldi	r21, 0x00	; 0
    557c:	ca 01       	movw	r24, r20
    557e:	88 0f       	add	r24, r24
    5580:	99 1f       	adc	r25, r25
    5582:	9c 01       	movw	r18, r24
    5584:	22 0f       	add	r18, r18
    5586:	33 1f       	adc	r19, r19
    5588:	22 0f       	add	r18, r18
    558a:	33 1f       	adc	r19, r19
    558c:	22 0f       	add	r18, r18
    558e:	33 1f       	adc	r19, r19
    5590:	82 0f       	add	r24, r18
    5592:	93 1f       	adc	r25, r19
    5594:	84 0f       	add	r24, r20
    5596:	95 1f       	adc	r25, r21
    5598:	fc 01       	movw	r30, r24
    559a:	e7 55       	subi	r30, 0x57	; 87
    559c:	fe 4f       	sbci	r31, 0xFE	; 254
    559e:	90 81       	ld	r25, Z
    55a0:	86 2f       	mov	r24, r22
    55a2:	69 2f       	mov	r22, r25
    55a4:	40 e0       	ldi	r20, 0x00	; 0
    55a6:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    55aa:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    55ac:	89 81       	ldd	r24, Y+1	; 0x01
    55ae:	81 30       	cpi	r24, 0x01	; 1
    55b0:	19 f0       	breq	.+6      	; 0x55b8 <SEV_SEG_enumSEGClear+0x18c>
    55b2:	89 81       	ldd	r24, Y+1	; 0x01
    55b4:	8b 83       	std	Y+3, r24	; 0x03
    55b6:	9f c3       	rjmp	.+1854   	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPin,LOW);
    55b8:	8a 81       	ldd	r24, Y+2	; 0x02
    55ba:	48 2f       	mov	r20, r24
    55bc:	50 e0       	ldi	r21, 0x00	; 0
    55be:	ca 01       	movw	r24, r20
    55c0:	88 0f       	add	r24, r24
    55c2:	99 1f       	adc	r25, r25
    55c4:	9c 01       	movw	r18, r24
    55c6:	22 0f       	add	r18, r18
    55c8:	33 1f       	adc	r19, r19
    55ca:	22 0f       	add	r18, r18
    55cc:	33 1f       	adc	r19, r19
    55ce:	22 0f       	add	r18, r18
    55d0:	33 1f       	adc	r19, r19
    55d2:	82 0f       	add	r24, r18
    55d4:	93 1f       	adc	r25, r19
    55d6:	84 0f       	add	r24, r20
    55d8:	95 1f       	adc	r25, r21
    55da:	fc 01       	movw	r30, r24
    55dc:	e6 55       	subi	r30, 0x56	; 86
    55de:	fe 4f       	sbci	r31, 0xFE	; 254
    55e0:	60 81       	ld	r22, Z
    55e2:	8a 81       	ldd	r24, Y+2	; 0x02
    55e4:	48 2f       	mov	r20, r24
    55e6:	50 e0       	ldi	r21, 0x00	; 0
    55e8:	ca 01       	movw	r24, r20
    55ea:	88 0f       	add	r24, r24
    55ec:	99 1f       	adc	r25, r25
    55ee:	9c 01       	movw	r18, r24
    55f0:	22 0f       	add	r18, r18
    55f2:	33 1f       	adc	r19, r19
    55f4:	22 0f       	add	r18, r18
    55f6:	33 1f       	adc	r19, r19
    55f8:	22 0f       	add	r18, r18
    55fa:	33 1f       	adc	r19, r19
    55fc:	82 0f       	add	r24, r18
    55fe:	93 1f       	adc	r25, r19
    5600:	84 0f       	add	r24, r20
    5602:	95 1f       	adc	r25, r21
    5604:	fc 01       	movw	r30, r24
    5606:	e5 55       	subi	r30, 0x55	; 85
    5608:	fe 4f       	sbci	r31, 0xFE	; 254
    560a:	90 81       	ld	r25, Z
    560c:	86 2f       	mov	r24, r22
    560e:	69 2f       	mov	r22, r25
    5610:	40 e0       	ldi	r20, 0x00	; 0
    5612:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    5616:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5618:	89 81       	ldd	r24, Y+1	; 0x01
    561a:	81 30       	cpi	r24, 0x01	; 1
    561c:	19 f0       	breq	.+6      	; 0x5624 <SEV_SEG_enumSEGClear+0x1f8>
    561e:	89 81       	ldd	r24, Y+1	; 0x01
    5620:	8b 83       	std	Y+3, r24	; 0x03
    5622:	69 c3       	rjmp	.+1746   	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPin,LOW);
    5624:	8a 81       	ldd	r24, Y+2	; 0x02
    5626:	48 2f       	mov	r20, r24
    5628:	50 e0       	ldi	r21, 0x00	; 0
    562a:	ca 01       	movw	r24, r20
    562c:	88 0f       	add	r24, r24
    562e:	99 1f       	adc	r25, r25
    5630:	9c 01       	movw	r18, r24
    5632:	22 0f       	add	r18, r18
    5634:	33 1f       	adc	r19, r19
    5636:	22 0f       	add	r18, r18
    5638:	33 1f       	adc	r19, r19
    563a:	22 0f       	add	r18, r18
    563c:	33 1f       	adc	r19, r19
    563e:	82 0f       	add	r24, r18
    5640:	93 1f       	adc	r25, r19
    5642:	84 0f       	add	r24, r20
    5644:	95 1f       	adc	r25, r21
    5646:	fc 01       	movw	r30, r24
    5648:	e4 55       	subi	r30, 0x54	; 84
    564a:	fe 4f       	sbci	r31, 0xFE	; 254
    564c:	60 81       	ld	r22, Z
    564e:	8a 81       	ldd	r24, Y+2	; 0x02
    5650:	48 2f       	mov	r20, r24
    5652:	50 e0       	ldi	r21, 0x00	; 0
    5654:	ca 01       	movw	r24, r20
    5656:	88 0f       	add	r24, r24
    5658:	99 1f       	adc	r25, r25
    565a:	9c 01       	movw	r18, r24
    565c:	22 0f       	add	r18, r18
    565e:	33 1f       	adc	r19, r19
    5660:	22 0f       	add	r18, r18
    5662:	33 1f       	adc	r19, r19
    5664:	22 0f       	add	r18, r18
    5666:	33 1f       	adc	r19, r19
    5668:	82 0f       	add	r24, r18
    566a:	93 1f       	adc	r25, r19
    566c:	84 0f       	add	r24, r20
    566e:	95 1f       	adc	r25, r21
    5670:	fc 01       	movw	r30, r24
    5672:	e3 55       	subi	r30, 0x53	; 83
    5674:	fe 4f       	sbci	r31, 0xFE	; 254
    5676:	90 81       	ld	r25, Z
    5678:	86 2f       	mov	r24, r22
    567a:	69 2f       	mov	r22, r25
    567c:	40 e0       	ldi	r20, 0x00	; 0
    567e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    5682:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5684:	89 81       	ldd	r24, Y+1	; 0x01
    5686:	81 30       	cpi	r24, 0x01	; 1
    5688:	19 f0       	breq	.+6      	; 0x5690 <SEV_SEG_enumSEGClear+0x264>
    568a:	89 81       	ldd	r24, Y+1	; 0x01
    568c:	8b 83       	std	Y+3, r24	; 0x03
    568e:	33 c3       	rjmp	.+1638   	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPin,LOW);
    5690:	8a 81       	ldd	r24, Y+2	; 0x02
    5692:	48 2f       	mov	r20, r24
    5694:	50 e0       	ldi	r21, 0x00	; 0
    5696:	ca 01       	movw	r24, r20
    5698:	88 0f       	add	r24, r24
    569a:	99 1f       	adc	r25, r25
    569c:	9c 01       	movw	r18, r24
    569e:	22 0f       	add	r18, r18
    56a0:	33 1f       	adc	r19, r19
    56a2:	22 0f       	add	r18, r18
    56a4:	33 1f       	adc	r19, r19
    56a6:	22 0f       	add	r18, r18
    56a8:	33 1f       	adc	r19, r19
    56aa:	82 0f       	add	r24, r18
    56ac:	93 1f       	adc	r25, r19
    56ae:	84 0f       	add	r24, r20
    56b0:	95 1f       	adc	r25, r21
    56b2:	fc 01       	movw	r30, r24
    56b4:	e2 55       	subi	r30, 0x52	; 82
    56b6:	fe 4f       	sbci	r31, 0xFE	; 254
    56b8:	60 81       	ld	r22, Z
    56ba:	8a 81       	ldd	r24, Y+2	; 0x02
    56bc:	48 2f       	mov	r20, r24
    56be:	50 e0       	ldi	r21, 0x00	; 0
    56c0:	ca 01       	movw	r24, r20
    56c2:	88 0f       	add	r24, r24
    56c4:	99 1f       	adc	r25, r25
    56c6:	9c 01       	movw	r18, r24
    56c8:	22 0f       	add	r18, r18
    56ca:	33 1f       	adc	r19, r19
    56cc:	22 0f       	add	r18, r18
    56ce:	33 1f       	adc	r19, r19
    56d0:	22 0f       	add	r18, r18
    56d2:	33 1f       	adc	r19, r19
    56d4:	82 0f       	add	r24, r18
    56d6:	93 1f       	adc	r25, r19
    56d8:	84 0f       	add	r24, r20
    56da:	95 1f       	adc	r25, r21
    56dc:	fc 01       	movw	r30, r24
    56de:	e1 55       	subi	r30, 0x51	; 81
    56e0:	fe 4f       	sbci	r31, 0xFE	; 254
    56e2:	90 81       	ld	r25, Z
    56e4:	86 2f       	mov	r24, r22
    56e6:	69 2f       	mov	r22, r25
    56e8:	40 e0       	ldi	r20, 0x00	; 0
    56ea:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    56ee:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    56f0:	89 81       	ldd	r24, Y+1	; 0x01
    56f2:	81 30       	cpi	r24, 0x01	; 1
    56f4:	19 f0       	breq	.+6      	; 0x56fc <SEV_SEG_enumSEGClear+0x2d0>
    56f6:	89 81       	ldd	r24, Y+1	; 0x01
    56f8:	8b 83       	std	Y+3, r24	; 0x03
    56fa:	fd c2       	rjmp	.+1530   	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPin,LOW);
    56fc:	8a 81       	ldd	r24, Y+2	; 0x02
    56fe:	48 2f       	mov	r20, r24
    5700:	50 e0       	ldi	r21, 0x00	; 0
    5702:	ca 01       	movw	r24, r20
    5704:	88 0f       	add	r24, r24
    5706:	99 1f       	adc	r25, r25
    5708:	9c 01       	movw	r18, r24
    570a:	22 0f       	add	r18, r18
    570c:	33 1f       	adc	r19, r19
    570e:	22 0f       	add	r18, r18
    5710:	33 1f       	adc	r19, r19
    5712:	22 0f       	add	r18, r18
    5714:	33 1f       	adc	r19, r19
    5716:	82 0f       	add	r24, r18
    5718:	93 1f       	adc	r25, r19
    571a:	84 0f       	add	r24, r20
    571c:	95 1f       	adc	r25, r21
    571e:	fc 01       	movw	r30, r24
    5720:	e0 55       	subi	r30, 0x50	; 80
    5722:	fe 4f       	sbci	r31, 0xFE	; 254
    5724:	60 81       	ld	r22, Z
    5726:	8a 81       	ldd	r24, Y+2	; 0x02
    5728:	48 2f       	mov	r20, r24
    572a:	50 e0       	ldi	r21, 0x00	; 0
    572c:	ca 01       	movw	r24, r20
    572e:	88 0f       	add	r24, r24
    5730:	99 1f       	adc	r25, r25
    5732:	9c 01       	movw	r18, r24
    5734:	22 0f       	add	r18, r18
    5736:	33 1f       	adc	r19, r19
    5738:	22 0f       	add	r18, r18
    573a:	33 1f       	adc	r19, r19
    573c:	22 0f       	add	r18, r18
    573e:	33 1f       	adc	r19, r19
    5740:	82 0f       	add	r24, r18
    5742:	93 1f       	adc	r25, r19
    5744:	84 0f       	add	r24, r20
    5746:	95 1f       	adc	r25, r21
    5748:	fc 01       	movw	r30, r24
    574a:	ef 54       	subi	r30, 0x4F	; 79
    574c:	fe 4f       	sbci	r31, 0xFE	; 254
    574e:	90 81       	ld	r25, Z
    5750:	86 2f       	mov	r24, r22
    5752:	69 2f       	mov	r22, r25
    5754:	40 e0       	ldi	r20, 0x00	; 0
    5756:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    575a:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    575c:	89 81       	ldd	r24, Y+1	; 0x01
    575e:	81 30       	cpi	r24, 0x01	; 1
    5760:	19 f0       	breq	.+6      	; 0x5768 <SEV_SEG_enumSEGClear+0x33c>
    5762:	89 81       	ldd	r24, Y+1	; 0x01
    5764:	8b 83       	std	Y+3, r24	; 0x03
    5766:	c7 c2       	rjmp	.+1422   	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>

			if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port<=DIO_PORTD
    5768:	8a 81       	ldd	r24, Y+2	; 0x02
    576a:	48 2f       	mov	r20, r24
    576c:	50 e0       	ldi	r21, 0x00	; 0
    576e:	ca 01       	movw	r24, r20
    5770:	88 0f       	add	r24, r24
    5772:	99 1f       	adc	r25, r25
    5774:	9c 01       	movw	r18, r24
    5776:	22 0f       	add	r18, r18
    5778:	33 1f       	adc	r19, r19
    577a:	22 0f       	add	r18, r18
    577c:	33 1f       	adc	r19, r19
    577e:	22 0f       	add	r18, r18
    5780:	33 1f       	adc	r19, r19
    5782:	82 0f       	add	r24, r18
    5784:	93 1f       	adc	r25, r19
    5786:	84 0f       	add	r24, r20
    5788:	95 1f       	adc	r25, r21
    578a:	fc 01       	movw	r30, r24
    578c:	ec 54       	subi	r30, 0x4C	; 76
    578e:	fe 4f       	sbci	r31, 0xFE	; 254
    5790:	80 81       	ld	r24, Z
    5792:	84 30       	cpi	r24, 0x04	; 4
    5794:	08 f0       	brcs	.+2      	; 0x5798 <SEV_SEG_enumSEGClear+0x36c>
    5796:	4e c0       	rjmp	.+156    	; 0x5834 <SEV_SEG_enumSEGClear+0x408>
    5798:	8a 81       	ldd	r24, Y+2	; 0x02
    579a:	48 2f       	mov	r20, r24
    579c:	50 e0       	ldi	r21, 0x00	; 0
    579e:	ca 01       	movw	r24, r20
    57a0:	88 0f       	add	r24, r24
    57a2:	99 1f       	adc	r25, r25
    57a4:	9c 01       	movw	r18, r24
    57a6:	22 0f       	add	r18, r18
    57a8:	33 1f       	adc	r19, r19
    57aa:	22 0f       	add	r18, r18
    57ac:	33 1f       	adc	r19, r19
    57ae:	22 0f       	add	r18, r18
    57b0:	33 1f       	adc	r19, r19
    57b2:	82 0f       	add	r24, r18
    57b4:	93 1f       	adc	r25, r19
    57b6:	84 0f       	add	r24, r20
    57b8:	95 1f       	adc	r25, r21
    57ba:	fc 01       	movw	r30, r24
    57bc:	eb 54       	subi	r30, 0x4B	; 75
    57be:	fe 4f       	sbci	r31, 0xFE	; 254
    57c0:	80 81       	ld	r24, Z
    57c2:	88 30       	cpi	r24, 0x08	; 8
    57c4:	b8 f5       	brcc	.+110    	; 0x5834 <SEV_SEG_enumSEGClear+0x408>
			   &&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin,LOW);
    57c6:	8a 81       	ldd	r24, Y+2	; 0x02
    57c8:	48 2f       	mov	r20, r24
    57ca:	50 e0       	ldi	r21, 0x00	; 0
    57cc:	ca 01       	movw	r24, r20
    57ce:	88 0f       	add	r24, r24
    57d0:	99 1f       	adc	r25, r25
    57d2:	9c 01       	movw	r18, r24
    57d4:	22 0f       	add	r18, r18
    57d6:	33 1f       	adc	r19, r19
    57d8:	22 0f       	add	r18, r18
    57da:	33 1f       	adc	r19, r19
    57dc:	22 0f       	add	r18, r18
    57de:	33 1f       	adc	r19, r19
    57e0:	82 0f       	add	r24, r18
    57e2:	93 1f       	adc	r25, r19
    57e4:	84 0f       	add	r24, r20
    57e6:	95 1f       	adc	r25, r21
    57e8:	fc 01       	movw	r30, r24
    57ea:	ec 54       	subi	r30, 0x4C	; 76
    57ec:	fe 4f       	sbci	r31, 0xFE	; 254
    57ee:	60 81       	ld	r22, Z
    57f0:	8a 81       	ldd	r24, Y+2	; 0x02
    57f2:	48 2f       	mov	r20, r24
    57f4:	50 e0       	ldi	r21, 0x00	; 0
    57f6:	ca 01       	movw	r24, r20
    57f8:	88 0f       	add	r24, r24
    57fa:	99 1f       	adc	r25, r25
    57fc:	9c 01       	movw	r18, r24
    57fe:	22 0f       	add	r18, r18
    5800:	33 1f       	adc	r19, r19
    5802:	22 0f       	add	r18, r18
    5804:	33 1f       	adc	r19, r19
    5806:	22 0f       	add	r18, r18
    5808:	33 1f       	adc	r19, r19
    580a:	82 0f       	add	r24, r18
    580c:	93 1f       	adc	r25, r19
    580e:	84 0f       	add	r24, r20
    5810:	95 1f       	adc	r25, r21
    5812:	fc 01       	movw	r30, r24
    5814:	eb 54       	subi	r30, 0x4B	; 75
    5816:	fe 4f       	sbci	r31, 0xFE	; 254
    5818:	90 81       	ld	r25, Z
    581a:	86 2f       	mov	r24, r22
    581c:	69 2f       	mov	r22, r25
    581e:	40 e0       	ldi	r20, 0x00	; 0
    5820:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    5824:	89 83       	std	Y+1, r24	; 0x01
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5826:	89 81       	ldd	r24, Y+1	; 0x01
    5828:	81 30       	cpi	r24, 0x01	; 1
    582a:	09 f4       	brne	.+2      	; 0x582e <SEV_SEG_enumSEGClear+0x402>
    582c:	62 c2       	rjmp	.+1220   	; 0x5cf2 <SEV_SEG_enumSEGClear+0x8c6>
    582e:	89 81       	ldd	r24, Y+1	; 0x01
    5830:	8b 83       	std	Y+3, r24	; 0x03
    5832:	61 c2       	rjmp	.+1218   	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port==NOT_CONNECTED
    5834:	8a 81       	ldd	r24, Y+2	; 0x02
    5836:	48 2f       	mov	r20, r24
    5838:	50 e0       	ldi	r21, 0x00	; 0
    583a:	ca 01       	movw	r24, r20
    583c:	88 0f       	add	r24, r24
    583e:	99 1f       	adc	r25, r25
    5840:	9c 01       	movw	r18, r24
    5842:	22 0f       	add	r18, r18
    5844:	33 1f       	adc	r19, r19
    5846:	22 0f       	add	r18, r18
    5848:	33 1f       	adc	r19, r19
    584a:	22 0f       	add	r18, r18
    584c:	33 1f       	adc	r19, r19
    584e:	82 0f       	add	r24, r18
    5850:	93 1f       	adc	r25, r19
    5852:	84 0f       	add	r24, r20
    5854:	95 1f       	adc	r25, r21
    5856:	fc 01       	movw	r30, r24
    5858:	ec 54       	subi	r30, 0x4C	; 76
    585a:	fe 4f       	sbci	r31, 0xFE	; 254
    585c:	80 81       	ld	r24, Z
    585e:	88 30       	cpi	r24, 0x08	; 8
    5860:	c1 f4       	brne	.+48     	; 0x5892 <SEV_SEG_enumSEGClear+0x466>
    5862:	8a 81       	ldd	r24, Y+2	; 0x02
    5864:	48 2f       	mov	r20, r24
    5866:	50 e0       	ldi	r21, 0x00	; 0
    5868:	ca 01       	movw	r24, r20
    586a:	88 0f       	add	r24, r24
    586c:	99 1f       	adc	r25, r25
    586e:	9c 01       	movw	r18, r24
    5870:	22 0f       	add	r18, r18
    5872:	33 1f       	adc	r19, r19
    5874:	22 0f       	add	r18, r18
    5876:	33 1f       	adc	r19, r19
    5878:	22 0f       	add	r18, r18
    587a:	33 1f       	adc	r19, r19
    587c:	82 0f       	add	r24, r18
    587e:	93 1f       	adc	r25, r19
    5880:	84 0f       	add	r24, r20
    5882:	95 1f       	adc	r25, r21
    5884:	fc 01       	movw	r30, r24
    5886:	eb 54       	subi	r30, 0x4B	; 75
    5888:	fe 4f       	sbci	r31, 0xFE	; 254
    588a:	80 81       	ld	r24, Z
    588c:	89 30       	cpi	r24, 0x09	; 9
    588e:	08 f4       	brcc	.+2      	; 0x5892 <SEV_SEG_enumSEGClear+0x466>
    5890:	30 c2       	rjmp	.+1120   	; 0x5cf2 <SEV_SEG_enumSEGClear+0x8c6>
			{

			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    5892:	83 e0       	ldi	r24, 0x03	; 3
    5894:	89 83       	std	Y+1, r24	; 0x01
    5896:	2d c2       	rjmp	.+1114   	; 0x5cf2 <SEV_SEG_enumSEGClear+0x8c6>
			}
		}
		else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    5898:	8a 81       	ldd	r24, Y+2	; 0x02
    589a:	48 2f       	mov	r20, r24
    589c:	50 e0       	ldi	r21, 0x00	; 0
    589e:	ca 01       	movw	r24, r20
    58a0:	88 0f       	add	r24, r24
    58a2:	99 1f       	adc	r25, r25
    58a4:	9c 01       	movw	r18, r24
    58a6:	22 0f       	add	r18, r18
    58a8:	33 1f       	adc	r19, r19
    58aa:	22 0f       	add	r18, r18
    58ac:	33 1f       	adc	r19, r19
    58ae:	22 0f       	add	r18, r18
    58b0:	33 1f       	adc	r19, r19
    58b2:	82 0f       	add	r24, r18
    58b4:	93 1f       	adc	r25, r19
    58b6:	84 0f       	add	r24, r20
    58b8:	95 1f       	adc	r25, r21
    58ba:	fc 01       	movw	r30, r24
    58bc:	ea 54       	subi	r30, 0x4A	; 74
    58be:	fe 4f       	sbci	r31, 0xFE	; 254
    58c0:	80 81       	ld	r24, Z
    58c2:	88 23       	and	r24, r24
    58c4:	09 f0       	breq	.+2      	; 0x58c8 <SEV_SEG_enumSEGClear+0x49c>
    58c6:	10 c2       	rjmp	.+1056   	; 0x5ce8 <SEV_SEG_enumSEGClear+0x8bc>
		{
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APin,HIGH);
    58c8:	8a 81       	ldd	r24, Y+2	; 0x02
    58ca:	48 2f       	mov	r20, r24
    58cc:	50 e0       	ldi	r21, 0x00	; 0
    58ce:	ca 01       	movw	r24, r20
    58d0:	88 0f       	add	r24, r24
    58d2:	99 1f       	adc	r25, r25
    58d4:	9c 01       	movw	r18, r24
    58d6:	22 0f       	add	r18, r18
    58d8:	33 1f       	adc	r19, r19
    58da:	22 0f       	add	r18, r18
    58dc:	33 1f       	adc	r19, r19
    58de:	22 0f       	add	r18, r18
    58e0:	33 1f       	adc	r19, r19
    58e2:	82 0f       	add	r24, r18
    58e4:	93 1f       	adc	r25, r19
    58e6:	84 0f       	add	r24, r20
    58e8:	95 1f       	adc	r25, r21
    58ea:	fc 01       	movw	r30, r24
    58ec:	ec 55       	subi	r30, 0x5C	; 92
    58ee:	fe 4f       	sbci	r31, 0xFE	; 254
    58f0:	60 81       	ld	r22, Z
    58f2:	8a 81       	ldd	r24, Y+2	; 0x02
    58f4:	48 2f       	mov	r20, r24
    58f6:	50 e0       	ldi	r21, 0x00	; 0
    58f8:	ca 01       	movw	r24, r20
    58fa:	88 0f       	add	r24, r24
    58fc:	99 1f       	adc	r25, r25
    58fe:	9c 01       	movw	r18, r24
    5900:	22 0f       	add	r18, r18
    5902:	33 1f       	adc	r19, r19
    5904:	22 0f       	add	r18, r18
    5906:	33 1f       	adc	r19, r19
    5908:	22 0f       	add	r18, r18
    590a:	33 1f       	adc	r19, r19
    590c:	82 0f       	add	r24, r18
    590e:	93 1f       	adc	r25, r19
    5910:	84 0f       	add	r24, r20
    5912:	95 1f       	adc	r25, r21
    5914:	fc 01       	movw	r30, r24
    5916:	eb 55       	subi	r30, 0x5B	; 91
    5918:	fe 4f       	sbci	r31, 0xFE	; 254
    591a:	90 81       	ld	r25, Z
    591c:	86 2f       	mov	r24, r22
    591e:	69 2f       	mov	r22, r25
    5920:	41 e0       	ldi	r20, 0x01	; 1
    5922:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    5926:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5928:	89 81       	ldd	r24, Y+1	; 0x01
    592a:	81 30       	cpi	r24, 0x01	; 1
    592c:	19 f0       	breq	.+6      	; 0x5934 <SEV_SEG_enumSEGClear+0x508>
    592e:	89 81       	ldd	r24, Y+1	; 0x01
    5930:	8b 83       	std	Y+3, r24	; 0x03
    5932:	e1 c1       	rjmp	.+962    	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPin,HIGH);
    5934:	8a 81       	ldd	r24, Y+2	; 0x02
    5936:	48 2f       	mov	r20, r24
    5938:	50 e0       	ldi	r21, 0x00	; 0
    593a:	ca 01       	movw	r24, r20
    593c:	88 0f       	add	r24, r24
    593e:	99 1f       	adc	r25, r25
    5940:	9c 01       	movw	r18, r24
    5942:	22 0f       	add	r18, r18
    5944:	33 1f       	adc	r19, r19
    5946:	22 0f       	add	r18, r18
    5948:	33 1f       	adc	r19, r19
    594a:	22 0f       	add	r18, r18
    594c:	33 1f       	adc	r19, r19
    594e:	82 0f       	add	r24, r18
    5950:	93 1f       	adc	r25, r19
    5952:	84 0f       	add	r24, r20
    5954:	95 1f       	adc	r25, r21
    5956:	fc 01       	movw	r30, r24
    5958:	ea 55       	subi	r30, 0x5A	; 90
    595a:	fe 4f       	sbci	r31, 0xFE	; 254
    595c:	60 81       	ld	r22, Z
    595e:	8a 81       	ldd	r24, Y+2	; 0x02
    5960:	48 2f       	mov	r20, r24
    5962:	50 e0       	ldi	r21, 0x00	; 0
    5964:	ca 01       	movw	r24, r20
    5966:	88 0f       	add	r24, r24
    5968:	99 1f       	adc	r25, r25
    596a:	9c 01       	movw	r18, r24
    596c:	22 0f       	add	r18, r18
    596e:	33 1f       	adc	r19, r19
    5970:	22 0f       	add	r18, r18
    5972:	33 1f       	adc	r19, r19
    5974:	22 0f       	add	r18, r18
    5976:	33 1f       	adc	r19, r19
    5978:	82 0f       	add	r24, r18
    597a:	93 1f       	adc	r25, r19
    597c:	84 0f       	add	r24, r20
    597e:	95 1f       	adc	r25, r21
    5980:	fc 01       	movw	r30, r24
    5982:	e9 55       	subi	r30, 0x59	; 89
    5984:	fe 4f       	sbci	r31, 0xFE	; 254
    5986:	90 81       	ld	r25, Z
    5988:	86 2f       	mov	r24, r22
    598a:	69 2f       	mov	r22, r25
    598c:	41 e0       	ldi	r20, 0x01	; 1
    598e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    5992:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5994:	89 81       	ldd	r24, Y+1	; 0x01
    5996:	81 30       	cpi	r24, 0x01	; 1
    5998:	19 f0       	breq	.+6      	; 0x59a0 <SEV_SEG_enumSEGClear+0x574>
    599a:	89 81       	ldd	r24, Y+1	; 0x01
    599c:	8b 83       	std	Y+3, r24	; 0x03
    599e:	ab c1       	rjmp	.+854    	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPin,HIGH);
    59a0:	8a 81       	ldd	r24, Y+2	; 0x02
    59a2:	48 2f       	mov	r20, r24
    59a4:	50 e0       	ldi	r21, 0x00	; 0
    59a6:	ca 01       	movw	r24, r20
    59a8:	88 0f       	add	r24, r24
    59aa:	99 1f       	adc	r25, r25
    59ac:	9c 01       	movw	r18, r24
    59ae:	22 0f       	add	r18, r18
    59b0:	33 1f       	adc	r19, r19
    59b2:	22 0f       	add	r18, r18
    59b4:	33 1f       	adc	r19, r19
    59b6:	22 0f       	add	r18, r18
    59b8:	33 1f       	adc	r19, r19
    59ba:	82 0f       	add	r24, r18
    59bc:	93 1f       	adc	r25, r19
    59be:	84 0f       	add	r24, r20
    59c0:	95 1f       	adc	r25, r21
    59c2:	fc 01       	movw	r30, r24
    59c4:	e8 55       	subi	r30, 0x58	; 88
    59c6:	fe 4f       	sbci	r31, 0xFE	; 254
    59c8:	60 81       	ld	r22, Z
    59ca:	8a 81       	ldd	r24, Y+2	; 0x02
    59cc:	48 2f       	mov	r20, r24
    59ce:	50 e0       	ldi	r21, 0x00	; 0
    59d0:	ca 01       	movw	r24, r20
    59d2:	88 0f       	add	r24, r24
    59d4:	99 1f       	adc	r25, r25
    59d6:	9c 01       	movw	r18, r24
    59d8:	22 0f       	add	r18, r18
    59da:	33 1f       	adc	r19, r19
    59dc:	22 0f       	add	r18, r18
    59de:	33 1f       	adc	r19, r19
    59e0:	22 0f       	add	r18, r18
    59e2:	33 1f       	adc	r19, r19
    59e4:	82 0f       	add	r24, r18
    59e6:	93 1f       	adc	r25, r19
    59e8:	84 0f       	add	r24, r20
    59ea:	95 1f       	adc	r25, r21
    59ec:	fc 01       	movw	r30, r24
    59ee:	e7 55       	subi	r30, 0x57	; 87
    59f0:	fe 4f       	sbci	r31, 0xFE	; 254
    59f2:	90 81       	ld	r25, Z
    59f4:	86 2f       	mov	r24, r22
    59f6:	69 2f       	mov	r22, r25
    59f8:	41 e0       	ldi	r20, 0x01	; 1
    59fa:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    59fe:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5a00:	89 81       	ldd	r24, Y+1	; 0x01
    5a02:	81 30       	cpi	r24, 0x01	; 1
    5a04:	19 f0       	breq	.+6      	; 0x5a0c <SEV_SEG_enumSEGClear+0x5e0>
    5a06:	89 81       	ldd	r24, Y+1	; 0x01
    5a08:	8b 83       	std	Y+3, r24	; 0x03
    5a0a:	75 c1       	rjmp	.+746    	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPin,HIGH);
    5a0c:	8a 81       	ldd	r24, Y+2	; 0x02
    5a0e:	48 2f       	mov	r20, r24
    5a10:	50 e0       	ldi	r21, 0x00	; 0
    5a12:	ca 01       	movw	r24, r20
    5a14:	88 0f       	add	r24, r24
    5a16:	99 1f       	adc	r25, r25
    5a18:	9c 01       	movw	r18, r24
    5a1a:	22 0f       	add	r18, r18
    5a1c:	33 1f       	adc	r19, r19
    5a1e:	22 0f       	add	r18, r18
    5a20:	33 1f       	adc	r19, r19
    5a22:	22 0f       	add	r18, r18
    5a24:	33 1f       	adc	r19, r19
    5a26:	82 0f       	add	r24, r18
    5a28:	93 1f       	adc	r25, r19
    5a2a:	84 0f       	add	r24, r20
    5a2c:	95 1f       	adc	r25, r21
    5a2e:	fc 01       	movw	r30, r24
    5a30:	e6 55       	subi	r30, 0x56	; 86
    5a32:	fe 4f       	sbci	r31, 0xFE	; 254
    5a34:	60 81       	ld	r22, Z
    5a36:	8a 81       	ldd	r24, Y+2	; 0x02
    5a38:	48 2f       	mov	r20, r24
    5a3a:	50 e0       	ldi	r21, 0x00	; 0
    5a3c:	ca 01       	movw	r24, r20
    5a3e:	88 0f       	add	r24, r24
    5a40:	99 1f       	adc	r25, r25
    5a42:	9c 01       	movw	r18, r24
    5a44:	22 0f       	add	r18, r18
    5a46:	33 1f       	adc	r19, r19
    5a48:	22 0f       	add	r18, r18
    5a4a:	33 1f       	adc	r19, r19
    5a4c:	22 0f       	add	r18, r18
    5a4e:	33 1f       	adc	r19, r19
    5a50:	82 0f       	add	r24, r18
    5a52:	93 1f       	adc	r25, r19
    5a54:	84 0f       	add	r24, r20
    5a56:	95 1f       	adc	r25, r21
    5a58:	fc 01       	movw	r30, r24
    5a5a:	e5 55       	subi	r30, 0x55	; 85
    5a5c:	fe 4f       	sbci	r31, 0xFE	; 254
    5a5e:	90 81       	ld	r25, Z
    5a60:	86 2f       	mov	r24, r22
    5a62:	69 2f       	mov	r22, r25
    5a64:	41 e0       	ldi	r20, 0x01	; 1
    5a66:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    5a6a:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5a6c:	89 81       	ldd	r24, Y+1	; 0x01
    5a6e:	81 30       	cpi	r24, 0x01	; 1
    5a70:	19 f0       	breq	.+6      	; 0x5a78 <SEV_SEG_enumSEGClear+0x64c>
    5a72:	89 81       	ldd	r24, Y+1	; 0x01
    5a74:	8b 83       	std	Y+3, r24	; 0x03
    5a76:	3f c1       	rjmp	.+638    	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPin,HIGH);
    5a78:	8a 81       	ldd	r24, Y+2	; 0x02
    5a7a:	48 2f       	mov	r20, r24
    5a7c:	50 e0       	ldi	r21, 0x00	; 0
    5a7e:	ca 01       	movw	r24, r20
    5a80:	88 0f       	add	r24, r24
    5a82:	99 1f       	adc	r25, r25
    5a84:	9c 01       	movw	r18, r24
    5a86:	22 0f       	add	r18, r18
    5a88:	33 1f       	adc	r19, r19
    5a8a:	22 0f       	add	r18, r18
    5a8c:	33 1f       	adc	r19, r19
    5a8e:	22 0f       	add	r18, r18
    5a90:	33 1f       	adc	r19, r19
    5a92:	82 0f       	add	r24, r18
    5a94:	93 1f       	adc	r25, r19
    5a96:	84 0f       	add	r24, r20
    5a98:	95 1f       	adc	r25, r21
    5a9a:	fc 01       	movw	r30, r24
    5a9c:	e4 55       	subi	r30, 0x54	; 84
    5a9e:	fe 4f       	sbci	r31, 0xFE	; 254
    5aa0:	60 81       	ld	r22, Z
    5aa2:	8a 81       	ldd	r24, Y+2	; 0x02
    5aa4:	48 2f       	mov	r20, r24
    5aa6:	50 e0       	ldi	r21, 0x00	; 0
    5aa8:	ca 01       	movw	r24, r20
    5aaa:	88 0f       	add	r24, r24
    5aac:	99 1f       	adc	r25, r25
    5aae:	9c 01       	movw	r18, r24
    5ab0:	22 0f       	add	r18, r18
    5ab2:	33 1f       	adc	r19, r19
    5ab4:	22 0f       	add	r18, r18
    5ab6:	33 1f       	adc	r19, r19
    5ab8:	22 0f       	add	r18, r18
    5aba:	33 1f       	adc	r19, r19
    5abc:	82 0f       	add	r24, r18
    5abe:	93 1f       	adc	r25, r19
    5ac0:	84 0f       	add	r24, r20
    5ac2:	95 1f       	adc	r25, r21
    5ac4:	fc 01       	movw	r30, r24
    5ac6:	e3 55       	subi	r30, 0x53	; 83
    5ac8:	fe 4f       	sbci	r31, 0xFE	; 254
    5aca:	90 81       	ld	r25, Z
    5acc:	86 2f       	mov	r24, r22
    5ace:	69 2f       	mov	r22, r25
    5ad0:	41 e0       	ldi	r20, 0x01	; 1
    5ad2:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    5ad6:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5ad8:	89 81       	ldd	r24, Y+1	; 0x01
    5ada:	81 30       	cpi	r24, 0x01	; 1
    5adc:	19 f0       	breq	.+6      	; 0x5ae4 <SEV_SEG_enumSEGClear+0x6b8>
    5ade:	89 81       	ldd	r24, Y+1	; 0x01
    5ae0:	8b 83       	std	Y+3, r24	; 0x03
    5ae2:	09 c1       	rjmp	.+530    	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPin,HIGH);
    5ae4:	8a 81       	ldd	r24, Y+2	; 0x02
    5ae6:	48 2f       	mov	r20, r24
    5ae8:	50 e0       	ldi	r21, 0x00	; 0
    5aea:	ca 01       	movw	r24, r20
    5aec:	88 0f       	add	r24, r24
    5aee:	99 1f       	adc	r25, r25
    5af0:	9c 01       	movw	r18, r24
    5af2:	22 0f       	add	r18, r18
    5af4:	33 1f       	adc	r19, r19
    5af6:	22 0f       	add	r18, r18
    5af8:	33 1f       	adc	r19, r19
    5afa:	22 0f       	add	r18, r18
    5afc:	33 1f       	adc	r19, r19
    5afe:	82 0f       	add	r24, r18
    5b00:	93 1f       	adc	r25, r19
    5b02:	84 0f       	add	r24, r20
    5b04:	95 1f       	adc	r25, r21
    5b06:	fc 01       	movw	r30, r24
    5b08:	e2 55       	subi	r30, 0x52	; 82
    5b0a:	fe 4f       	sbci	r31, 0xFE	; 254
    5b0c:	60 81       	ld	r22, Z
    5b0e:	8a 81       	ldd	r24, Y+2	; 0x02
    5b10:	48 2f       	mov	r20, r24
    5b12:	50 e0       	ldi	r21, 0x00	; 0
    5b14:	ca 01       	movw	r24, r20
    5b16:	88 0f       	add	r24, r24
    5b18:	99 1f       	adc	r25, r25
    5b1a:	9c 01       	movw	r18, r24
    5b1c:	22 0f       	add	r18, r18
    5b1e:	33 1f       	adc	r19, r19
    5b20:	22 0f       	add	r18, r18
    5b22:	33 1f       	adc	r19, r19
    5b24:	22 0f       	add	r18, r18
    5b26:	33 1f       	adc	r19, r19
    5b28:	82 0f       	add	r24, r18
    5b2a:	93 1f       	adc	r25, r19
    5b2c:	84 0f       	add	r24, r20
    5b2e:	95 1f       	adc	r25, r21
    5b30:	fc 01       	movw	r30, r24
    5b32:	e1 55       	subi	r30, 0x51	; 81
    5b34:	fe 4f       	sbci	r31, 0xFE	; 254
    5b36:	90 81       	ld	r25, Z
    5b38:	86 2f       	mov	r24, r22
    5b3a:	69 2f       	mov	r22, r25
    5b3c:	41 e0       	ldi	r20, 0x01	; 1
    5b3e:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    5b42:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5b44:	89 81       	ldd	r24, Y+1	; 0x01
    5b46:	81 30       	cpi	r24, 0x01	; 1
    5b48:	19 f0       	breq	.+6      	; 0x5b50 <SEV_SEG_enumSEGClear+0x724>
    5b4a:	89 81       	ldd	r24, Y+1	; 0x01
    5b4c:	8b 83       	std	Y+3, r24	; 0x03
    5b4e:	d3 c0       	rjmp	.+422    	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPin,HIGH);
    5b50:	8a 81       	ldd	r24, Y+2	; 0x02
    5b52:	48 2f       	mov	r20, r24
    5b54:	50 e0       	ldi	r21, 0x00	; 0
    5b56:	ca 01       	movw	r24, r20
    5b58:	88 0f       	add	r24, r24
    5b5a:	99 1f       	adc	r25, r25
    5b5c:	9c 01       	movw	r18, r24
    5b5e:	22 0f       	add	r18, r18
    5b60:	33 1f       	adc	r19, r19
    5b62:	22 0f       	add	r18, r18
    5b64:	33 1f       	adc	r19, r19
    5b66:	22 0f       	add	r18, r18
    5b68:	33 1f       	adc	r19, r19
    5b6a:	82 0f       	add	r24, r18
    5b6c:	93 1f       	adc	r25, r19
    5b6e:	84 0f       	add	r24, r20
    5b70:	95 1f       	adc	r25, r21
    5b72:	fc 01       	movw	r30, r24
    5b74:	e0 55       	subi	r30, 0x50	; 80
    5b76:	fe 4f       	sbci	r31, 0xFE	; 254
    5b78:	60 81       	ld	r22, Z
    5b7a:	8a 81       	ldd	r24, Y+2	; 0x02
    5b7c:	48 2f       	mov	r20, r24
    5b7e:	50 e0       	ldi	r21, 0x00	; 0
    5b80:	ca 01       	movw	r24, r20
    5b82:	88 0f       	add	r24, r24
    5b84:	99 1f       	adc	r25, r25
    5b86:	9c 01       	movw	r18, r24
    5b88:	22 0f       	add	r18, r18
    5b8a:	33 1f       	adc	r19, r19
    5b8c:	22 0f       	add	r18, r18
    5b8e:	33 1f       	adc	r19, r19
    5b90:	22 0f       	add	r18, r18
    5b92:	33 1f       	adc	r19, r19
    5b94:	82 0f       	add	r24, r18
    5b96:	93 1f       	adc	r25, r19
    5b98:	84 0f       	add	r24, r20
    5b9a:	95 1f       	adc	r25, r21
    5b9c:	fc 01       	movw	r30, r24
    5b9e:	ef 54       	subi	r30, 0x4F	; 79
    5ba0:	fe 4f       	sbci	r31, 0xFE	; 254
    5ba2:	90 81       	ld	r25, Z
    5ba4:	86 2f       	mov	r24, r22
    5ba6:	69 2f       	mov	r22, r25
    5ba8:	41 e0       	ldi	r20, 0x01	; 1
    5baa:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    5bae:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5bb0:	89 81       	ldd	r24, Y+1	; 0x01
    5bb2:	81 30       	cpi	r24, 0x01	; 1
    5bb4:	19 f0       	breq	.+6      	; 0x5bbc <SEV_SEG_enumSEGClear+0x790>
    5bb6:	89 81       	ldd	r24, Y+1	; 0x01
    5bb8:	8b 83       	std	Y+3, r24	; 0x03
    5bba:	9d c0       	rjmp	.+314    	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>

			if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port<=DIO_PORTD
    5bbc:	8a 81       	ldd	r24, Y+2	; 0x02
    5bbe:	48 2f       	mov	r20, r24
    5bc0:	50 e0       	ldi	r21, 0x00	; 0
    5bc2:	ca 01       	movw	r24, r20
    5bc4:	88 0f       	add	r24, r24
    5bc6:	99 1f       	adc	r25, r25
    5bc8:	9c 01       	movw	r18, r24
    5bca:	22 0f       	add	r18, r18
    5bcc:	33 1f       	adc	r19, r19
    5bce:	22 0f       	add	r18, r18
    5bd0:	33 1f       	adc	r19, r19
    5bd2:	22 0f       	add	r18, r18
    5bd4:	33 1f       	adc	r19, r19
    5bd6:	82 0f       	add	r24, r18
    5bd8:	93 1f       	adc	r25, r19
    5bda:	84 0f       	add	r24, r20
    5bdc:	95 1f       	adc	r25, r21
    5bde:	fc 01       	movw	r30, r24
    5be0:	ec 54       	subi	r30, 0x4C	; 76
    5be2:	fe 4f       	sbci	r31, 0xFE	; 254
    5be4:	80 81       	ld	r24, Z
    5be6:	84 30       	cpi	r24, 0x04	; 4
    5be8:	08 f0       	brcs	.+2      	; 0x5bec <SEV_SEG_enumSEGClear+0x7c0>
    5bea:	4d c0       	rjmp	.+154    	; 0x5c86 <SEV_SEG_enumSEGClear+0x85a>
    5bec:	8a 81       	ldd	r24, Y+2	; 0x02
    5bee:	48 2f       	mov	r20, r24
    5bf0:	50 e0       	ldi	r21, 0x00	; 0
    5bf2:	ca 01       	movw	r24, r20
    5bf4:	88 0f       	add	r24, r24
    5bf6:	99 1f       	adc	r25, r25
    5bf8:	9c 01       	movw	r18, r24
    5bfa:	22 0f       	add	r18, r18
    5bfc:	33 1f       	adc	r19, r19
    5bfe:	22 0f       	add	r18, r18
    5c00:	33 1f       	adc	r19, r19
    5c02:	22 0f       	add	r18, r18
    5c04:	33 1f       	adc	r19, r19
    5c06:	82 0f       	add	r24, r18
    5c08:	93 1f       	adc	r25, r19
    5c0a:	84 0f       	add	r24, r20
    5c0c:	95 1f       	adc	r25, r21
    5c0e:	fc 01       	movw	r30, r24
    5c10:	eb 54       	subi	r30, 0x4B	; 75
    5c12:	fe 4f       	sbci	r31, 0xFE	; 254
    5c14:	80 81       	ld	r24, Z
    5c16:	88 30       	cpi	r24, 0x08	; 8
    5c18:	b0 f5       	brcc	.+108    	; 0x5c86 <SEV_SEG_enumSEGClear+0x85a>
			   &&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin,HIGH);
    5c1a:	8a 81       	ldd	r24, Y+2	; 0x02
    5c1c:	48 2f       	mov	r20, r24
    5c1e:	50 e0       	ldi	r21, 0x00	; 0
    5c20:	ca 01       	movw	r24, r20
    5c22:	88 0f       	add	r24, r24
    5c24:	99 1f       	adc	r25, r25
    5c26:	9c 01       	movw	r18, r24
    5c28:	22 0f       	add	r18, r18
    5c2a:	33 1f       	adc	r19, r19
    5c2c:	22 0f       	add	r18, r18
    5c2e:	33 1f       	adc	r19, r19
    5c30:	22 0f       	add	r18, r18
    5c32:	33 1f       	adc	r19, r19
    5c34:	82 0f       	add	r24, r18
    5c36:	93 1f       	adc	r25, r19
    5c38:	84 0f       	add	r24, r20
    5c3a:	95 1f       	adc	r25, r21
    5c3c:	fc 01       	movw	r30, r24
    5c3e:	ec 54       	subi	r30, 0x4C	; 76
    5c40:	fe 4f       	sbci	r31, 0xFE	; 254
    5c42:	60 81       	ld	r22, Z
    5c44:	8a 81       	ldd	r24, Y+2	; 0x02
    5c46:	48 2f       	mov	r20, r24
    5c48:	50 e0       	ldi	r21, 0x00	; 0
    5c4a:	ca 01       	movw	r24, r20
    5c4c:	88 0f       	add	r24, r24
    5c4e:	99 1f       	adc	r25, r25
    5c50:	9c 01       	movw	r18, r24
    5c52:	22 0f       	add	r18, r18
    5c54:	33 1f       	adc	r19, r19
    5c56:	22 0f       	add	r18, r18
    5c58:	33 1f       	adc	r19, r19
    5c5a:	22 0f       	add	r18, r18
    5c5c:	33 1f       	adc	r19, r19
    5c5e:	82 0f       	add	r24, r18
    5c60:	93 1f       	adc	r25, r19
    5c62:	84 0f       	add	r24, r20
    5c64:	95 1f       	adc	r25, r21
    5c66:	fc 01       	movw	r30, r24
    5c68:	eb 54       	subi	r30, 0x4B	; 75
    5c6a:	fe 4f       	sbci	r31, 0xFE	; 254
    5c6c:	90 81       	ld	r25, Z
    5c6e:	86 2f       	mov	r24, r22
    5c70:	69 2f       	mov	r22, r25
    5c72:	41 e0       	ldi	r20, 0x01	; 1
    5c74:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    5c78:	89 83       	std	Y+1, r24	; 0x01
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5c7a:	89 81       	ldd	r24, Y+1	; 0x01
    5c7c:	81 30       	cpi	r24, 0x01	; 1
    5c7e:	c9 f1       	breq	.+114    	; 0x5cf2 <SEV_SEG_enumSEGClear+0x8c6>
    5c80:	89 81       	ldd	r24, Y+1	; 0x01
    5c82:	8b 83       	std	Y+3, r24	; 0x03
    5c84:	38 c0       	rjmp	.+112    	; 0x5cf6 <SEV_SEG_enumSEGClear+0x8ca>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port==NOT_CONNECTED
    5c86:	8a 81       	ldd	r24, Y+2	; 0x02
    5c88:	48 2f       	mov	r20, r24
    5c8a:	50 e0       	ldi	r21, 0x00	; 0
    5c8c:	ca 01       	movw	r24, r20
    5c8e:	88 0f       	add	r24, r24
    5c90:	99 1f       	adc	r25, r25
    5c92:	9c 01       	movw	r18, r24
    5c94:	22 0f       	add	r18, r18
    5c96:	33 1f       	adc	r19, r19
    5c98:	22 0f       	add	r18, r18
    5c9a:	33 1f       	adc	r19, r19
    5c9c:	22 0f       	add	r18, r18
    5c9e:	33 1f       	adc	r19, r19
    5ca0:	82 0f       	add	r24, r18
    5ca2:	93 1f       	adc	r25, r19
    5ca4:	84 0f       	add	r24, r20
    5ca6:	95 1f       	adc	r25, r21
    5ca8:	fc 01       	movw	r30, r24
    5caa:	ec 54       	subi	r30, 0x4C	; 76
    5cac:	fe 4f       	sbci	r31, 0xFE	; 254
    5cae:	80 81       	ld	r24, Z
    5cb0:	88 30       	cpi	r24, 0x08	; 8
    5cb2:	b9 f4       	brne	.+46     	; 0x5ce2 <SEV_SEG_enumSEGClear+0x8b6>
    5cb4:	8a 81       	ldd	r24, Y+2	; 0x02
    5cb6:	48 2f       	mov	r20, r24
    5cb8:	50 e0       	ldi	r21, 0x00	; 0
    5cba:	ca 01       	movw	r24, r20
    5cbc:	88 0f       	add	r24, r24
    5cbe:	99 1f       	adc	r25, r25
    5cc0:	9c 01       	movw	r18, r24
    5cc2:	22 0f       	add	r18, r18
    5cc4:	33 1f       	adc	r19, r19
    5cc6:	22 0f       	add	r18, r18
    5cc8:	33 1f       	adc	r19, r19
    5cca:	22 0f       	add	r18, r18
    5ccc:	33 1f       	adc	r19, r19
    5cce:	82 0f       	add	r24, r18
    5cd0:	93 1f       	adc	r25, r19
    5cd2:	84 0f       	add	r24, r20
    5cd4:	95 1f       	adc	r25, r21
    5cd6:	fc 01       	movw	r30, r24
    5cd8:	eb 54       	subi	r30, 0x4B	; 75
    5cda:	fe 4f       	sbci	r31, 0xFE	; 254
    5cdc:	80 81       	ld	r24, Z
    5cde:	89 30       	cpi	r24, 0x09	; 9
    5ce0:	40 f0       	brcs	.+16     	; 0x5cf2 <SEV_SEG_enumSEGClear+0x8c6>
			{

			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    5ce2:	83 e0       	ldi	r24, 0x03	; 3
    5ce4:	89 83       	std	Y+1, r24	; 0x01
    5ce6:	05 c0       	rjmp	.+10     	; 0x5cf2 <SEV_SEG_enumSEGClear+0x8c6>
			}
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    5ce8:	83 e0       	ldi	r24, 0x03	; 3
    5cea:	89 83       	std	Y+1, r24	; 0x01
    5cec:	02 c0       	rjmp	.+4      	; 0x5cf2 <SEV_SEG_enumSEGClear+0x8c6>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    5cee:	83 e0       	ldi	r24, 0x03	; 3
    5cf0:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    5cf2:	89 81       	ldd	r24, Y+1	; 0x01
    5cf4:	8b 83       	std	Y+3, r24	; 0x03
    5cf6:	8b 81       	ldd	r24, Y+3	; 0x03
}
    5cf8:	0f 90       	pop	r0
    5cfa:	0f 90       	pop	r0
    5cfc:	0f 90       	pop	r0
    5cfe:	cf 91       	pop	r28
    5d00:	df 91       	pop	r29
    5d02:	08 95       	ret

00005d04 <SW_enumSwitchsInit>:
#include "../include/LIB/STDtypes.h"
#include "../include/MCAL/DIO/DIO_int.h"
#include "../include/HAL/SWITCH/SW_config.h"

ES_T SW_enumSwitchsInit(SW_T* Copy_pstrSwitchs)
{
    5d04:	df 93       	push	r29
    5d06:	cf 93       	push	r28
    5d08:	00 d0       	rcall	.+0      	; 0x5d0a <SW_enumSwitchsInit+0x6>
    5d0a:	00 d0       	rcall	.+0      	; 0x5d0c <SW_enumSwitchsInit+0x8>
    5d0c:	cd b7       	in	r28, 0x3d	; 61
    5d0e:	de b7       	in	r29, 0x3e	; 62
    5d10:	9c 83       	std	Y+4, r25	; 0x04
    5d12:	8b 83       	std	Y+3, r24	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    5d14:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Counter=0;
    5d16:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pstrSwitchs!=NULL)
    5d18:	8b 81       	ldd	r24, Y+3	; 0x03
    5d1a:	9c 81       	ldd	r25, Y+4	; 0x04
    5d1c:	00 97       	sbiw	r24, 0x00	; 0
    5d1e:	09 f4       	brne	.+2      	; 0x5d22 <SW_enumSwitchsInit+0x1e>
    5d20:	5d c0       	rjmp	.+186    	; 0x5ddc <SW_enumSwitchsInit+0xd8>
	{
		for (Local_u8Counter=0;Local_u8Counter<SW_NUM;Local_u8Counter++)
    5d22:	19 82       	std	Y+1, r1	; 0x01
    5d24:	55 c0       	rjmp	.+170    	; 0x5dd0 <SW_enumSwitchsInit+0xcc>
		{
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSwitchs[Local_u8Counter].SW_PortID,Copy_pstrSwitchs[Local_u8Counter].SW_PinID,INPUT);
    5d26:	89 81       	ldd	r24, Y+1	; 0x01
    5d28:	28 2f       	mov	r18, r24
    5d2a:	30 e0       	ldi	r19, 0x00	; 0
    5d2c:	c9 01       	movw	r24, r18
    5d2e:	88 0f       	add	r24, r24
    5d30:	99 1f       	adc	r25, r25
    5d32:	28 0f       	add	r18, r24
    5d34:	39 1f       	adc	r19, r25
    5d36:	8b 81       	ldd	r24, Y+3	; 0x03
    5d38:	9c 81       	ldd	r25, Y+4	; 0x04
    5d3a:	fc 01       	movw	r30, r24
    5d3c:	e2 0f       	add	r30, r18
    5d3e:	f3 1f       	adc	r31, r19
    5d40:	40 81       	ld	r20, Z
    5d42:	89 81       	ldd	r24, Y+1	; 0x01
    5d44:	28 2f       	mov	r18, r24
    5d46:	30 e0       	ldi	r19, 0x00	; 0
    5d48:	c9 01       	movw	r24, r18
    5d4a:	88 0f       	add	r24, r24
    5d4c:	99 1f       	adc	r25, r25
    5d4e:	28 0f       	add	r18, r24
    5d50:	39 1f       	adc	r19, r25
    5d52:	8b 81       	ldd	r24, Y+3	; 0x03
    5d54:	9c 81       	ldd	r25, Y+4	; 0x04
    5d56:	fc 01       	movw	r30, r24
    5d58:	e2 0f       	add	r30, r18
    5d5a:	f3 1f       	adc	r31, r19
    5d5c:	91 81       	ldd	r25, Z+1	; 0x01
    5d5e:	84 2f       	mov	r24, r20
    5d60:	69 2f       	mov	r22, r25
    5d62:	40 e0       	ldi	r20, 0x00	; 0
    5d64:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <DIO_enumSetPinDirection>
    5d68:	8a 83       	std	Y+2, r24	; 0x02
			Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSwitchs[Local_u8Counter].SW_PortID,Copy_pstrSwitchs[Local_u8Counter].SW_PinID,Copy_pstrSwitchs[Local_u8Counter].SW_State);
    5d6a:	89 81       	ldd	r24, Y+1	; 0x01
    5d6c:	28 2f       	mov	r18, r24
    5d6e:	30 e0       	ldi	r19, 0x00	; 0
    5d70:	c9 01       	movw	r24, r18
    5d72:	88 0f       	add	r24, r24
    5d74:	99 1f       	adc	r25, r25
    5d76:	28 0f       	add	r18, r24
    5d78:	39 1f       	adc	r19, r25
    5d7a:	8b 81       	ldd	r24, Y+3	; 0x03
    5d7c:	9c 81       	ldd	r25, Y+4	; 0x04
    5d7e:	fc 01       	movw	r30, r24
    5d80:	e2 0f       	add	r30, r18
    5d82:	f3 1f       	adc	r31, r19
    5d84:	50 81       	ld	r21, Z
    5d86:	89 81       	ldd	r24, Y+1	; 0x01
    5d88:	28 2f       	mov	r18, r24
    5d8a:	30 e0       	ldi	r19, 0x00	; 0
    5d8c:	c9 01       	movw	r24, r18
    5d8e:	88 0f       	add	r24, r24
    5d90:	99 1f       	adc	r25, r25
    5d92:	28 0f       	add	r18, r24
    5d94:	39 1f       	adc	r19, r25
    5d96:	8b 81       	ldd	r24, Y+3	; 0x03
    5d98:	9c 81       	ldd	r25, Y+4	; 0x04
    5d9a:	fc 01       	movw	r30, r24
    5d9c:	e2 0f       	add	r30, r18
    5d9e:	f3 1f       	adc	r31, r19
    5da0:	41 81       	ldd	r20, Z+1	; 0x01
    5da2:	89 81       	ldd	r24, Y+1	; 0x01
    5da4:	28 2f       	mov	r18, r24
    5da6:	30 e0       	ldi	r19, 0x00	; 0
    5da8:	c9 01       	movw	r24, r18
    5daa:	88 0f       	add	r24, r24
    5dac:	99 1f       	adc	r25, r25
    5dae:	28 0f       	add	r18, r24
    5db0:	39 1f       	adc	r19, r25
    5db2:	8b 81       	ldd	r24, Y+3	; 0x03
    5db4:	9c 81       	ldd	r25, Y+4	; 0x04
    5db6:	fc 01       	movw	r30, r24
    5db8:	e2 0f       	add	r30, r18
    5dba:	f3 1f       	adc	r31, r19
    5dbc:	92 81       	ldd	r25, Z+2	; 0x02
    5dbe:	85 2f       	mov	r24, r21
    5dc0:	64 2f       	mov	r22, r20
    5dc2:	49 2f       	mov	r20, r25
    5dc4:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <DIO_enumSetPinValue>
    5dc8:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
	u8 Local_u8Counter=0;

	if (Copy_pstrSwitchs!=NULL)
	{
		for (Local_u8Counter=0;Local_u8Counter<SW_NUM;Local_u8Counter++)
    5dca:	89 81       	ldd	r24, Y+1	; 0x01
    5dcc:	8f 5f       	subi	r24, 0xFF	; 255
    5dce:	89 83       	std	Y+1, r24	; 0x01
    5dd0:	89 81       	ldd	r24, Y+1	; 0x01
    5dd2:	88 23       	and	r24, r24
    5dd4:	09 f4       	brne	.+2      	; 0x5dd8 <SW_enumSwitchsInit+0xd4>
    5dd6:	a7 cf       	rjmp	.-178    	; 0x5d26 <SW_enumSwitchsInit+0x22>
		{
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSwitchs[Local_u8Counter].SW_PortID,Copy_pstrSwitchs[Local_u8Counter].SW_PinID,INPUT);
			Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSwitchs[Local_u8Counter].SW_PortID,Copy_pstrSwitchs[Local_u8Counter].SW_PinID,Copy_pstrSwitchs[Local_u8Counter].SW_State);
		}
		Local_enumErrorState=ES_NOK;
    5dd8:	1a 82       	std	Y+2, r1	; 0x02
    5dda:	02 c0       	rjmp	.+4      	; 0x5de0 <SW_enumSwitchsInit+0xdc>
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    5ddc:	82 e0       	ldi	r24, 0x02	; 2
    5dde:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enumErrorState;
    5de0:	8a 81       	ldd	r24, Y+2	; 0x02
}
    5de2:	0f 90       	pop	r0
    5de4:	0f 90       	pop	r0
    5de6:	0f 90       	pop	r0
    5de8:	0f 90       	pop	r0
    5dea:	cf 91       	pop	r28
    5dec:	df 91       	pop	r29
    5dee:	08 95       	ret

00005df0 <SW_enumSwitchGetState>:
ES_T SW_enumSwitchGetState(SW_T* Copy_pstrSwitch,u8* Copy_pu8SWState)
{
    5df0:	df 93       	push	r29
    5df2:	cf 93       	push	r28
    5df4:	00 d0       	rcall	.+0      	; 0x5df6 <SW_enumSwitchGetState+0x6>
    5df6:	00 d0       	rcall	.+0      	; 0x5df8 <SW_enumSwitchGetState+0x8>
    5df8:	0f 92       	push	r0
    5dfa:	cd b7       	in	r28, 0x3d	; 61
    5dfc:	de b7       	in	r29, 0x3e	; 62
    5dfe:	9b 83       	std	Y+3, r25	; 0x03
    5e00:	8a 83       	std	Y+2, r24	; 0x02
    5e02:	7d 83       	std	Y+5, r23	; 0x05
    5e04:	6c 83       	std	Y+4, r22	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    5e06:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pstrSwitch!=NULL&&Copy_pu8SWState!=NULL)
    5e08:	8a 81       	ldd	r24, Y+2	; 0x02
    5e0a:	9b 81       	ldd	r25, Y+3	; 0x03
    5e0c:	00 97       	sbiw	r24, 0x00	; 0
    5e0e:	91 f0       	breq	.+36     	; 0x5e34 <SW_enumSwitchGetState+0x44>
    5e10:	8c 81       	ldd	r24, Y+4	; 0x04
    5e12:	9d 81       	ldd	r25, Y+5	; 0x05
    5e14:	00 97       	sbiw	r24, 0x00	; 0
    5e16:	71 f0       	breq	.+28     	; 0x5e34 <SW_enumSwitchGetState+0x44>
	{
		Local_enumErrorState=DIO_enumGetPinValue(Copy_pstrSwitch->SW_PortID,Copy_pstrSwitch->SW_PinID,Copy_pu8SWState);
    5e18:	ea 81       	ldd	r30, Y+2	; 0x02
    5e1a:	fb 81       	ldd	r31, Y+3	; 0x03
    5e1c:	80 81       	ld	r24, Z
    5e1e:	ea 81       	ldd	r30, Y+2	; 0x02
    5e20:	fb 81       	ldd	r31, Y+3	; 0x03
    5e22:	91 81       	ldd	r25, Z+1	; 0x01
    5e24:	2c 81       	ldd	r18, Y+4	; 0x04
    5e26:	3d 81       	ldd	r19, Y+5	; 0x05
    5e28:	69 2f       	mov	r22, r25
    5e2a:	a9 01       	movw	r20, r18
    5e2c:	0e 94 82 0c 	call	0x1904	; 0x1904 <DIO_enumGetPinValue>
    5e30:	89 83       	std	Y+1, r24	; 0x01
    5e32:	02 c0       	rjmp	.+4      	; 0x5e38 <SW_enumSwitchGetState+0x48>
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    5e34:	82 e0       	ldi	r24, 0x02	; 2
    5e36:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    5e38:	89 81       	ldd	r24, Y+1	; 0x01
}
    5e3a:	0f 90       	pop	r0
    5e3c:	0f 90       	pop	r0
    5e3e:	0f 90       	pop	r0
    5e40:	0f 90       	pop	r0
    5e42:	0f 90       	pop	r0
    5e44:	cf 91       	pop	r28
    5e46:	df 91       	pop	r29
    5e48:	08 95       	ret

00005e4a <main>:
#include "../include/HAL/KEYPAD/KEYPAD_config.h"
#include "../include/HAL/KEYPAD/KEYPAD_int.h"


int main (void)
{
    5e4a:	df 93       	push	r29
    5e4c:	cf 93       	push	r28
    5e4e:	00 d0       	rcall	.+0      	; 0x5e50 <main+0x6>
    5e50:	0f 92       	push	r0
    5e52:	cd b7       	in	r28, 0x3d	; 61
    5e54:	de b7       	in	r29, 0x3e	; 62
	DIO_enumPortInit();
    5e56:	0e 94 c1 06 	call	0xd82	; 0xd82 <DIO_enumPortInit>
	LCD_enumInit();
    5e5a:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <LCD_enumInit>
	KEYPAD_enumInit();
    5e5e:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <KEYPAD_enumInit>

	u8 Local_u8KeyPressed=KEYPAD_NO_KET_PRESSED;
    5e62:	8f ef       	ldi	r24, 0xFF	; 255
    5e64:	89 83       	std	Y+1, r24	; 0x01

	while(1)
	{
		KEYPAD_enumGetPressedKey(&Local_u8KeyPressed);
    5e66:	ce 01       	movw	r24, r28
    5e68:	01 96       	adiw	r24, 0x01	; 1
    5e6a:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <KEYPAD_enumGetPressedKey>
		switch(Local_u8KeyPressed)
    5e6e:	89 81       	ldd	r24, Y+1	; 0x01
    5e70:	28 2f       	mov	r18, r24
    5e72:	30 e0       	ldi	r19, 0x00	; 0
    5e74:	3b 83       	std	Y+3, r19	; 0x03
    5e76:	2a 83       	std	Y+2, r18	; 0x02
    5e78:	8a 81       	ldd	r24, Y+2	; 0x02
    5e7a:	9b 81       	ldd	r25, Y+3	; 0x03
    5e7c:	83 36       	cpi	r24, 0x63	; 99
    5e7e:	91 05       	cpc	r25, r1
    5e80:	31 f0       	breq	.+12     	; 0x5e8e <main+0x44>
    5e82:	2a 81       	ldd	r18, Y+2	; 0x02
    5e84:	3b 81       	ldd	r19, Y+3	; 0x03
    5e86:	2f 3f       	cpi	r18, 0xFF	; 255
    5e88:	31 05       	cpc	r19, r1
    5e8a:	69 f3       	breq	.-38     	; 0x5e66 <main+0x1c>
    5e8c:	03 c0       	rjmp	.+6      	; 0x5e94 <main+0x4a>
		{
			case 'c':
				LCD_enumClear();
    5e8e:	0e 94 d1 17 	call	0x2fa2	; 0x2fa2 <LCD_enumClear>
    5e92:	e9 cf       	rjmp	.-46     	; 0x5e66 <main+0x1c>

			case KEYPAD_NO_KET_PRESSED:
			break;

			default:
				LCD_enumSendChar(Local_u8KeyPressed);
    5e94:	89 81       	ldd	r24, Y+1	; 0x01
    5e96:	0e 94 68 14 	call	0x28d0	; 0x28d0 <LCD_enumSendChar>
    5e9a:	e5 cf       	rjmp	.-54     	; 0x5e66 <main+0x1c>

00005e9c <__divmodsi4>:
    5e9c:	97 fb       	bst	r25, 7
    5e9e:	09 2e       	mov	r0, r25
    5ea0:	05 26       	eor	r0, r21
    5ea2:	0e d0       	rcall	.+28     	; 0x5ec0 <__divmodsi4_neg1>
    5ea4:	57 fd       	sbrc	r21, 7
    5ea6:	04 d0       	rcall	.+8      	; 0x5eb0 <__divmodsi4_neg2>
    5ea8:	14 d0       	rcall	.+40     	; 0x5ed2 <__udivmodsi4>
    5eaa:	0a d0       	rcall	.+20     	; 0x5ec0 <__divmodsi4_neg1>
    5eac:	00 1c       	adc	r0, r0
    5eae:	38 f4       	brcc	.+14     	; 0x5ebe <__divmodsi4_exit>

00005eb0 <__divmodsi4_neg2>:
    5eb0:	50 95       	com	r21
    5eb2:	40 95       	com	r20
    5eb4:	30 95       	com	r19
    5eb6:	21 95       	neg	r18
    5eb8:	3f 4f       	sbci	r19, 0xFF	; 255
    5eba:	4f 4f       	sbci	r20, 0xFF	; 255
    5ebc:	5f 4f       	sbci	r21, 0xFF	; 255

00005ebe <__divmodsi4_exit>:
    5ebe:	08 95       	ret

00005ec0 <__divmodsi4_neg1>:
    5ec0:	f6 f7       	brtc	.-4      	; 0x5ebe <__divmodsi4_exit>
    5ec2:	90 95       	com	r25
    5ec4:	80 95       	com	r24
    5ec6:	70 95       	com	r23
    5ec8:	61 95       	neg	r22
    5eca:	7f 4f       	sbci	r23, 0xFF	; 255
    5ecc:	8f 4f       	sbci	r24, 0xFF	; 255
    5ece:	9f 4f       	sbci	r25, 0xFF	; 255
    5ed0:	08 95       	ret

00005ed2 <__udivmodsi4>:
    5ed2:	a1 e2       	ldi	r26, 0x21	; 33
    5ed4:	1a 2e       	mov	r1, r26
    5ed6:	aa 1b       	sub	r26, r26
    5ed8:	bb 1b       	sub	r27, r27
    5eda:	fd 01       	movw	r30, r26
    5edc:	0d c0       	rjmp	.+26     	; 0x5ef8 <__udivmodsi4_ep>

00005ede <__udivmodsi4_loop>:
    5ede:	aa 1f       	adc	r26, r26
    5ee0:	bb 1f       	adc	r27, r27
    5ee2:	ee 1f       	adc	r30, r30
    5ee4:	ff 1f       	adc	r31, r31
    5ee6:	a2 17       	cp	r26, r18
    5ee8:	b3 07       	cpc	r27, r19
    5eea:	e4 07       	cpc	r30, r20
    5eec:	f5 07       	cpc	r31, r21
    5eee:	20 f0       	brcs	.+8      	; 0x5ef8 <__udivmodsi4_ep>
    5ef0:	a2 1b       	sub	r26, r18
    5ef2:	b3 0b       	sbc	r27, r19
    5ef4:	e4 0b       	sbc	r30, r20
    5ef6:	f5 0b       	sbc	r31, r21

00005ef8 <__udivmodsi4_ep>:
    5ef8:	66 1f       	adc	r22, r22
    5efa:	77 1f       	adc	r23, r23
    5efc:	88 1f       	adc	r24, r24
    5efe:	99 1f       	adc	r25, r25
    5f00:	1a 94       	dec	r1
    5f02:	69 f7       	brne	.-38     	; 0x5ede <__udivmodsi4_loop>
    5f04:	60 95       	com	r22
    5f06:	70 95       	com	r23
    5f08:	80 95       	com	r24
    5f0a:	90 95       	com	r25
    5f0c:	9b 01       	movw	r18, r22
    5f0e:	ac 01       	movw	r20, r24
    5f10:	bd 01       	movw	r22, r26
    5f12:	cf 01       	movw	r24, r30
    5f14:	08 95       	ret

00005f16 <__prologue_saves__>:
    5f16:	2f 92       	push	r2
    5f18:	3f 92       	push	r3
    5f1a:	4f 92       	push	r4
    5f1c:	5f 92       	push	r5
    5f1e:	6f 92       	push	r6
    5f20:	7f 92       	push	r7
    5f22:	8f 92       	push	r8
    5f24:	9f 92       	push	r9
    5f26:	af 92       	push	r10
    5f28:	bf 92       	push	r11
    5f2a:	cf 92       	push	r12
    5f2c:	df 92       	push	r13
    5f2e:	ef 92       	push	r14
    5f30:	ff 92       	push	r15
    5f32:	0f 93       	push	r16
    5f34:	1f 93       	push	r17
    5f36:	cf 93       	push	r28
    5f38:	df 93       	push	r29
    5f3a:	cd b7       	in	r28, 0x3d	; 61
    5f3c:	de b7       	in	r29, 0x3e	; 62
    5f3e:	ca 1b       	sub	r28, r26
    5f40:	db 0b       	sbc	r29, r27
    5f42:	0f b6       	in	r0, 0x3f	; 63
    5f44:	f8 94       	cli
    5f46:	de bf       	out	0x3e, r29	; 62
    5f48:	0f be       	out	0x3f, r0	; 63
    5f4a:	cd bf       	out	0x3d, r28	; 61
    5f4c:	09 94       	ijmp

00005f4e <__epilogue_restores__>:
    5f4e:	2a 88       	ldd	r2, Y+18	; 0x12
    5f50:	39 88       	ldd	r3, Y+17	; 0x11
    5f52:	48 88       	ldd	r4, Y+16	; 0x10
    5f54:	5f 84       	ldd	r5, Y+15	; 0x0f
    5f56:	6e 84       	ldd	r6, Y+14	; 0x0e
    5f58:	7d 84       	ldd	r7, Y+13	; 0x0d
    5f5a:	8c 84       	ldd	r8, Y+12	; 0x0c
    5f5c:	9b 84       	ldd	r9, Y+11	; 0x0b
    5f5e:	aa 84       	ldd	r10, Y+10	; 0x0a
    5f60:	b9 84       	ldd	r11, Y+9	; 0x09
    5f62:	c8 84       	ldd	r12, Y+8	; 0x08
    5f64:	df 80       	ldd	r13, Y+7	; 0x07
    5f66:	ee 80       	ldd	r14, Y+6	; 0x06
    5f68:	fd 80       	ldd	r15, Y+5	; 0x05
    5f6a:	0c 81       	ldd	r16, Y+4	; 0x04
    5f6c:	1b 81       	ldd	r17, Y+3	; 0x03
    5f6e:	aa 81       	ldd	r26, Y+2	; 0x02
    5f70:	b9 81       	ldd	r27, Y+1	; 0x01
    5f72:	ce 0f       	add	r28, r30
    5f74:	d1 1d       	adc	r29, r1
    5f76:	0f b6       	in	r0, 0x3f	; 63
    5f78:	f8 94       	cli
    5f7a:	de bf       	out	0x3e, r29	; 62
    5f7c:	0f be       	out	0x3f, r0	; 63
    5f7e:	cd bf       	out	0x3d, r28	; 61
    5f80:	ed 01       	movw	r28, r26
    5f82:	08 95       	ret

00005f84 <_exit>:
    5f84:	f8 94       	cli

00005f86 <__stop_program>:
    5f86:	ff cf       	rjmp	.-2      	; 0x5f86 <__stop_program>
