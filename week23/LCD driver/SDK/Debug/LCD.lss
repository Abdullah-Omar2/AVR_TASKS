
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000052c6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005e  00800060  000052c6  0000533a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000034b0  00000000  00000000  00005398  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000013c2  00000000  00000000  00008848  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00009c0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00009d4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00009eba  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000bb03  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000c9ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000d79c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000d8fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000db89  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000e357  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ec       	ldi	r30, 0xC6	; 198
      68:	f2 e5       	ldi	r31, 0x52	; 82
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 3b       	cpi	r26, 0xBE	; 190
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 23 29 	call	0x5246	; 0x5246 <main>
      7a:	0c 94 61 29 	jmp	0x52c2	; 0x52c2 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 2a 29 	jmp	0x5254	; 0x5254 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 46 29 	jmp	0x528c	; 0x528c <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 36 29 	jmp	0x526c	; 0x526c <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 52 29 	jmp	0x52a4	; 0x52a4 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 36 29 	jmp	0x526c	; 0x526c <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 52 29 	jmp	0x52a4	; 0x52a4 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 2a 29 	jmp	0x5254	; 0x5254 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 46 29 	jmp	0x528c	; 0x528c <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 36 29 	jmp	0x526c	; 0x526c <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 52 29 	jmp	0x52a4	; 0x52a4 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 36 29 	jmp	0x526c	; 0x526c <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 52 29 	jmp	0x52a4	; 0x52a4 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 36 29 	jmp	0x526c	; 0x526c <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 52 29 	jmp	0x52a4	; 0x52a4 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 3a 29 	jmp	0x5274	; 0x5274 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 56 29 	jmp	0x52ac	; 0x52ac <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_enumPortInit>:
#include "../include/MCAL/DIO/DIO_config.h"



ES_T DIO_enumPortInit (void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	0f 92       	push	r0
     b3c:	cd b7       	in	r28, 0x3d	; 61
     b3e:	de b7       	in	r29, 0x3e	; 62
	ES_T Local_enumErrorState=ES_NOK;
     b40:	19 82       	std	Y+1, r1	; 0x01

	DDRA=CONC(PA_PIN7_DIR,PA_PIN6_DIR,PA_PIN5_DIR,PA_PIN4_DIR,PA_PIN3_DIR,PA_PIN2_DIR,PA_PIN1_DIR,PA_PIN0_DIR);
     b42:	ea e3       	ldi	r30, 0x3A	; 58
     b44:	f0 e0       	ldi	r31, 0x00	; 0
     b46:	8f ef       	ldi	r24, 0xFF	; 255
     b48:	80 83       	st	Z, r24
	DDRB=CONC(PB_PIN7_DIR,PB_PIN6_DIR,PB_PIN5_DIR,PB_PIN4_DIR,PB_PIN3_DIR,PB_PIN2_DIR,PB_PIN1_DIR,PB_PIN0_DIR);
     b4a:	e7 e3       	ldi	r30, 0x37	; 55
     b4c:	f0 e0       	ldi	r31, 0x00	; 0
     b4e:	8f ef       	ldi	r24, 0xFF	; 255
     b50:	80 83       	st	Z, r24
	DDRC=CONC(PC_PIN7_DIR,PC_PIN6_DIR,PC_PIN5_DIR,PC_PIN4_DIR,PC_PIN3_DIR,PC_PIN2_DIR,PC_PIN1_DIR,PC_PIN0_DIR);
     b52:	e4 e3       	ldi	r30, 0x34	; 52
     b54:	f0 e0       	ldi	r31, 0x00	; 0
     b56:	8f ef       	ldi	r24, 0xFF	; 255
     b58:	80 83       	st	Z, r24
	DDRD=CONC(PD_PIN7_DIR,PD_PIN6_DIR,PD_PIN5_DIR,PD_PIN4_DIR,PD_PIN3_DIR,PD_PIN2_DIR,PD_PIN1_DIR,PD_PIN0_DIR);
     b5a:	e1 e3       	ldi	r30, 0x31	; 49
     b5c:	f0 e0       	ldi	r31, 0x00	; 0
     b5e:	8f ef       	ldi	r24, 0xFF	; 255
     b60:	80 83       	st	Z, r24

	PORTA=CONC(PA_PIN7_VAL,PA_PIN6_VAL,PA_PIN5_VAL,PA_PIN4_VAL,PA_PIN3_VAL,PA_PIN2_VAL,PA_PIN1_VAL,PA_PIN0_VAL);
     b62:	eb e3       	ldi	r30, 0x3B	; 59
     b64:	f0 e0       	ldi	r31, 0x00	; 0
     b66:	10 82       	st	Z, r1
	PORTB=CONC(PB_PIN7_VAL,PB_PIN6_VAL,PB_PIN5_VAL,PB_PIN4_VAL,PB_PIN3_VAL,PB_PIN2_VAL,PB_PIN1_VAL,PB_PIN0_VAL);
     b68:	e8 e3       	ldi	r30, 0x38	; 56
     b6a:	f0 e0       	ldi	r31, 0x00	; 0
     b6c:	10 82       	st	Z, r1
	PORTC=CONC(PC_PIN7_VAL,PC_PIN6_VAL,PC_PIN5_VAL,PC_PIN4_VAL,PC_PIN3_VAL,PC_PIN2_VAL,PC_PIN1_VAL,PC_PIN0_VAL);
     b6e:	e5 e3       	ldi	r30, 0x35	; 53
     b70:	f0 e0       	ldi	r31, 0x00	; 0
     b72:	10 82       	st	Z, r1
	PORTD=CONC(PD_PIN7_VAL,PD_PIN6_VAL,PD_PIN5_VAL,PD_PIN4_VAL,PD_PIN3_VAL,PD_PIN2_VAL,PD_PIN1_VAL,PD_PIN0_VAL);
     b74:	e2 e3       	ldi	r30, 0x32	; 50
     b76:	f0 e0       	ldi	r31, 0x00	; 0
     b78:	10 82       	st	Z, r1

	Local_enumErrorState=ES_OK;
     b7a:	81 e0       	ldi	r24, 0x01	; 1
     b7c:	89 83       	std	Y+1, r24	; 0x01

	return Local_enumErrorState;
     b7e:	89 81       	ldd	r24, Y+1	; 0x01
}
     b80:	0f 90       	pop	r0
     b82:	cf 91       	pop	r28
     b84:	df 91       	pop	r29
     b86:	08 95       	ret

00000b88 <DIO_enumSetPortDirection>:

ES_T DIO_enumSetPortDirection (u8 Copy_u8PortID,u8 Copy_u8Direction)
{
     b88:	df 93       	push	r29
     b8a:	cf 93       	push	r28
     b8c:	00 d0       	rcall	.+0      	; 0xb8e <DIO_enumSetPortDirection+0x6>
     b8e:	00 d0       	rcall	.+0      	; 0xb90 <DIO_enumSetPortDirection+0x8>
     b90:	0f 92       	push	r0
     b92:	cd b7       	in	r28, 0x3d	; 61
     b94:	de b7       	in	r29, 0x3e	; 62
     b96:	8a 83       	std	Y+2, r24	; 0x02
     b98:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
     b9a:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     b9c:	8a 81       	ldd	r24, Y+2	; 0x02
     b9e:	84 30       	cpi	r24, 0x04	; 4
     ba0:	a8 f5       	brcc	.+106    	; 0xc0c <DIO_enumSetPortDirection+0x84>
	{
		switch(Copy_u8PortID)
     ba2:	8a 81       	ldd	r24, Y+2	; 0x02
     ba4:	28 2f       	mov	r18, r24
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	3d 83       	std	Y+5, r19	; 0x05
     baa:	2c 83       	std	Y+4, r18	; 0x04
     bac:	8c 81       	ldd	r24, Y+4	; 0x04
     bae:	9d 81       	ldd	r25, Y+5	; 0x05
     bb0:	81 30       	cpi	r24, 0x01	; 1
     bb2:	91 05       	cpc	r25, r1
     bb4:	d1 f0       	breq	.+52     	; 0xbea <DIO_enumSetPortDirection+0x62>
     bb6:	2c 81       	ldd	r18, Y+4	; 0x04
     bb8:	3d 81       	ldd	r19, Y+5	; 0x05
     bba:	22 30       	cpi	r18, 0x02	; 2
     bbc:	31 05       	cpc	r19, r1
     bbe:	2c f4       	brge	.+10     	; 0xbca <DIO_enumSetPortDirection+0x42>
     bc0:	8c 81       	ldd	r24, Y+4	; 0x04
     bc2:	9d 81       	ldd	r25, Y+5	; 0x05
     bc4:	00 97       	sbiw	r24, 0x00	; 0
     bc6:	61 f0       	breq	.+24     	; 0xbe0 <DIO_enumSetPortDirection+0x58>
     bc8:	1e c0       	rjmp	.+60     	; 0xc06 <DIO_enumSetPortDirection+0x7e>
     bca:	2c 81       	ldd	r18, Y+4	; 0x04
     bcc:	3d 81       	ldd	r19, Y+5	; 0x05
     bce:	22 30       	cpi	r18, 0x02	; 2
     bd0:	31 05       	cpc	r19, r1
     bd2:	81 f0       	breq	.+32     	; 0xbf4 <DIO_enumSetPortDirection+0x6c>
     bd4:	8c 81       	ldd	r24, Y+4	; 0x04
     bd6:	9d 81       	ldd	r25, Y+5	; 0x05
     bd8:	83 30       	cpi	r24, 0x03	; 3
     bda:	91 05       	cpc	r25, r1
     bdc:	81 f0       	breq	.+32     	; 0xbfe <DIO_enumSetPortDirection+0x76>
     bde:	13 c0       	rjmp	.+38     	; 0xc06 <DIO_enumSetPortDirection+0x7e>
		{
			case DIO_PORTA:
				DDRA=Copy_u8Direction;
     be0:	ea e3       	ldi	r30, 0x3A	; 58
     be2:	f0 e0       	ldi	r31, 0x00	; 0
     be4:	8b 81       	ldd	r24, Y+3	; 0x03
     be6:	80 83       	st	Z, r24
     be8:	0e c0       	rjmp	.+28     	; 0xc06 <DIO_enumSetPortDirection+0x7e>
				break;
			case DIO_PORTB:
				DDRB=Copy_u8Direction;
     bea:	e7 e3       	ldi	r30, 0x37	; 55
     bec:	f0 e0       	ldi	r31, 0x00	; 0
     bee:	8b 81       	ldd	r24, Y+3	; 0x03
     bf0:	80 83       	st	Z, r24
     bf2:	09 c0       	rjmp	.+18     	; 0xc06 <DIO_enumSetPortDirection+0x7e>
				break;
			case DIO_PORTC:
				DDRC=Copy_u8Direction;
     bf4:	e4 e3       	ldi	r30, 0x34	; 52
     bf6:	f0 e0       	ldi	r31, 0x00	; 0
     bf8:	8b 81       	ldd	r24, Y+3	; 0x03
     bfa:	80 83       	st	Z, r24
     bfc:	04 c0       	rjmp	.+8      	; 0xc06 <DIO_enumSetPortDirection+0x7e>
				break;
			case DIO_PORTD:
				DDRD=Copy_u8Direction;
     bfe:	e1 e3       	ldi	r30, 0x31	; 49
     c00:	f0 e0       	ldi	r31, 0x00	; 0
     c02:	8b 81       	ldd	r24, Y+3	; 0x03
     c04:	80 83       	st	Z, r24
				break;
		}
		Local_enumErrorState=ES_OK;
     c06:	81 e0       	ldi	r24, 0x01	; 1
     c08:	89 83       	std	Y+1, r24	; 0x01
     c0a:	02 c0       	rjmp	.+4      	; 0xc10 <DIO_enumSetPortDirection+0x88>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     c0c:	83 e0       	ldi	r24, 0x03	; 3
     c0e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     c10:	89 81       	ldd	r24, Y+1	; 0x01
}
     c12:	0f 90       	pop	r0
     c14:	0f 90       	pop	r0
     c16:	0f 90       	pop	r0
     c18:	0f 90       	pop	r0
     c1a:	0f 90       	pop	r0
     c1c:	cf 91       	pop	r28
     c1e:	df 91       	pop	r29
     c20:	08 95       	ret

00000c22 <DIO_enumSetPortValue>:
ES_T DIO_enumSetPortValue (u8 Copy_u8PortID,u8 Copy_u8Value)
{
     c22:	df 93       	push	r29
     c24:	cf 93       	push	r28
     c26:	00 d0       	rcall	.+0      	; 0xc28 <DIO_enumSetPortValue+0x6>
     c28:	00 d0       	rcall	.+0      	; 0xc2a <DIO_enumSetPortValue+0x8>
     c2a:	0f 92       	push	r0
     c2c:	cd b7       	in	r28, 0x3d	; 61
     c2e:	de b7       	in	r29, 0x3e	; 62
     c30:	8a 83       	std	Y+2, r24	; 0x02
     c32:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
     c34:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     c36:	8a 81       	ldd	r24, Y+2	; 0x02
     c38:	84 30       	cpi	r24, 0x04	; 4
     c3a:	a8 f5       	brcc	.+106    	; 0xca6 <DIO_enumSetPortValue+0x84>
	{
		switch(Copy_u8PortID)
     c3c:	8a 81       	ldd	r24, Y+2	; 0x02
     c3e:	28 2f       	mov	r18, r24
     c40:	30 e0       	ldi	r19, 0x00	; 0
     c42:	3d 83       	std	Y+5, r19	; 0x05
     c44:	2c 83       	std	Y+4, r18	; 0x04
     c46:	8c 81       	ldd	r24, Y+4	; 0x04
     c48:	9d 81       	ldd	r25, Y+5	; 0x05
     c4a:	81 30       	cpi	r24, 0x01	; 1
     c4c:	91 05       	cpc	r25, r1
     c4e:	d1 f0       	breq	.+52     	; 0xc84 <DIO_enumSetPortValue+0x62>
     c50:	2c 81       	ldd	r18, Y+4	; 0x04
     c52:	3d 81       	ldd	r19, Y+5	; 0x05
     c54:	22 30       	cpi	r18, 0x02	; 2
     c56:	31 05       	cpc	r19, r1
     c58:	2c f4       	brge	.+10     	; 0xc64 <DIO_enumSetPortValue+0x42>
     c5a:	8c 81       	ldd	r24, Y+4	; 0x04
     c5c:	9d 81       	ldd	r25, Y+5	; 0x05
     c5e:	00 97       	sbiw	r24, 0x00	; 0
     c60:	61 f0       	breq	.+24     	; 0xc7a <DIO_enumSetPortValue+0x58>
     c62:	1e c0       	rjmp	.+60     	; 0xca0 <DIO_enumSetPortValue+0x7e>
     c64:	2c 81       	ldd	r18, Y+4	; 0x04
     c66:	3d 81       	ldd	r19, Y+5	; 0x05
     c68:	22 30       	cpi	r18, 0x02	; 2
     c6a:	31 05       	cpc	r19, r1
     c6c:	81 f0       	breq	.+32     	; 0xc8e <DIO_enumSetPortValue+0x6c>
     c6e:	8c 81       	ldd	r24, Y+4	; 0x04
     c70:	9d 81       	ldd	r25, Y+5	; 0x05
     c72:	83 30       	cpi	r24, 0x03	; 3
     c74:	91 05       	cpc	r25, r1
     c76:	81 f0       	breq	.+32     	; 0xc98 <DIO_enumSetPortValue+0x76>
     c78:	13 c0       	rjmp	.+38     	; 0xca0 <DIO_enumSetPortValue+0x7e>
		{
			case DIO_PORTA:
				PORTA=Copy_u8Value;
     c7a:	eb e3       	ldi	r30, 0x3B	; 59
     c7c:	f0 e0       	ldi	r31, 0x00	; 0
     c7e:	8b 81       	ldd	r24, Y+3	; 0x03
     c80:	80 83       	st	Z, r24
     c82:	0e c0       	rjmp	.+28     	; 0xca0 <DIO_enumSetPortValue+0x7e>
				break;
			case DIO_PORTB:
				PORTB=Copy_u8Value;
     c84:	e8 e3       	ldi	r30, 0x38	; 56
     c86:	f0 e0       	ldi	r31, 0x00	; 0
     c88:	8b 81       	ldd	r24, Y+3	; 0x03
     c8a:	80 83       	st	Z, r24
     c8c:	09 c0       	rjmp	.+18     	; 0xca0 <DIO_enumSetPortValue+0x7e>
				break;
			case DIO_PORTC:
				PORTC=Copy_u8Value;
     c8e:	e5 e3       	ldi	r30, 0x35	; 53
     c90:	f0 e0       	ldi	r31, 0x00	; 0
     c92:	8b 81       	ldd	r24, Y+3	; 0x03
     c94:	80 83       	st	Z, r24
     c96:	04 c0       	rjmp	.+8      	; 0xca0 <DIO_enumSetPortValue+0x7e>
				break;
			case DIO_PORTD:
				PORTD=Copy_u8Value;
     c98:	e2 e3       	ldi	r30, 0x32	; 50
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	8b 81       	ldd	r24, Y+3	; 0x03
     c9e:	80 83       	st	Z, r24
				break;
		}
		Local_enumErrorState=ES_OK;
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	89 83       	std	Y+1, r24	; 0x01
     ca4:	02 c0       	rjmp	.+4      	; 0xcaa <DIO_enumSetPortValue+0x88>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     ca6:	83 e0       	ldi	r24, 0x03	; 3
     ca8:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     caa:	89 81       	ldd	r24, Y+1	; 0x01
}
     cac:	0f 90       	pop	r0
     cae:	0f 90       	pop	r0
     cb0:	0f 90       	pop	r0
     cb2:	0f 90       	pop	r0
     cb4:	0f 90       	pop	r0
     cb6:	cf 91       	pop	r28
     cb8:	df 91       	pop	r29
     cba:	08 95       	ret

00000cbc <DIO_enumTogglePortDirection>:
ES_T DIO_enumTogglePortDirection (u8 Copy_u8PortID)
{
     cbc:	df 93       	push	r29
     cbe:	cf 93       	push	r28
     cc0:	00 d0       	rcall	.+0      	; 0xcc2 <DIO_enumTogglePortDirection+0x6>
     cc2:	00 d0       	rcall	.+0      	; 0xcc4 <DIO_enumTogglePortDirection+0x8>
     cc4:	cd b7       	in	r28, 0x3d	; 61
     cc6:	de b7       	in	r29, 0x3e	; 62
     cc8:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
     cca:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     ccc:	8a 81       	ldd	r24, Y+2	; 0x02
     cce:	84 30       	cpi	r24, 0x04	; 4
     cd0:	08 f0       	brcs	.+2      	; 0xcd4 <DIO_enumTogglePortDirection+0x18>
     cd2:	41 c0       	rjmp	.+130    	; 0xd56 <DIO_enumTogglePortDirection+0x9a>
	{
		switch(Copy_u8PortID)
     cd4:	8a 81       	ldd	r24, Y+2	; 0x02
     cd6:	28 2f       	mov	r18, r24
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	3c 83       	std	Y+4, r19	; 0x04
     cdc:	2b 83       	std	Y+3, r18	; 0x03
     cde:	8b 81       	ldd	r24, Y+3	; 0x03
     ce0:	9c 81       	ldd	r25, Y+4	; 0x04
     ce2:	81 30       	cpi	r24, 0x01	; 1
     ce4:	91 05       	cpc	r25, r1
     ce6:	e9 f0       	breq	.+58     	; 0xd22 <DIO_enumTogglePortDirection+0x66>
     ce8:	2b 81       	ldd	r18, Y+3	; 0x03
     cea:	3c 81       	ldd	r19, Y+4	; 0x04
     cec:	22 30       	cpi	r18, 0x02	; 2
     cee:	31 05       	cpc	r19, r1
     cf0:	2c f4       	brge	.+10     	; 0xcfc <DIO_enumTogglePortDirection+0x40>
     cf2:	8b 81       	ldd	r24, Y+3	; 0x03
     cf4:	9c 81       	ldd	r25, Y+4	; 0x04
     cf6:	00 97       	sbiw	r24, 0x00	; 0
     cf8:	61 f0       	breq	.+24     	; 0xd12 <DIO_enumTogglePortDirection+0x56>
     cfa:	2a c0       	rjmp	.+84     	; 0xd50 <DIO_enumTogglePortDirection+0x94>
     cfc:	2b 81       	ldd	r18, Y+3	; 0x03
     cfe:	3c 81       	ldd	r19, Y+4	; 0x04
     d00:	22 30       	cpi	r18, 0x02	; 2
     d02:	31 05       	cpc	r19, r1
     d04:	b1 f0       	breq	.+44     	; 0xd32 <DIO_enumTogglePortDirection+0x76>
     d06:	8b 81       	ldd	r24, Y+3	; 0x03
     d08:	9c 81       	ldd	r25, Y+4	; 0x04
     d0a:	83 30       	cpi	r24, 0x03	; 3
     d0c:	91 05       	cpc	r25, r1
     d0e:	c9 f0       	breq	.+50     	; 0xd42 <DIO_enumTogglePortDirection+0x86>
     d10:	1f c0       	rjmp	.+62     	; 0xd50 <DIO_enumTogglePortDirection+0x94>
		{
			case DIO_PORTA:
				DDRA=~DDRA;
     d12:	aa e3       	ldi	r26, 0x3A	; 58
     d14:	b0 e0       	ldi	r27, 0x00	; 0
     d16:	ea e3       	ldi	r30, 0x3A	; 58
     d18:	f0 e0       	ldi	r31, 0x00	; 0
     d1a:	80 81       	ld	r24, Z
     d1c:	80 95       	com	r24
     d1e:	8c 93       	st	X, r24
     d20:	17 c0       	rjmp	.+46     	; 0xd50 <DIO_enumTogglePortDirection+0x94>
				break;
			case DIO_PORTB:
				DDRB=~DDRB;
     d22:	a7 e3       	ldi	r26, 0x37	; 55
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	e7 e3       	ldi	r30, 0x37	; 55
     d28:	f0 e0       	ldi	r31, 0x00	; 0
     d2a:	80 81       	ld	r24, Z
     d2c:	80 95       	com	r24
     d2e:	8c 93       	st	X, r24
     d30:	0f c0       	rjmp	.+30     	; 0xd50 <DIO_enumTogglePortDirection+0x94>
				break;
			case DIO_PORTC:
				DDRC=~DDRC;
     d32:	a4 e3       	ldi	r26, 0x34	; 52
     d34:	b0 e0       	ldi	r27, 0x00	; 0
     d36:	e4 e3       	ldi	r30, 0x34	; 52
     d38:	f0 e0       	ldi	r31, 0x00	; 0
     d3a:	80 81       	ld	r24, Z
     d3c:	80 95       	com	r24
     d3e:	8c 93       	st	X, r24
     d40:	07 c0       	rjmp	.+14     	; 0xd50 <DIO_enumTogglePortDirection+0x94>
				break;
			case DIO_PORTD:
				DDRD=~DDRD;
     d42:	a1 e3       	ldi	r26, 0x31	; 49
     d44:	b0 e0       	ldi	r27, 0x00	; 0
     d46:	e1 e3       	ldi	r30, 0x31	; 49
     d48:	f0 e0       	ldi	r31, 0x00	; 0
     d4a:	80 81       	ld	r24, Z
     d4c:	80 95       	com	r24
     d4e:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	89 83       	std	Y+1, r24	; 0x01
     d54:	02 c0       	rjmp	.+4      	; 0xd5a <DIO_enumTogglePortDirection+0x9e>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     d56:	83 e0       	ldi	r24, 0x03	; 3
     d58:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     d5a:	89 81       	ldd	r24, Y+1	; 0x01
}
     d5c:	0f 90       	pop	r0
     d5e:	0f 90       	pop	r0
     d60:	0f 90       	pop	r0
     d62:	0f 90       	pop	r0
     d64:	cf 91       	pop	r28
     d66:	df 91       	pop	r29
     d68:	08 95       	ret

00000d6a <DIO_enumTogglePortValue>:
ES_T DIO_enumTogglePortValue (u8 Copy_u8PortID)
{
     d6a:	df 93       	push	r29
     d6c:	cf 93       	push	r28
     d6e:	00 d0       	rcall	.+0      	; 0xd70 <DIO_enumTogglePortValue+0x6>
     d70:	00 d0       	rcall	.+0      	; 0xd72 <DIO_enumTogglePortValue+0x8>
     d72:	cd b7       	in	r28, 0x3d	; 61
     d74:	de b7       	in	r29, 0x3e	; 62
     d76:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
     d78:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     d7a:	8a 81       	ldd	r24, Y+2	; 0x02
     d7c:	84 30       	cpi	r24, 0x04	; 4
     d7e:	08 f0       	brcs	.+2      	; 0xd82 <DIO_enumTogglePortValue+0x18>
     d80:	41 c0       	rjmp	.+130    	; 0xe04 <DIO_enumTogglePortValue+0x9a>
	{
		switch(Copy_u8PortID)
     d82:	8a 81       	ldd	r24, Y+2	; 0x02
     d84:	28 2f       	mov	r18, r24
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	3c 83       	std	Y+4, r19	; 0x04
     d8a:	2b 83       	std	Y+3, r18	; 0x03
     d8c:	8b 81       	ldd	r24, Y+3	; 0x03
     d8e:	9c 81       	ldd	r25, Y+4	; 0x04
     d90:	81 30       	cpi	r24, 0x01	; 1
     d92:	91 05       	cpc	r25, r1
     d94:	e9 f0       	breq	.+58     	; 0xdd0 <DIO_enumTogglePortValue+0x66>
     d96:	2b 81       	ldd	r18, Y+3	; 0x03
     d98:	3c 81       	ldd	r19, Y+4	; 0x04
     d9a:	22 30       	cpi	r18, 0x02	; 2
     d9c:	31 05       	cpc	r19, r1
     d9e:	2c f4       	brge	.+10     	; 0xdaa <DIO_enumTogglePortValue+0x40>
     da0:	8b 81       	ldd	r24, Y+3	; 0x03
     da2:	9c 81       	ldd	r25, Y+4	; 0x04
     da4:	00 97       	sbiw	r24, 0x00	; 0
     da6:	61 f0       	breq	.+24     	; 0xdc0 <DIO_enumTogglePortValue+0x56>
     da8:	2a c0       	rjmp	.+84     	; 0xdfe <DIO_enumTogglePortValue+0x94>
     daa:	2b 81       	ldd	r18, Y+3	; 0x03
     dac:	3c 81       	ldd	r19, Y+4	; 0x04
     dae:	22 30       	cpi	r18, 0x02	; 2
     db0:	31 05       	cpc	r19, r1
     db2:	b1 f0       	breq	.+44     	; 0xde0 <DIO_enumTogglePortValue+0x76>
     db4:	8b 81       	ldd	r24, Y+3	; 0x03
     db6:	9c 81       	ldd	r25, Y+4	; 0x04
     db8:	83 30       	cpi	r24, 0x03	; 3
     dba:	91 05       	cpc	r25, r1
     dbc:	c9 f0       	breq	.+50     	; 0xdf0 <DIO_enumTogglePortValue+0x86>
     dbe:	1f c0       	rjmp	.+62     	; 0xdfe <DIO_enumTogglePortValue+0x94>
		{
			case DIO_PORTA:
				PORTA=~PORTA;
     dc0:	ab e3       	ldi	r26, 0x3B	; 59
     dc2:	b0 e0       	ldi	r27, 0x00	; 0
     dc4:	eb e3       	ldi	r30, 0x3B	; 59
     dc6:	f0 e0       	ldi	r31, 0x00	; 0
     dc8:	80 81       	ld	r24, Z
     dca:	80 95       	com	r24
     dcc:	8c 93       	st	X, r24
     dce:	17 c0       	rjmp	.+46     	; 0xdfe <DIO_enumTogglePortValue+0x94>
				break;
			case DIO_PORTB:
				PORTB=~PORTB;
     dd0:	a8 e3       	ldi	r26, 0x38	; 56
     dd2:	b0 e0       	ldi	r27, 0x00	; 0
     dd4:	e8 e3       	ldi	r30, 0x38	; 56
     dd6:	f0 e0       	ldi	r31, 0x00	; 0
     dd8:	80 81       	ld	r24, Z
     dda:	80 95       	com	r24
     ddc:	8c 93       	st	X, r24
     dde:	0f c0       	rjmp	.+30     	; 0xdfe <DIO_enumTogglePortValue+0x94>
				break;
			case DIO_PORTC:
				PORTC=~PORTC;
     de0:	a5 e3       	ldi	r26, 0x35	; 53
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	e5 e3       	ldi	r30, 0x35	; 53
     de6:	f0 e0       	ldi	r31, 0x00	; 0
     de8:	80 81       	ld	r24, Z
     dea:	80 95       	com	r24
     dec:	8c 93       	st	X, r24
     dee:	07 c0       	rjmp	.+14     	; 0xdfe <DIO_enumTogglePortValue+0x94>
				break;
			case DIO_PORTD:
				PORTD=~PORTD;
     df0:	a2 e3       	ldi	r26, 0x32	; 50
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	e2 e3       	ldi	r30, 0x32	; 50
     df6:	f0 e0       	ldi	r31, 0x00	; 0
     df8:	80 81       	ld	r24, Z
     dfa:	80 95       	com	r24
     dfc:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	89 83       	std	Y+1, r24	; 0x01
     e02:	02 c0       	rjmp	.+4      	; 0xe08 <DIO_enumTogglePortValue+0x9e>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     e04:	83 e0       	ldi	r24, 0x03	; 3
     e06:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     e08:	89 81       	ldd	r24, Y+1	; 0x01
}
     e0a:	0f 90       	pop	r0
     e0c:	0f 90       	pop	r0
     e0e:	0f 90       	pop	r0
     e10:	0f 90       	pop	r0
     e12:	cf 91       	pop	r28
     e14:	df 91       	pop	r29
     e16:	08 95       	ret

00000e18 <DIO_enumGetPortDirection>:
ES_T DIO_enumGetPortDirection (u8 Copy_u8PortID,u8 *Copy_pu8Direction)
{
     e18:	df 93       	push	r29
     e1a:	cf 93       	push	r28
     e1c:	00 d0       	rcall	.+0      	; 0xe1e <DIO_enumGetPortDirection+0x6>
     e1e:	00 d0       	rcall	.+0      	; 0xe20 <DIO_enumGetPortDirection+0x8>
     e20:	00 d0       	rcall	.+0      	; 0xe22 <DIO_enumGetPortDirection+0xa>
     e22:	cd b7       	in	r28, 0x3d	; 61
     e24:	de b7       	in	r29, 0x3e	; 62
     e26:	8a 83       	std	Y+2, r24	; 0x02
     e28:	7c 83       	std	Y+4, r23	; 0x04
     e2a:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
     e2c:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     e2e:	8a 81       	ldd	r24, Y+2	; 0x02
     e30:	84 30       	cpi	r24, 0x04	; 4
     e32:	08 f0       	brcs	.+2      	; 0xe36 <DIO_enumGetPortDirection+0x1e>
     e34:	44 c0       	rjmp	.+136    	; 0xebe <DIO_enumGetPortDirection+0xa6>
	{
		if (Copy_pu8Direction!=NULL)
     e36:	8b 81       	ldd	r24, Y+3	; 0x03
     e38:	9c 81       	ldd	r25, Y+4	; 0x04
     e3a:	00 97       	sbiw	r24, 0x00	; 0
     e3c:	e9 f1       	breq	.+122    	; 0xeb8 <DIO_enumGetPortDirection+0xa0>
		{
			switch(Copy_u8PortID)
     e3e:	8a 81       	ldd	r24, Y+2	; 0x02
     e40:	28 2f       	mov	r18, r24
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	3e 83       	std	Y+6, r19	; 0x06
     e46:	2d 83       	std	Y+5, r18	; 0x05
     e48:	8d 81       	ldd	r24, Y+5	; 0x05
     e4a:	9e 81       	ldd	r25, Y+6	; 0x06
     e4c:	81 30       	cpi	r24, 0x01	; 1
     e4e:	91 05       	cpc	r25, r1
     e50:	e1 f0       	breq	.+56     	; 0xe8a <DIO_enumGetPortDirection+0x72>
     e52:	2d 81       	ldd	r18, Y+5	; 0x05
     e54:	3e 81       	ldd	r19, Y+6	; 0x06
     e56:	22 30       	cpi	r18, 0x02	; 2
     e58:	31 05       	cpc	r19, r1
     e5a:	2c f4       	brge	.+10     	; 0xe66 <DIO_enumGetPortDirection+0x4e>
     e5c:	8d 81       	ldd	r24, Y+5	; 0x05
     e5e:	9e 81       	ldd	r25, Y+6	; 0x06
     e60:	00 97       	sbiw	r24, 0x00	; 0
     e62:	61 f0       	breq	.+24     	; 0xe7c <DIO_enumGetPortDirection+0x64>
     e64:	26 c0       	rjmp	.+76     	; 0xeb2 <DIO_enumGetPortDirection+0x9a>
     e66:	2d 81       	ldd	r18, Y+5	; 0x05
     e68:	3e 81       	ldd	r19, Y+6	; 0x06
     e6a:	22 30       	cpi	r18, 0x02	; 2
     e6c:	31 05       	cpc	r19, r1
     e6e:	a1 f0       	breq	.+40     	; 0xe98 <DIO_enumGetPortDirection+0x80>
     e70:	8d 81       	ldd	r24, Y+5	; 0x05
     e72:	9e 81       	ldd	r25, Y+6	; 0x06
     e74:	83 30       	cpi	r24, 0x03	; 3
     e76:	91 05       	cpc	r25, r1
     e78:	b1 f0       	breq	.+44     	; 0xea6 <DIO_enumGetPortDirection+0x8e>
     e7a:	1b c0       	rjmp	.+54     	; 0xeb2 <DIO_enumGetPortDirection+0x9a>
			{
				case DIO_PORTA:
					*Copy_pu8Direction=DDRA;
     e7c:	ea e3       	ldi	r30, 0x3A	; 58
     e7e:	f0 e0       	ldi	r31, 0x00	; 0
     e80:	80 81       	ld	r24, Z
     e82:	eb 81       	ldd	r30, Y+3	; 0x03
     e84:	fc 81       	ldd	r31, Y+4	; 0x04
     e86:	80 83       	st	Z, r24
     e88:	14 c0       	rjmp	.+40     	; 0xeb2 <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTB:
					*Copy_pu8Direction=DDRB;
     e8a:	e7 e3       	ldi	r30, 0x37	; 55
     e8c:	f0 e0       	ldi	r31, 0x00	; 0
     e8e:	80 81       	ld	r24, Z
     e90:	eb 81       	ldd	r30, Y+3	; 0x03
     e92:	fc 81       	ldd	r31, Y+4	; 0x04
     e94:	80 83       	st	Z, r24
     e96:	0d c0       	rjmp	.+26     	; 0xeb2 <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTC:
					*Copy_pu8Direction=DDRC;
     e98:	e4 e3       	ldi	r30, 0x34	; 52
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	80 81       	ld	r24, Z
     e9e:	eb 81       	ldd	r30, Y+3	; 0x03
     ea0:	fc 81       	ldd	r31, Y+4	; 0x04
     ea2:	80 83       	st	Z, r24
     ea4:	06 c0       	rjmp	.+12     	; 0xeb2 <DIO_enumGetPortDirection+0x9a>
					break;
				case DIO_PORTD:
					*Copy_pu8Direction=DDRD;
     ea6:	e1 e3       	ldi	r30, 0x31	; 49
     ea8:	f0 e0       	ldi	r31, 0x00	; 0
     eaa:	80 81       	ld	r24, Z
     eac:	eb 81       	ldd	r30, Y+3	; 0x03
     eae:	fc 81       	ldd	r31, Y+4	; 0x04
     eb0:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
     eb2:	81 e0       	ldi	r24, 0x01	; 1
     eb4:	89 83       	std	Y+1, r24	; 0x01
     eb6:	05 c0       	rjmp	.+10     	; 0xec2 <DIO_enumGetPortDirection+0xaa>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
     eb8:	82 e0       	ldi	r24, 0x02	; 2
     eba:	89 83       	std	Y+1, r24	; 0x01
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <DIO_enumGetPortDirection+0xaa>
		}

	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     ebe:	83 e0       	ldi	r24, 0x03	; 3
     ec0:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     ec2:	89 81       	ldd	r24, Y+1	; 0x01
}
     ec4:	26 96       	adiw	r28, 0x06	; 6
     ec6:	0f b6       	in	r0, 0x3f	; 63
     ec8:	f8 94       	cli
     eca:	de bf       	out	0x3e, r29	; 62
     ecc:	0f be       	out	0x3f, r0	; 63
     ece:	cd bf       	out	0x3d, r28	; 61
     ed0:	cf 91       	pop	r28
     ed2:	df 91       	pop	r29
     ed4:	08 95       	ret

00000ed6 <DIO_enumGetPortValue>:
ES_T DIO_enumGetPortValue (u8 Copy_u8PortID,u8 *Copy_pu8Value)
{
     ed6:	df 93       	push	r29
     ed8:	cf 93       	push	r28
     eda:	00 d0       	rcall	.+0      	; 0xedc <DIO_enumGetPortValue+0x6>
     edc:	00 d0       	rcall	.+0      	; 0xede <DIO_enumGetPortValue+0x8>
     ede:	00 d0       	rcall	.+0      	; 0xee0 <DIO_enumGetPortValue+0xa>
     ee0:	cd b7       	in	r28, 0x3d	; 61
     ee2:	de b7       	in	r29, 0x3e	; 62
     ee4:	8a 83       	std	Y+2, r24	; 0x02
     ee6:	7c 83       	std	Y+4, r23	; 0x04
     ee8:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
     eea:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD)
     eec:	8a 81       	ldd	r24, Y+2	; 0x02
     eee:	84 30       	cpi	r24, 0x04	; 4
     ef0:	08 f0       	brcs	.+2      	; 0xef4 <DIO_enumGetPortValue+0x1e>
     ef2:	44 c0       	rjmp	.+136    	; 0xf7c <DIO_enumGetPortValue+0xa6>
	{
		if (Copy_pu8Value!=NULL)
     ef4:	8b 81       	ldd	r24, Y+3	; 0x03
     ef6:	9c 81       	ldd	r25, Y+4	; 0x04
     ef8:	00 97       	sbiw	r24, 0x00	; 0
     efa:	e9 f1       	breq	.+122    	; 0xf76 <DIO_enumGetPortValue+0xa0>
		{
			switch(Copy_u8PortID)
     efc:	8a 81       	ldd	r24, Y+2	; 0x02
     efe:	28 2f       	mov	r18, r24
     f00:	30 e0       	ldi	r19, 0x00	; 0
     f02:	3e 83       	std	Y+6, r19	; 0x06
     f04:	2d 83       	std	Y+5, r18	; 0x05
     f06:	8d 81       	ldd	r24, Y+5	; 0x05
     f08:	9e 81       	ldd	r25, Y+6	; 0x06
     f0a:	81 30       	cpi	r24, 0x01	; 1
     f0c:	91 05       	cpc	r25, r1
     f0e:	e1 f0       	breq	.+56     	; 0xf48 <DIO_enumGetPortValue+0x72>
     f10:	2d 81       	ldd	r18, Y+5	; 0x05
     f12:	3e 81       	ldd	r19, Y+6	; 0x06
     f14:	22 30       	cpi	r18, 0x02	; 2
     f16:	31 05       	cpc	r19, r1
     f18:	2c f4       	brge	.+10     	; 0xf24 <DIO_enumGetPortValue+0x4e>
     f1a:	8d 81       	ldd	r24, Y+5	; 0x05
     f1c:	9e 81       	ldd	r25, Y+6	; 0x06
     f1e:	00 97       	sbiw	r24, 0x00	; 0
     f20:	61 f0       	breq	.+24     	; 0xf3a <DIO_enumGetPortValue+0x64>
     f22:	26 c0       	rjmp	.+76     	; 0xf70 <DIO_enumGetPortValue+0x9a>
     f24:	2d 81       	ldd	r18, Y+5	; 0x05
     f26:	3e 81       	ldd	r19, Y+6	; 0x06
     f28:	22 30       	cpi	r18, 0x02	; 2
     f2a:	31 05       	cpc	r19, r1
     f2c:	a1 f0       	breq	.+40     	; 0xf56 <DIO_enumGetPortValue+0x80>
     f2e:	8d 81       	ldd	r24, Y+5	; 0x05
     f30:	9e 81       	ldd	r25, Y+6	; 0x06
     f32:	83 30       	cpi	r24, 0x03	; 3
     f34:	91 05       	cpc	r25, r1
     f36:	b1 f0       	breq	.+44     	; 0xf64 <DIO_enumGetPortValue+0x8e>
     f38:	1b c0       	rjmp	.+54     	; 0xf70 <DIO_enumGetPortValue+0x9a>
			{
				case DIO_PORTA:
					*Copy_pu8Value=PINA;
     f3a:	e9 e3       	ldi	r30, 0x39	; 57
     f3c:	f0 e0       	ldi	r31, 0x00	; 0
     f3e:	80 81       	ld	r24, Z
     f40:	eb 81       	ldd	r30, Y+3	; 0x03
     f42:	fc 81       	ldd	r31, Y+4	; 0x04
     f44:	80 83       	st	Z, r24
     f46:	14 c0       	rjmp	.+40     	; 0xf70 <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTB:
					*Copy_pu8Value=PINB;
     f48:	e6 e3       	ldi	r30, 0x36	; 54
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	80 81       	ld	r24, Z
     f4e:	eb 81       	ldd	r30, Y+3	; 0x03
     f50:	fc 81       	ldd	r31, Y+4	; 0x04
     f52:	80 83       	st	Z, r24
     f54:	0d c0       	rjmp	.+26     	; 0xf70 <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTC:
					*Copy_pu8Value=PINC;
     f56:	e3 e3       	ldi	r30, 0x33	; 51
     f58:	f0 e0       	ldi	r31, 0x00	; 0
     f5a:	80 81       	ld	r24, Z
     f5c:	eb 81       	ldd	r30, Y+3	; 0x03
     f5e:	fc 81       	ldd	r31, Y+4	; 0x04
     f60:	80 83       	st	Z, r24
     f62:	06 c0       	rjmp	.+12     	; 0xf70 <DIO_enumGetPortValue+0x9a>
					break;
				case DIO_PORTD:
					*Copy_pu8Value=PIND;
     f64:	e0 e3       	ldi	r30, 0x30	; 48
     f66:	f0 e0       	ldi	r31, 0x00	; 0
     f68:	80 81       	ld	r24, Z
     f6a:	eb 81       	ldd	r30, Y+3	; 0x03
     f6c:	fc 81       	ldd	r31, Y+4	; 0x04
     f6e:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
     f70:	81 e0       	ldi	r24, 0x01	; 1
     f72:	89 83       	std	Y+1, r24	; 0x01
     f74:	05 c0       	rjmp	.+10     	; 0xf80 <DIO_enumGetPortValue+0xaa>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
     f76:	82 e0       	ldi	r24, 0x02	; 2
     f78:	89 83       	std	Y+1, r24	; 0x01
     f7a:	02 c0       	rjmp	.+4      	; 0xf80 <DIO_enumGetPortValue+0xaa>
		}

	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
     f7c:	83 e0       	ldi	r24, 0x03	; 3
     f7e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
     f80:	89 81       	ldd	r24, Y+1	; 0x01
}
     f82:	26 96       	adiw	r28, 0x06	; 6
     f84:	0f b6       	in	r0, 0x3f	; 63
     f86:	f8 94       	cli
     f88:	de bf       	out	0x3e, r29	; 62
     f8a:	0f be       	out	0x3f, r0	; 63
     f8c:	cd bf       	out	0x3d, r28	; 61
     f8e:	cf 91       	pop	r28
     f90:	df 91       	pop	r29
     f92:	08 95       	ret

00000f94 <DIO_enumSetPinDirection>:

ES_T DIO_enumSetPinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8Direction)
{
     f94:	df 93       	push	r29
     f96:	cf 93       	push	r28
     f98:	00 d0       	rcall	.+0      	; 0xf9a <DIO_enumSetPinDirection+0x6>
     f9a:	00 d0       	rcall	.+0      	; 0xf9c <DIO_enumSetPinDirection+0x8>
     f9c:	00 d0       	rcall	.+0      	; 0xf9e <DIO_enumSetPinDirection+0xa>
     f9e:	cd b7       	in	r28, 0x3d	; 61
     fa0:	de b7       	in	r29, 0x3e	; 62
     fa2:	8a 83       	std	Y+2, r24	; 0x02
     fa4:	6b 83       	std	Y+3, r22	; 0x03
     fa6:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
     fa8:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&& Copy_u8PinID <= DIO_PIN7 && Copy_u8Direction <= OUTPUT)
     faa:	8a 81       	ldd	r24, Y+2	; 0x02
     fac:	84 30       	cpi	r24, 0x04	; 4
     fae:	08 f0       	brcs	.+2      	; 0xfb2 <DIO_enumSetPinDirection+0x1e>
     fb0:	d1 c0       	rjmp	.+418    	; 0x1154 <DIO_enumSetPinDirection+0x1c0>
     fb2:	8b 81       	ldd	r24, Y+3	; 0x03
     fb4:	88 30       	cpi	r24, 0x08	; 8
     fb6:	08 f0       	brcs	.+2      	; 0xfba <DIO_enumSetPinDirection+0x26>
     fb8:	cd c0       	rjmp	.+410    	; 0x1154 <DIO_enumSetPinDirection+0x1c0>
     fba:	8c 81       	ldd	r24, Y+4	; 0x04
     fbc:	82 30       	cpi	r24, 0x02	; 2
     fbe:	08 f0       	brcs	.+2      	; 0xfc2 <DIO_enumSetPinDirection+0x2e>
     fc0:	c9 c0       	rjmp	.+402    	; 0x1154 <DIO_enumSetPinDirection+0x1c0>
	{
		switch(Copy_u8PortID)
     fc2:	8a 81       	ldd	r24, Y+2	; 0x02
     fc4:	28 2f       	mov	r18, r24
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	3e 83       	std	Y+6, r19	; 0x06
     fca:	2d 83       	std	Y+5, r18	; 0x05
     fcc:	6d 81       	ldd	r22, Y+5	; 0x05
     fce:	7e 81       	ldd	r23, Y+6	; 0x06
     fd0:	61 30       	cpi	r22, 0x01	; 1
     fd2:	71 05       	cpc	r23, r1
     fd4:	09 f4       	brne	.+2      	; 0xfd8 <DIO_enumSetPinDirection+0x44>
     fd6:	41 c0       	rjmp	.+130    	; 0x105a <DIO_enumSetPinDirection+0xc6>
     fd8:	8d 81       	ldd	r24, Y+5	; 0x05
     fda:	9e 81       	ldd	r25, Y+6	; 0x06
     fdc:	82 30       	cpi	r24, 0x02	; 2
     fde:	91 05       	cpc	r25, r1
     fe0:	34 f4       	brge	.+12     	; 0xfee <DIO_enumSetPinDirection+0x5a>
     fe2:	2d 81       	ldd	r18, Y+5	; 0x05
     fe4:	3e 81       	ldd	r19, Y+6	; 0x06
     fe6:	21 15       	cp	r18, r1
     fe8:	31 05       	cpc	r19, r1
     fea:	71 f0       	breq	.+28     	; 0x1008 <DIO_enumSetPinDirection+0x74>
     fec:	b0 c0       	rjmp	.+352    	; 0x114e <DIO_enumSetPinDirection+0x1ba>
     fee:	6d 81       	ldd	r22, Y+5	; 0x05
     ff0:	7e 81       	ldd	r23, Y+6	; 0x06
     ff2:	62 30       	cpi	r22, 0x02	; 2
     ff4:	71 05       	cpc	r23, r1
     ff6:	09 f4       	brne	.+2      	; 0xffa <DIO_enumSetPinDirection+0x66>
     ff8:	59 c0       	rjmp	.+178    	; 0x10ac <DIO_enumSetPinDirection+0x118>
     ffa:	8d 81       	ldd	r24, Y+5	; 0x05
     ffc:	9e 81       	ldd	r25, Y+6	; 0x06
     ffe:	83 30       	cpi	r24, 0x03	; 3
    1000:	91 05       	cpc	r25, r1
    1002:	09 f4       	brne	.+2      	; 0x1006 <DIO_enumSetPinDirection+0x72>
    1004:	7c c0       	rjmp	.+248    	; 0x10fe <DIO_enumSetPinDirection+0x16a>
    1006:	a3 c0       	rjmp	.+326    	; 0x114e <DIO_enumSetPinDirection+0x1ba>
		{
			case DIO_PORTA:
				CLEAR_BIT(DDRA,Copy_u8PinID);
    1008:	aa e3       	ldi	r26, 0x3A	; 58
    100a:	b0 e0       	ldi	r27, 0x00	; 0
    100c:	ea e3       	ldi	r30, 0x3A	; 58
    100e:	f0 e0       	ldi	r31, 0x00	; 0
    1010:	80 81       	ld	r24, Z
    1012:	48 2f       	mov	r20, r24
    1014:	8b 81       	ldd	r24, Y+3	; 0x03
    1016:	28 2f       	mov	r18, r24
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	81 e0       	ldi	r24, 0x01	; 1
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <DIO_enumSetPinDirection+0x90>
    1020:	88 0f       	add	r24, r24
    1022:	99 1f       	adc	r25, r25
    1024:	2a 95       	dec	r18
    1026:	e2 f7       	brpl	.-8      	; 0x1020 <DIO_enumSetPinDirection+0x8c>
    1028:	80 95       	com	r24
    102a:	84 23       	and	r24, r20
    102c:	8c 93       	st	X, r24
				DDRA |= (Copy_u8Direction << Copy_u8PinID);
    102e:	aa e3       	ldi	r26, 0x3A	; 58
    1030:	b0 e0       	ldi	r27, 0x00	; 0
    1032:	ea e3       	ldi	r30, 0x3A	; 58
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	80 81       	ld	r24, Z
    1038:	48 2f       	mov	r20, r24
    103a:	8c 81       	ldd	r24, Y+4	; 0x04
    103c:	28 2f       	mov	r18, r24
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	8b 81       	ldd	r24, Y+3	; 0x03
    1042:	88 2f       	mov	r24, r24
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	b9 01       	movw	r22, r18
    1048:	02 c0       	rjmp	.+4      	; 0x104e <DIO_enumSetPinDirection+0xba>
    104a:	66 0f       	add	r22, r22
    104c:	77 1f       	adc	r23, r23
    104e:	8a 95       	dec	r24
    1050:	e2 f7       	brpl	.-8      	; 0x104a <DIO_enumSetPinDirection+0xb6>
    1052:	cb 01       	movw	r24, r22
    1054:	84 2b       	or	r24, r20
    1056:	8c 93       	st	X, r24
    1058:	7a c0       	rjmp	.+244    	; 0x114e <DIO_enumSetPinDirection+0x1ba>
				break;
			case DIO_PORTB:
				CLEAR_BIT(DDRB,Copy_u8PinID);
    105a:	a7 e3       	ldi	r26, 0x37	; 55
    105c:	b0 e0       	ldi	r27, 0x00	; 0
    105e:	e7 e3       	ldi	r30, 0x37	; 55
    1060:	f0 e0       	ldi	r31, 0x00	; 0
    1062:	80 81       	ld	r24, Z
    1064:	48 2f       	mov	r20, r24
    1066:	8b 81       	ldd	r24, Y+3	; 0x03
    1068:	28 2f       	mov	r18, r24
    106a:	30 e0       	ldi	r19, 0x00	; 0
    106c:	81 e0       	ldi	r24, 0x01	; 1
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	02 c0       	rjmp	.+4      	; 0x1076 <DIO_enumSetPinDirection+0xe2>
    1072:	88 0f       	add	r24, r24
    1074:	99 1f       	adc	r25, r25
    1076:	2a 95       	dec	r18
    1078:	e2 f7       	brpl	.-8      	; 0x1072 <DIO_enumSetPinDirection+0xde>
    107a:	80 95       	com	r24
    107c:	84 23       	and	r24, r20
    107e:	8c 93       	st	X, r24
				DDRB |= (Copy_u8Direction << Copy_u8PinID);
    1080:	a7 e3       	ldi	r26, 0x37	; 55
    1082:	b0 e0       	ldi	r27, 0x00	; 0
    1084:	e7 e3       	ldi	r30, 0x37	; 55
    1086:	f0 e0       	ldi	r31, 0x00	; 0
    1088:	80 81       	ld	r24, Z
    108a:	48 2f       	mov	r20, r24
    108c:	8c 81       	ldd	r24, Y+4	; 0x04
    108e:	28 2f       	mov	r18, r24
    1090:	30 e0       	ldi	r19, 0x00	; 0
    1092:	8b 81       	ldd	r24, Y+3	; 0x03
    1094:	88 2f       	mov	r24, r24
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	b9 01       	movw	r22, r18
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <DIO_enumSetPinDirection+0x10c>
    109c:	66 0f       	add	r22, r22
    109e:	77 1f       	adc	r23, r23
    10a0:	8a 95       	dec	r24
    10a2:	e2 f7       	brpl	.-8      	; 0x109c <DIO_enumSetPinDirection+0x108>
    10a4:	cb 01       	movw	r24, r22
    10a6:	84 2b       	or	r24, r20
    10a8:	8c 93       	st	X, r24
    10aa:	51 c0       	rjmp	.+162    	; 0x114e <DIO_enumSetPinDirection+0x1ba>
				break;
			case DIO_PORTC:
				CLEAR_BIT(DDRC,Copy_u8PinID);
    10ac:	a4 e3       	ldi	r26, 0x34	; 52
    10ae:	b0 e0       	ldi	r27, 0x00	; 0
    10b0:	e4 e3       	ldi	r30, 0x34	; 52
    10b2:	f0 e0       	ldi	r31, 0x00	; 0
    10b4:	80 81       	ld	r24, Z
    10b6:	48 2f       	mov	r20, r24
    10b8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ba:	28 2f       	mov	r18, r24
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	81 e0       	ldi	r24, 0x01	; 1
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	02 c0       	rjmp	.+4      	; 0x10c8 <DIO_enumSetPinDirection+0x134>
    10c4:	88 0f       	add	r24, r24
    10c6:	99 1f       	adc	r25, r25
    10c8:	2a 95       	dec	r18
    10ca:	e2 f7       	brpl	.-8      	; 0x10c4 <DIO_enumSetPinDirection+0x130>
    10cc:	80 95       	com	r24
    10ce:	84 23       	and	r24, r20
    10d0:	8c 93       	st	X, r24
				DDRC |= (Copy_u8Direction << Copy_u8PinID);
    10d2:	a4 e3       	ldi	r26, 0x34	; 52
    10d4:	b0 e0       	ldi	r27, 0x00	; 0
    10d6:	e4 e3       	ldi	r30, 0x34	; 52
    10d8:	f0 e0       	ldi	r31, 0x00	; 0
    10da:	80 81       	ld	r24, Z
    10dc:	48 2f       	mov	r20, r24
    10de:	8c 81       	ldd	r24, Y+4	; 0x04
    10e0:	28 2f       	mov	r18, r24
    10e2:	30 e0       	ldi	r19, 0x00	; 0
    10e4:	8b 81       	ldd	r24, Y+3	; 0x03
    10e6:	88 2f       	mov	r24, r24
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	b9 01       	movw	r22, r18
    10ec:	02 c0       	rjmp	.+4      	; 0x10f2 <DIO_enumSetPinDirection+0x15e>
    10ee:	66 0f       	add	r22, r22
    10f0:	77 1f       	adc	r23, r23
    10f2:	8a 95       	dec	r24
    10f4:	e2 f7       	brpl	.-8      	; 0x10ee <DIO_enumSetPinDirection+0x15a>
    10f6:	cb 01       	movw	r24, r22
    10f8:	84 2b       	or	r24, r20
    10fa:	8c 93       	st	X, r24
    10fc:	28 c0       	rjmp	.+80     	; 0x114e <DIO_enumSetPinDirection+0x1ba>
				break;
			case DIO_PORTD:
				CLEAR_BIT(DDRD,Copy_u8PinID);
    10fe:	a1 e3       	ldi	r26, 0x31	; 49
    1100:	b0 e0       	ldi	r27, 0x00	; 0
    1102:	e1 e3       	ldi	r30, 0x31	; 49
    1104:	f0 e0       	ldi	r31, 0x00	; 0
    1106:	80 81       	ld	r24, Z
    1108:	48 2f       	mov	r20, r24
    110a:	8b 81       	ldd	r24, Y+3	; 0x03
    110c:	28 2f       	mov	r18, r24
    110e:	30 e0       	ldi	r19, 0x00	; 0
    1110:	81 e0       	ldi	r24, 0x01	; 1
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	02 c0       	rjmp	.+4      	; 0x111a <DIO_enumSetPinDirection+0x186>
    1116:	88 0f       	add	r24, r24
    1118:	99 1f       	adc	r25, r25
    111a:	2a 95       	dec	r18
    111c:	e2 f7       	brpl	.-8      	; 0x1116 <DIO_enumSetPinDirection+0x182>
    111e:	80 95       	com	r24
    1120:	84 23       	and	r24, r20
    1122:	8c 93       	st	X, r24
				DDRD |= (Copy_u8Direction << Copy_u8PinID);
    1124:	a1 e3       	ldi	r26, 0x31	; 49
    1126:	b0 e0       	ldi	r27, 0x00	; 0
    1128:	e1 e3       	ldi	r30, 0x31	; 49
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	80 81       	ld	r24, Z
    112e:	48 2f       	mov	r20, r24
    1130:	8c 81       	ldd	r24, Y+4	; 0x04
    1132:	28 2f       	mov	r18, r24
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	8b 81       	ldd	r24, Y+3	; 0x03
    1138:	88 2f       	mov	r24, r24
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	b9 01       	movw	r22, r18
    113e:	02 c0       	rjmp	.+4      	; 0x1144 <DIO_enumSetPinDirection+0x1b0>
    1140:	66 0f       	add	r22, r22
    1142:	77 1f       	adc	r23, r23
    1144:	8a 95       	dec	r24
    1146:	e2 f7       	brpl	.-8      	; 0x1140 <DIO_enumSetPinDirection+0x1ac>
    1148:	cb 01       	movw	r24, r22
    114a:	84 2b       	or	r24, r20
    114c:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    114e:	81 e0       	ldi	r24, 0x01	; 1
    1150:	89 83       	std	Y+1, r24	; 0x01
    1152:	02 c0       	rjmp	.+4      	; 0x1158 <DIO_enumSetPinDirection+0x1c4>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    1154:	83 e0       	ldi	r24, 0x03	; 3
    1156:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    1158:	89 81       	ldd	r24, Y+1	; 0x01
}
    115a:	26 96       	adiw	r28, 0x06	; 6
    115c:	0f b6       	in	r0, 0x3f	; 63
    115e:	f8 94       	cli
    1160:	de bf       	out	0x3e, r29	; 62
    1162:	0f be       	out	0x3f, r0	; 63
    1164:	cd bf       	out	0x3d, r28	; 61
    1166:	cf 91       	pop	r28
    1168:	df 91       	pop	r29
    116a:	08 95       	ret

0000116c <DIO_enumSetPinValue>:
ES_T DIO_enumSetPinValue (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 Copy_u8Value)
{
    116c:	df 93       	push	r29
    116e:	cf 93       	push	r28
    1170:	00 d0       	rcall	.+0      	; 0x1172 <DIO_enumSetPinValue+0x6>
    1172:	00 d0       	rcall	.+0      	; 0x1174 <DIO_enumSetPinValue+0x8>
    1174:	00 d0       	rcall	.+0      	; 0x1176 <DIO_enumSetPinValue+0xa>
    1176:	cd b7       	in	r28, 0x3d	; 61
    1178:	de b7       	in	r29, 0x3e	; 62
    117a:	8a 83       	std	Y+2, r24	; 0x02
    117c:	6b 83       	std	Y+3, r22	; 0x03
    117e:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    1180:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7&&Copy_u8Value<=OUTPUT)
    1182:	8a 81       	ldd	r24, Y+2	; 0x02
    1184:	84 30       	cpi	r24, 0x04	; 4
    1186:	08 f0       	brcs	.+2      	; 0x118a <DIO_enumSetPinValue+0x1e>
    1188:	d1 c0       	rjmp	.+418    	; 0x132c <DIO_enumSetPinValue+0x1c0>
    118a:	8b 81       	ldd	r24, Y+3	; 0x03
    118c:	88 30       	cpi	r24, 0x08	; 8
    118e:	08 f0       	brcs	.+2      	; 0x1192 <DIO_enumSetPinValue+0x26>
    1190:	cd c0       	rjmp	.+410    	; 0x132c <DIO_enumSetPinValue+0x1c0>
    1192:	8c 81       	ldd	r24, Y+4	; 0x04
    1194:	82 30       	cpi	r24, 0x02	; 2
    1196:	08 f0       	brcs	.+2      	; 0x119a <DIO_enumSetPinValue+0x2e>
    1198:	c9 c0       	rjmp	.+402    	; 0x132c <DIO_enumSetPinValue+0x1c0>
	{
		switch(Copy_u8PortID)
    119a:	8a 81       	ldd	r24, Y+2	; 0x02
    119c:	28 2f       	mov	r18, r24
    119e:	30 e0       	ldi	r19, 0x00	; 0
    11a0:	3e 83       	std	Y+6, r19	; 0x06
    11a2:	2d 83       	std	Y+5, r18	; 0x05
    11a4:	6d 81       	ldd	r22, Y+5	; 0x05
    11a6:	7e 81       	ldd	r23, Y+6	; 0x06
    11a8:	61 30       	cpi	r22, 0x01	; 1
    11aa:	71 05       	cpc	r23, r1
    11ac:	09 f4       	brne	.+2      	; 0x11b0 <DIO_enumSetPinValue+0x44>
    11ae:	41 c0       	rjmp	.+130    	; 0x1232 <DIO_enumSetPinValue+0xc6>
    11b0:	8d 81       	ldd	r24, Y+5	; 0x05
    11b2:	9e 81       	ldd	r25, Y+6	; 0x06
    11b4:	82 30       	cpi	r24, 0x02	; 2
    11b6:	91 05       	cpc	r25, r1
    11b8:	34 f4       	brge	.+12     	; 0x11c6 <DIO_enumSetPinValue+0x5a>
    11ba:	2d 81       	ldd	r18, Y+5	; 0x05
    11bc:	3e 81       	ldd	r19, Y+6	; 0x06
    11be:	21 15       	cp	r18, r1
    11c0:	31 05       	cpc	r19, r1
    11c2:	71 f0       	breq	.+28     	; 0x11e0 <DIO_enumSetPinValue+0x74>
    11c4:	b0 c0       	rjmp	.+352    	; 0x1326 <DIO_enumSetPinValue+0x1ba>
    11c6:	6d 81       	ldd	r22, Y+5	; 0x05
    11c8:	7e 81       	ldd	r23, Y+6	; 0x06
    11ca:	62 30       	cpi	r22, 0x02	; 2
    11cc:	71 05       	cpc	r23, r1
    11ce:	09 f4       	brne	.+2      	; 0x11d2 <DIO_enumSetPinValue+0x66>
    11d0:	59 c0       	rjmp	.+178    	; 0x1284 <DIO_enumSetPinValue+0x118>
    11d2:	8d 81       	ldd	r24, Y+5	; 0x05
    11d4:	9e 81       	ldd	r25, Y+6	; 0x06
    11d6:	83 30       	cpi	r24, 0x03	; 3
    11d8:	91 05       	cpc	r25, r1
    11da:	09 f4       	brne	.+2      	; 0x11de <DIO_enumSetPinValue+0x72>
    11dc:	7c c0       	rjmp	.+248    	; 0x12d6 <DIO_enumSetPinValue+0x16a>
    11de:	a3 c0       	rjmp	.+326    	; 0x1326 <DIO_enumSetPinValue+0x1ba>
		{
			case DIO_PORTA:
				CLEAR_BIT(PORTA,Copy_u8PinID);
    11e0:	ab e3       	ldi	r26, 0x3B	; 59
    11e2:	b0 e0       	ldi	r27, 0x00	; 0
    11e4:	eb e3       	ldi	r30, 0x3B	; 59
    11e6:	f0 e0       	ldi	r31, 0x00	; 0
    11e8:	80 81       	ld	r24, Z
    11ea:	48 2f       	mov	r20, r24
    11ec:	8b 81       	ldd	r24, Y+3	; 0x03
    11ee:	28 2f       	mov	r18, r24
    11f0:	30 e0       	ldi	r19, 0x00	; 0
    11f2:	81 e0       	ldi	r24, 0x01	; 1
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	02 c0       	rjmp	.+4      	; 0x11fc <DIO_enumSetPinValue+0x90>
    11f8:	88 0f       	add	r24, r24
    11fa:	99 1f       	adc	r25, r25
    11fc:	2a 95       	dec	r18
    11fe:	e2 f7       	brpl	.-8      	; 0x11f8 <DIO_enumSetPinValue+0x8c>
    1200:	80 95       	com	r24
    1202:	84 23       	and	r24, r20
    1204:	8c 93       	st	X, r24
				PORTA |= (Copy_u8Value << Copy_u8PinID);
    1206:	ab e3       	ldi	r26, 0x3B	; 59
    1208:	b0 e0       	ldi	r27, 0x00	; 0
    120a:	eb e3       	ldi	r30, 0x3B	; 59
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	80 81       	ld	r24, Z
    1210:	48 2f       	mov	r20, r24
    1212:	8c 81       	ldd	r24, Y+4	; 0x04
    1214:	28 2f       	mov	r18, r24
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	8b 81       	ldd	r24, Y+3	; 0x03
    121a:	88 2f       	mov	r24, r24
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	b9 01       	movw	r22, r18
    1220:	02 c0       	rjmp	.+4      	; 0x1226 <DIO_enumSetPinValue+0xba>
    1222:	66 0f       	add	r22, r22
    1224:	77 1f       	adc	r23, r23
    1226:	8a 95       	dec	r24
    1228:	e2 f7       	brpl	.-8      	; 0x1222 <DIO_enumSetPinValue+0xb6>
    122a:	cb 01       	movw	r24, r22
    122c:	84 2b       	or	r24, r20
    122e:	8c 93       	st	X, r24
    1230:	7a c0       	rjmp	.+244    	; 0x1326 <DIO_enumSetPinValue+0x1ba>
				break;
			case DIO_PORTB:
				CLEAR_BIT(PORTB,Copy_u8PinID);
    1232:	a8 e3       	ldi	r26, 0x38	; 56
    1234:	b0 e0       	ldi	r27, 0x00	; 0
    1236:	e8 e3       	ldi	r30, 0x38	; 56
    1238:	f0 e0       	ldi	r31, 0x00	; 0
    123a:	80 81       	ld	r24, Z
    123c:	48 2f       	mov	r20, r24
    123e:	8b 81       	ldd	r24, Y+3	; 0x03
    1240:	28 2f       	mov	r18, r24
    1242:	30 e0       	ldi	r19, 0x00	; 0
    1244:	81 e0       	ldi	r24, 0x01	; 1
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	02 c0       	rjmp	.+4      	; 0x124e <DIO_enumSetPinValue+0xe2>
    124a:	88 0f       	add	r24, r24
    124c:	99 1f       	adc	r25, r25
    124e:	2a 95       	dec	r18
    1250:	e2 f7       	brpl	.-8      	; 0x124a <DIO_enumSetPinValue+0xde>
    1252:	80 95       	com	r24
    1254:	84 23       	and	r24, r20
    1256:	8c 93       	st	X, r24
				PORTB |= (Copy_u8Value << Copy_u8PinID);
    1258:	a8 e3       	ldi	r26, 0x38	; 56
    125a:	b0 e0       	ldi	r27, 0x00	; 0
    125c:	e8 e3       	ldi	r30, 0x38	; 56
    125e:	f0 e0       	ldi	r31, 0x00	; 0
    1260:	80 81       	ld	r24, Z
    1262:	48 2f       	mov	r20, r24
    1264:	8c 81       	ldd	r24, Y+4	; 0x04
    1266:	28 2f       	mov	r18, r24
    1268:	30 e0       	ldi	r19, 0x00	; 0
    126a:	8b 81       	ldd	r24, Y+3	; 0x03
    126c:	88 2f       	mov	r24, r24
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	b9 01       	movw	r22, r18
    1272:	02 c0       	rjmp	.+4      	; 0x1278 <DIO_enumSetPinValue+0x10c>
    1274:	66 0f       	add	r22, r22
    1276:	77 1f       	adc	r23, r23
    1278:	8a 95       	dec	r24
    127a:	e2 f7       	brpl	.-8      	; 0x1274 <DIO_enumSetPinValue+0x108>
    127c:	cb 01       	movw	r24, r22
    127e:	84 2b       	or	r24, r20
    1280:	8c 93       	st	X, r24
    1282:	51 c0       	rjmp	.+162    	; 0x1326 <DIO_enumSetPinValue+0x1ba>
				break;
			case DIO_PORTC:
				CLEAR_BIT(PORTC,Copy_u8PinID);
    1284:	a5 e3       	ldi	r26, 0x35	; 53
    1286:	b0 e0       	ldi	r27, 0x00	; 0
    1288:	e5 e3       	ldi	r30, 0x35	; 53
    128a:	f0 e0       	ldi	r31, 0x00	; 0
    128c:	80 81       	ld	r24, Z
    128e:	48 2f       	mov	r20, r24
    1290:	8b 81       	ldd	r24, Y+3	; 0x03
    1292:	28 2f       	mov	r18, r24
    1294:	30 e0       	ldi	r19, 0x00	; 0
    1296:	81 e0       	ldi	r24, 0x01	; 1
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	02 c0       	rjmp	.+4      	; 0x12a0 <DIO_enumSetPinValue+0x134>
    129c:	88 0f       	add	r24, r24
    129e:	99 1f       	adc	r25, r25
    12a0:	2a 95       	dec	r18
    12a2:	e2 f7       	brpl	.-8      	; 0x129c <DIO_enumSetPinValue+0x130>
    12a4:	80 95       	com	r24
    12a6:	84 23       	and	r24, r20
    12a8:	8c 93       	st	X, r24
				PORTC |= (Copy_u8Value << Copy_u8PinID);
    12aa:	a5 e3       	ldi	r26, 0x35	; 53
    12ac:	b0 e0       	ldi	r27, 0x00	; 0
    12ae:	e5 e3       	ldi	r30, 0x35	; 53
    12b0:	f0 e0       	ldi	r31, 0x00	; 0
    12b2:	80 81       	ld	r24, Z
    12b4:	48 2f       	mov	r20, r24
    12b6:	8c 81       	ldd	r24, Y+4	; 0x04
    12b8:	28 2f       	mov	r18, r24
    12ba:	30 e0       	ldi	r19, 0x00	; 0
    12bc:	8b 81       	ldd	r24, Y+3	; 0x03
    12be:	88 2f       	mov	r24, r24
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	b9 01       	movw	r22, r18
    12c4:	02 c0       	rjmp	.+4      	; 0x12ca <DIO_enumSetPinValue+0x15e>
    12c6:	66 0f       	add	r22, r22
    12c8:	77 1f       	adc	r23, r23
    12ca:	8a 95       	dec	r24
    12cc:	e2 f7       	brpl	.-8      	; 0x12c6 <DIO_enumSetPinValue+0x15a>
    12ce:	cb 01       	movw	r24, r22
    12d0:	84 2b       	or	r24, r20
    12d2:	8c 93       	st	X, r24
    12d4:	28 c0       	rjmp	.+80     	; 0x1326 <DIO_enumSetPinValue+0x1ba>
				break;
			case DIO_PORTD:
				CLEAR_BIT(PORTD,Copy_u8PinID);
    12d6:	a2 e3       	ldi	r26, 0x32	; 50
    12d8:	b0 e0       	ldi	r27, 0x00	; 0
    12da:	e2 e3       	ldi	r30, 0x32	; 50
    12dc:	f0 e0       	ldi	r31, 0x00	; 0
    12de:	80 81       	ld	r24, Z
    12e0:	48 2f       	mov	r20, r24
    12e2:	8b 81       	ldd	r24, Y+3	; 0x03
    12e4:	28 2f       	mov	r18, r24
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	81 e0       	ldi	r24, 0x01	; 1
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	02 c0       	rjmp	.+4      	; 0x12f2 <DIO_enumSetPinValue+0x186>
    12ee:	88 0f       	add	r24, r24
    12f0:	99 1f       	adc	r25, r25
    12f2:	2a 95       	dec	r18
    12f4:	e2 f7       	brpl	.-8      	; 0x12ee <DIO_enumSetPinValue+0x182>
    12f6:	80 95       	com	r24
    12f8:	84 23       	and	r24, r20
    12fa:	8c 93       	st	X, r24
				PORTD |= (Copy_u8Value << Copy_u8PinID);
    12fc:	a2 e3       	ldi	r26, 0x32	; 50
    12fe:	b0 e0       	ldi	r27, 0x00	; 0
    1300:	e2 e3       	ldi	r30, 0x32	; 50
    1302:	f0 e0       	ldi	r31, 0x00	; 0
    1304:	80 81       	ld	r24, Z
    1306:	48 2f       	mov	r20, r24
    1308:	8c 81       	ldd	r24, Y+4	; 0x04
    130a:	28 2f       	mov	r18, r24
    130c:	30 e0       	ldi	r19, 0x00	; 0
    130e:	8b 81       	ldd	r24, Y+3	; 0x03
    1310:	88 2f       	mov	r24, r24
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	b9 01       	movw	r22, r18
    1316:	02 c0       	rjmp	.+4      	; 0x131c <DIO_enumSetPinValue+0x1b0>
    1318:	66 0f       	add	r22, r22
    131a:	77 1f       	adc	r23, r23
    131c:	8a 95       	dec	r24
    131e:	e2 f7       	brpl	.-8      	; 0x1318 <DIO_enumSetPinValue+0x1ac>
    1320:	cb 01       	movw	r24, r22
    1322:	84 2b       	or	r24, r20
    1324:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    1326:	81 e0       	ldi	r24, 0x01	; 1
    1328:	89 83       	std	Y+1, r24	; 0x01
    132a:	02 c0       	rjmp	.+4      	; 0x1330 <DIO_enumSetPinValue+0x1c4>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    132c:	83 e0       	ldi	r24, 0x03	; 3
    132e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    1330:	89 81       	ldd	r24, Y+1	; 0x01
}
    1332:	26 96       	adiw	r28, 0x06	; 6
    1334:	0f b6       	in	r0, 0x3f	; 63
    1336:	f8 94       	cli
    1338:	de bf       	out	0x3e, r29	; 62
    133a:	0f be       	out	0x3f, r0	; 63
    133c:	cd bf       	out	0x3d, r28	; 61
    133e:	cf 91       	pop	r28
    1340:	df 91       	pop	r29
    1342:	08 95       	ret

00001344 <DIO_enumTogglePinDirection>:
ES_T DIO_enumTogglePinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID)
{
    1344:	df 93       	push	r29
    1346:	cf 93       	push	r28
    1348:	00 d0       	rcall	.+0      	; 0x134a <DIO_enumTogglePinDirection+0x6>
    134a:	00 d0       	rcall	.+0      	; 0x134c <DIO_enumTogglePinDirection+0x8>
    134c:	0f 92       	push	r0
    134e:	cd b7       	in	r28, 0x3d	; 61
    1350:	de b7       	in	r29, 0x3e	; 62
    1352:	8a 83       	std	Y+2, r24	; 0x02
    1354:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    1356:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
    1358:	8a 81       	ldd	r24, Y+2	; 0x02
    135a:	84 30       	cpi	r24, 0x04	; 4
    135c:	08 f0       	brcs	.+2      	; 0x1360 <DIO_enumTogglePinDirection+0x1c>
    135e:	75 c0       	rjmp	.+234    	; 0x144a <DIO_enumTogglePinDirection+0x106>
    1360:	8b 81       	ldd	r24, Y+3	; 0x03
    1362:	88 30       	cpi	r24, 0x08	; 8
    1364:	08 f0       	brcs	.+2      	; 0x1368 <DIO_enumTogglePinDirection+0x24>
    1366:	71 c0       	rjmp	.+226    	; 0x144a <DIO_enumTogglePinDirection+0x106>
	{
		switch(Copy_u8PortID)
    1368:	8a 81       	ldd	r24, Y+2	; 0x02
    136a:	28 2f       	mov	r18, r24
    136c:	30 e0       	ldi	r19, 0x00	; 0
    136e:	3d 83       	std	Y+5, r19	; 0x05
    1370:	2c 83       	std	Y+4, r18	; 0x04
    1372:	8c 81       	ldd	r24, Y+4	; 0x04
    1374:	9d 81       	ldd	r25, Y+5	; 0x05
    1376:	81 30       	cpi	r24, 0x01	; 1
    1378:	91 05       	cpc	r25, r1
    137a:	49 f1       	breq	.+82     	; 0x13ce <DIO_enumTogglePinDirection+0x8a>
    137c:	2c 81       	ldd	r18, Y+4	; 0x04
    137e:	3d 81       	ldd	r19, Y+5	; 0x05
    1380:	22 30       	cpi	r18, 0x02	; 2
    1382:	31 05       	cpc	r19, r1
    1384:	2c f4       	brge	.+10     	; 0x1390 <DIO_enumTogglePinDirection+0x4c>
    1386:	8c 81       	ldd	r24, Y+4	; 0x04
    1388:	9d 81       	ldd	r25, Y+5	; 0x05
    138a:	00 97       	sbiw	r24, 0x00	; 0
    138c:	61 f0       	breq	.+24     	; 0x13a6 <DIO_enumTogglePinDirection+0x62>
    138e:	5a c0       	rjmp	.+180    	; 0x1444 <DIO_enumTogglePinDirection+0x100>
    1390:	2c 81       	ldd	r18, Y+4	; 0x04
    1392:	3d 81       	ldd	r19, Y+5	; 0x05
    1394:	22 30       	cpi	r18, 0x02	; 2
    1396:	31 05       	cpc	r19, r1
    1398:	71 f1       	breq	.+92     	; 0x13f6 <DIO_enumTogglePinDirection+0xb2>
    139a:	8c 81       	ldd	r24, Y+4	; 0x04
    139c:	9d 81       	ldd	r25, Y+5	; 0x05
    139e:	83 30       	cpi	r24, 0x03	; 3
    13a0:	91 05       	cpc	r25, r1
    13a2:	e9 f1       	breq	.+122    	; 0x141e <DIO_enumTogglePinDirection+0xda>
    13a4:	4f c0       	rjmp	.+158    	; 0x1444 <DIO_enumTogglePinDirection+0x100>
		{
			case DIO_PORTA:
				TOGGLE_BIT(DDRA,Copy_u8PinID);
    13a6:	aa e3       	ldi	r26, 0x3A	; 58
    13a8:	b0 e0       	ldi	r27, 0x00	; 0
    13aa:	ea e3       	ldi	r30, 0x3A	; 58
    13ac:	f0 e0       	ldi	r31, 0x00	; 0
    13ae:	80 81       	ld	r24, Z
    13b0:	48 2f       	mov	r20, r24
    13b2:	8b 81       	ldd	r24, Y+3	; 0x03
    13b4:	28 2f       	mov	r18, r24
    13b6:	30 e0       	ldi	r19, 0x00	; 0
    13b8:	81 e0       	ldi	r24, 0x01	; 1
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	02 2e       	mov	r0, r18
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <DIO_enumTogglePinDirection+0x80>
    13c0:	88 0f       	add	r24, r24
    13c2:	99 1f       	adc	r25, r25
    13c4:	0a 94       	dec	r0
    13c6:	e2 f7       	brpl	.-8      	; 0x13c0 <DIO_enumTogglePinDirection+0x7c>
    13c8:	84 27       	eor	r24, r20
    13ca:	8c 93       	st	X, r24
    13cc:	3b c0       	rjmp	.+118    	; 0x1444 <DIO_enumTogglePinDirection+0x100>
				break;
			case DIO_PORTB:
				TOGGLE_BIT(DDRB,Copy_u8PinID);
    13ce:	a7 e3       	ldi	r26, 0x37	; 55
    13d0:	b0 e0       	ldi	r27, 0x00	; 0
    13d2:	e7 e3       	ldi	r30, 0x37	; 55
    13d4:	f0 e0       	ldi	r31, 0x00	; 0
    13d6:	80 81       	ld	r24, Z
    13d8:	48 2f       	mov	r20, r24
    13da:	8b 81       	ldd	r24, Y+3	; 0x03
    13dc:	28 2f       	mov	r18, r24
    13de:	30 e0       	ldi	r19, 0x00	; 0
    13e0:	81 e0       	ldi	r24, 0x01	; 1
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	02 2e       	mov	r0, r18
    13e6:	02 c0       	rjmp	.+4      	; 0x13ec <DIO_enumTogglePinDirection+0xa8>
    13e8:	88 0f       	add	r24, r24
    13ea:	99 1f       	adc	r25, r25
    13ec:	0a 94       	dec	r0
    13ee:	e2 f7       	brpl	.-8      	; 0x13e8 <DIO_enumTogglePinDirection+0xa4>
    13f0:	84 27       	eor	r24, r20
    13f2:	8c 93       	st	X, r24
    13f4:	27 c0       	rjmp	.+78     	; 0x1444 <DIO_enumTogglePinDirection+0x100>
				break;
			case DIO_PORTC:
				TOGGLE_BIT(DDRC,Copy_u8PinID);
    13f6:	a4 e3       	ldi	r26, 0x34	; 52
    13f8:	b0 e0       	ldi	r27, 0x00	; 0
    13fa:	e4 e3       	ldi	r30, 0x34	; 52
    13fc:	f0 e0       	ldi	r31, 0x00	; 0
    13fe:	80 81       	ld	r24, Z
    1400:	48 2f       	mov	r20, r24
    1402:	8b 81       	ldd	r24, Y+3	; 0x03
    1404:	28 2f       	mov	r18, r24
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	81 e0       	ldi	r24, 0x01	; 1
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	02 2e       	mov	r0, r18
    140e:	02 c0       	rjmp	.+4      	; 0x1414 <DIO_enumTogglePinDirection+0xd0>
    1410:	88 0f       	add	r24, r24
    1412:	99 1f       	adc	r25, r25
    1414:	0a 94       	dec	r0
    1416:	e2 f7       	brpl	.-8      	; 0x1410 <DIO_enumTogglePinDirection+0xcc>
    1418:	84 27       	eor	r24, r20
    141a:	8c 93       	st	X, r24
    141c:	13 c0       	rjmp	.+38     	; 0x1444 <DIO_enumTogglePinDirection+0x100>
				break;
			case DIO_PORTD:
				TOGGLE_BIT(DDRD,Copy_u8PinID);
    141e:	a1 e3       	ldi	r26, 0x31	; 49
    1420:	b0 e0       	ldi	r27, 0x00	; 0
    1422:	e1 e3       	ldi	r30, 0x31	; 49
    1424:	f0 e0       	ldi	r31, 0x00	; 0
    1426:	80 81       	ld	r24, Z
    1428:	48 2f       	mov	r20, r24
    142a:	8b 81       	ldd	r24, Y+3	; 0x03
    142c:	28 2f       	mov	r18, r24
    142e:	30 e0       	ldi	r19, 0x00	; 0
    1430:	81 e0       	ldi	r24, 0x01	; 1
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	02 2e       	mov	r0, r18
    1436:	02 c0       	rjmp	.+4      	; 0x143c <DIO_enumTogglePinDirection+0xf8>
    1438:	88 0f       	add	r24, r24
    143a:	99 1f       	adc	r25, r25
    143c:	0a 94       	dec	r0
    143e:	e2 f7       	brpl	.-8      	; 0x1438 <DIO_enumTogglePinDirection+0xf4>
    1440:	84 27       	eor	r24, r20
    1442:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    1444:	81 e0       	ldi	r24, 0x01	; 1
    1446:	89 83       	std	Y+1, r24	; 0x01
    1448:	02 c0       	rjmp	.+4      	; 0x144e <DIO_enumTogglePinDirection+0x10a>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    144a:	83 e0       	ldi	r24, 0x03	; 3
    144c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    144e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1450:	0f 90       	pop	r0
    1452:	0f 90       	pop	r0
    1454:	0f 90       	pop	r0
    1456:	0f 90       	pop	r0
    1458:	0f 90       	pop	r0
    145a:	cf 91       	pop	r28
    145c:	df 91       	pop	r29
    145e:	08 95       	ret

00001460 <DIO_enumTogglePinValue>:
ES_T DIO_enumTogglePinValue (u8 Copy_u8PortID,u8 Copy_u8PinID)
{
    1460:	df 93       	push	r29
    1462:	cf 93       	push	r28
    1464:	00 d0       	rcall	.+0      	; 0x1466 <DIO_enumTogglePinValue+0x6>
    1466:	00 d0       	rcall	.+0      	; 0x1468 <DIO_enumTogglePinValue+0x8>
    1468:	0f 92       	push	r0
    146a:	cd b7       	in	r28, 0x3d	; 61
    146c:	de b7       	in	r29, 0x3e	; 62
    146e:	8a 83       	std	Y+2, r24	; 0x02
    1470:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    1472:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
    1474:	8a 81       	ldd	r24, Y+2	; 0x02
    1476:	84 30       	cpi	r24, 0x04	; 4
    1478:	08 f0       	brcs	.+2      	; 0x147c <DIO_enumTogglePinValue+0x1c>
    147a:	75 c0       	rjmp	.+234    	; 0x1566 <DIO_enumTogglePinValue+0x106>
    147c:	8b 81       	ldd	r24, Y+3	; 0x03
    147e:	88 30       	cpi	r24, 0x08	; 8
    1480:	08 f0       	brcs	.+2      	; 0x1484 <DIO_enumTogglePinValue+0x24>
    1482:	71 c0       	rjmp	.+226    	; 0x1566 <DIO_enumTogglePinValue+0x106>
	{
		switch(Copy_u8PortID)
    1484:	8a 81       	ldd	r24, Y+2	; 0x02
    1486:	28 2f       	mov	r18, r24
    1488:	30 e0       	ldi	r19, 0x00	; 0
    148a:	3d 83       	std	Y+5, r19	; 0x05
    148c:	2c 83       	std	Y+4, r18	; 0x04
    148e:	8c 81       	ldd	r24, Y+4	; 0x04
    1490:	9d 81       	ldd	r25, Y+5	; 0x05
    1492:	81 30       	cpi	r24, 0x01	; 1
    1494:	91 05       	cpc	r25, r1
    1496:	49 f1       	breq	.+82     	; 0x14ea <DIO_enumTogglePinValue+0x8a>
    1498:	2c 81       	ldd	r18, Y+4	; 0x04
    149a:	3d 81       	ldd	r19, Y+5	; 0x05
    149c:	22 30       	cpi	r18, 0x02	; 2
    149e:	31 05       	cpc	r19, r1
    14a0:	2c f4       	brge	.+10     	; 0x14ac <DIO_enumTogglePinValue+0x4c>
    14a2:	8c 81       	ldd	r24, Y+4	; 0x04
    14a4:	9d 81       	ldd	r25, Y+5	; 0x05
    14a6:	00 97       	sbiw	r24, 0x00	; 0
    14a8:	61 f0       	breq	.+24     	; 0x14c2 <DIO_enumTogglePinValue+0x62>
    14aa:	5a c0       	rjmp	.+180    	; 0x1560 <DIO_enumTogglePinValue+0x100>
    14ac:	2c 81       	ldd	r18, Y+4	; 0x04
    14ae:	3d 81       	ldd	r19, Y+5	; 0x05
    14b0:	22 30       	cpi	r18, 0x02	; 2
    14b2:	31 05       	cpc	r19, r1
    14b4:	71 f1       	breq	.+92     	; 0x1512 <DIO_enumTogglePinValue+0xb2>
    14b6:	8c 81       	ldd	r24, Y+4	; 0x04
    14b8:	9d 81       	ldd	r25, Y+5	; 0x05
    14ba:	83 30       	cpi	r24, 0x03	; 3
    14bc:	91 05       	cpc	r25, r1
    14be:	e9 f1       	breq	.+122    	; 0x153a <DIO_enumTogglePinValue+0xda>
    14c0:	4f c0       	rjmp	.+158    	; 0x1560 <DIO_enumTogglePinValue+0x100>
		{
			case DIO_PORTA:
				TOGGLE_BIT(PORTA,Copy_u8PinID);
    14c2:	ab e3       	ldi	r26, 0x3B	; 59
    14c4:	b0 e0       	ldi	r27, 0x00	; 0
    14c6:	eb e3       	ldi	r30, 0x3B	; 59
    14c8:	f0 e0       	ldi	r31, 0x00	; 0
    14ca:	80 81       	ld	r24, Z
    14cc:	48 2f       	mov	r20, r24
    14ce:	8b 81       	ldd	r24, Y+3	; 0x03
    14d0:	28 2f       	mov	r18, r24
    14d2:	30 e0       	ldi	r19, 0x00	; 0
    14d4:	81 e0       	ldi	r24, 0x01	; 1
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	02 2e       	mov	r0, r18
    14da:	02 c0       	rjmp	.+4      	; 0x14e0 <DIO_enumTogglePinValue+0x80>
    14dc:	88 0f       	add	r24, r24
    14de:	99 1f       	adc	r25, r25
    14e0:	0a 94       	dec	r0
    14e2:	e2 f7       	brpl	.-8      	; 0x14dc <DIO_enumTogglePinValue+0x7c>
    14e4:	84 27       	eor	r24, r20
    14e6:	8c 93       	st	X, r24
    14e8:	3b c0       	rjmp	.+118    	; 0x1560 <DIO_enumTogglePinValue+0x100>
				break;
			case DIO_PORTB:
				TOGGLE_BIT(PORTB,Copy_u8PinID);
    14ea:	a8 e3       	ldi	r26, 0x38	; 56
    14ec:	b0 e0       	ldi	r27, 0x00	; 0
    14ee:	e8 e3       	ldi	r30, 0x38	; 56
    14f0:	f0 e0       	ldi	r31, 0x00	; 0
    14f2:	80 81       	ld	r24, Z
    14f4:	48 2f       	mov	r20, r24
    14f6:	8b 81       	ldd	r24, Y+3	; 0x03
    14f8:	28 2f       	mov	r18, r24
    14fa:	30 e0       	ldi	r19, 0x00	; 0
    14fc:	81 e0       	ldi	r24, 0x01	; 1
    14fe:	90 e0       	ldi	r25, 0x00	; 0
    1500:	02 2e       	mov	r0, r18
    1502:	02 c0       	rjmp	.+4      	; 0x1508 <DIO_enumTogglePinValue+0xa8>
    1504:	88 0f       	add	r24, r24
    1506:	99 1f       	adc	r25, r25
    1508:	0a 94       	dec	r0
    150a:	e2 f7       	brpl	.-8      	; 0x1504 <DIO_enumTogglePinValue+0xa4>
    150c:	84 27       	eor	r24, r20
    150e:	8c 93       	st	X, r24
    1510:	27 c0       	rjmp	.+78     	; 0x1560 <DIO_enumTogglePinValue+0x100>
				break;
			case DIO_PORTC:
				TOGGLE_BIT(PORTC,Copy_u8PinID);
    1512:	a5 e3       	ldi	r26, 0x35	; 53
    1514:	b0 e0       	ldi	r27, 0x00	; 0
    1516:	e5 e3       	ldi	r30, 0x35	; 53
    1518:	f0 e0       	ldi	r31, 0x00	; 0
    151a:	80 81       	ld	r24, Z
    151c:	48 2f       	mov	r20, r24
    151e:	8b 81       	ldd	r24, Y+3	; 0x03
    1520:	28 2f       	mov	r18, r24
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	81 e0       	ldi	r24, 0x01	; 1
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	02 2e       	mov	r0, r18
    152a:	02 c0       	rjmp	.+4      	; 0x1530 <DIO_enumTogglePinValue+0xd0>
    152c:	88 0f       	add	r24, r24
    152e:	99 1f       	adc	r25, r25
    1530:	0a 94       	dec	r0
    1532:	e2 f7       	brpl	.-8      	; 0x152c <DIO_enumTogglePinValue+0xcc>
    1534:	84 27       	eor	r24, r20
    1536:	8c 93       	st	X, r24
    1538:	13 c0       	rjmp	.+38     	; 0x1560 <DIO_enumTogglePinValue+0x100>
				break;
			case DIO_PORTD:
				TOGGLE_BIT(PORTD,Copy_u8PinID);
    153a:	a2 e3       	ldi	r26, 0x32	; 50
    153c:	b0 e0       	ldi	r27, 0x00	; 0
    153e:	e2 e3       	ldi	r30, 0x32	; 50
    1540:	f0 e0       	ldi	r31, 0x00	; 0
    1542:	80 81       	ld	r24, Z
    1544:	48 2f       	mov	r20, r24
    1546:	8b 81       	ldd	r24, Y+3	; 0x03
    1548:	28 2f       	mov	r18, r24
    154a:	30 e0       	ldi	r19, 0x00	; 0
    154c:	81 e0       	ldi	r24, 0x01	; 1
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	02 2e       	mov	r0, r18
    1552:	02 c0       	rjmp	.+4      	; 0x1558 <DIO_enumTogglePinValue+0xf8>
    1554:	88 0f       	add	r24, r24
    1556:	99 1f       	adc	r25, r25
    1558:	0a 94       	dec	r0
    155a:	e2 f7       	brpl	.-8      	; 0x1554 <DIO_enumTogglePinValue+0xf4>
    155c:	84 27       	eor	r24, r20
    155e:	8c 93       	st	X, r24
				break;
		}
		Local_enumErrorState=ES_OK;
    1560:	81 e0       	ldi	r24, 0x01	; 1
    1562:	89 83       	std	Y+1, r24	; 0x01
    1564:	02 c0       	rjmp	.+4      	; 0x156a <DIO_enumTogglePinValue+0x10a>
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    1566:	83 e0       	ldi	r24, 0x03	; 3
    1568:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    156a:	89 81       	ldd	r24, Y+1	; 0x01
}
    156c:	0f 90       	pop	r0
    156e:	0f 90       	pop	r0
    1570:	0f 90       	pop	r0
    1572:	0f 90       	pop	r0
    1574:	0f 90       	pop	r0
    1576:	cf 91       	pop	r28
    1578:	df 91       	pop	r29
    157a:	08 95       	ret

0000157c <DIO_enumGetPinDirection>:
ES_T DIO_enumGetPinDirection (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 *Copy_pu8Direction)
{
    157c:	df 93       	push	r29
    157e:	cf 93       	push	r28
    1580:	cd b7       	in	r28, 0x3d	; 61
    1582:	de b7       	in	r29, 0x3e	; 62
    1584:	27 97       	sbiw	r28, 0x07	; 7
    1586:	0f b6       	in	r0, 0x3f	; 63
    1588:	f8 94       	cli
    158a:	de bf       	out	0x3e, r29	; 62
    158c:	0f be       	out	0x3f, r0	; 63
    158e:	cd bf       	out	0x3d, r28	; 61
    1590:	8a 83       	std	Y+2, r24	; 0x02
    1592:	6b 83       	std	Y+3, r22	; 0x03
    1594:	5d 83       	std	Y+5, r21	; 0x05
    1596:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    1598:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
    159a:	8a 81       	ldd	r24, Y+2	; 0x02
    159c:	84 30       	cpi	r24, 0x04	; 4
    159e:	08 f0       	brcs	.+2      	; 0x15a2 <DIO_enumGetPinDirection+0x26>
    15a0:	7f c0       	rjmp	.+254    	; 0x16a0 <DIO_enumGetPinDirection+0x124>
    15a2:	8b 81       	ldd	r24, Y+3	; 0x03
    15a4:	88 30       	cpi	r24, 0x08	; 8
    15a6:	08 f0       	brcs	.+2      	; 0x15aa <DIO_enumGetPinDirection+0x2e>
    15a8:	7b c0       	rjmp	.+246    	; 0x16a0 <DIO_enumGetPinDirection+0x124>
		{
			if (Copy_pu8Direction!=NULL)
    15aa:	8c 81       	ldd	r24, Y+4	; 0x04
    15ac:	9d 81       	ldd	r25, Y+5	; 0x05
    15ae:	00 97       	sbiw	r24, 0x00	; 0
    15b0:	09 f4       	brne	.+2      	; 0x15b4 <DIO_enumGetPinDirection+0x38>
    15b2:	73 c0       	rjmp	.+230    	; 0x169a <DIO_enumGetPinDirection+0x11e>
			{
				switch(Copy_u8PortID)
    15b4:	8a 81       	ldd	r24, Y+2	; 0x02
    15b6:	28 2f       	mov	r18, r24
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	3f 83       	std	Y+7, r19	; 0x07
    15bc:	2e 83       	std	Y+6, r18	; 0x06
    15be:	4e 81       	ldd	r20, Y+6	; 0x06
    15c0:	5f 81       	ldd	r21, Y+7	; 0x07
    15c2:	41 30       	cpi	r20, 0x01	; 1
    15c4:	51 05       	cpc	r21, r1
    15c6:	59 f1       	breq	.+86     	; 0x161e <DIO_enumGetPinDirection+0xa2>
    15c8:	8e 81       	ldd	r24, Y+6	; 0x06
    15ca:	9f 81       	ldd	r25, Y+7	; 0x07
    15cc:	82 30       	cpi	r24, 0x02	; 2
    15ce:	91 05       	cpc	r25, r1
    15d0:	34 f4       	brge	.+12     	; 0x15de <DIO_enumGetPinDirection+0x62>
    15d2:	2e 81       	ldd	r18, Y+6	; 0x06
    15d4:	3f 81       	ldd	r19, Y+7	; 0x07
    15d6:	21 15       	cp	r18, r1
    15d8:	31 05       	cpc	r19, r1
    15da:	69 f0       	breq	.+26     	; 0x15f6 <DIO_enumGetPinDirection+0x7a>
    15dc:	5b c0       	rjmp	.+182    	; 0x1694 <DIO_enumGetPinDirection+0x118>
    15de:	4e 81       	ldd	r20, Y+6	; 0x06
    15e0:	5f 81       	ldd	r21, Y+7	; 0x07
    15e2:	42 30       	cpi	r20, 0x02	; 2
    15e4:	51 05       	cpc	r21, r1
    15e6:	79 f1       	breq	.+94     	; 0x1646 <DIO_enumGetPinDirection+0xca>
    15e8:	8e 81       	ldd	r24, Y+6	; 0x06
    15ea:	9f 81       	ldd	r25, Y+7	; 0x07
    15ec:	83 30       	cpi	r24, 0x03	; 3
    15ee:	91 05       	cpc	r25, r1
    15f0:	09 f4       	brne	.+2      	; 0x15f4 <DIO_enumGetPinDirection+0x78>
    15f2:	3d c0       	rjmp	.+122    	; 0x166e <DIO_enumGetPinDirection+0xf2>
    15f4:	4f c0       	rjmp	.+158    	; 0x1694 <DIO_enumGetPinDirection+0x118>
				{
					case DIO_PORTA:
						*Copy_pu8Direction=READ_BIT(DDRA,Copy_u8PinID);
    15f6:	ea e3       	ldi	r30, 0x3A	; 58
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
    15fa:	80 81       	ld	r24, Z
    15fc:	28 2f       	mov	r18, r24
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	8b 81       	ldd	r24, Y+3	; 0x03
    1602:	88 2f       	mov	r24, r24
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	a9 01       	movw	r20, r18
    1608:	02 c0       	rjmp	.+4      	; 0x160e <DIO_enumGetPinDirection+0x92>
    160a:	55 95       	asr	r21
    160c:	47 95       	ror	r20
    160e:	8a 95       	dec	r24
    1610:	e2 f7       	brpl	.-8      	; 0x160a <DIO_enumGetPinDirection+0x8e>
    1612:	ca 01       	movw	r24, r20
    1614:	81 70       	andi	r24, 0x01	; 1
    1616:	ec 81       	ldd	r30, Y+4	; 0x04
    1618:	fd 81       	ldd	r31, Y+5	; 0x05
    161a:	80 83       	st	Z, r24
    161c:	3b c0       	rjmp	.+118    	; 0x1694 <DIO_enumGetPinDirection+0x118>
						break;
					case DIO_PORTB:
						*Copy_pu8Direction=READ_BIT(DDRB,Copy_u8PinID);
    161e:	e7 e3       	ldi	r30, 0x37	; 55
    1620:	f0 e0       	ldi	r31, 0x00	; 0
    1622:	80 81       	ld	r24, Z
    1624:	28 2f       	mov	r18, r24
    1626:	30 e0       	ldi	r19, 0x00	; 0
    1628:	8b 81       	ldd	r24, Y+3	; 0x03
    162a:	88 2f       	mov	r24, r24
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	a9 01       	movw	r20, r18
    1630:	02 c0       	rjmp	.+4      	; 0x1636 <DIO_enumGetPinDirection+0xba>
    1632:	55 95       	asr	r21
    1634:	47 95       	ror	r20
    1636:	8a 95       	dec	r24
    1638:	e2 f7       	brpl	.-8      	; 0x1632 <DIO_enumGetPinDirection+0xb6>
    163a:	ca 01       	movw	r24, r20
    163c:	81 70       	andi	r24, 0x01	; 1
    163e:	ec 81       	ldd	r30, Y+4	; 0x04
    1640:	fd 81       	ldd	r31, Y+5	; 0x05
    1642:	80 83       	st	Z, r24
    1644:	27 c0       	rjmp	.+78     	; 0x1694 <DIO_enumGetPinDirection+0x118>
						break;
					case DIO_PORTC:
						*Copy_pu8Direction=READ_BIT(DDRC,Copy_u8PinID);
    1646:	e4 e3       	ldi	r30, 0x34	; 52
    1648:	f0 e0       	ldi	r31, 0x00	; 0
    164a:	80 81       	ld	r24, Z
    164c:	28 2f       	mov	r18, r24
    164e:	30 e0       	ldi	r19, 0x00	; 0
    1650:	8b 81       	ldd	r24, Y+3	; 0x03
    1652:	88 2f       	mov	r24, r24
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	a9 01       	movw	r20, r18
    1658:	02 c0       	rjmp	.+4      	; 0x165e <DIO_enumGetPinDirection+0xe2>
    165a:	55 95       	asr	r21
    165c:	47 95       	ror	r20
    165e:	8a 95       	dec	r24
    1660:	e2 f7       	brpl	.-8      	; 0x165a <DIO_enumGetPinDirection+0xde>
    1662:	ca 01       	movw	r24, r20
    1664:	81 70       	andi	r24, 0x01	; 1
    1666:	ec 81       	ldd	r30, Y+4	; 0x04
    1668:	fd 81       	ldd	r31, Y+5	; 0x05
    166a:	80 83       	st	Z, r24
    166c:	13 c0       	rjmp	.+38     	; 0x1694 <DIO_enumGetPinDirection+0x118>
						break;
					case DIO_PORTD:
						*Copy_pu8Direction=READ_BIT(DDRD,Copy_u8PinID);
    166e:	e1 e3       	ldi	r30, 0x31	; 49
    1670:	f0 e0       	ldi	r31, 0x00	; 0
    1672:	80 81       	ld	r24, Z
    1674:	28 2f       	mov	r18, r24
    1676:	30 e0       	ldi	r19, 0x00	; 0
    1678:	8b 81       	ldd	r24, Y+3	; 0x03
    167a:	88 2f       	mov	r24, r24
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	a9 01       	movw	r20, r18
    1680:	02 c0       	rjmp	.+4      	; 0x1686 <DIO_enumGetPinDirection+0x10a>
    1682:	55 95       	asr	r21
    1684:	47 95       	ror	r20
    1686:	8a 95       	dec	r24
    1688:	e2 f7       	brpl	.-8      	; 0x1682 <DIO_enumGetPinDirection+0x106>
    168a:	ca 01       	movw	r24, r20
    168c:	81 70       	andi	r24, 0x01	; 1
    168e:	ec 81       	ldd	r30, Y+4	; 0x04
    1690:	fd 81       	ldd	r31, Y+5	; 0x05
    1692:	80 83       	st	Z, r24
						break;
				}
				Local_enumErrorState=ES_OK;
    1694:	81 e0       	ldi	r24, 0x01	; 1
    1696:	89 83       	std	Y+1, r24	; 0x01
    1698:	05 c0       	rjmp	.+10     	; 0x16a4 <DIO_enumGetPinDirection+0x128>
			}
			else
			{
				Local_enumErrorState=ES_NULL_POINTER;
    169a:	82 e0       	ldi	r24, 0x02	; 2
    169c:	89 83       	std	Y+1, r24	; 0x01
    169e:	02 c0       	rjmp	.+4      	; 0x16a4 <DIO_enumGetPinDirection+0x128>
			}
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    16a0:	83 e0       	ldi	r24, 0x03	; 3
    16a2:	89 83       	std	Y+1, r24	; 0x01
		}

	return Local_enumErrorState;
    16a4:	89 81       	ldd	r24, Y+1	; 0x01
}
    16a6:	27 96       	adiw	r28, 0x07	; 7
    16a8:	0f b6       	in	r0, 0x3f	; 63
    16aa:	f8 94       	cli
    16ac:	de bf       	out	0x3e, r29	; 62
    16ae:	0f be       	out	0x3f, r0	; 63
    16b0:	cd bf       	out	0x3d, r28	; 61
    16b2:	cf 91       	pop	r28
    16b4:	df 91       	pop	r29
    16b6:	08 95       	ret

000016b8 <DIO_enumGetPinValue>:
ES_T DIO_enumGetPinValue (u8 Copy_u8PortID,u8 Copy_u8PinID,u8 *Copy_pu8Value)
{
    16b8:	df 93       	push	r29
    16ba:	cf 93       	push	r28
    16bc:	cd b7       	in	r28, 0x3d	; 61
    16be:	de b7       	in	r29, 0x3e	; 62
    16c0:	27 97       	sbiw	r28, 0x07	; 7
    16c2:	0f b6       	in	r0, 0x3f	; 63
    16c4:	f8 94       	cli
    16c6:	de bf       	out	0x3e, r29	; 62
    16c8:	0f be       	out	0x3f, r0	; 63
    16ca:	cd bf       	out	0x3d, r28	; 61
    16cc:	8a 83       	std	Y+2, r24	; 0x02
    16ce:	6b 83       	std	Y+3, r22	; 0x03
    16d0:	5d 83       	std	Y+5, r21	; 0x05
    16d2:	4c 83       	std	Y+4, r20	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    16d4:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8PortID<=DIO_PORTD&&Copy_u8PinID<=DIO_PIN7)
    16d6:	8a 81       	ldd	r24, Y+2	; 0x02
    16d8:	84 30       	cpi	r24, 0x04	; 4
    16da:	08 f0       	brcs	.+2      	; 0x16de <DIO_enumGetPinValue+0x26>
    16dc:	7f c0       	rjmp	.+254    	; 0x17dc <DIO_enumGetPinValue+0x124>
    16de:	8b 81       	ldd	r24, Y+3	; 0x03
    16e0:	88 30       	cpi	r24, 0x08	; 8
    16e2:	08 f0       	brcs	.+2      	; 0x16e6 <DIO_enumGetPinValue+0x2e>
    16e4:	7b c0       	rjmp	.+246    	; 0x17dc <DIO_enumGetPinValue+0x124>
	{
		if (Copy_pu8Value!=NULL)
    16e6:	8c 81       	ldd	r24, Y+4	; 0x04
    16e8:	9d 81       	ldd	r25, Y+5	; 0x05
    16ea:	00 97       	sbiw	r24, 0x00	; 0
    16ec:	09 f4       	brne	.+2      	; 0x16f0 <DIO_enumGetPinValue+0x38>
    16ee:	73 c0       	rjmp	.+230    	; 0x17d6 <DIO_enumGetPinValue+0x11e>
		{
			switch(Copy_u8PortID)
    16f0:	8a 81       	ldd	r24, Y+2	; 0x02
    16f2:	28 2f       	mov	r18, r24
    16f4:	30 e0       	ldi	r19, 0x00	; 0
    16f6:	3f 83       	std	Y+7, r19	; 0x07
    16f8:	2e 83       	std	Y+6, r18	; 0x06
    16fa:	4e 81       	ldd	r20, Y+6	; 0x06
    16fc:	5f 81       	ldd	r21, Y+7	; 0x07
    16fe:	41 30       	cpi	r20, 0x01	; 1
    1700:	51 05       	cpc	r21, r1
    1702:	59 f1       	breq	.+86     	; 0x175a <DIO_enumGetPinValue+0xa2>
    1704:	8e 81       	ldd	r24, Y+6	; 0x06
    1706:	9f 81       	ldd	r25, Y+7	; 0x07
    1708:	82 30       	cpi	r24, 0x02	; 2
    170a:	91 05       	cpc	r25, r1
    170c:	34 f4       	brge	.+12     	; 0x171a <DIO_enumGetPinValue+0x62>
    170e:	2e 81       	ldd	r18, Y+6	; 0x06
    1710:	3f 81       	ldd	r19, Y+7	; 0x07
    1712:	21 15       	cp	r18, r1
    1714:	31 05       	cpc	r19, r1
    1716:	69 f0       	breq	.+26     	; 0x1732 <DIO_enumGetPinValue+0x7a>
    1718:	5b c0       	rjmp	.+182    	; 0x17d0 <DIO_enumGetPinValue+0x118>
    171a:	4e 81       	ldd	r20, Y+6	; 0x06
    171c:	5f 81       	ldd	r21, Y+7	; 0x07
    171e:	42 30       	cpi	r20, 0x02	; 2
    1720:	51 05       	cpc	r21, r1
    1722:	79 f1       	breq	.+94     	; 0x1782 <DIO_enumGetPinValue+0xca>
    1724:	8e 81       	ldd	r24, Y+6	; 0x06
    1726:	9f 81       	ldd	r25, Y+7	; 0x07
    1728:	83 30       	cpi	r24, 0x03	; 3
    172a:	91 05       	cpc	r25, r1
    172c:	09 f4       	brne	.+2      	; 0x1730 <DIO_enumGetPinValue+0x78>
    172e:	3d c0       	rjmp	.+122    	; 0x17aa <DIO_enumGetPinValue+0xf2>
    1730:	4f c0       	rjmp	.+158    	; 0x17d0 <DIO_enumGetPinValue+0x118>
			{
				case DIO_PORTA:
					*Copy_pu8Value=READ_BIT(PINA,Copy_u8PinID);
    1732:	e9 e3       	ldi	r30, 0x39	; 57
    1734:	f0 e0       	ldi	r31, 0x00	; 0
    1736:	80 81       	ld	r24, Z
    1738:	28 2f       	mov	r18, r24
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	8b 81       	ldd	r24, Y+3	; 0x03
    173e:	88 2f       	mov	r24, r24
    1740:	90 e0       	ldi	r25, 0x00	; 0
    1742:	a9 01       	movw	r20, r18
    1744:	02 c0       	rjmp	.+4      	; 0x174a <DIO_enumGetPinValue+0x92>
    1746:	55 95       	asr	r21
    1748:	47 95       	ror	r20
    174a:	8a 95       	dec	r24
    174c:	e2 f7       	brpl	.-8      	; 0x1746 <DIO_enumGetPinValue+0x8e>
    174e:	ca 01       	movw	r24, r20
    1750:	81 70       	andi	r24, 0x01	; 1
    1752:	ec 81       	ldd	r30, Y+4	; 0x04
    1754:	fd 81       	ldd	r31, Y+5	; 0x05
    1756:	80 83       	st	Z, r24
    1758:	3b c0       	rjmp	.+118    	; 0x17d0 <DIO_enumGetPinValue+0x118>
					break;
				case DIO_PORTB:
					*Copy_pu8Value=READ_BIT(PINB,Copy_u8PinID);
    175a:	e6 e3       	ldi	r30, 0x36	; 54
    175c:	f0 e0       	ldi	r31, 0x00	; 0
    175e:	80 81       	ld	r24, Z
    1760:	28 2f       	mov	r18, r24
    1762:	30 e0       	ldi	r19, 0x00	; 0
    1764:	8b 81       	ldd	r24, Y+3	; 0x03
    1766:	88 2f       	mov	r24, r24
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	a9 01       	movw	r20, r18
    176c:	02 c0       	rjmp	.+4      	; 0x1772 <DIO_enumGetPinValue+0xba>
    176e:	55 95       	asr	r21
    1770:	47 95       	ror	r20
    1772:	8a 95       	dec	r24
    1774:	e2 f7       	brpl	.-8      	; 0x176e <DIO_enumGetPinValue+0xb6>
    1776:	ca 01       	movw	r24, r20
    1778:	81 70       	andi	r24, 0x01	; 1
    177a:	ec 81       	ldd	r30, Y+4	; 0x04
    177c:	fd 81       	ldd	r31, Y+5	; 0x05
    177e:	80 83       	st	Z, r24
    1780:	27 c0       	rjmp	.+78     	; 0x17d0 <DIO_enumGetPinValue+0x118>
					break;
				case DIO_PORTC:
					*Copy_pu8Value=READ_BIT(PINC,Copy_u8PinID);
    1782:	e3 e3       	ldi	r30, 0x33	; 51
    1784:	f0 e0       	ldi	r31, 0x00	; 0
    1786:	80 81       	ld	r24, Z
    1788:	28 2f       	mov	r18, r24
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	8b 81       	ldd	r24, Y+3	; 0x03
    178e:	88 2f       	mov	r24, r24
    1790:	90 e0       	ldi	r25, 0x00	; 0
    1792:	a9 01       	movw	r20, r18
    1794:	02 c0       	rjmp	.+4      	; 0x179a <DIO_enumGetPinValue+0xe2>
    1796:	55 95       	asr	r21
    1798:	47 95       	ror	r20
    179a:	8a 95       	dec	r24
    179c:	e2 f7       	brpl	.-8      	; 0x1796 <DIO_enumGetPinValue+0xde>
    179e:	ca 01       	movw	r24, r20
    17a0:	81 70       	andi	r24, 0x01	; 1
    17a2:	ec 81       	ldd	r30, Y+4	; 0x04
    17a4:	fd 81       	ldd	r31, Y+5	; 0x05
    17a6:	80 83       	st	Z, r24
    17a8:	13 c0       	rjmp	.+38     	; 0x17d0 <DIO_enumGetPinValue+0x118>
					break;
				case DIO_PORTD:
					*Copy_pu8Value=READ_BIT(PIND,Copy_u8PinID);
    17aa:	e0 e3       	ldi	r30, 0x30	; 48
    17ac:	f0 e0       	ldi	r31, 0x00	; 0
    17ae:	80 81       	ld	r24, Z
    17b0:	28 2f       	mov	r18, r24
    17b2:	30 e0       	ldi	r19, 0x00	; 0
    17b4:	8b 81       	ldd	r24, Y+3	; 0x03
    17b6:	88 2f       	mov	r24, r24
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	a9 01       	movw	r20, r18
    17bc:	02 c0       	rjmp	.+4      	; 0x17c2 <DIO_enumGetPinValue+0x10a>
    17be:	55 95       	asr	r21
    17c0:	47 95       	ror	r20
    17c2:	8a 95       	dec	r24
    17c4:	e2 f7       	brpl	.-8      	; 0x17be <DIO_enumGetPinValue+0x106>
    17c6:	ca 01       	movw	r24, r20
    17c8:	81 70       	andi	r24, 0x01	; 1
    17ca:	ec 81       	ldd	r30, Y+4	; 0x04
    17cc:	fd 81       	ldd	r31, Y+5	; 0x05
    17ce:	80 83       	st	Z, r24
					break;
			}
			Local_enumErrorState=ES_OK;
    17d0:	81 e0       	ldi	r24, 0x01	; 1
    17d2:	89 83       	std	Y+1, r24	; 0x01
    17d4:	05 c0       	rjmp	.+10     	; 0x17e0 <DIO_enumGetPinValue+0x128>
		}
		else
		{
			Local_enumErrorState=ES_NULL_POINTER;
    17d6:	82 e0       	ldi	r24, 0x02	; 2
    17d8:	89 83       	std	Y+1, r24	; 0x01
    17da:	02 c0       	rjmp	.+4      	; 0x17e0 <DIO_enumGetPinValue+0x128>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    17dc:	83 e0       	ldi	r24, 0x03	; 3
    17de:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    17e0:	89 81       	ldd	r24, Y+1	; 0x01
}
    17e2:	27 96       	adiw	r28, 0x07	; 7
    17e4:	0f b6       	in	r0, 0x3f	; 63
    17e6:	f8 94       	cli
    17e8:	de bf       	out	0x3e, r29	; 62
    17ea:	0f be       	out	0x3f, r0	; 63
    17ec:	cd bf       	out	0x3d, r28	; 61
    17ee:	cf 91       	pop	r28
    17f0:	df 91       	pop	r29
    17f2:	08 95       	ret

000017f4 <LCD_enumInit>:
#include "../include/MCAL/DIO/DIO_int.h"
#include "../include/HAL/LCD/LCD_priv.h"
#include "../include/HAL/LCD/LCD_config.h"

ES_T LCD_enumInit(void)
{
    17f4:	0f 93       	push	r16
    17f6:	1f 93       	push	r17
    17f8:	df 93       	push	r29
    17fa:	cf 93       	push	r28
    17fc:	cd b7       	in	r28, 0x3d	; 61
    17fe:	de b7       	in	r29, 0x3e	; 62
    1800:	c8 54       	subi	r28, 0x48	; 72
    1802:	d0 40       	sbci	r29, 0x00	; 0
    1804:	0f b6       	in	r0, 0x3f	; 63
    1806:	f8 94       	cli
    1808:	de bf       	out	0x3e, r29	; 62
    180a:	0f be       	out	0x3f, r0	; 63
    180c:	cd bf       	out	0x3d, r28	; 61
	ES_T Local_enumErrorState=ES_NOK;
    180e:	fe 01       	movw	r30, r28
    1810:	e9 5b       	subi	r30, 0xB9	; 185
    1812:	ff 4f       	sbci	r31, 0xFF	; 255
    1814:	10 82       	st	Z, r1
    1816:	fe 01       	movw	r30, r28
    1818:	ed 5b       	subi	r30, 0xBD	; 189
    181a:	ff 4f       	sbci	r31, 0xFF	; 255
    181c:	80 e0       	ldi	r24, 0x00	; 0
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	ac e0       	ldi	r26, 0x0C	; 12
    1822:	b2 e4       	ldi	r27, 0x42	; 66
    1824:	80 83       	st	Z, r24
    1826:	91 83       	std	Z+1, r25	; 0x01
    1828:	a2 83       	std	Z+2, r26	; 0x02
    182a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    182c:	8e 01       	movw	r16, r28
    182e:	01 5c       	subi	r16, 0xC1	; 193
    1830:	1f 4f       	sbci	r17, 0xFF	; 255
    1832:	fe 01       	movw	r30, r28
    1834:	ed 5b       	subi	r30, 0xBD	; 189
    1836:	ff 4f       	sbci	r31, 0xFF	; 255
    1838:	60 81       	ld	r22, Z
    183a:	71 81       	ldd	r23, Z+1	; 0x01
    183c:	82 81       	ldd	r24, Z+2	; 0x02
    183e:	93 81       	ldd	r25, Z+3	; 0x03
    1840:	20 e0       	ldi	r18, 0x00	; 0
    1842:	30 e0       	ldi	r19, 0x00	; 0
    1844:	4a e7       	ldi	r20, 0x7A	; 122
    1846:	53 e4       	ldi	r21, 0x43	; 67
    1848:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    184c:	dc 01       	movw	r26, r24
    184e:	cb 01       	movw	r24, r22
    1850:	f8 01       	movw	r30, r16
    1852:	80 83       	st	Z, r24
    1854:	91 83       	std	Z+1, r25	; 0x01
    1856:	a2 83       	std	Z+2, r26	; 0x02
    1858:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    185a:	fe 01       	movw	r30, r28
    185c:	ff 96       	adiw	r30, 0x3f	; 63
    185e:	60 81       	ld	r22, Z
    1860:	71 81       	ldd	r23, Z+1	; 0x01
    1862:	82 81       	ldd	r24, Z+2	; 0x02
    1864:	93 81       	ldd	r25, Z+3	; 0x03
    1866:	20 e0       	ldi	r18, 0x00	; 0
    1868:	30 e0       	ldi	r19, 0x00	; 0
    186a:	40 e8       	ldi	r20, 0x80	; 128
    186c:	5f e3       	ldi	r21, 0x3F	; 63
    186e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1872:	88 23       	and	r24, r24
    1874:	2c f4       	brge	.+10     	; 0x1880 <LCD_enumInit+0x8c>
		__ticks = 1;
    1876:	81 e0       	ldi	r24, 0x01	; 1
    1878:	90 e0       	ldi	r25, 0x00	; 0
    187a:	9e af       	std	Y+62, r25	; 0x3e
    187c:	8d af       	std	Y+61, r24	; 0x3d
    187e:	46 c0       	rjmp	.+140    	; 0x190c <LCD_enumInit+0x118>
	else if (__tmp > 65535)
    1880:	fe 01       	movw	r30, r28
    1882:	ff 96       	adiw	r30, 0x3f	; 63
    1884:	60 81       	ld	r22, Z
    1886:	71 81       	ldd	r23, Z+1	; 0x01
    1888:	82 81       	ldd	r24, Z+2	; 0x02
    188a:	93 81       	ldd	r25, Z+3	; 0x03
    188c:	20 e0       	ldi	r18, 0x00	; 0
    188e:	3f ef       	ldi	r19, 0xFF	; 255
    1890:	4f e7       	ldi	r20, 0x7F	; 127
    1892:	57 e4       	ldi	r21, 0x47	; 71
    1894:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1898:	18 16       	cp	r1, r24
    189a:	64 f5       	brge	.+88     	; 0x18f4 <LCD_enumInit+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    189c:	fe 01       	movw	r30, r28
    189e:	ed 5b       	subi	r30, 0xBD	; 189
    18a0:	ff 4f       	sbci	r31, 0xFF	; 255
    18a2:	60 81       	ld	r22, Z
    18a4:	71 81       	ldd	r23, Z+1	; 0x01
    18a6:	82 81       	ldd	r24, Z+2	; 0x02
    18a8:	93 81       	ldd	r25, Z+3	; 0x03
    18aa:	20 e0       	ldi	r18, 0x00	; 0
    18ac:	30 e0       	ldi	r19, 0x00	; 0
    18ae:	40 e2       	ldi	r20, 0x20	; 32
    18b0:	51 e4       	ldi	r21, 0x41	; 65
    18b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18b6:	dc 01       	movw	r26, r24
    18b8:	cb 01       	movw	r24, r22
    18ba:	bc 01       	movw	r22, r24
    18bc:	cd 01       	movw	r24, r26
    18be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18c2:	dc 01       	movw	r26, r24
    18c4:	cb 01       	movw	r24, r22
    18c6:	9e af       	std	Y+62, r25	; 0x3e
    18c8:	8d af       	std	Y+61, r24	; 0x3d
    18ca:	0f c0       	rjmp	.+30     	; 0x18ea <LCD_enumInit+0xf6>
    18cc:	89 e1       	ldi	r24, 0x19	; 25
    18ce:	90 e0       	ldi	r25, 0x00	; 0
    18d0:	9c af       	std	Y+60, r25	; 0x3c
    18d2:	8b af       	std	Y+59, r24	; 0x3b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    18d4:	8b ad       	ldd	r24, Y+59	; 0x3b
    18d6:	9c ad       	ldd	r25, Y+60	; 0x3c
    18d8:	01 97       	sbiw	r24, 0x01	; 1
    18da:	f1 f7       	brne	.-4      	; 0x18d8 <LCD_enumInit+0xe4>
    18dc:	9c af       	std	Y+60, r25	; 0x3c
    18de:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18e0:	8d ad       	ldd	r24, Y+61	; 0x3d
    18e2:	9e ad       	ldd	r25, Y+62	; 0x3e
    18e4:	01 97       	sbiw	r24, 0x01	; 1
    18e6:	9e af       	std	Y+62, r25	; 0x3e
    18e8:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18ea:	8d ad       	ldd	r24, Y+61	; 0x3d
    18ec:	9e ad       	ldd	r25, Y+62	; 0x3e
    18ee:	00 97       	sbiw	r24, 0x00	; 0
    18f0:	69 f7       	brne	.-38     	; 0x18cc <LCD_enumInit+0xd8>
    18f2:	16 c0       	rjmp	.+44     	; 0x1920 <LCD_enumInit+0x12c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18f4:	fe 01       	movw	r30, r28
    18f6:	ff 96       	adiw	r30, 0x3f	; 63
    18f8:	60 81       	ld	r22, Z
    18fa:	71 81       	ldd	r23, Z+1	; 0x01
    18fc:	82 81       	ldd	r24, Z+2	; 0x02
    18fe:	93 81       	ldd	r25, Z+3	; 0x03
    1900:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1904:	dc 01       	movw	r26, r24
    1906:	cb 01       	movw	r24, r22
    1908:	9e af       	std	Y+62, r25	; 0x3e
    190a:	8d af       	std	Y+61, r24	; 0x3d
    190c:	8d ad       	ldd	r24, Y+61	; 0x3d
    190e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1910:	9a af       	std	Y+58, r25	; 0x3a
    1912:	89 af       	std	Y+57, r24	; 0x39
    1914:	89 ad       	ldd	r24, Y+57	; 0x39
    1916:	9a ad       	ldd	r25, Y+58	; 0x3a
    1918:	01 97       	sbiw	r24, 0x01	; 1
    191a:	f1 f7       	brne	.-4      	; 0x1918 <LCD_enumInit+0x124>
    191c:	9a af       	std	Y+58, r25	; 0x3a
    191e:	89 af       	std	Y+57, r24	; 0x39

    _delay_ms(35);
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_RS_PORT,LCD_RS_PIN,OUTPUT);
    1920:	80 e0       	ldi	r24, 0x00	; 0
    1922:	60 e0       	ldi	r22, 0x00	; 0
    1924:	41 e0       	ldi	r20, 0x01	; 1
    1926:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    192a:	fe 01       	movw	r30, r28
    192c:	e9 5b       	subi	r30, 0xB9	; 185
    192e:	ff 4f       	sbci	r31, 0xFF	; 255
    1930:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1932:	fe 01       	movw	r30, r28
    1934:	e9 5b       	subi	r30, 0xB9	; 185
    1936:	ff 4f       	sbci	r31, 0xFF	; 255
    1938:	80 81       	ld	r24, Z
    193a:	81 30       	cpi	r24, 0x01	; 1
    193c:	41 f0       	breq	.+16     	; 0x194e <LCD_enumInit+0x15a>
    193e:	fe 01       	movw	r30, r28
    1940:	e9 5b       	subi	r30, 0xB9	; 185
    1942:	ff 4f       	sbci	r31, 0xFF	; 255
    1944:	80 81       	ld	r24, Z
    1946:	29 96       	adiw	r28, 0x09	; 9
    1948:	8f af       	std	Y+63, r24	; 0x3f
    194a:	29 97       	sbiw	r28, 0x09	; 9
    194c:	c7 c2       	rjmp	.+1422   	; 0x1edc <LCD_enumInit+0x6e8>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_RW_PORT,LCD_RW_PIN,OUTPUT);
    194e:	81 e0       	ldi	r24, 0x01	; 1
    1950:	60 e0       	ldi	r22, 0x00	; 0
    1952:	41 e0       	ldi	r20, 0x01	; 1
    1954:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    1958:	fe 01       	movw	r30, r28
    195a:	e9 5b       	subi	r30, 0xB9	; 185
    195c:	ff 4f       	sbci	r31, 0xFF	; 255
    195e:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1960:	fe 01       	movw	r30, r28
    1962:	e9 5b       	subi	r30, 0xB9	; 185
    1964:	ff 4f       	sbci	r31, 0xFF	; 255
    1966:	80 81       	ld	r24, Z
    1968:	81 30       	cpi	r24, 0x01	; 1
    196a:	41 f0       	breq	.+16     	; 0x197c <LCD_enumInit+0x188>
    196c:	fe 01       	movw	r30, r28
    196e:	e9 5b       	subi	r30, 0xB9	; 185
    1970:	ff 4f       	sbci	r31, 0xFF	; 255
    1972:	80 81       	ld	r24, Z
    1974:	29 96       	adiw	r28, 0x09	; 9
    1976:	8f af       	std	Y+63, r24	; 0x3f
    1978:	29 97       	sbiw	r28, 0x09	; 9
    197a:	b0 c2       	rjmp	.+1376   	; 0x1edc <LCD_enumInit+0x6e8>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_EN_PORT,LCD_EN_PIN,OUTPUT);
    197c:	82 e0       	ldi	r24, 0x02	; 2
    197e:	60 e0       	ldi	r22, 0x00	; 0
    1980:	41 e0       	ldi	r20, 0x01	; 1
    1982:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    1986:	fe 01       	movw	r30, r28
    1988:	e9 5b       	subi	r30, 0xB9	; 185
    198a:	ff 4f       	sbci	r31, 0xFF	; 255
    198c:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    198e:	fe 01       	movw	r30, r28
    1990:	e9 5b       	subi	r30, 0xB9	; 185
    1992:	ff 4f       	sbci	r31, 0xFF	; 255
    1994:	80 81       	ld	r24, Z
    1996:	81 30       	cpi	r24, 0x01	; 1
    1998:	41 f0       	breq	.+16     	; 0x19aa <LCD_enumInit+0x1b6>
    199a:	fe 01       	movw	r30, r28
    199c:	e9 5b       	subi	r30, 0xB9	; 185
    199e:	ff 4f       	sbci	r31, 0xFF	; 255
    19a0:	80 81       	ld	r24, Z
    19a2:	29 96       	adiw	r28, 0x09	; 9
    19a4:	8f af       	std	Y+63, r24	; 0x3f
    19a6:	29 97       	sbiw	r28, 0x09	; 9
    19a8:	99 c2       	rjmp	.+1330   	; 0x1edc <LCD_enumInit+0x6e8>

    Local_enumErrorState=DIO_enumSetPinDirection(LCD_D7_PORT,LCD_D7_PIN,OUTPUT);
    19aa:	83 e0       	ldi	r24, 0x03	; 3
    19ac:	60 e0       	ldi	r22, 0x00	; 0
    19ae:	41 e0       	ldi	r20, 0x01	; 1
    19b0:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    19b4:	fe 01       	movw	r30, r28
    19b6:	e9 5b       	subi	r30, 0xB9	; 185
    19b8:	ff 4f       	sbci	r31, 0xFF	; 255
    19ba:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    19bc:	fe 01       	movw	r30, r28
    19be:	e9 5b       	subi	r30, 0xB9	; 185
    19c0:	ff 4f       	sbci	r31, 0xFF	; 255
    19c2:	80 81       	ld	r24, Z
    19c4:	81 30       	cpi	r24, 0x01	; 1
    19c6:	41 f0       	breq	.+16     	; 0x19d8 <LCD_enumInit+0x1e4>
    19c8:	fe 01       	movw	r30, r28
    19ca:	e9 5b       	subi	r30, 0xB9	; 185
    19cc:	ff 4f       	sbci	r31, 0xFF	; 255
    19ce:	80 81       	ld	r24, Z
    19d0:	29 96       	adiw	r28, 0x09	; 9
    19d2:	8f af       	std	Y+63, r24	; 0x3f
    19d4:	29 97       	sbiw	r28, 0x09	; 9
    19d6:	82 c2       	rjmp	.+1284   	; 0x1edc <LCD_enumInit+0x6e8>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_D6_PORT,LCD_D6_PIN,OUTPUT);
    19d8:	80 e0       	ldi	r24, 0x00	; 0
    19da:	61 e0       	ldi	r22, 0x01	; 1
    19dc:	41 e0       	ldi	r20, 0x01	; 1
    19de:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    19e2:	fe 01       	movw	r30, r28
    19e4:	e9 5b       	subi	r30, 0xB9	; 185
    19e6:	ff 4f       	sbci	r31, 0xFF	; 255
    19e8:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    19ea:	fe 01       	movw	r30, r28
    19ec:	e9 5b       	subi	r30, 0xB9	; 185
    19ee:	ff 4f       	sbci	r31, 0xFF	; 255
    19f0:	80 81       	ld	r24, Z
    19f2:	81 30       	cpi	r24, 0x01	; 1
    19f4:	41 f0       	breq	.+16     	; 0x1a06 <LCD_enumInit+0x212>
    19f6:	fe 01       	movw	r30, r28
    19f8:	e9 5b       	subi	r30, 0xB9	; 185
    19fa:	ff 4f       	sbci	r31, 0xFF	; 255
    19fc:	80 81       	ld	r24, Z
    19fe:	29 96       	adiw	r28, 0x09	; 9
    1a00:	8f af       	std	Y+63, r24	; 0x3f
    1a02:	29 97       	sbiw	r28, 0x09	; 9
    1a04:	6b c2       	rjmp	.+1238   	; 0x1edc <LCD_enumInit+0x6e8>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_D5_PORT,LCD_D5_PIN,OUTPUT);
    1a06:	81 e0       	ldi	r24, 0x01	; 1
    1a08:	61 e0       	ldi	r22, 0x01	; 1
    1a0a:	41 e0       	ldi	r20, 0x01	; 1
    1a0c:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    1a10:	fe 01       	movw	r30, r28
    1a12:	e9 5b       	subi	r30, 0xB9	; 185
    1a14:	ff 4f       	sbci	r31, 0xFF	; 255
    1a16:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1a18:	fe 01       	movw	r30, r28
    1a1a:	e9 5b       	subi	r30, 0xB9	; 185
    1a1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a1e:	80 81       	ld	r24, Z
    1a20:	81 30       	cpi	r24, 0x01	; 1
    1a22:	41 f0       	breq	.+16     	; 0x1a34 <LCD_enumInit+0x240>
    1a24:	fe 01       	movw	r30, r28
    1a26:	e9 5b       	subi	r30, 0xB9	; 185
    1a28:	ff 4f       	sbci	r31, 0xFF	; 255
    1a2a:	80 81       	ld	r24, Z
    1a2c:	29 96       	adiw	r28, 0x09	; 9
    1a2e:	8f af       	std	Y+63, r24	; 0x3f
    1a30:	29 97       	sbiw	r28, 0x09	; 9
    1a32:	54 c2       	rjmp	.+1192   	; 0x1edc <LCD_enumInit+0x6e8>
    Local_enumErrorState=DIO_enumSetPinDirection(LCD_D4_PORT,LCD_D4_PIN,OUTPUT);
    1a34:	82 e0       	ldi	r24, 0x02	; 2
    1a36:	61 e0       	ldi	r22, 0x01	; 1
    1a38:	41 e0       	ldi	r20, 0x01	; 1
    1a3a:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    1a3e:	fe 01       	movw	r30, r28
    1a40:	e9 5b       	subi	r30, 0xB9	; 185
    1a42:	ff 4f       	sbci	r31, 0xFF	; 255
    1a44:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1a46:	fe 01       	movw	r30, r28
    1a48:	e9 5b       	subi	r30, 0xB9	; 185
    1a4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a4c:	80 81       	ld	r24, Z
    1a4e:	81 30       	cpi	r24, 0x01	; 1
    1a50:	41 f0       	breq	.+16     	; 0x1a62 <LCD_enumInit+0x26e>
    1a52:	fe 01       	movw	r30, r28
    1a54:	e9 5b       	subi	r30, 0xB9	; 185
    1a56:	ff 4f       	sbci	r31, 0xFF	; 255
    1a58:	80 81       	ld	r24, Z
    1a5a:	29 96       	adiw	r28, 0x09	; 9
    1a5c:	8f af       	std	Y+63, r24	; 0x3f
    1a5e:	29 97       	sbiw	r28, 0x09	; 9
    1a60:	3d c2       	rjmp	.+1146   	; 0x1edc <LCD_enumInit+0x6e8>
    Local_enumErrorState=LCD_inlenumSendCommand(0x38);
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;

#elif LCD_MODE == FOUR_BIT

    Local_enumErrorState=LCD_inlenumSendCommand(0x28);
    1a62:	88 e2       	ldi	r24, 0x28	; 40
    1a64:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <LCD_inlenumSendCommand>
    1a68:	fe 01       	movw	r30, r28
    1a6a:	e9 5b       	subi	r30, 0xB9	; 185
    1a6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6e:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1a70:	fe 01       	movw	r30, r28
    1a72:	e9 5b       	subi	r30, 0xB9	; 185
    1a74:	ff 4f       	sbci	r31, 0xFF	; 255
    1a76:	80 81       	ld	r24, Z
    1a78:	81 30       	cpi	r24, 0x01	; 1
    1a7a:	41 f0       	breq	.+16     	; 0x1a8c <LCD_enumInit+0x298>
    1a7c:	fe 01       	movw	r30, r28
    1a7e:	e9 5b       	subi	r30, 0xB9	; 185
    1a80:	ff 4f       	sbci	r31, 0xFF	; 255
    1a82:	80 81       	ld	r24, Z
    1a84:	29 96       	adiw	r28, 0x09	; 9
    1a86:	8f af       	std	Y+63, r24	; 0x3f
    1a88:	29 97       	sbiw	r28, 0x09	; 9
    1a8a:	28 c2       	rjmp	.+1104   	; 0x1edc <LCD_enumInit+0x6e8>
    1a8c:	80 e0       	ldi	r24, 0x00	; 0
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	a0 e8       	ldi	r26, 0x80	; 128
    1a92:	bf e3       	ldi	r27, 0x3F	; 63
    1a94:	8d ab       	std	Y+53, r24	; 0x35
    1a96:	9e ab       	std	Y+54, r25	; 0x36
    1a98:	af ab       	std	Y+55, r26	; 0x37
    1a9a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a9c:	6d a9       	ldd	r22, Y+53	; 0x35
    1a9e:	7e a9       	ldd	r23, Y+54	; 0x36
    1aa0:	8f a9       	ldd	r24, Y+55	; 0x37
    1aa2:	98 ad       	ldd	r25, Y+56	; 0x38
    1aa4:	20 e0       	ldi	r18, 0x00	; 0
    1aa6:	30 e0       	ldi	r19, 0x00	; 0
    1aa8:	4a e7       	ldi	r20, 0x7A	; 122
    1aaa:	53 e4       	ldi	r21, 0x43	; 67
    1aac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ab0:	dc 01       	movw	r26, r24
    1ab2:	cb 01       	movw	r24, r22
    1ab4:	89 ab       	std	Y+49, r24	; 0x31
    1ab6:	9a ab       	std	Y+50, r25	; 0x32
    1ab8:	ab ab       	std	Y+51, r26	; 0x33
    1aba:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1abc:	69 a9       	ldd	r22, Y+49	; 0x31
    1abe:	7a a9       	ldd	r23, Y+50	; 0x32
    1ac0:	8b a9       	ldd	r24, Y+51	; 0x33
    1ac2:	9c a9       	ldd	r25, Y+52	; 0x34
    1ac4:	20 e0       	ldi	r18, 0x00	; 0
    1ac6:	30 e0       	ldi	r19, 0x00	; 0
    1ac8:	40 e8       	ldi	r20, 0x80	; 128
    1aca:	5f e3       	ldi	r21, 0x3F	; 63
    1acc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ad0:	88 23       	and	r24, r24
    1ad2:	2c f4       	brge	.+10     	; 0x1ade <LCD_enumInit+0x2ea>
		__ticks = 1;
    1ad4:	81 e0       	ldi	r24, 0x01	; 1
    1ad6:	90 e0       	ldi	r25, 0x00	; 0
    1ad8:	98 ab       	std	Y+48, r25	; 0x30
    1ada:	8f a7       	std	Y+47, r24	; 0x2f
    1adc:	3f c0       	rjmp	.+126    	; 0x1b5c <LCD_enumInit+0x368>
	else if (__tmp > 65535)
    1ade:	69 a9       	ldd	r22, Y+49	; 0x31
    1ae0:	7a a9       	ldd	r23, Y+50	; 0x32
    1ae2:	8b a9       	ldd	r24, Y+51	; 0x33
    1ae4:	9c a9       	ldd	r25, Y+52	; 0x34
    1ae6:	20 e0       	ldi	r18, 0x00	; 0
    1ae8:	3f ef       	ldi	r19, 0xFF	; 255
    1aea:	4f e7       	ldi	r20, 0x7F	; 127
    1aec:	57 e4       	ldi	r21, 0x47	; 71
    1aee:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1af2:	18 16       	cp	r1, r24
    1af4:	4c f5       	brge	.+82     	; 0x1b48 <LCD_enumInit+0x354>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1af6:	6d a9       	ldd	r22, Y+53	; 0x35
    1af8:	7e a9       	ldd	r23, Y+54	; 0x36
    1afa:	8f a9       	ldd	r24, Y+55	; 0x37
    1afc:	98 ad       	ldd	r25, Y+56	; 0x38
    1afe:	20 e0       	ldi	r18, 0x00	; 0
    1b00:	30 e0       	ldi	r19, 0x00	; 0
    1b02:	40 e2       	ldi	r20, 0x20	; 32
    1b04:	51 e4       	ldi	r21, 0x41	; 65
    1b06:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b0a:	dc 01       	movw	r26, r24
    1b0c:	cb 01       	movw	r24, r22
    1b0e:	bc 01       	movw	r22, r24
    1b10:	cd 01       	movw	r24, r26
    1b12:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b16:	dc 01       	movw	r26, r24
    1b18:	cb 01       	movw	r24, r22
    1b1a:	98 ab       	std	Y+48, r25	; 0x30
    1b1c:	8f a7       	std	Y+47, r24	; 0x2f
    1b1e:	0f c0       	rjmp	.+30     	; 0x1b3e <LCD_enumInit+0x34a>
    1b20:	89 e1       	ldi	r24, 0x19	; 25
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	9e a7       	std	Y+46, r25	; 0x2e
    1b26:	8d a7       	std	Y+45, r24	; 0x2d
    1b28:	8d a5       	ldd	r24, Y+45	; 0x2d
    1b2a:	9e a5       	ldd	r25, Y+46	; 0x2e
    1b2c:	01 97       	sbiw	r24, 0x01	; 1
    1b2e:	f1 f7       	brne	.-4      	; 0x1b2c <LCD_enumInit+0x338>
    1b30:	9e a7       	std	Y+46, r25	; 0x2e
    1b32:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b34:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b36:	98 a9       	ldd	r25, Y+48	; 0x30
    1b38:	01 97       	sbiw	r24, 0x01	; 1
    1b3a:	98 ab       	std	Y+48, r25	; 0x30
    1b3c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b3e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b40:	98 a9       	ldd	r25, Y+48	; 0x30
    1b42:	00 97       	sbiw	r24, 0x00	; 0
    1b44:	69 f7       	brne	.-38     	; 0x1b20 <LCD_enumInit+0x32c>
    1b46:	14 c0       	rjmp	.+40     	; 0x1b70 <LCD_enumInit+0x37c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b48:	69 a9       	ldd	r22, Y+49	; 0x31
    1b4a:	7a a9       	ldd	r23, Y+50	; 0x32
    1b4c:	8b a9       	ldd	r24, Y+51	; 0x33
    1b4e:	9c a9       	ldd	r25, Y+52	; 0x34
    1b50:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b54:	dc 01       	movw	r26, r24
    1b56:	cb 01       	movw	r24, r22
    1b58:	98 ab       	std	Y+48, r25	; 0x30
    1b5a:	8f a7       	std	Y+47, r24	; 0x2f
    1b5c:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b5e:	98 a9       	ldd	r25, Y+48	; 0x30
    1b60:	9c a7       	std	Y+44, r25	; 0x2c
    1b62:	8b a7       	std	Y+43, r24	; 0x2b
    1b64:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b66:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b68:	01 97       	sbiw	r24, 0x01	; 1
    1b6a:	f1 f7       	brne	.-4      	; 0x1b68 <LCD_enumInit+0x374>
    1b6c:	9c a7       	std	Y+44, r25	; 0x2c
    1b6e:	8b a7       	std	Y+43, r24	; 0x2b

#endif

    _delay_ms(1);

    Local_enumErrorState=LCD_inlenumSendCommand(0x0D);
    1b70:	8d e0       	ldi	r24, 0x0D	; 13
    1b72:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <LCD_inlenumSendCommand>
    1b76:	fe 01       	movw	r30, r28
    1b78:	e9 5b       	subi	r30, 0xB9	; 185
    1b7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b7c:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1b7e:	fe 01       	movw	r30, r28
    1b80:	e9 5b       	subi	r30, 0xB9	; 185
    1b82:	ff 4f       	sbci	r31, 0xFF	; 255
    1b84:	80 81       	ld	r24, Z
    1b86:	81 30       	cpi	r24, 0x01	; 1
    1b88:	41 f0       	breq	.+16     	; 0x1b9a <LCD_enumInit+0x3a6>
    1b8a:	fe 01       	movw	r30, r28
    1b8c:	e9 5b       	subi	r30, 0xB9	; 185
    1b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b90:	80 81       	ld	r24, Z
    1b92:	29 96       	adiw	r28, 0x09	; 9
    1b94:	8f af       	std	Y+63, r24	; 0x3f
    1b96:	29 97       	sbiw	r28, 0x09	; 9
    1b98:	a1 c1       	rjmp	.+834    	; 0x1edc <LCD_enumInit+0x6e8>
    1b9a:	80 e0       	ldi	r24, 0x00	; 0
    1b9c:	90 e0       	ldi	r25, 0x00	; 0
    1b9e:	a0 e8       	ldi	r26, 0x80	; 128
    1ba0:	bf e3       	ldi	r27, 0x3F	; 63
    1ba2:	8f a3       	std	Y+39, r24	; 0x27
    1ba4:	98 a7       	std	Y+40, r25	; 0x28
    1ba6:	a9 a7       	std	Y+41, r26	; 0x29
    1ba8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1baa:	6f a1       	ldd	r22, Y+39	; 0x27
    1bac:	78 a5       	ldd	r23, Y+40	; 0x28
    1bae:	89 a5       	ldd	r24, Y+41	; 0x29
    1bb0:	9a a5       	ldd	r25, Y+42	; 0x2a
    1bb2:	20 e0       	ldi	r18, 0x00	; 0
    1bb4:	30 e0       	ldi	r19, 0x00	; 0
    1bb6:	4a e7       	ldi	r20, 0x7A	; 122
    1bb8:	53 e4       	ldi	r21, 0x43	; 67
    1bba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bbe:	dc 01       	movw	r26, r24
    1bc0:	cb 01       	movw	r24, r22
    1bc2:	8b a3       	std	Y+35, r24	; 0x23
    1bc4:	9c a3       	std	Y+36, r25	; 0x24
    1bc6:	ad a3       	std	Y+37, r26	; 0x25
    1bc8:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1bca:	6b a1       	ldd	r22, Y+35	; 0x23
    1bcc:	7c a1       	ldd	r23, Y+36	; 0x24
    1bce:	8d a1       	ldd	r24, Y+37	; 0x25
    1bd0:	9e a1       	ldd	r25, Y+38	; 0x26
    1bd2:	20 e0       	ldi	r18, 0x00	; 0
    1bd4:	30 e0       	ldi	r19, 0x00	; 0
    1bd6:	40 e8       	ldi	r20, 0x80	; 128
    1bd8:	5f e3       	ldi	r21, 0x3F	; 63
    1bda:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1bde:	88 23       	and	r24, r24
    1be0:	2c f4       	brge	.+10     	; 0x1bec <LCD_enumInit+0x3f8>
		__ticks = 1;
    1be2:	81 e0       	ldi	r24, 0x01	; 1
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	9a a3       	std	Y+34, r25	; 0x22
    1be8:	89 a3       	std	Y+33, r24	; 0x21
    1bea:	3f c0       	rjmp	.+126    	; 0x1c6a <LCD_enumInit+0x476>
	else if (__tmp > 65535)
    1bec:	6b a1       	ldd	r22, Y+35	; 0x23
    1bee:	7c a1       	ldd	r23, Y+36	; 0x24
    1bf0:	8d a1       	ldd	r24, Y+37	; 0x25
    1bf2:	9e a1       	ldd	r25, Y+38	; 0x26
    1bf4:	20 e0       	ldi	r18, 0x00	; 0
    1bf6:	3f ef       	ldi	r19, 0xFF	; 255
    1bf8:	4f e7       	ldi	r20, 0x7F	; 127
    1bfa:	57 e4       	ldi	r21, 0x47	; 71
    1bfc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c00:	18 16       	cp	r1, r24
    1c02:	4c f5       	brge	.+82     	; 0x1c56 <LCD_enumInit+0x462>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c04:	6f a1       	ldd	r22, Y+39	; 0x27
    1c06:	78 a5       	ldd	r23, Y+40	; 0x28
    1c08:	89 a5       	ldd	r24, Y+41	; 0x29
    1c0a:	9a a5       	ldd	r25, Y+42	; 0x2a
    1c0c:	20 e0       	ldi	r18, 0x00	; 0
    1c0e:	30 e0       	ldi	r19, 0x00	; 0
    1c10:	40 e2       	ldi	r20, 0x20	; 32
    1c12:	51 e4       	ldi	r21, 0x41	; 65
    1c14:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c18:	dc 01       	movw	r26, r24
    1c1a:	cb 01       	movw	r24, r22
    1c1c:	bc 01       	movw	r22, r24
    1c1e:	cd 01       	movw	r24, r26
    1c20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c24:	dc 01       	movw	r26, r24
    1c26:	cb 01       	movw	r24, r22
    1c28:	9a a3       	std	Y+34, r25	; 0x22
    1c2a:	89 a3       	std	Y+33, r24	; 0x21
    1c2c:	0f c0       	rjmp	.+30     	; 0x1c4c <LCD_enumInit+0x458>
    1c2e:	89 e1       	ldi	r24, 0x19	; 25
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	98 a3       	std	Y+32, r25	; 0x20
    1c34:	8f 8f       	std	Y+31, r24	; 0x1f
    1c36:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c38:	98 a1       	ldd	r25, Y+32	; 0x20
    1c3a:	01 97       	sbiw	r24, 0x01	; 1
    1c3c:	f1 f7       	brne	.-4      	; 0x1c3a <LCD_enumInit+0x446>
    1c3e:	98 a3       	std	Y+32, r25	; 0x20
    1c40:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c42:	89 a1       	ldd	r24, Y+33	; 0x21
    1c44:	9a a1       	ldd	r25, Y+34	; 0x22
    1c46:	01 97       	sbiw	r24, 0x01	; 1
    1c48:	9a a3       	std	Y+34, r25	; 0x22
    1c4a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c4c:	89 a1       	ldd	r24, Y+33	; 0x21
    1c4e:	9a a1       	ldd	r25, Y+34	; 0x22
    1c50:	00 97       	sbiw	r24, 0x00	; 0
    1c52:	69 f7       	brne	.-38     	; 0x1c2e <LCD_enumInit+0x43a>
    1c54:	14 c0       	rjmp	.+40     	; 0x1c7e <LCD_enumInit+0x48a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c56:	6b a1       	ldd	r22, Y+35	; 0x23
    1c58:	7c a1       	ldd	r23, Y+36	; 0x24
    1c5a:	8d a1       	ldd	r24, Y+37	; 0x25
    1c5c:	9e a1       	ldd	r25, Y+38	; 0x26
    1c5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c62:	dc 01       	movw	r26, r24
    1c64:	cb 01       	movw	r24, r22
    1c66:	9a a3       	std	Y+34, r25	; 0x22
    1c68:	89 a3       	std	Y+33, r24	; 0x21
    1c6a:	89 a1       	ldd	r24, Y+33	; 0x21
    1c6c:	9a a1       	ldd	r25, Y+34	; 0x22
    1c6e:	9e 8f       	std	Y+30, r25	; 0x1e
    1c70:	8d 8f       	std	Y+29, r24	; 0x1d
    1c72:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1c74:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1c76:	01 97       	sbiw	r24, 0x01	; 1
    1c78:	f1 f7       	brne	.-4      	; 0x1c76 <LCD_enumInit+0x482>
    1c7a:	9e 8f       	std	Y+30, r25	; 0x1e
    1c7c:	8d 8f       	std	Y+29, r24	; 0x1d

    _delay_ms(1);

    Local_enumErrorState=LCD_inlenumSendCommand(0x01);
    1c7e:	81 e0       	ldi	r24, 0x01	; 1
    1c80:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <LCD_inlenumSendCommand>
    1c84:	fe 01       	movw	r30, r28
    1c86:	e9 5b       	subi	r30, 0xB9	; 185
    1c88:	ff 4f       	sbci	r31, 0xFF	; 255
    1c8a:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1c8c:	fe 01       	movw	r30, r28
    1c8e:	e9 5b       	subi	r30, 0xB9	; 185
    1c90:	ff 4f       	sbci	r31, 0xFF	; 255
    1c92:	80 81       	ld	r24, Z
    1c94:	81 30       	cpi	r24, 0x01	; 1
    1c96:	41 f0       	breq	.+16     	; 0x1ca8 <LCD_enumInit+0x4b4>
    1c98:	fe 01       	movw	r30, r28
    1c9a:	e9 5b       	subi	r30, 0xB9	; 185
    1c9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c9e:	80 81       	ld	r24, Z
    1ca0:	29 96       	adiw	r28, 0x09	; 9
    1ca2:	8f af       	std	Y+63, r24	; 0x3f
    1ca4:	29 97       	sbiw	r28, 0x09	; 9
    1ca6:	1a c1       	rjmp	.+564    	; 0x1edc <LCD_enumInit+0x6e8>
    1ca8:	80 e0       	ldi	r24, 0x00	; 0
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	a0 e4       	ldi	r26, 0x40	; 64
    1cae:	b0 e4       	ldi	r27, 0x40	; 64
    1cb0:	89 8f       	std	Y+25, r24	; 0x19
    1cb2:	9a 8f       	std	Y+26, r25	; 0x1a
    1cb4:	ab 8f       	std	Y+27, r26	; 0x1b
    1cb6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cb8:	69 8d       	ldd	r22, Y+25	; 0x19
    1cba:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1cbc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1cbe:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1cc0:	20 e0       	ldi	r18, 0x00	; 0
    1cc2:	30 e0       	ldi	r19, 0x00	; 0
    1cc4:	4a e7       	ldi	r20, 0x7A	; 122
    1cc6:	53 e4       	ldi	r21, 0x43	; 67
    1cc8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ccc:	dc 01       	movw	r26, r24
    1cce:	cb 01       	movw	r24, r22
    1cd0:	8d 8b       	std	Y+21, r24	; 0x15
    1cd2:	9e 8b       	std	Y+22, r25	; 0x16
    1cd4:	af 8b       	std	Y+23, r26	; 0x17
    1cd6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1cd8:	6d 89       	ldd	r22, Y+21	; 0x15
    1cda:	7e 89       	ldd	r23, Y+22	; 0x16
    1cdc:	8f 89       	ldd	r24, Y+23	; 0x17
    1cde:	98 8d       	ldd	r25, Y+24	; 0x18
    1ce0:	20 e0       	ldi	r18, 0x00	; 0
    1ce2:	30 e0       	ldi	r19, 0x00	; 0
    1ce4:	40 e8       	ldi	r20, 0x80	; 128
    1ce6:	5f e3       	ldi	r21, 0x3F	; 63
    1ce8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1cec:	88 23       	and	r24, r24
    1cee:	2c f4       	brge	.+10     	; 0x1cfa <LCD_enumInit+0x506>
		__ticks = 1;
    1cf0:	81 e0       	ldi	r24, 0x01	; 1
    1cf2:	90 e0       	ldi	r25, 0x00	; 0
    1cf4:	9c 8b       	std	Y+20, r25	; 0x14
    1cf6:	8b 8b       	std	Y+19, r24	; 0x13
    1cf8:	3f c0       	rjmp	.+126    	; 0x1d78 <LCD_enumInit+0x584>
	else if (__tmp > 65535)
    1cfa:	6d 89       	ldd	r22, Y+21	; 0x15
    1cfc:	7e 89       	ldd	r23, Y+22	; 0x16
    1cfe:	8f 89       	ldd	r24, Y+23	; 0x17
    1d00:	98 8d       	ldd	r25, Y+24	; 0x18
    1d02:	20 e0       	ldi	r18, 0x00	; 0
    1d04:	3f ef       	ldi	r19, 0xFF	; 255
    1d06:	4f e7       	ldi	r20, 0x7F	; 127
    1d08:	57 e4       	ldi	r21, 0x47	; 71
    1d0a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d0e:	18 16       	cp	r1, r24
    1d10:	4c f5       	brge	.+82     	; 0x1d64 <LCD_enumInit+0x570>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d12:	69 8d       	ldd	r22, Y+25	; 0x19
    1d14:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1d16:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d18:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d1a:	20 e0       	ldi	r18, 0x00	; 0
    1d1c:	30 e0       	ldi	r19, 0x00	; 0
    1d1e:	40 e2       	ldi	r20, 0x20	; 32
    1d20:	51 e4       	ldi	r21, 0x41	; 65
    1d22:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d26:	dc 01       	movw	r26, r24
    1d28:	cb 01       	movw	r24, r22
    1d2a:	bc 01       	movw	r22, r24
    1d2c:	cd 01       	movw	r24, r26
    1d2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d32:	dc 01       	movw	r26, r24
    1d34:	cb 01       	movw	r24, r22
    1d36:	9c 8b       	std	Y+20, r25	; 0x14
    1d38:	8b 8b       	std	Y+19, r24	; 0x13
    1d3a:	0f c0       	rjmp	.+30     	; 0x1d5a <LCD_enumInit+0x566>
    1d3c:	89 e1       	ldi	r24, 0x19	; 25
    1d3e:	90 e0       	ldi	r25, 0x00	; 0
    1d40:	9a 8b       	std	Y+18, r25	; 0x12
    1d42:	89 8b       	std	Y+17, r24	; 0x11
    1d44:	89 89       	ldd	r24, Y+17	; 0x11
    1d46:	9a 89       	ldd	r25, Y+18	; 0x12
    1d48:	01 97       	sbiw	r24, 0x01	; 1
    1d4a:	f1 f7       	brne	.-4      	; 0x1d48 <LCD_enumInit+0x554>
    1d4c:	9a 8b       	std	Y+18, r25	; 0x12
    1d4e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d50:	8b 89       	ldd	r24, Y+19	; 0x13
    1d52:	9c 89       	ldd	r25, Y+20	; 0x14
    1d54:	01 97       	sbiw	r24, 0x01	; 1
    1d56:	9c 8b       	std	Y+20, r25	; 0x14
    1d58:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d5a:	8b 89       	ldd	r24, Y+19	; 0x13
    1d5c:	9c 89       	ldd	r25, Y+20	; 0x14
    1d5e:	00 97       	sbiw	r24, 0x00	; 0
    1d60:	69 f7       	brne	.-38     	; 0x1d3c <LCD_enumInit+0x548>
    1d62:	14 c0       	rjmp	.+40     	; 0x1d8c <LCD_enumInit+0x598>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d64:	6d 89       	ldd	r22, Y+21	; 0x15
    1d66:	7e 89       	ldd	r23, Y+22	; 0x16
    1d68:	8f 89       	ldd	r24, Y+23	; 0x17
    1d6a:	98 8d       	ldd	r25, Y+24	; 0x18
    1d6c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d70:	dc 01       	movw	r26, r24
    1d72:	cb 01       	movw	r24, r22
    1d74:	9c 8b       	std	Y+20, r25	; 0x14
    1d76:	8b 8b       	std	Y+19, r24	; 0x13
    1d78:	8b 89       	ldd	r24, Y+19	; 0x13
    1d7a:	9c 89       	ldd	r25, Y+20	; 0x14
    1d7c:	98 8b       	std	Y+16, r25	; 0x10
    1d7e:	8f 87       	std	Y+15, r24	; 0x0f
    1d80:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d82:	98 89       	ldd	r25, Y+16	; 0x10
    1d84:	01 97       	sbiw	r24, 0x01	; 1
    1d86:	f1 f7       	brne	.-4      	; 0x1d84 <LCD_enumInit+0x590>
    1d88:	98 8b       	std	Y+16, r25	; 0x10
    1d8a:	8f 87       	std	Y+15, r24	; 0x0f

    _delay_ms(3);

    Local_enumErrorState=LCD_inlenumSendCommand(0x06);
    1d8c:	86 e0       	ldi	r24, 0x06	; 6
    1d8e:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <LCD_inlenumSendCommand>
    1d92:	fe 01       	movw	r30, r28
    1d94:	e9 5b       	subi	r30, 0xB9	; 185
    1d96:	ff 4f       	sbci	r31, 0xFF	; 255
    1d98:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1d9a:	fe 01       	movw	r30, r28
    1d9c:	e9 5b       	subi	r30, 0xB9	; 185
    1d9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1da0:	80 81       	ld	r24, Z
    1da2:	81 30       	cpi	r24, 0x01	; 1
    1da4:	41 f0       	breq	.+16     	; 0x1db6 <LCD_enumInit+0x5c2>
    1da6:	fe 01       	movw	r30, r28
    1da8:	e9 5b       	subi	r30, 0xB9	; 185
    1daa:	ff 4f       	sbci	r31, 0xFF	; 255
    1dac:	80 81       	ld	r24, Z
    1dae:	29 96       	adiw	r28, 0x09	; 9
    1db0:	8f af       	std	Y+63, r24	; 0x3f
    1db2:	29 97       	sbiw	r28, 0x09	; 9
    1db4:	93 c0       	rjmp	.+294    	; 0x1edc <LCD_enumInit+0x6e8>
    1db6:	80 e0       	ldi	r24, 0x00	; 0
    1db8:	90 e0       	ldi	r25, 0x00	; 0
    1dba:	a0 e8       	ldi	r26, 0x80	; 128
    1dbc:	bf e3       	ldi	r27, 0x3F	; 63
    1dbe:	8b 87       	std	Y+11, r24	; 0x0b
    1dc0:	9c 87       	std	Y+12, r25	; 0x0c
    1dc2:	ad 87       	std	Y+13, r26	; 0x0d
    1dc4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dc6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1dc8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1dca:	8d 85       	ldd	r24, Y+13	; 0x0d
    1dcc:	9e 85       	ldd	r25, Y+14	; 0x0e
    1dce:	20 e0       	ldi	r18, 0x00	; 0
    1dd0:	30 e0       	ldi	r19, 0x00	; 0
    1dd2:	4a e7       	ldi	r20, 0x7A	; 122
    1dd4:	53 e4       	ldi	r21, 0x43	; 67
    1dd6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dda:	dc 01       	movw	r26, r24
    1ddc:	cb 01       	movw	r24, r22
    1dde:	8f 83       	std	Y+7, r24	; 0x07
    1de0:	98 87       	std	Y+8, r25	; 0x08
    1de2:	a9 87       	std	Y+9, r26	; 0x09
    1de4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1de6:	6f 81       	ldd	r22, Y+7	; 0x07
    1de8:	78 85       	ldd	r23, Y+8	; 0x08
    1dea:	89 85       	ldd	r24, Y+9	; 0x09
    1dec:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dee:	20 e0       	ldi	r18, 0x00	; 0
    1df0:	30 e0       	ldi	r19, 0x00	; 0
    1df2:	40 e8       	ldi	r20, 0x80	; 128
    1df4:	5f e3       	ldi	r21, 0x3F	; 63
    1df6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1dfa:	88 23       	and	r24, r24
    1dfc:	2c f4       	brge	.+10     	; 0x1e08 <LCD_enumInit+0x614>
		__ticks = 1;
    1dfe:	81 e0       	ldi	r24, 0x01	; 1
    1e00:	90 e0       	ldi	r25, 0x00	; 0
    1e02:	9e 83       	std	Y+6, r25	; 0x06
    1e04:	8d 83       	std	Y+5, r24	; 0x05
    1e06:	3f c0       	rjmp	.+126    	; 0x1e86 <LCD_enumInit+0x692>
	else if (__tmp > 65535)
    1e08:	6f 81       	ldd	r22, Y+7	; 0x07
    1e0a:	78 85       	ldd	r23, Y+8	; 0x08
    1e0c:	89 85       	ldd	r24, Y+9	; 0x09
    1e0e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e10:	20 e0       	ldi	r18, 0x00	; 0
    1e12:	3f ef       	ldi	r19, 0xFF	; 255
    1e14:	4f e7       	ldi	r20, 0x7F	; 127
    1e16:	57 e4       	ldi	r21, 0x47	; 71
    1e18:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e1c:	18 16       	cp	r1, r24
    1e1e:	4c f5       	brge	.+82     	; 0x1e72 <LCD_enumInit+0x67e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e20:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e22:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e24:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e26:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e28:	20 e0       	ldi	r18, 0x00	; 0
    1e2a:	30 e0       	ldi	r19, 0x00	; 0
    1e2c:	40 e2       	ldi	r20, 0x20	; 32
    1e2e:	51 e4       	ldi	r21, 0x41	; 65
    1e30:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e34:	dc 01       	movw	r26, r24
    1e36:	cb 01       	movw	r24, r22
    1e38:	bc 01       	movw	r22, r24
    1e3a:	cd 01       	movw	r24, r26
    1e3c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e40:	dc 01       	movw	r26, r24
    1e42:	cb 01       	movw	r24, r22
    1e44:	9e 83       	std	Y+6, r25	; 0x06
    1e46:	8d 83       	std	Y+5, r24	; 0x05
    1e48:	0f c0       	rjmp	.+30     	; 0x1e68 <LCD_enumInit+0x674>
    1e4a:	89 e1       	ldi	r24, 0x19	; 25
    1e4c:	90 e0       	ldi	r25, 0x00	; 0
    1e4e:	9c 83       	std	Y+4, r25	; 0x04
    1e50:	8b 83       	std	Y+3, r24	; 0x03
    1e52:	8b 81       	ldd	r24, Y+3	; 0x03
    1e54:	9c 81       	ldd	r25, Y+4	; 0x04
    1e56:	01 97       	sbiw	r24, 0x01	; 1
    1e58:	f1 f7       	brne	.-4      	; 0x1e56 <LCD_enumInit+0x662>
    1e5a:	9c 83       	std	Y+4, r25	; 0x04
    1e5c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e5e:	8d 81       	ldd	r24, Y+5	; 0x05
    1e60:	9e 81       	ldd	r25, Y+6	; 0x06
    1e62:	01 97       	sbiw	r24, 0x01	; 1
    1e64:	9e 83       	std	Y+6, r25	; 0x06
    1e66:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e68:	8d 81       	ldd	r24, Y+5	; 0x05
    1e6a:	9e 81       	ldd	r25, Y+6	; 0x06
    1e6c:	00 97       	sbiw	r24, 0x00	; 0
    1e6e:	69 f7       	brne	.-38     	; 0x1e4a <LCD_enumInit+0x656>
    1e70:	14 c0       	rjmp	.+40     	; 0x1e9a <LCD_enumInit+0x6a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e72:	6f 81       	ldd	r22, Y+7	; 0x07
    1e74:	78 85       	ldd	r23, Y+8	; 0x08
    1e76:	89 85       	ldd	r24, Y+9	; 0x09
    1e78:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e7a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e7e:	dc 01       	movw	r26, r24
    1e80:	cb 01       	movw	r24, r22
    1e82:	9e 83       	std	Y+6, r25	; 0x06
    1e84:	8d 83       	std	Y+5, r24	; 0x05
    1e86:	8d 81       	ldd	r24, Y+5	; 0x05
    1e88:	9e 81       	ldd	r25, Y+6	; 0x06
    1e8a:	9a 83       	std	Y+2, r25	; 0x02
    1e8c:	89 83       	std	Y+1, r24	; 0x01
    1e8e:	89 81       	ldd	r24, Y+1	; 0x01
    1e90:	9a 81       	ldd	r25, Y+2	; 0x02
    1e92:	01 97       	sbiw	r24, 0x01	; 1
    1e94:	f1 f7       	brne	.-4      	; 0x1e92 <LCD_enumInit+0x69e>
    1e96:	9a 83       	std	Y+2, r25	; 0x02
    1e98:	89 83       	std	Y+1, r24	; 0x01

    _delay_ms(1);

    Local_enumErrorState=LCD_inlenumSendCommand(0x80);
    1e9a:	80 e8       	ldi	r24, 0x80	; 128
    1e9c:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <LCD_inlenumSendCommand>
    1ea0:	fe 01       	movw	r30, r28
    1ea2:	e9 5b       	subi	r30, 0xB9	; 185
    1ea4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea6:	80 83       	st	Z, r24
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1ea8:	fe 01       	movw	r30, r28
    1eaa:	e9 5b       	subi	r30, 0xB9	; 185
    1eac:	ff 4f       	sbci	r31, 0xFF	; 255
    1eae:	80 81       	ld	r24, Z
    1eb0:	81 30       	cpi	r24, 0x01	; 1
    1eb2:	41 f0       	breq	.+16     	; 0x1ec4 <LCD_enumInit+0x6d0>
    1eb4:	fe 01       	movw	r30, r28
    1eb6:	e9 5b       	subi	r30, 0xB9	; 185
    1eb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eba:	80 81       	ld	r24, Z
    1ebc:	29 96       	adiw	r28, 0x09	; 9
    1ebe:	8f af       	std	Y+63, r24	; 0x3f
    1ec0:	29 97       	sbiw	r28, 0x09	; 9
    1ec2:	0c c0       	rjmp	.+24     	; 0x1edc <LCD_enumInit+0x6e8>

    Local_enumErrorState=ES_OK;
    1ec4:	fe 01       	movw	r30, r28
    1ec6:	e9 5b       	subi	r30, 0xB9	; 185
    1ec8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eca:	81 e0       	ldi	r24, 0x01	; 1
    1ecc:	80 83       	st	Z, r24

	return Local_enumErrorState;
    1ece:	fe 01       	movw	r30, r28
    1ed0:	e9 5b       	subi	r30, 0xB9	; 185
    1ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed4:	80 81       	ld	r24, Z
    1ed6:	29 96       	adiw	r28, 0x09	; 9
    1ed8:	8f af       	std	Y+63, r24	; 0x3f
    1eda:	29 97       	sbiw	r28, 0x09	; 9
    1edc:	29 96       	adiw	r28, 0x09	; 9
    1ede:	8f ad       	ldd	r24, Y+63	; 0x3f
    1ee0:	29 97       	sbiw	r28, 0x09	; 9
}
    1ee2:	c8 5b       	subi	r28, 0xB8	; 184
    1ee4:	df 4f       	sbci	r29, 0xFF	; 255
    1ee6:	0f b6       	in	r0, 0x3f	; 63
    1ee8:	f8 94       	cli
    1eea:	de bf       	out	0x3e, r29	; 62
    1eec:	0f be       	out	0x3f, r0	; 63
    1eee:	cd bf       	out	0x3d, r28	; 61
    1ef0:	cf 91       	pop	r28
    1ef2:	df 91       	pop	r29
    1ef4:	1f 91       	pop	r17
    1ef6:	0f 91       	pop	r16
    1ef8:	08 95       	ret

00001efa <LCD_inlenumSendCommand>:

static inline ES_T LCD_inlenumSendCommand(u8 Copy_u8Command)
{
    1efa:	df 93       	push	r29
    1efc:	cf 93       	push	r28
    1efe:	00 d0       	rcall	.+0      	; 0x1f00 <LCD_inlenumSendCommand+0x6>
    1f00:	0f 92       	push	r0
    1f02:	cd b7       	in	r28, 0x3d	; 61
    1f04:	de b7       	in	r29, 0x3e	; 62
    1f06:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    1f08:	19 82       	std	Y+1, r1	; 0x01

    Local_enumErrorState=DIO_enumSetPinValue(LCD_RS_PORT,LCD_RS_PIN,LOW);
    1f0a:	80 e0       	ldi	r24, 0x00	; 0
    1f0c:	60 e0       	ldi	r22, 0x00	; 0
    1f0e:	40 e0       	ldi	r20, 0x00	; 0
    1f10:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1f14:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1f16:	89 81       	ldd	r24, Y+1	; 0x01
    1f18:	81 30       	cpi	r24, 0x01	; 1
    1f1a:	19 f0       	breq	.+6      	; 0x1f22 <LCD_inlenumSendCommand+0x28>
    1f1c:	89 81       	ldd	r24, Y+1	; 0x01
    1f1e:	8b 83       	std	Y+3, r24	; 0x03
    1f20:	b7 c0       	rjmp	.+366    	; 0x2090 <LCD_inlenumSendCommand+0x196>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
    1f22:	82 e0       	ldi	r24, 0x02	; 2
    1f24:	60 e0       	ldi	r22, 0x00	; 0
    1f26:	40 e0       	ldi	r20, 0x00	; 0
    1f28:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1f2c:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1f2e:	89 81       	ldd	r24, Y+1	; 0x01
    1f30:	81 30       	cpi	r24, 0x01	; 1
    1f32:	19 f0       	breq	.+6      	; 0x1f3a <LCD_inlenumSendCommand+0x40>
    1f34:	89 81       	ldd	r24, Y+1	; 0x01
    1f36:	8b 83       	std	Y+3, r24	; 0x03
    1f38:	ab c0       	rjmp	.+342    	; 0x2090 <LCD_inlenumSendCommand+0x196>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_RW_PORT,LCD_RW_PIN,LOW);
    1f3a:	81 e0       	ldi	r24, 0x01	; 1
    1f3c:	60 e0       	ldi	r22, 0x00	; 0
    1f3e:	40 e0       	ldi	r20, 0x00	; 0
    1f40:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1f44:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1f46:	89 81       	ldd	r24, Y+1	; 0x01
    1f48:	81 30       	cpi	r24, 0x01	; 1
    1f4a:	19 f0       	breq	.+6      	; 0x1f52 <LCD_inlenumSendCommand+0x58>
    1f4c:	89 81       	ldd	r24, Y+1	; 0x01
    1f4e:	8b 83       	std	Y+3, r24	; 0x03
    1f50:	9f c0       	rjmp	.+318    	; 0x2090 <LCD_inlenumSendCommand+0x196>
    Local_enumErrorState=LCD_inlenumLatch();
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;

#elif LCD_MODE == FOUR_BIT

    Local_enumErrorState=DIO_enumSetPinValue(LCD_D7_PORT,LCD_D7_PIN,READ_BIT(Copy_u8Command,7));
    1f52:	8a 81       	ldd	r24, Y+2	; 0x02
    1f54:	98 2f       	mov	r25, r24
    1f56:	99 1f       	adc	r25, r25
    1f58:	99 27       	eor	r25, r25
    1f5a:	99 1f       	adc	r25, r25
    1f5c:	83 e0       	ldi	r24, 0x03	; 3
    1f5e:	60 e0       	ldi	r22, 0x00	; 0
    1f60:	49 2f       	mov	r20, r25
    1f62:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1f66:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1f68:	89 81       	ldd	r24, Y+1	; 0x01
    1f6a:	81 30       	cpi	r24, 0x01	; 1
    1f6c:	19 f0       	breq	.+6      	; 0x1f74 <LCD_inlenumSendCommand+0x7a>
    1f6e:	89 81       	ldd	r24, Y+1	; 0x01
    1f70:	8b 83       	std	Y+3, r24	; 0x03
    1f72:	8e c0       	rjmp	.+284    	; 0x2090 <LCD_inlenumSendCommand+0x196>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_D6_PORT,LCD_D6_PIN,READ_BIT(Copy_u8Command,6));
    1f74:	8a 81       	ldd	r24, Y+2	; 0x02
    1f76:	82 95       	swap	r24
    1f78:	86 95       	lsr	r24
    1f7a:	86 95       	lsr	r24
    1f7c:	83 70       	andi	r24, 0x03	; 3
    1f7e:	98 2f       	mov	r25, r24
    1f80:	91 70       	andi	r25, 0x01	; 1
    1f82:	80 e0       	ldi	r24, 0x00	; 0
    1f84:	61 e0       	ldi	r22, 0x01	; 1
    1f86:	49 2f       	mov	r20, r25
    1f88:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1f8c:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1f8e:	89 81       	ldd	r24, Y+1	; 0x01
    1f90:	81 30       	cpi	r24, 0x01	; 1
    1f92:	19 f0       	breq	.+6      	; 0x1f9a <LCD_inlenumSendCommand+0xa0>
    1f94:	89 81       	ldd	r24, Y+1	; 0x01
    1f96:	8b 83       	std	Y+3, r24	; 0x03
    1f98:	7b c0       	rjmp	.+246    	; 0x2090 <LCD_inlenumSendCommand+0x196>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_D5_PORT,LCD_D5_PIN,READ_BIT(Copy_u8Command,5));
    1f9a:	8a 81       	ldd	r24, Y+2	; 0x02
    1f9c:	82 95       	swap	r24
    1f9e:	86 95       	lsr	r24
    1fa0:	87 70       	andi	r24, 0x07	; 7
    1fa2:	98 2f       	mov	r25, r24
    1fa4:	91 70       	andi	r25, 0x01	; 1
    1fa6:	81 e0       	ldi	r24, 0x01	; 1
    1fa8:	61 e0       	ldi	r22, 0x01	; 1
    1faa:	49 2f       	mov	r20, r25
    1fac:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1fb0:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1fb2:	89 81       	ldd	r24, Y+1	; 0x01
    1fb4:	81 30       	cpi	r24, 0x01	; 1
    1fb6:	19 f0       	breq	.+6      	; 0x1fbe <LCD_inlenumSendCommand+0xc4>
    1fb8:	89 81       	ldd	r24, Y+1	; 0x01
    1fba:	8b 83       	std	Y+3, r24	; 0x03
    1fbc:	69 c0       	rjmp	.+210    	; 0x2090 <LCD_inlenumSendCommand+0x196>
    Local_enumErrorState=DIO_enumSetPinValue(LCD_D4_PORT,LCD_D4_PIN,READ_BIT(Copy_u8Command,4));
    1fbe:	8a 81       	ldd	r24, Y+2	; 0x02
    1fc0:	82 95       	swap	r24
    1fc2:	8f 70       	andi	r24, 0x0F	; 15
    1fc4:	98 2f       	mov	r25, r24
    1fc6:	91 70       	andi	r25, 0x01	; 1
    1fc8:	82 e0       	ldi	r24, 0x02	; 2
    1fca:	61 e0       	ldi	r22, 0x01	; 1
    1fcc:	49 2f       	mov	r20, r25
    1fce:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    1fd2:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1fd4:	89 81       	ldd	r24, Y+1	; 0x01
    1fd6:	81 30       	cpi	r24, 0x01	; 1
    1fd8:	19 f0       	breq	.+6      	; 0x1fe0 <LCD_inlenumSendCommand+0xe6>
    1fda:	89 81       	ldd	r24, Y+1	; 0x01
    1fdc:	8b 83       	std	Y+3, r24	; 0x03
    1fde:	58 c0       	rjmp	.+176    	; 0x2090 <LCD_inlenumSendCommand+0x196>

    Local_enumErrorState=LCD_inlenumLatch();
    1fe0:	0e 94 4f 10 	call	0x209e	; 0x209e <LCD_inlenumLatch>
    1fe4:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    1fe6:	89 81       	ldd	r24, Y+1	; 0x01
    1fe8:	81 30       	cpi	r24, 0x01	; 1
    1fea:	19 f0       	breq	.+6      	; 0x1ff2 <LCD_inlenumSendCommand+0xf8>
    1fec:	89 81       	ldd	r24, Y+1	; 0x01
    1fee:	8b 83       	std	Y+3, r24	; 0x03
    1ff0:	4f c0       	rjmp	.+158    	; 0x2090 <LCD_inlenumSendCommand+0x196>

	Local_enumErrorState=DIO_enumSetPinValue(LCD_D7_PORT,LCD_D7_PIN,READ_BIT(Copy_u8Command,3));
    1ff2:	8a 81       	ldd	r24, Y+2	; 0x02
    1ff4:	86 95       	lsr	r24
    1ff6:	86 95       	lsr	r24
    1ff8:	86 95       	lsr	r24
    1ffa:	98 2f       	mov	r25, r24
    1ffc:	91 70       	andi	r25, 0x01	; 1
    1ffe:	83 e0       	ldi	r24, 0x03	; 3
    2000:	60 e0       	ldi	r22, 0x00	; 0
    2002:	49 2f       	mov	r20, r25
    2004:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2008:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    200a:	89 81       	ldd	r24, Y+1	; 0x01
    200c:	81 30       	cpi	r24, 0x01	; 1
    200e:	19 f0       	breq	.+6      	; 0x2016 <LCD_inlenumSendCommand+0x11c>
    2010:	89 81       	ldd	r24, Y+1	; 0x01
    2012:	8b 83       	std	Y+3, r24	; 0x03
    2014:	3d c0       	rjmp	.+122    	; 0x2090 <LCD_inlenumSendCommand+0x196>
	Local_enumErrorState=DIO_enumSetPinValue(LCD_D6_PORT,LCD_D6_PIN,READ_BIT(Copy_u8Command,2));
    2016:	8a 81       	ldd	r24, Y+2	; 0x02
    2018:	86 95       	lsr	r24
    201a:	86 95       	lsr	r24
    201c:	98 2f       	mov	r25, r24
    201e:	91 70       	andi	r25, 0x01	; 1
    2020:	80 e0       	ldi	r24, 0x00	; 0
    2022:	61 e0       	ldi	r22, 0x01	; 1
    2024:	49 2f       	mov	r20, r25
    2026:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    202a:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    202c:	89 81       	ldd	r24, Y+1	; 0x01
    202e:	81 30       	cpi	r24, 0x01	; 1
    2030:	19 f0       	breq	.+6      	; 0x2038 <LCD_inlenumSendCommand+0x13e>
    2032:	89 81       	ldd	r24, Y+1	; 0x01
    2034:	8b 83       	std	Y+3, r24	; 0x03
    2036:	2c c0       	rjmp	.+88     	; 0x2090 <LCD_inlenumSendCommand+0x196>
	Local_enumErrorState=DIO_enumSetPinValue(LCD_D5_PORT,LCD_D5_PIN,READ_BIT(Copy_u8Command,1));
    2038:	8a 81       	ldd	r24, Y+2	; 0x02
    203a:	86 95       	lsr	r24
    203c:	98 2f       	mov	r25, r24
    203e:	91 70       	andi	r25, 0x01	; 1
    2040:	81 e0       	ldi	r24, 0x01	; 1
    2042:	61 e0       	ldi	r22, 0x01	; 1
    2044:	49 2f       	mov	r20, r25
    2046:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    204a:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    204c:	89 81       	ldd	r24, Y+1	; 0x01
    204e:	81 30       	cpi	r24, 0x01	; 1
    2050:	19 f0       	breq	.+6      	; 0x2058 <LCD_inlenumSendCommand+0x15e>
    2052:	89 81       	ldd	r24, Y+1	; 0x01
    2054:	8b 83       	std	Y+3, r24	; 0x03
    2056:	1c c0       	rjmp	.+56     	; 0x2090 <LCD_inlenumSendCommand+0x196>
	Local_enumErrorState=DIO_enumSetPinValue(LCD_D4_PORT,LCD_D4_PIN,READ_BIT(Copy_u8Command,0));
    2058:	8a 81       	ldd	r24, Y+2	; 0x02
    205a:	98 2f       	mov	r25, r24
    205c:	91 70       	andi	r25, 0x01	; 1
    205e:	82 e0       	ldi	r24, 0x02	; 2
    2060:	61 e0       	ldi	r22, 0x01	; 1
    2062:	49 2f       	mov	r20, r25
    2064:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2068:	89 83       	std	Y+1, r24	; 0x01
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    206a:	89 81       	ldd	r24, Y+1	; 0x01
    206c:	81 30       	cpi	r24, 0x01	; 1
    206e:	19 f0       	breq	.+6      	; 0x2076 <LCD_inlenumSendCommand+0x17c>
    2070:	89 81       	ldd	r24, Y+1	; 0x01
    2072:	8b 83       	std	Y+3, r24	; 0x03
    2074:	0d c0       	rjmp	.+26     	; 0x2090 <LCD_inlenumSendCommand+0x196>

	Local_enumErrorState=LCD_inlenumLatch();
    2076:	0e 94 4f 10 	call	0x209e	; 0x209e <LCD_inlenumLatch>
    207a:	89 83       	std	Y+1, r24	; 0x01
    if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    207c:	89 81       	ldd	r24, Y+1	; 0x01
    207e:	81 30       	cpi	r24, 0x01	; 1
    2080:	19 f0       	breq	.+6      	; 0x2088 <LCD_inlenumSendCommand+0x18e>
    2082:	89 81       	ldd	r24, Y+1	; 0x01
    2084:	8b 83       	std	Y+3, r24	; 0x03
    2086:	04 c0       	rjmp	.+8      	; 0x2090 <LCD_inlenumSendCommand+0x196>

#error"wrong LCD_MODE"

#endif

	Local_enumErrorState=ES_OK;
    2088:	81 e0       	ldi	r24, 0x01	; 1
    208a:	89 83       	std	Y+1, r24	; 0x01

	return Local_enumErrorState;
    208c:	89 81       	ldd	r24, Y+1	; 0x01
    208e:	8b 83       	std	Y+3, r24	; 0x03
    2090:	8b 81       	ldd	r24, Y+3	; 0x03
}
    2092:	0f 90       	pop	r0
    2094:	0f 90       	pop	r0
    2096:	0f 90       	pop	r0
    2098:	cf 91       	pop	r28
    209a:	df 91       	pop	r29
    209c:	08 95       	ret

0000209e <LCD_inlenumLatch>:

static inline ES_T LCD_inlenumLatch(void)
{
    209e:	df 93       	push	r29
    20a0:	cf 93       	push	r28
    20a2:	cd b7       	in	r28, 0x3d	; 61
    20a4:	de b7       	in	r29, 0x3e	; 62
    20a6:	6e 97       	sbiw	r28, 0x1e	; 30
    20a8:	0f b6       	in	r0, 0x3f	; 63
    20aa:	f8 94       	cli
    20ac:	de bf       	out	0x3e, r29	; 62
    20ae:	0f be       	out	0x3f, r0	; 63
    20b0:	cd bf       	out	0x3d, r28	; 61
	ES_T Local_enumErrorState=ES_NOK;
    20b2:	1d 8e       	std	Y+29, r1	; 0x1d

	Local_enumErrorState=DIO_enumSetPinValue(LCD_EN_PORT,LCD_EN_PIN,HIGH);
    20b4:	82 e0       	ldi	r24, 0x02	; 2
    20b6:	60 e0       	ldi	r22, 0x00	; 0
    20b8:	41 e0       	ldi	r20, 0x01	; 1
    20ba:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    20be:	8d 8f       	std	Y+29, r24	; 0x1d
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    20c0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    20c2:	81 30       	cpi	r24, 0x01	; 1
    20c4:	19 f0       	breq	.+6      	; 0x20cc <LCD_inlenumLatch+0x2e>
    20c6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    20c8:	8e 8f       	std	Y+30, r24	; 0x1e
    20ca:	f4 c0       	rjmp	.+488    	; 0x22b4 <LCD_inlenumLatch+0x216>
    20cc:	80 e0       	ldi	r24, 0x00	; 0
    20ce:	90 e0       	ldi	r25, 0x00	; 0
    20d0:	a0 e0       	ldi	r26, 0x00	; 0
    20d2:	b0 e4       	ldi	r27, 0x40	; 64
    20d4:	89 8f       	std	Y+25, r24	; 0x19
    20d6:	9a 8f       	std	Y+26, r25	; 0x1a
    20d8:	ab 8f       	std	Y+27, r26	; 0x1b
    20da:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20dc:	69 8d       	ldd	r22, Y+25	; 0x19
    20de:	7a 8d       	ldd	r23, Y+26	; 0x1a
    20e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    20e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    20e4:	20 e0       	ldi	r18, 0x00	; 0
    20e6:	30 e0       	ldi	r19, 0x00	; 0
    20e8:	4a e7       	ldi	r20, 0x7A	; 122
    20ea:	53 e4       	ldi	r21, 0x43	; 67
    20ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20f0:	dc 01       	movw	r26, r24
    20f2:	cb 01       	movw	r24, r22
    20f4:	8d 8b       	std	Y+21, r24	; 0x15
    20f6:	9e 8b       	std	Y+22, r25	; 0x16
    20f8:	af 8b       	std	Y+23, r26	; 0x17
    20fa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    20fc:	6d 89       	ldd	r22, Y+21	; 0x15
    20fe:	7e 89       	ldd	r23, Y+22	; 0x16
    2100:	8f 89       	ldd	r24, Y+23	; 0x17
    2102:	98 8d       	ldd	r25, Y+24	; 0x18
    2104:	20 e0       	ldi	r18, 0x00	; 0
    2106:	30 e0       	ldi	r19, 0x00	; 0
    2108:	40 e8       	ldi	r20, 0x80	; 128
    210a:	5f e3       	ldi	r21, 0x3F	; 63
    210c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2110:	88 23       	and	r24, r24
    2112:	2c f4       	brge	.+10     	; 0x211e <LCD_inlenumLatch+0x80>
		__ticks = 1;
    2114:	81 e0       	ldi	r24, 0x01	; 1
    2116:	90 e0       	ldi	r25, 0x00	; 0
    2118:	9c 8b       	std	Y+20, r25	; 0x14
    211a:	8b 8b       	std	Y+19, r24	; 0x13
    211c:	3f c0       	rjmp	.+126    	; 0x219c <LCD_inlenumLatch+0xfe>
	else if (__tmp > 65535)
    211e:	6d 89       	ldd	r22, Y+21	; 0x15
    2120:	7e 89       	ldd	r23, Y+22	; 0x16
    2122:	8f 89       	ldd	r24, Y+23	; 0x17
    2124:	98 8d       	ldd	r25, Y+24	; 0x18
    2126:	20 e0       	ldi	r18, 0x00	; 0
    2128:	3f ef       	ldi	r19, 0xFF	; 255
    212a:	4f e7       	ldi	r20, 0x7F	; 127
    212c:	57 e4       	ldi	r21, 0x47	; 71
    212e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2132:	18 16       	cp	r1, r24
    2134:	4c f5       	brge	.+82     	; 0x2188 <LCD_inlenumLatch+0xea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2136:	69 8d       	ldd	r22, Y+25	; 0x19
    2138:	7a 8d       	ldd	r23, Y+26	; 0x1a
    213a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    213c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    213e:	20 e0       	ldi	r18, 0x00	; 0
    2140:	30 e0       	ldi	r19, 0x00	; 0
    2142:	40 e2       	ldi	r20, 0x20	; 32
    2144:	51 e4       	ldi	r21, 0x41	; 65
    2146:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    214a:	dc 01       	movw	r26, r24
    214c:	cb 01       	movw	r24, r22
    214e:	bc 01       	movw	r22, r24
    2150:	cd 01       	movw	r24, r26
    2152:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2156:	dc 01       	movw	r26, r24
    2158:	cb 01       	movw	r24, r22
    215a:	9c 8b       	std	Y+20, r25	; 0x14
    215c:	8b 8b       	std	Y+19, r24	; 0x13
    215e:	0f c0       	rjmp	.+30     	; 0x217e <LCD_inlenumLatch+0xe0>
    2160:	89 e1       	ldi	r24, 0x19	; 25
    2162:	90 e0       	ldi	r25, 0x00	; 0
    2164:	9a 8b       	std	Y+18, r25	; 0x12
    2166:	89 8b       	std	Y+17, r24	; 0x11
    2168:	89 89       	ldd	r24, Y+17	; 0x11
    216a:	9a 89       	ldd	r25, Y+18	; 0x12
    216c:	01 97       	sbiw	r24, 0x01	; 1
    216e:	f1 f7       	brne	.-4      	; 0x216c <LCD_inlenumLatch+0xce>
    2170:	9a 8b       	std	Y+18, r25	; 0x12
    2172:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2174:	8b 89       	ldd	r24, Y+19	; 0x13
    2176:	9c 89       	ldd	r25, Y+20	; 0x14
    2178:	01 97       	sbiw	r24, 0x01	; 1
    217a:	9c 8b       	std	Y+20, r25	; 0x14
    217c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    217e:	8b 89       	ldd	r24, Y+19	; 0x13
    2180:	9c 89       	ldd	r25, Y+20	; 0x14
    2182:	00 97       	sbiw	r24, 0x00	; 0
    2184:	69 f7       	brne	.-38     	; 0x2160 <LCD_inlenumLatch+0xc2>
    2186:	14 c0       	rjmp	.+40     	; 0x21b0 <LCD_inlenumLatch+0x112>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2188:	6d 89       	ldd	r22, Y+21	; 0x15
    218a:	7e 89       	ldd	r23, Y+22	; 0x16
    218c:	8f 89       	ldd	r24, Y+23	; 0x17
    218e:	98 8d       	ldd	r25, Y+24	; 0x18
    2190:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2194:	dc 01       	movw	r26, r24
    2196:	cb 01       	movw	r24, r22
    2198:	9c 8b       	std	Y+20, r25	; 0x14
    219a:	8b 8b       	std	Y+19, r24	; 0x13
    219c:	8b 89       	ldd	r24, Y+19	; 0x13
    219e:	9c 89       	ldd	r25, Y+20	; 0x14
    21a0:	98 8b       	std	Y+16, r25	; 0x10
    21a2:	8f 87       	std	Y+15, r24	; 0x0f
    21a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    21a6:	98 89       	ldd	r25, Y+16	; 0x10
    21a8:	01 97       	sbiw	r24, 0x01	; 1
    21aa:	f1 f7       	brne	.-4      	; 0x21a8 <LCD_inlenumLatch+0x10a>
    21ac:	98 8b       	std	Y+16, r25	; 0x10
    21ae:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	Local_enumErrorState=DIO_enumSetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
    21b0:	82 e0       	ldi	r24, 0x02	; 2
    21b2:	60 e0       	ldi	r22, 0x00	; 0
    21b4:	40 e0       	ldi	r20, 0x00	; 0
    21b6:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    21ba:	8d 8f       	std	Y+29, r24	; 0x1d
	if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    21bc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    21be:	81 30       	cpi	r24, 0x01	; 1
    21c0:	19 f0       	breq	.+6      	; 0x21c8 <LCD_inlenumLatch+0x12a>
    21c2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    21c4:	8e 8f       	std	Y+30, r24	; 0x1e
    21c6:	76 c0       	rjmp	.+236    	; 0x22b4 <LCD_inlenumLatch+0x216>
    21c8:	80 e0       	ldi	r24, 0x00	; 0
    21ca:	90 e0       	ldi	r25, 0x00	; 0
    21cc:	a0 e0       	ldi	r26, 0x00	; 0
    21ce:	b0 e4       	ldi	r27, 0x40	; 64
    21d0:	8b 87       	std	Y+11, r24	; 0x0b
    21d2:	9c 87       	std	Y+12, r25	; 0x0c
    21d4:	ad 87       	std	Y+13, r26	; 0x0d
    21d6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21d8:	6b 85       	ldd	r22, Y+11	; 0x0b
    21da:	7c 85       	ldd	r23, Y+12	; 0x0c
    21dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    21de:	9e 85       	ldd	r25, Y+14	; 0x0e
    21e0:	20 e0       	ldi	r18, 0x00	; 0
    21e2:	30 e0       	ldi	r19, 0x00	; 0
    21e4:	4a e7       	ldi	r20, 0x7A	; 122
    21e6:	53 e4       	ldi	r21, 0x43	; 67
    21e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21ec:	dc 01       	movw	r26, r24
    21ee:	cb 01       	movw	r24, r22
    21f0:	8f 83       	std	Y+7, r24	; 0x07
    21f2:	98 87       	std	Y+8, r25	; 0x08
    21f4:	a9 87       	std	Y+9, r26	; 0x09
    21f6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    21f8:	6f 81       	ldd	r22, Y+7	; 0x07
    21fa:	78 85       	ldd	r23, Y+8	; 0x08
    21fc:	89 85       	ldd	r24, Y+9	; 0x09
    21fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    2200:	20 e0       	ldi	r18, 0x00	; 0
    2202:	30 e0       	ldi	r19, 0x00	; 0
    2204:	40 e8       	ldi	r20, 0x80	; 128
    2206:	5f e3       	ldi	r21, 0x3F	; 63
    2208:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    220c:	88 23       	and	r24, r24
    220e:	2c f4       	brge	.+10     	; 0x221a <LCD_inlenumLatch+0x17c>
		__ticks = 1;
    2210:	81 e0       	ldi	r24, 0x01	; 1
    2212:	90 e0       	ldi	r25, 0x00	; 0
    2214:	9e 83       	std	Y+6, r25	; 0x06
    2216:	8d 83       	std	Y+5, r24	; 0x05
    2218:	3f c0       	rjmp	.+126    	; 0x2298 <LCD_inlenumLatch+0x1fa>
	else if (__tmp > 65535)
    221a:	6f 81       	ldd	r22, Y+7	; 0x07
    221c:	78 85       	ldd	r23, Y+8	; 0x08
    221e:	89 85       	ldd	r24, Y+9	; 0x09
    2220:	9a 85       	ldd	r25, Y+10	; 0x0a
    2222:	20 e0       	ldi	r18, 0x00	; 0
    2224:	3f ef       	ldi	r19, 0xFF	; 255
    2226:	4f e7       	ldi	r20, 0x7F	; 127
    2228:	57 e4       	ldi	r21, 0x47	; 71
    222a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    222e:	18 16       	cp	r1, r24
    2230:	4c f5       	brge	.+82     	; 0x2284 <LCD_inlenumLatch+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2232:	6b 85       	ldd	r22, Y+11	; 0x0b
    2234:	7c 85       	ldd	r23, Y+12	; 0x0c
    2236:	8d 85       	ldd	r24, Y+13	; 0x0d
    2238:	9e 85       	ldd	r25, Y+14	; 0x0e
    223a:	20 e0       	ldi	r18, 0x00	; 0
    223c:	30 e0       	ldi	r19, 0x00	; 0
    223e:	40 e2       	ldi	r20, 0x20	; 32
    2240:	51 e4       	ldi	r21, 0x41	; 65
    2242:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2246:	dc 01       	movw	r26, r24
    2248:	cb 01       	movw	r24, r22
    224a:	bc 01       	movw	r22, r24
    224c:	cd 01       	movw	r24, r26
    224e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2252:	dc 01       	movw	r26, r24
    2254:	cb 01       	movw	r24, r22
    2256:	9e 83       	std	Y+6, r25	; 0x06
    2258:	8d 83       	std	Y+5, r24	; 0x05
    225a:	0f c0       	rjmp	.+30     	; 0x227a <LCD_inlenumLatch+0x1dc>
    225c:	89 e1       	ldi	r24, 0x19	; 25
    225e:	90 e0       	ldi	r25, 0x00	; 0
    2260:	9c 83       	std	Y+4, r25	; 0x04
    2262:	8b 83       	std	Y+3, r24	; 0x03
    2264:	8b 81       	ldd	r24, Y+3	; 0x03
    2266:	9c 81       	ldd	r25, Y+4	; 0x04
    2268:	01 97       	sbiw	r24, 0x01	; 1
    226a:	f1 f7       	brne	.-4      	; 0x2268 <LCD_inlenumLatch+0x1ca>
    226c:	9c 83       	std	Y+4, r25	; 0x04
    226e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2270:	8d 81       	ldd	r24, Y+5	; 0x05
    2272:	9e 81       	ldd	r25, Y+6	; 0x06
    2274:	01 97       	sbiw	r24, 0x01	; 1
    2276:	9e 83       	std	Y+6, r25	; 0x06
    2278:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    227a:	8d 81       	ldd	r24, Y+5	; 0x05
    227c:	9e 81       	ldd	r25, Y+6	; 0x06
    227e:	00 97       	sbiw	r24, 0x00	; 0
    2280:	69 f7       	brne	.-38     	; 0x225c <LCD_inlenumLatch+0x1be>
    2282:	14 c0       	rjmp	.+40     	; 0x22ac <LCD_inlenumLatch+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2284:	6f 81       	ldd	r22, Y+7	; 0x07
    2286:	78 85       	ldd	r23, Y+8	; 0x08
    2288:	89 85       	ldd	r24, Y+9	; 0x09
    228a:	9a 85       	ldd	r25, Y+10	; 0x0a
    228c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2290:	dc 01       	movw	r26, r24
    2292:	cb 01       	movw	r24, r22
    2294:	9e 83       	std	Y+6, r25	; 0x06
    2296:	8d 83       	std	Y+5, r24	; 0x05
    2298:	8d 81       	ldd	r24, Y+5	; 0x05
    229a:	9e 81       	ldd	r25, Y+6	; 0x06
    229c:	9a 83       	std	Y+2, r25	; 0x02
    229e:	89 83       	std	Y+1, r24	; 0x01
    22a0:	89 81       	ldd	r24, Y+1	; 0x01
    22a2:	9a 81       	ldd	r25, Y+2	; 0x02
    22a4:	01 97       	sbiw	r24, 0x01	; 1
    22a6:	f1 f7       	brne	.-4      	; 0x22a4 <LCD_inlenumLatch+0x206>
    22a8:	9a 83       	std	Y+2, r25	; 0x02
    22aa:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);

	Local_enumErrorState=ES_OK;
    22ac:	81 e0       	ldi	r24, 0x01	; 1
    22ae:	8d 8f       	std	Y+29, r24	; 0x1d

	return Local_enumErrorState;
    22b0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    22b2:	8e 8f       	std	Y+30, r24	; 0x1e
    22b4:	8e 8d       	ldd	r24, Y+30	; 0x1e
}
    22b6:	6e 96       	adiw	r28, 0x1e	; 30
    22b8:	0f b6       	in	r0, 0x3f	; 63
    22ba:	f8 94       	cli
    22bc:	de bf       	out	0x3e, r29	; 62
    22be:	0f be       	out	0x3f, r0	; 63
    22c0:	cd bf       	out	0x3d, r28	; 61
    22c2:	cf 91       	pop	r28
    22c4:	df 91       	pop	r29
    22c6:	08 95       	ret

000022c8 <LCD_enumDisplayChar>:

ES_T LCD_enumDisplayChar(u8 Copy_u8Char)
{
    22c8:	df 93       	push	r29
    22ca:	cf 93       	push	r28
    22cc:	00 d0       	rcall	.+0      	; 0x22ce <LCD_enumDisplayChar+0x6>
    22ce:	cd b7       	in	r28, 0x3d	; 61
    22d0:	de b7       	in	r29, 0x3e	; 62
    22d2:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    22d4:	19 82       	std	Y+1, r1	; 0x01



	return Local_enumErrorState;
    22d6:	89 81       	ldd	r24, Y+1	; 0x01
}
    22d8:	0f 90       	pop	r0
    22da:	0f 90       	pop	r0
    22dc:	cf 91       	pop	r28
    22de:	df 91       	pop	r29
    22e0:	08 95       	ret

000022e2 <LCD_enumSendCommand>:

ES_T LCD_enumSendCommand(u8 Copy_u8Command)
{
    22e2:	df 93       	push	r29
    22e4:	cf 93       	push	r28
    22e6:	00 d0       	rcall	.+0      	; 0x22e8 <LCD_enumSendCommand+0x6>
    22e8:	cd b7       	in	r28, 0x3d	; 61
    22ea:	de b7       	in	r29, 0x3e	; 62
    22ec:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    22ee:	19 82       	std	Y+1, r1	; 0x01



	return Local_enumErrorState;
    22f0:	89 81       	ldd	r24, Y+1	; 0x01
}
    22f2:	0f 90       	pop	r0
    22f4:	0f 90       	pop	r0
    22f6:	cf 91       	pop	r28
    22f8:	df 91       	pop	r29
    22fa:	08 95       	ret

000022fc <LCD_enumDisplayString>:

ES_T LCD_enumDisplayString(u8* Copy_pu8String)
{
    22fc:	df 93       	push	r29
    22fe:	cf 93       	push	r28
    2300:	00 d0       	rcall	.+0      	; 0x2302 <LCD_enumDisplayString+0x6>
    2302:	0f 92       	push	r0
    2304:	cd b7       	in	r28, 0x3d	; 61
    2306:	de b7       	in	r29, 0x3e	; 62
    2308:	9b 83       	std	Y+3, r25	; 0x03
    230a:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    230c:	19 82       	std	Y+1, r1	; 0x01



	return Local_enumErrorState;
    230e:	89 81       	ldd	r24, Y+1	; 0x01
}
    2310:	0f 90       	pop	r0
    2312:	0f 90       	pop	r0
    2314:	0f 90       	pop	r0
    2316:	cf 91       	pop	r28
    2318:	df 91       	pop	r29
    231a:	08 95       	ret

0000231c <LCD_enumGoTOPosition>:

ES_T LCD_enumGoTOPosition(u8 Copy_u8Row,u8 Copy_u8Col)
{
    231c:	df 93       	push	r29
    231e:	cf 93       	push	r28
    2320:	00 d0       	rcall	.+0      	; 0x2322 <LCD_enumGoTOPosition+0x6>
    2322:	0f 92       	push	r0
    2324:	cd b7       	in	r28, 0x3d	; 61
    2326:	de b7       	in	r29, 0x3e	; 62
    2328:	8a 83       	std	Y+2, r24	; 0x02
    232a:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    232c:	19 82       	std	Y+1, r1	; 0x01



	return Local_enumErrorState;
    232e:	89 81       	ldd	r24, Y+1	; 0x01
}
    2330:	0f 90       	pop	r0
    2332:	0f 90       	pop	r0
    2334:	0f 90       	pop	r0
    2336:	cf 91       	pop	r28
    2338:	df 91       	pop	r29
    233a:	08 95       	ret

0000233c <LCD_enumDisplayIntNum>:

ES_T LCD_enumDisplayIntNum(s32 Copy_u8Num)
{
    233c:	df 93       	push	r29
    233e:	cf 93       	push	r28
    2340:	00 d0       	rcall	.+0      	; 0x2342 <LCD_enumDisplayIntNum+0x6>
    2342:	0f 92       	push	r0
    2344:	cd b7       	in	r28, 0x3d	; 61
    2346:	de b7       	in	r29, 0x3e	; 62
    2348:	9b 83       	std	Y+3, r25	; 0x03
    234a:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    234c:	19 82       	std	Y+1, r1	; 0x01



	return Local_enumErrorState;
    234e:	89 81       	ldd	r24, Y+1	; 0x01
}
    2350:	0f 90       	pop	r0
    2352:	0f 90       	pop	r0
    2354:	0f 90       	pop	r0
    2356:	cf 91       	pop	r28
    2358:	df 91       	pop	r29
    235a:	08 95       	ret

0000235c <LCD_enumDisplayFloatNum>:

ES_T LCD_enumDisplayFloatNum(f32 Copy_u8Num)
{
    235c:	df 93       	push	r29
    235e:	cf 93       	push	r28
    2360:	00 d0       	rcall	.+0      	; 0x2362 <LCD_enumDisplayFloatNum+0x6>
    2362:	00 d0       	rcall	.+0      	; 0x2364 <LCD_enumDisplayFloatNum+0x8>
    2364:	0f 92       	push	r0
    2366:	cd b7       	in	r28, 0x3d	; 61
    2368:	de b7       	in	r29, 0x3e	; 62
    236a:	6a 83       	std	Y+2, r22	; 0x02
    236c:	7b 83       	std	Y+3, r23	; 0x03
    236e:	8c 83       	std	Y+4, r24	; 0x04
    2370:	9d 83       	std	Y+5, r25	; 0x05
	ES_T Local_enumErrorState=ES_NOK;
    2372:	19 82       	std	Y+1, r1	; 0x01



	return Local_enumErrorState;
    2374:	89 81       	ldd	r24, Y+1	; 0x01
}
    2376:	0f 90       	pop	r0
    2378:	0f 90       	pop	r0
    237a:	0f 90       	pop	r0
    237c:	0f 90       	pop	r0
    237e:	0f 90       	pop	r0
    2380:	cf 91       	pop	r28
    2382:	df 91       	pop	r29
    2384:	08 95       	ret

00002386 <LCD_enumDisplayCustomChar>:

ES_T LCD_enumDisplayCustomChar(u8* Copy_pu8Char)
{
    2386:	df 93       	push	r29
    2388:	cf 93       	push	r28
    238a:	00 d0       	rcall	.+0      	; 0x238c <LCD_enumDisplayCustomChar+0x6>
    238c:	0f 92       	push	r0
    238e:	cd b7       	in	r28, 0x3d	; 61
    2390:	de b7       	in	r29, 0x3e	; 62
    2392:	9b 83       	std	Y+3, r25	; 0x03
    2394:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    2396:	19 82       	std	Y+1, r1	; 0x01



	return Local_enumErrorState;
    2398:	89 81       	ldd	r24, Y+1	; 0x01
}
    239a:	0f 90       	pop	r0
    239c:	0f 90       	pop	r0
    239e:	0f 90       	pop	r0
    23a0:	cf 91       	pop	r28
    23a2:	df 91       	pop	r29
    23a4:	08 95       	ret

000023a6 <LCD_enumClear>:

ES_T LCD_enumClear(void)
{
    23a6:	df 93       	push	r29
    23a8:	cf 93       	push	r28
    23aa:	0f 92       	push	r0
    23ac:	cd b7       	in	r28, 0x3d	; 61
    23ae:	de b7       	in	r29, 0x3e	; 62
	ES_T Local_enumErrorState=ES_NOK;
    23b0:	19 82       	std	Y+1, r1	; 0x01



	return Local_enumErrorState;
    23b2:	89 81       	ldd	r24, Y+1	; 0x01
}
    23b4:	0f 90       	pop	r0
    23b6:	cf 91       	pop	r28
    23b8:	df 91       	pop	r29
    23ba:	08 95       	ret

000023bc <LED_enumInit>:
#include "../include/MCAL/DIO/DIO_int.h"
#include "../include/HAL/LED/LED_priv.h"
#include "../include/HAL/LED/LED_config.h"

ES_T LED_enumInit(LED_T* Copy_pstrLeds)
{
    23bc:	df 93       	push	r29
    23be:	cf 93       	push	r28
    23c0:	00 d0       	rcall	.+0      	; 0x23c2 <LED_enumInit+0x6>
    23c2:	00 d0       	rcall	.+0      	; 0x23c4 <LED_enumInit+0x8>
    23c4:	cd b7       	in	r28, 0x3d	; 61
    23c6:	de b7       	in	r29, 0x3e	; 62
    23c8:	9c 83       	std	Y+4, r25	; 0x04
    23ca:	8b 83       	std	Y+3, r24	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    23cc:	1a 82       	std	Y+2, r1	; 0x02

	if (Copy_pstrLeds!=NULL)
    23ce:	8b 81       	ldd	r24, Y+3	; 0x03
    23d0:	9c 81       	ldd	r25, Y+4	; 0x04
    23d2:	00 97       	sbiw	r24, 0x00	; 0
    23d4:	09 f4       	brne	.+2      	; 0x23d8 <LED_enumInit+0x1c>
    23d6:	23 c1       	rjmp	.+582    	; 0x261e <LED_enumInit+0x262>
	{
		u8 Local_u8Counter=0;
    23d8:	19 82       	std	Y+1, r1	; 0x01
		for (Local_u8Counter=0;Local_u8Counter<LED_NUM;Local_u8Counter++)
    23da:	19 82       	std	Y+1, r1	; 0x01
    23dc:	1b c1       	rjmp	.+566    	; 0x2614 <LED_enumInit+0x258>
		{
			Local_enumErrorState=DIO_enumSetPinDirection (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,OUTPUT);
    23de:	89 81       	ldd	r24, Y+1	; 0x01
    23e0:	88 2f       	mov	r24, r24
    23e2:	90 e0       	ldi	r25, 0x00	; 0
    23e4:	9c 01       	movw	r18, r24
    23e6:	22 0f       	add	r18, r18
    23e8:	33 1f       	adc	r19, r19
    23ea:	22 0f       	add	r18, r18
    23ec:	33 1f       	adc	r19, r19
    23ee:	8b 81       	ldd	r24, Y+3	; 0x03
    23f0:	9c 81       	ldd	r25, Y+4	; 0x04
    23f2:	fc 01       	movw	r30, r24
    23f4:	e2 0f       	add	r30, r18
    23f6:	f3 1f       	adc	r31, r19
    23f8:	40 81       	ld	r20, Z
    23fa:	89 81       	ldd	r24, Y+1	; 0x01
    23fc:	88 2f       	mov	r24, r24
    23fe:	90 e0       	ldi	r25, 0x00	; 0
    2400:	9c 01       	movw	r18, r24
    2402:	22 0f       	add	r18, r18
    2404:	33 1f       	adc	r19, r19
    2406:	22 0f       	add	r18, r18
    2408:	33 1f       	adc	r19, r19
    240a:	8b 81       	ldd	r24, Y+3	; 0x03
    240c:	9c 81       	ldd	r25, Y+4	; 0x04
    240e:	fc 01       	movw	r30, r24
    2410:	e2 0f       	add	r30, r18
    2412:	f3 1f       	adc	r31, r19
    2414:	91 81       	ldd	r25, Z+1	; 0x01
    2416:	84 2f       	mov	r24, r20
    2418:	69 2f       	mov	r22, r25
    241a:	41 e0       	ldi	r20, 0x01	; 1
    241c:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    2420:	8a 83       	std	Y+2, r24	; 0x02

			if(Copy_pstrLeds[Local_u8Counter].LED_u8Connection==LED_SINK)
    2422:	89 81       	ldd	r24, Y+1	; 0x01
    2424:	88 2f       	mov	r24, r24
    2426:	90 e0       	ldi	r25, 0x00	; 0
    2428:	9c 01       	movw	r18, r24
    242a:	22 0f       	add	r18, r18
    242c:	33 1f       	adc	r19, r19
    242e:	22 0f       	add	r18, r18
    2430:	33 1f       	adc	r19, r19
    2432:	8b 81       	ldd	r24, Y+3	; 0x03
    2434:	9c 81       	ldd	r25, Y+4	; 0x04
    2436:	fc 01       	movw	r30, r24
    2438:	e2 0f       	add	r30, r18
    243a:	f3 1f       	adc	r31, r19
    243c:	82 81       	ldd	r24, Z+2	; 0x02
    243e:	88 23       	and	r24, r24
    2440:	09 f0       	breq	.+2      	; 0x2444 <LED_enumInit+0x88>
    2442:	69 c0       	rjmp	.+210    	; 0x2516 <LED_enumInit+0x15a>
			{
				if (Copy_pstrLeds[Local_u8Counter].LED_u8InitState==LED_ON)
    2444:	89 81       	ldd	r24, Y+1	; 0x01
    2446:	88 2f       	mov	r24, r24
    2448:	90 e0       	ldi	r25, 0x00	; 0
    244a:	9c 01       	movw	r18, r24
    244c:	22 0f       	add	r18, r18
    244e:	33 1f       	adc	r19, r19
    2450:	22 0f       	add	r18, r18
    2452:	33 1f       	adc	r19, r19
    2454:	8b 81       	ldd	r24, Y+3	; 0x03
    2456:	9c 81       	ldd	r25, Y+4	; 0x04
    2458:	fc 01       	movw	r30, r24
    245a:	e2 0f       	add	r30, r18
    245c:	f3 1f       	adc	r31, r19
    245e:	83 81       	ldd	r24, Z+3	; 0x03
    2460:	88 23       	and	r24, r24
    2462:	19 f5       	brne	.+70     	; 0x24aa <LED_enumInit+0xee>
				{
					Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,LOW);
    2464:	89 81       	ldd	r24, Y+1	; 0x01
    2466:	88 2f       	mov	r24, r24
    2468:	90 e0       	ldi	r25, 0x00	; 0
    246a:	9c 01       	movw	r18, r24
    246c:	22 0f       	add	r18, r18
    246e:	33 1f       	adc	r19, r19
    2470:	22 0f       	add	r18, r18
    2472:	33 1f       	adc	r19, r19
    2474:	8b 81       	ldd	r24, Y+3	; 0x03
    2476:	9c 81       	ldd	r25, Y+4	; 0x04
    2478:	fc 01       	movw	r30, r24
    247a:	e2 0f       	add	r30, r18
    247c:	f3 1f       	adc	r31, r19
    247e:	40 81       	ld	r20, Z
    2480:	89 81       	ldd	r24, Y+1	; 0x01
    2482:	88 2f       	mov	r24, r24
    2484:	90 e0       	ldi	r25, 0x00	; 0
    2486:	9c 01       	movw	r18, r24
    2488:	22 0f       	add	r18, r18
    248a:	33 1f       	adc	r19, r19
    248c:	22 0f       	add	r18, r18
    248e:	33 1f       	adc	r19, r19
    2490:	8b 81       	ldd	r24, Y+3	; 0x03
    2492:	9c 81       	ldd	r25, Y+4	; 0x04
    2494:	fc 01       	movw	r30, r24
    2496:	e2 0f       	add	r30, r18
    2498:	f3 1f       	adc	r31, r19
    249a:	91 81       	ldd	r25, Z+1	; 0x01
    249c:	84 2f       	mov	r24, r20
    249e:	69 2f       	mov	r22, r25
    24a0:	40 e0       	ldi	r20, 0x00	; 0
    24a2:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    24a6:	8a 83       	std	Y+2, r24	; 0x02
    24a8:	b2 c0       	rjmp	.+356    	; 0x260e <LED_enumInit+0x252>
				}
				else if (Copy_pstrLeds[Local_u8Counter].LED_u8InitState==LED_OFF)
    24aa:	89 81       	ldd	r24, Y+1	; 0x01
    24ac:	88 2f       	mov	r24, r24
    24ae:	90 e0       	ldi	r25, 0x00	; 0
    24b0:	9c 01       	movw	r18, r24
    24b2:	22 0f       	add	r18, r18
    24b4:	33 1f       	adc	r19, r19
    24b6:	22 0f       	add	r18, r18
    24b8:	33 1f       	adc	r19, r19
    24ba:	8b 81       	ldd	r24, Y+3	; 0x03
    24bc:	9c 81       	ldd	r25, Y+4	; 0x04
    24be:	fc 01       	movw	r30, r24
    24c0:	e2 0f       	add	r30, r18
    24c2:	f3 1f       	adc	r31, r19
    24c4:	83 81       	ldd	r24, Z+3	; 0x03
    24c6:	81 30       	cpi	r24, 0x01	; 1
    24c8:	19 f5       	brne	.+70     	; 0x2510 <LED_enumInit+0x154>
				{
					Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,HIGH);
    24ca:	89 81       	ldd	r24, Y+1	; 0x01
    24cc:	88 2f       	mov	r24, r24
    24ce:	90 e0       	ldi	r25, 0x00	; 0
    24d0:	9c 01       	movw	r18, r24
    24d2:	22 0f       	add	r18, r18
    24d4:	33 1f       	adc	r19, r19
    24d6:	22 0f       	add	r18, r18
    24d8:	33 1f       	adc	r19, r19
    24da:	8b 81       	ldd	r24, Y+3	; 0x03
    24dc:	9c 81       	ldd	r25, Y+4	; 0x04
    24de:	fc 01       	movw	r30, r24
    24e0:	e2 0f       	add	r30, r18
    24e2:	f3 1f       	adc	r31, r19
    24e4:	40 81       	ld	r20, Z
    24e6:	89 81       	ldd	r24, Y+1	; 0x01
    24e8:	88 2f       	mov	r24, r24
    24ea:	90 e0       	ldi	r25, 0x00	; 0
    24ec:	9c 01       	movw	r18, r24
    24ee:	22 0f       	add	r18, r18
    24f0:	33 1f       	adc	r19, r19
    24f2:	22 0f       	add	r18, r18
    24f4:	33 1f       	adc	r19, r19
    24f6:	8b 81       	ldd	r24, Y+3	; 0x03
    24f8:	9c 81       	ldd	r25, Y+4	; 0x04
    24fa:	fc 01       	movw	r30, r24
    24fc:	e2 0f       	add	r30, r18
    24fe:	f3 1f       	adc	r31, r19
    2500:	91 81       	ldd	r25, Z+1	; 0x01
    2502:	84 2f       	mov	r24, r20
    2504:	69 2f       	mov	r22, r25
    2506:	41 e0       	ldi	r20, 0x01	; 1
    2508:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    250c:	8a 83       	std	Y+2, r24	; 0x02
    250e:	7f c0       	rjmp	.+254    	; 0x260e <LED_enumInit+0x252>
				}
				else
				{
					Local_u8Counter=ES_OUT_OF_RANGE;
    2510:	83 e0       	ldi	r24, 0x03	; 3
    2512:	89 83       	std	Y+1, r24	; 0x01
    2514:	7c c0       	rjmp	.+248    	; 0x260e <LED_enumInit+0x252>
				}
			}
			else if(Copy_pstrLeds[Local_u8Counter].LED_u8Connection==LED_SOURCE)
    2516:	89 81       	ldd	r24, Y+1	; 0x01
    2518:	88 2f       	mov	r24, r24
    251a:	90 e0       	ldi	r25, 0x00	; 0
    251c:	9c 01       	movw	r18, r24
    251e:	22 0f       	add	r18, r18
    2520:	33 1f       	adc	r19, r19
    2522:	22 0f       	add	r18, r18
    2524:	33 1f       	adc	r19, r19
    2526:	8b 81       	ldd	r24, Y+3	; 0x03
    2528:	9c 81       	ldd	r25, Y+4	; 0x04
    252a:	fc 01       	movw	r30, r24
    252c:	e2 0f       	add	r30, r18
    252e:	f3 1f       	adc	r31, r19
    2530:	82 81       	ldd	r24, Z+2	; 0x02
    2532:	81 30       	cpi	r24, 0x01	; 1
    2534:	09 f0       	breq	.+2      	; 0x2538 <LED_enumInit+0x17c>
    2536:	69 c0       	rjmp	.+210    	; 0x260a <LED_enumInit+0x24e>
			{
				if (Copy_pstrLeds[Local_u8Counter].LED_u8InitState==LED_ON)
    2538:	89 81       	ldd	r24, Y+1	; 0x01
    253a:	88 2f       	mov	r24, r24
    253c:	90 e0       	ldi	r25, 0x00	; 0
    253e:	9c 01       	movw	r18, r24
    2540:	22 0f       	add	r18, r18
    2542:	33 1f       	adc	r19, r19
    2544:	22 0f       	add	r18, r18
    2546:	33 1f       	adc	r19, r19
    2548:	8b 81       	ldd	r24, Y+3	; 0x03
    254a:	9c 81       	ldd	r25, Y+4	; 0x04
    254c:	fc 01       	movw	r30, r24
    254e:	e2 0f       	add	r30, r18
    2550:	f3 1f       	adc	r31, r19
    2552:	83 81       	ldd	r24, Z+3	; 0x03
    2554:	88 23       	and	r24, r24
    2556:	19 f5       	brne	.+70     	; 0x259e <LED_enumInit+0x1e2>
				{
					Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,HIGH);
    2558:	89 81       	ldd	r24, Y+1	; 0x01
    255a:	88 2f       	mov	r24, r24
    255c:	90 e0       	ldi	r25, 0x00	; 0
    255e:	9c 01       	movw	r18, r24
    2560:	22 0f       	add	r18, r18
    2562:	33 1f       	adc	r19, r19
    2564:	22 0f       	add	r18, r18
    2566:	33 1f       	adc	r19, r19
    2568:	8b 81       	ldd	r24, Y+3	; 0x03
    256a:	9c 81       	ldd	r25, Y+4	; 0x04
    256c:	fc 01       	movw	r30, r24
    256e:	e2 0f       	add	r30, r18
    2570:	f3 1f       	adc	r31, r19
    2572:	40 81       	ld	r20, Z
    2574:	89 81       	ldd	r24, Y+1	; 0x01
    2576:	88 2f       	mov	r24, r24
    2578:	90 e0       	ldi	r25, 0x00	; 0
    257a:	9c 01       	movw	r18, r24
    257c:	22 0f       	add	r18, r18
    257e:	33 1f       	adc	r19, r19
    2580:	22 0f       	add	r18, r18
    2582:	33 1f       	adc	r19, r19
    2584:	8b 81       	ldd	r24, Y+3	; 0x03
    2586:	9c 81       	ldd	r25, Y+4	; 0x04
    2588:	fc 01       	movw	r30, r24
    258a:	e2 0f       	add	r30, r18
    258c:	f3 1f       	adc	r31, r19
    258e:	91 81       	ldd	r25, Z+1	; 0x01
    2590:	84 2f       	mov	r24, r20
    2592:	69 2f       	mov	r22, r25
    2594:	41 e0       	ldi	r20, 0x01	; 1
    2596:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    259a:	8a 83       	std	Y+2, r24	; 0x02
    259c:	38 c0       	rjmp	.+112    	; 0x260e <LED_enumInit+0x252>
				}
				else if (Copy_pstrLeds[Local_u8Counter].LED_u8InitState==LED_OFF)
    259e:	89 81       	ldd	r24, Y+1	; 0x01
    25a0:	88 2f       	mov	r24, r24
    25a2:	90 e0       	ldi	r25, 0x00	; 0
    25a4:	9c 01       	movw	r18, r24
    25a6:	22 0f       	add	r18, r18
    25a8:	33 1f       	adc	r19, r19
    25aa:	22 0f       	add	r18, r18
    25ac:	33 1f       	adc	r19, r19
    25ae:	8b 81       	ldd	r24, Y+3	; 0x03
    25b0:	9c 81       	ldd	r25, Y+4	; 0x04
    25b2:	fc 01       	movw	r30, r24
    25b4:	e2 0f       	add	r30, r18
    25b6:	f3 1f       	adc	r31, r19
    25b8:	83 81       	ldd	r24, Z+3	; 0x03
    25ba:	81 30       	cpi	r24, 0x01	; 1
    25bc:	19 f5       	brne	.+70     	; 0x2604 <LED_enumInit+0x248>
				{
					Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLeds[Local_u8Counter].LED_u8PortID,Copy_pstrLeds[Local_u8Counter].LED_u8PinID,LOW);
    25be:	89 81       	ldd	r24, Y+1	; 0x01
    25c0:	88 2f       	mov	r24, r24
    25c2:	90 e0       	ldi	r25, 0x00	; 0
    25c4:	9c 01       	movw	r18, r24
    25c6:	22 0f       	add	r18, r18
    25c8:	33 1f       	adc	r19, r19
    25ca:	22 0f       	add	r18, r18
    25cc:	33 1f       	adc	r19, r19
    25ce:	8b 81       	ldd	r24, Y+3	; 0x03
    25d0:	9c 81       	ldd	r25, Y+4	; 0x04
    25d2:	fc 01       	movw	r30, r24
    25d4:	e2 0f       	add	r30, r18
    25d6:	f3 1f       	adc	r31, r19
    25d8:	40 81       	ld	r20, Z
    25da:	89 81       	ldd	r24, Y+1	; 0x01
    25dc:	88 2f       	mov	r24, r24
    25de:	90 e0       	ldi	r25, 0x00	; 0
    25e0:	9c 01       	movw	r18, r24
    25e2:	22 0f       	add	r18, r18
    25e4:	33 1f       	adc	r19, r19
    25e6:	22 0f       	add	r18, r18
    25e8:	33 1f       	adc	r19, r19
    25ea:	8b 81       	ldd	r24, Y+3	; 0x03
    25ec:	9c 81       	ldd	r25, Y+4	; 0x04
    25ee:	fc 01       	movw	r30, r24
    25f0:	e2 0f       	add	r30, r18
    25f2:	f3 1f       	adc	r31, r19
    25f4:	91 81       	ldd	r25, Z+1	; 0x01
    25f6:	84 2f       	mov	r24, r20
    25f8:	69 2f       	mov	r22, r25
    25fa:	40 e0       	ldi	r20, 0x00	; 0
    25fc:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2600:	8a 83       	std	Y+2, r24	; 0x02
    2602:	05 c0       	rjmp	.+10     	; 0x260e <LED_enumInit+0x252>
				}
				else
				{
					Local_enumErrorState=ES_OUT_OF_RANGE;
    2604:	83 e0       	ldi	r24, 0x03	; 3
    2606:	8a 83       	std	Y+2, r24	; 0x02
    2608:	02 c0       	rjmp	.+4      	; 0x260e <LED_enumInit+0x252>
				}
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    260a:	83 e0       	ldi	r24, 0x03	; 3
    260c:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;

	if (Copy_pstrLeds!=NULL)
	{
		u8 Local_u8Counter=0;
		for (Local_u8Counter=0;Local_u8Counter<LED_NUM;Local_u8Counter++)
    260e:	89 81       	ldd	r24, Y+1	; 0x01
    2610:	8f 5f       	subi	r24, 0xFF	; 255
    2612:	89 83       	std	Y+1, r24	; 0x01
    2614:	89 81       	ldd	r24, Y+1	; 0x01
    2616:	83 30       	cpi	r24, 0x03	; 3
    2618:	08 f4       	brcc	.+2      	; 0x261c <LED_enumInit+0x260>
    261a:	e1 ce       	rjmp	.-574    	; 0x23de <LED_enumInit+0x22>
    261c:	02 c0       	rjmp	.+4      	; 0x2622 <LED_enumInit+0x266>
			}
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    261e:	82 e0       	ldi	r24, 0x02	; 2
    2620:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enumErrorState;
    2622:	8a 81       	ldd	r24, Y+2	; 0x02
}
    2624:	0f 90       	pop	r0
    2626:	0f 90       	pop	r0
    2628:	0f 90       	pop	r0
    262a:	0f 90       	pop	r0
    262c:	cf 91       	pop	r28
    262e:	df 91       	pop	r29
    2630:	08 95       	ret

00002632 <LED_enumLedOn>:
ES_T LED_enumLedOn(LED_T* Copy_pstrLed)
{
    2632:	df 93       	push	r29
    2634:	cf 93       	push	r28
    2636:	00 d0       	rcall	.+0      	; 0x2638 <LED_enumLedOn+0x6>
    2638:	0f 92       	push	r0
    263a:	cd b7       	in	r28, 0x3d	; 61
    263c:	de b7       	in	r29, 0x3e	; 62
    263e:	9b 83       	std	Y+3, r25	; 0x03
    2640:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    2642:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pstrLed!=NULL)
    2644:	8a 81       	ldd	r24, Y+2	; 0x02
    2646:	9b 81       	ldd	r25, Y+3	; 0x03
    2648:	00 97       	sbiw	r24, 0x00	; 0
    264a:	29 f1       	breq	.+74     	; 0x2696 <LED_enumLedOn+0x64>
	{
		if(Copy_pstrLed->LED_u8Connection==LED_SINK)
    264c:	ea 81       	ldd	r30, Y+2	; 0x02
    264e:	fb 81       	ldd	r31, Y+3	; 0x03
    2650:	82 81       	ldd	r24, Z+2	; 0x02
    2652:	88 23       	and	r24, r24
    2654:	61 f4       	brne	.+24     	; 0x266e <LED_enumLedOn+0x3c>
		{
			Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLed->LED_u8PortID,Copy_pstrLed->LED_u8PinID,LOW);
    2656:	ea 81       	ldd	r30, Y+2	; 0x02
    2658:	fb 81       	ldd	r31, Y+3	; 0x03
    265a:	80 81       	ld	r24, Z
    265c:	ea 81       	ldd	r30, Y+2	; 0x02
    265e:	fb 81       	ldd	r31, Y+3	; 0x03
    2660:	91 81       	ldd	r25, Z+1	; 0x01
    2662:	69 2f       	mov	r22, r25
    2664:	40 e0       	ldi	r20, 0x00	; 0
    2666:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    266a:	89 83       	std	Y+1, r24	; 0x01
    266c:	16 c0       	rjmp	.+44     	; 0x269a <LED_enumLedOn+0x68>
		}
		else if(Copy_pstrLed->LED_u8Connection==LED_SOURCE)
    266e:	ea 81       	ldd	r30, Y+2	; 0x02
    2670:	fb 81       	ldd	r31, Y+3	; 0x03
    2672:	82 81       	ldd	r24, Z+2	; 0x02
    2674:	81 30       	cpi	r24, 0x01	; 1
    2676:	61 f4       	brne	.+24     	; 0x2690 <LED_enumLedOn+0x5e>
		{
			Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLed->LED_u8PortID,Copy_pstrLed->LED_u8PinID,HIGH);
    2678:	ea 81       	ldd	r30, Y+2	; 0x02
    267a:	fb 81       	ldd	r31, Y+3	; 0x03
    267c:	80 81       	ld	r24, Z
    267e:	ea 81       	ldd	r30, Y+2	; 0x02
    2680:	fb 81       	ldd	r31, Y+3	; 0x03
    2682:	91 81       	ldd	r25, Z+1	; 0x01
    2684:	69 2f       	mov	r22, r25
    2686:	41 e0       	ldi	r20, 0x01	; 1
    2688:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    268c:	89 83       	std	Y+1, r24	; 0x01
    268e:	05 c0       	rjmp	.+10     	; 0x269a <LED_enumLedOn+0x68>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    2690:	83 e0       	ldi	r24, 0x03	; 3
    2692:	89 83       	std	Y+1, r24	; 0x01
    2694:	02 c0       	rjmp	.+4      	; 0x269a <LED_enumLedOn+0x68>
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    2696:	82 e0       	ldi	r24, 0x02	; 2
    2698:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    269a:	89 81       	ldd	r24, Y+1	; 0x01
}
    269c:	0f 90       	pop	r0
    269e:	0f 90       	pop	r0
    26a0:	0f 90       	pop	r0
    26a2:	cf 91       	pop	r28
    26a4:	df 91       	pop	r29
    26a6:	08 95       	ret

000026a8 <LED_enumLedOff>:
ES_T LED_enumLedOff(LED_T* Copy_pstrLed)
{
    26a8:	df 93       	push	r29
    26aa:	cf 93       	push	r28
    26ac:	00 d0       	rcall	.+0      	; 0x26ae <LED_enumLedOff+0x6>
    26ae:	0f 92       	push	r0
    26b0:	cd b7       	in	r28, 0x3d	; 61
    26b2:	de b7       	in	r29, 0x3e	; 62
    26b4:	9b 83       	std	Y+3, r25	; 0x03
    26b6:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    26b8:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pstrLed!=NULL)
    26ba:	8a 81       	ldd	r24, Y+2	; 0x02
    26bc:	9b 81       	ldd	r25, Y+3	; 0x03
    26be:	00 97       	sbiw	r24, 0x00	; 0
    26c0:	29 f1       	breq	.+74     	; 0x270c <LED_enumLedOff+0x64>
	{
		if(Copy_pstrLed->LED_u8Connection==LED_SINK)
    26c2:	ea 81       	ldd	r30, Y+2	; 0x02
    26c4:	fb 81       	ldd	r31, Y+3	; 0x03
    26c6:	82 81       	ldd	r24, Z+2	; 0x02
    26c8:	88 23       	and	r24, r24
    26ca:	61 f4       	brne	.+24     	; 0x26e4 <LED_enumLedOff+0x3c>
		{
			Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLed->LED_u8PortID,Copy_pstrLed->LED_u8PinID,HIGH);
    26cc:	ea 81       	ldd	r30, Y+2	; 0x02
    26ce:	fb 81       	ldd	r31, Y+3	; 0x03
    26d0:	80 81       	ld	r24, Z
    26d2:	ea 81       	ldd	r30, Y+2	; 0x02
    26d4:	fb 81       	ldd	r31, Y+3	; 0x03
    26d6:	91 81       	ldd	r25, Z+1	; 0x01
    26d8:	69 2f       	mov	r22, r25
    26da:	41 e0       	ldi	r20, 0x01	; 1
    26dc:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    26e0:	89 83       	std	Y+1, r24	; 0x01
    26e2:	16 c0       	rjmp	.+44     	; 0x2710 <LED_enumLedOff+0x68>
		}
		else if(Copy_pstrLed->LED_u8Connection==LED_SOURCE)
    26e4:	ea 81       	ldd	r30, Y+2	; 0x02
    26e6:	fb 81       	ldd	r31, Y+3	; 0x03
    26e8:	82 81       	ldd	r24, Z+2	; 0x02
    26ea:	81 30       	cpi	r24, 0x01	; 1
    26ec:	61 f4       	brne	.+24     	; 0x2706 <LED_enumLedOff+0x5e>
		{
			Local_enumErrorState=DIO_enumSetPinValue (Copy_pstrLed->LED_u8PortID,Copy_pstrLed->LED_u8PinID,LOW);
    26ee:	ea 81       	ldd	r30, Y+2	; 0x02
    26f0:	fb 81       	ldd	r31, Y+3	; 0x03
    26f2:	80 81       	ld	r24, Z
    26f4:	ea 81       	ldd	r30, Y+2	; 0x02
    26f6:	fb 81       	ldd	r31, Y+3	; 0x03
    26f8:	91 81       	ldd	r25, Z+1	; 0x01
    26fa:	69 2f       	mov	r22, r25
    26fc:	40 e0       	ldi	r20, 0x00	; 0
    26fe:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2702:	89 83       	std	Y+1, r24	; 0x01
    2704:	05 c0       	rjmp	.+10     	; 0x2710 <LED_enumLedOff+0x68>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    2706:	83 e0       	ldi	r24, 0x03	; 3
    2708:	89 83       	std	Y+1, r24	; 0x01
    270a:	02 c0       	rjmp	.+4      	; 0x2710 <LED_enumLedOff+0x68>
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    270c:	82 e0       	ldi	r24, 0x02	; 2
    270e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    2710:	89 81       	ldd	r24, Y+1	; 0x01
}
    2712:	0f 90       	pop	r0
    2714:	0f 90       	pop	r0
    2716:	0f 90       	pop	r0
    2718:	cf 91       	pop	r28
    271a:	df 91       	pop	r29
    271c:	08 95       	ret

0000271e <SEV_SEG_enumInit>:
#include "../include/HAL/Seven_Segment/SEV_SEG_priv.h"

extern SEV_SEG_T SEV_SEG_AstrSegments [SEV_SEG_NUM];

ES_T SEV_SEG_enumInit(SEV_SEG_T* Copy_pstrSegments)
{
    271e:	df 93       	push	r29
    2720:	cf 93       	push	r28
    2722:	00 d0       	rcall	.+0      	; 0x2724 <SEV_SEG_enumInit+0x6>
    2724:	00 d0       	rcall	.+0      	; 0x2726 <SEV_SEG_enumInit+0x8>
    2726:	0f 92       	push	r0
    2728:	cd b7       	in	r28, 0x3d	; 61
    272a:	de b7       	in	r29, 0x3e	; 62
    272c:	9c 83       	std	Y+4, r25	; 0x04
    272e:	8b 83       	std	Y+3, r24	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    2730:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Counter=0;
    2732:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_pstrSegments!=NULL)
    2734:	8b 81       	ldd	r24, Y+3	; 0x03
    2736:	9c 81       	ldd	r25, Y+4	; 0x04
    2738:	00 97       	sbiw	r24, 0x00	; 0
    273a:	09 f4       	brne	.+2      	; 0x273e <SEV_SEG_enumInit+0x20>
    273c:	e1 c7       	rjmp	.+4034   	; 0x3700 <SEV_SEG_enumInit+0xfe2>
	{
		for (Local_u8Counter=0;Local_u8Counter<SEV_SEG_NUM;Local_u8Counter++)
    273e:	19 82       	std	Y+1, r1	; 0x01
    2740:	0c 94 7b 1b 	jmp	0x36f6	; 0x36f6 <SEV_SEG_enumInit+0xfd8>
		{
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APin,OUTPUT);
    2744:	89 81       	ldd	r24, Y+1	; 0x01
    2746:	48 2f       	mov	r20, r24
    2748:	50 e0       	ldi	r21, 0x00	; 0
    274a:	ca 01       	movw	r24, r20
    274c:	88 0f       	add	r24, r24
    274e:	99 1f       	adc	r25, r25
    2750:	9c 01       	movw	r18, r24
    2752:	22 0f       	add	r18, r18
    2754:	33 1f       	adc	r19, r19
    2756:	22 0f       	add	r18, r18
    2758:	33 1f       	adc	r19, r19
    275a:	22 0f       	add	r18, r18
    275c:	33 1f       	adc	r19, r19
    275e:	82 0f       	add	r24, r18
    2760:	93 1f       	adc	r25, r19
    2762:	9c 01       	movw	r18, r24
    2764:	24 0f       	add	r18, r20
    2766:	35 1f       	adc	r19, r21
    2768:	8b 81       	ldd	r24, Y+3	; 0x03
    276a:	9c 81       	ldd	r25, Y+4	; 0x04
    276c:	fc 01       	movw	r30, r24
    276e:	e2 0f       	add	r30, r18
    2770:	f3 1f       	adc	r31, r19
    2772:	60 81       	ld	r22, Z
    2774:	89 81       	ldd	r24, Y+1	; 0x01
    2776:	48 2f       	mov	r20, r24
    2778:	50 e0       	ldi	r21, 0x00	; 0
    277a:	ca 01       	movw	r24, r20
    277c:	88 0f       	add	r24, r24
    277e:	99 1f       	adc	r25, r25
    2780:	9c 01       	movw	r18, r24
    2782:	22 0f       	add	r18, r18
    2784:	33 1f       	adc	r19, r19
    2786:	22 0f       	add	r18, r18
    2788:	33 1f       	adc	r19, r19
    278a:	22 0f       	add	r18, r18
    278c:	33 1f       	adc	r19, r19
    278e:	82 0f       	add	r24, r18
    2790:	93 1f       	adc	r25, r19
    2792:	9c 01       	movw	r18, r24
    2794:	24 0f       	add	r18, r20
    2796:	35 1f       	adc	r19, r21
    2798:	8b 81       	ldd	r24, Y+3	; 0x03
    279a:	9c 81       	ldd	r25, Y+4	; 0x04
    279c:	fc 01       	movw	r30, r24
    279e:	e2 0f       	add	r30, r18
    27a0:	f3 1f       	adc	r31, r19
    27a2:	91 81       	ldd	r25, Z+1	; 0x01
    27a4:	86 2f       	mov	r24, r22
    27a6:	69 2f       	mov	r22, r25
    27a8:	41 e0       	ldi	r20, 0x01	; 1
    27aa:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    27ae:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    27b0:	8a 81       	ldd	r24, Y+2	; 0x02
    27b2:	81 30       	cpi	r24, 0x01	; 1
    27b4:	21 f0       	breq	.+8      	; 0x27be <SEV_SEG_enumInit+0xa0>
    27b6:	8a 81       	ldd	r24, Y+2	; 0x02
    27b8:	8d 83       	std	Y+5, r24	; 0x05
    27ba:	0c 94 84 1b 	jmp	0x3708	; 0x3708 <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPin,OUTPUT);
    27be:	89 81       	ldd	r24, Y+1	; 0x01
    27c0:	48 2f       	mov	r20, r24
    27c2:	50 e0       	ldi	r21, 0x00	; 0
    27c4:	ca 01       	movw	r24, r20
    27c6:	88 0f       	add	r24, r24
    27c8:	99 1f       	adc	r25, r25
    27ca:	9c 01       	movw	r18, r24
    27cc:	22 0f       	add	r18, r18
    27ce:	33 1f       	adc	r19, r19
    27d0:	22 0f       	add	r18, r18
    27d2:	33 1f       	adc	r19, r19
    27d4:	22 0f       	add	r18, r18
    27d6:	33 1f       	adc	r19, r19
    27d8:	82 0f       	add	r24, r18
    27da:	93 1f       	adc	r25, r19
    27dc:	9c 01       	movw	r18, r24
    27de:	24 0f       	add	r18, r20
    27e0:	35 1f       	adc	r19, r21
    27e2:	8b 81       	ldd	r24, Y+3	; 0x03
    27e4:	9c 81       	ldd	r25, Y+4	; 0x04
    27e6:	fc 01       	movw	r30, r24
    27e8:	e2 0f       	add	r30, r18
    27ea:	f3 1f       	adc	r31, r19
    27ec:	62 81       	ldd	r22, Z+2	; 0x02
    27ee:	89 81       	ldd	r24, Y+1	; 0x01
    27f0:	48 2f       	mov	r20, r24
    27f2:	50 e0       	ldi	r21, 0x00	; 0
    27f4:	ca 01       	movw	r24, r20
    27f6:	88 0f       	add	r24, r24
    27f8:	99 1f       	adc	r25, r25
    27fa:	9c 01       	movw	r18, r24
    27fc:	22 0f       	add	r18, r18
    27fe:	33 1f       	adc	r19, r19
    2800:	22 0f       	add	r18, r18
    2802:	33 1f       	adc	r19, r19
    2804:	22 0f       	add	r18, r18
    2806:	33 1f       	adc	r19, r19
    2808:	82 0f       	add	r24, r18
    280a:	93 1f       	adc	r25, r19
    280c:	9c 01       	movw	r18, r24
    280e:	24 0f       	add	r18, r20
    2810:	35 1f       	adc	r19, r21
    2812:	8b 81       	ldd	r24, Y+3	; 0x03
    2814:	9c 81       	ldd	r25, Y+4	; 0x04
    2816:	fc 01       	movw	r30, r24
    2818:	e2 0f       	add	r30, r18
    281a:	f3 1f       	adc	r31, r19
    281c:	93 81       	ldd	r25, Z+3	; 0x03
    281e:	86 2f       	mov	r24, r22
    2820:	69 2f       	mov	r22, r25
    2822:	41 e0       	ldi	r20, 0x01	; 1
    2824:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    2828:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    282a:	8a 81       	ldd	r24, Y+2	; 0x02
    282c:	81 30       	cpi	r24, 0x01	; 1
    282e:	19 f0       	breq	.+6      	; 0x2836 <SEV_SEG_enumInit+0x118>
    2830:	8a 81       	ldd	r24, Y+2	; 0x02
    2832:	8d 83       	std	Y+5, r24	; 0x05
    2834:	69 c7       	rjmp	.+3794   	; 0x3708 <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPin,OUTPUT);
    2836:	89 81       	ldd	r24, Y+1	; 0x01
    2838:	48 2f       	mov	r20, r24
    283a:	50 e0       	ldi	r21, 0x00	; 0
    283c:	ca 01       	movw	r24, r20
    283e:	88 0f       	add	r24, r24
    2840:	99 1f       	adc	r25, r25
    2842:	9c 01       	movw	r18, r24
    2844:	22 0f       	add	r18, r18
    2846:	33 1f       	adc	r19, r19
    2848:	22 0f       	add	r18, r18
    284a:	33 1f       	adc	r19, r19
    284c:	22 0f       	add	r18, r18
    284e:	33 1f       	adc	r19, r19
    2850:	82 0f       	add	r24, r18
    2852:	93 1f       	adc	r25, r19
    2854:	9c 01       	movw	r18, r24
    2856:	24 0f       	add	r18, r20
    2858:	35 1f       	adc	r19, r21
    285a:	8b 81       	ldd	r24, Y+3	; 0x03
    285c:	9c 81       	ldd	r25, Y+4	; 0x04
    285e:	fc 01       	movw	r30, r24
    2860:	e2 0f       	add	r30, r18
    2862:	f3 1f       	adc	r31, r19
    2864:	64 81       	ldd	r22, Z+4	; 0x04
    2866:	89 81       	ldd	r24, Y+1	; 0x01
    2868:	48 2f       	mov	r20, r24
    286a:	50 e0       	ldi	r21, 0x00	; 0
    286c:	ca 01       	movw	r24, r20
    286e:	88 0f       	add	r24, r24
    2870:	99 1f       	adc	r25, r25
    2872:	9c 01       	movw	r18, r24
    2874:	22 0f       	add	r18, r18
    2876:	33 1f       	adc	r19, r19
    2878:	22 0f       	add	r18, r18
    287a:	33 1f       	adc	r19, r19
    287c:	22 0f       	add	r18, r18
    287e:	33 1f       	adc	r19, r19
    2880:	82 0f       	add	r24, r18
    2882:	93 1f       	adc	r25, r19
    2884:	9c 01       	movw	r18, r24
    2886:	24 0f       	add	r18, r20
    2888:	35 1f       	adc	r19, r21
    288a:	8b 81       	ldd	r24, Y+3	; 0x03
    288c:	9c 81       	ldd	r25, Y+4	; 0x04
    288e:	fc 01       	movw	r30, r24
    2890:	e2 0f       	add	r30, r18
    2892:	f3 1f       	adc	r31, r19
    2894:	95 81       	ldd	r25, Z+5	; 0x05
    2896:	86 2f       	mov	r24, r22
    2898:	69 2f       	mov	r22, r25
    289a:	41 e0       	ldi	r20, 0x01	; 1
    289c:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    28a0:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    28a2:	8a 81       	ldd	r24, Y+2	; 0x02
    28a4:	81 30       	cpi	r24, 0x01	; 1
    28a6:	19 f0       	breq	.+6      	; 0x28ae <SEV_SEG_enumInit+0x190>
    28a8:	8a 81       	ldd	r24, Y+2	; 0x02
    28aa:	8d 83       	std	Y+5, r24	; 0x05
    28ac:	2d c7       	rjmp	.+3674   	; 0x3708 <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPin,OUTPUT);
    28ae:	89 81       	ldd	r24, Y+1	; 0x01
    28b0:	48 2f       	mov	r20, r24
    28b2:	50 e0       	ldi	r21, 0x00	; 0
    28b4:	ca 01       	movw	r24, r20
    28b6:	88 0f       	add	r24, r24
    28b8:	99 1f       	adc	r25, r25
    28ba:	9c 01       	movw	r18, r24
    28bc:	22 0f       	add	r18, r18
    28be:	33 1f       	adc	r19, r19
    28c0:	22 0f       	add	r18, r18
    28c2:	33 1f       	adc	r19, r19
    28c4:	22 0f       	add	r18, r18
    28c6:	33 1f       	adc	r19, r19
    28c8:	82 0f       	add	r24, r18
    28ca:	93 1f       	adc	r25, r19
    28cc:	9c 01       	movw	r18, r24
    28ce:	24 0f       	add	r18, r20
    28d0:	35 1f       	adc	r19, r21
    28d2:	8b 81       	ldd	r24, Y+3	; 0x03
    28d4:	9c 81       	ldd	r25, Y+4	; 0x04
    28d6:	fc 01       	movw	r30, r24
    28d8:	e2 0f       	add	r30, r18
    28da:	f3 1f       	adc	r31, r19
    28dc:	66 81       	ldd	r22, Z+6	; 0x06
    28de:	89 81       	ldd	r24, Y+1	; 0x01
    28e0:	48 2f       	mov	r20, r24
    28e2:	50 e0       	ldi	r21, 0x00	; 0
    28e4:	ca 01       	movw	r24, r20
    28e6:	88 0f       	add	r24, r24
    28e8:	99 1f       	adc	r25, r25
    28ea:	9c 01       	movw	r18, r24
    28ec:	22 0f       	add	r18, r18
    28ee:	33 1f       	adc	r19, r19
    28f0:	22 0f       	add	r18, r18
    28f2:	33 1f       	adc	r19, r19
    28f4:	22 0f       	add	r18, r18
    28f6:	33 1f       	adc	r19, r19
    28f8:	82 0f       	add	r24, r18
    28fa:	93 1f       	adc	r25, r19
    28fc:	9c 01       	movw	r18, r24
    28fe:	24 0f       	add	r18, r20
    2900:	35 1f       	adc	r19, r21
    2902:	8b 81       	ldd	r24, Y+3	; 0x03
    2904:	9c 81       	ldd	r25, Y+4	; 0x04
    2906:	fc 01       	movw	r30, r24
    2908:	e2 0f       	add	r30, r18
    290a:	f3 1f       	adc	r31, r19
    290c:	97 81       	ldd	r25, Z+7	; 0x07
    290e:	86 2f       	mov	r24, r22
    2910:	69 2f       	mov	r22, r25
    2912:	41 e0       	ldi	r20, 0x01	; 1
    2914:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    2918:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    291a:	8a 81       	ldd	r24, Y+2	; 0x02
    291c:	81 30       	cpi	r24, 0x01	; 1
    291e:	19 f0       	breq	.+6      	; 0x2926 <SEV_SEG_enumInit+0x208>
    2920:	8a 81       	ldd	r24, Y+2	; 0x02
    2922:	8d 83       	std	Y+5, r24	; 0x05
    2924:	f1 c6       	rjmp	.+3554   	; 0x3708 <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPin,OUTPUT);
    2926:	89 81       	ldd	r24, Y+1	; 0x01
    2928:	48 2f       	mov	r20, r24
    292a:	50 e0       	ldi	r21, 0x00	; 0
    292c:	ca 01       	movw	r24, r20
    292e:	88 0f       	add	r24, r24
    2930:	99 1f       	adc	r25, r25
    2932:	9c 01       	movw	r18, r24
    2934:	22 0f       	add	r18, r18
    2936:	33 1f       	adc	r19, r19
    2938:	22 0f       	add	r18, r18
    293a:	33 1f       	adc	r19, r19
    293c:	22 0f       	add	r18, r18
    293e:	33 1f       	adc	r19, r19
    2940:	82 0f       	add	r24, r18
    2942:	93 1f       	adc	r25, r19
    2944:	9c 01       	movw	r18, r24
    2946:	24 0f       	add	r18, r20
    2948:	35 1f       	adc	r19, r21
    294a:	8b 81       	ldd	r24, Y+3	; 0x03
    294c:	9c 81       	ldd	r25, Y+4	; 0x04
    294e:	fc 01       	movw	r30, r24
    2950:	e2 0f       	add	r30, r18
    2952:	f3 1f       	adc	r31, r19
    2954:	60 85       	ldd	r22, Z+8	; 0x08
    2956:	89 81       	ldd	r24, Y+1	; 0x01
    2958:	48 2f       	mov	r20, r24
    295a:	50 e0       	ldi	r21, 0x00	; 0
    295c:	ca 01       	movw	r24, r20
    295e:	88 0f       	add	r24, r24
    2960:	99 1f       	adc	r25, r25
    2962:	9c 01       	movw	r18, r24
    2964:	22 0f       	add	r18, r18
    2966:	33 1f       	adc	r19, r19
    2968:	22 0f       	add	r18, r18
    296a:	33 1f       	adc	r19, r19
    296c:	22 0f       	add	r18, r18
    296e:	33 1f       	adc	r19, r19
    2970:	82 0f       	add	r24, r18
    2972:	93 1f       	adc	r25, r19
    2974:	9c 01       	movw	r18, r24
    2976:	24 0f       	add	r18, r20
    2978:	35 1f       	adc	r19, r21
    297a:	8b 81       	ldd	r24, Y+3	; 0x03
    297c:	9c 81       	ldd	r25, Y+4	; 0x04
    297e:	fc 01       	movw	r30, r24
    2980:	e2 0f       	add	r30, r18
    2982:	f3 1f       	adc	r31, r19
    2984:	91 85       	ldd	r25, Z+9	; 0x09
    2986:	86 2f       	mov	r24, r22
    2988:	69 2f       	mov	r22, r25
    298a:	41 e0       	ldi	r20, 0x01	; 1
    298c:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    2990:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2992:	8a 81       	ldd	r24, Y+2	; 0x02
    2994:	81 30       	cpi	r24, 0x01	; 1
    2996:	19 f0       	breq	.+6      	; 0x299e <SEV_SEG_enumInit+0x280>
    2998:	8a 81       	ldd	r24, Y+2	; 0x02
    299a:	8d 83       	std	Y+5, r24	; 0x05
    299c:	b5 c6       	rjmp	.+3434   	; 0x3708 <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPin,OUTPUT);
    299e:	89 81       	ldd	r24, Y+1	; 0x01
    29a0:	48 2f       	mov	r20, r24
    29a2:	50 e0       	ldi	r21, 0x00	; 0
    29a4:	ca 01       	movw	r24, r20
    29a6:	88 0f       	add	r24, r24
    29a8:	99 1f       	adc	r25, r25
    29aa:	9c 01       	movw	r18, r24
    29ac:	22 0f       	add	r18, r18
    29ae:	33 1f       	adc	r19, r19
    29b0:	22 0f       	add	r18, r18
    29b2:	33 1f       	adc	r19, r19
    29b4:	22 0f       	add	r18, r18
    29b6:	33 1f       	adc	r19, r19
    29b8:	82 0f       	add	r24, r18
    29ba:	93 1f       	adc	r25, r19
    29bc:	9c 01       	movw	r18, r24
    29be:	24 0f       	add	r18, r20
    29c0:	35 1f       	adc	r19, r21
    29c2:	8b 81       	ldd	r24, Y+3	; 0x03
    29c4:	9c 81       	ldd	r25, Y+4	; 0x04
    29c6:	fc 01       	movw	r30, r24
    29c8:	e2 0f       	add	r30, r18
    29ca:	f3 1f       	adc	r31, r19
    29cc:	62 85       	ldd	r22, Z+10	; 0x0a
    29ce:	89 81       	ldd	r24, Y+1	; 0x01
    29d0:	48 2f       	mov	r20, r24
    29d2:	50 e0       	ldi	r21, 0x00	; 0
    29d4:	ca 01       	movw	r24, r20
    29d6:	88 0f       	add	r24, r24
    29d8:	99 1f       	adc	r25, r25
    29da:	9c 01       	movw	r18, r24
    29dc:	22 0f       	add	r18, r18
    29de:	33 1f       	adc	r19, r19
    29e0:	22 0f       	add	r18, r18
    29e2:	33 1f       	adc	r19, r19
    29e4:	22 0f       	add	r18, r18
    29e6:	33 1f       	adc	r19, r19
    29e8:	82 0f       	add	r24, r18
    29ea:	93 1f       	adc	r25, r19
    29ec:	9c 01       	movw	r18, r24
    29ee:	24 0f       	add	r18, r20
    29f0:	35 1f       	adc	r19, r21
    29f2:	8b 81       	ldd	r24, Y+3	; 0x03
    29f4:	9c 81       	ldd	r25, Y+4	; 0x04
    29f6:	fc 01       	movw	r30, r24
    29f8:	e2 0f       	add	r30, r18
    29fa:	f3 1f       	adc	r31, r19
    29fc:	93 85       	ldd	r25, Z+11	; 0x0b
    29fe:	86 2f       	mov	r24, r22
    2a00:	69 2f       	mov	r22, r25
    2a02:	41 e0       	ldi	r20, 0x01	; 1
    2a04:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    2a08:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2a0a:	8a 81       	ldd	r24, Y+2	; 0x02
    2a0c:	81 30       	cpi	r24, 0x01	; 1
    2a0e:	19 f0       	breq	.+6      	; 0x2a16 <SEV_SEG_enumInit+0x2f8>
    2a10:	8a 81       	ldd	r24, Y+2	; 0x02
    2a12:	8d 83       	std	Y+5, r24	; 0x05
    2a14:	79 c6       	rjmp	.+3314   	; 0x3708 <SEV_SEG_enumInit+0xfea>
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPin,OUTPUT);
    2a16:	89 81       	ldd	r24, Y+1	; 0x01
    2a18:	48 2f       	mov	r20, r24
    2a1a:	50 e0       	ldi	r21, 0x00	; 0
    2a1c:	ca 01       	movw	r24, r20
    2a1e:	88 0f       	add	r24, r24
    2a20:	99 1f       	adc	r25, r25
    2a22:	9c 01       	movw	r18, r24
    2a24:	22 0f       	add	r18, r18
    2a26:	33 1f       	adc	r19, r19
    2a28:	22 0f       	add	r18, r18
    2a2a:	33 1f       	adc	r19, r19
    2a2c:	22 0f       	add	r18, r18
    2a2e:	33 1f       	adc	r19, r19
    2a30:	82 0f       	add	r24, r18
    2a32:	93 1f       	adc	r25, r19
    2a34:	9c 01       	movw	r18, r24
    2a36:	24 0f       	add	r18, r20
    2a38:	35 1f       	adc	r19, r21
    2a3a:	8b 81       	ldd	r24, Y+3	; 0x03
    2a3c:	9c 81       	ldd	r25, Y+4	; 0x04
    2a3e:	fc 01       	movw	r30, r24
    2a40:	e2 0f       	add	r30, r18
    2a42:	f3 1f       	adc	r31, r19
    2a44:	64 85       	ldd	r22, Z+12	; 0x0c
    2a46:	89 81       	ldd	r24, Y+1	; 0x01
    2a48:	48 2f       	mov	r20, r24
    2a4a:	50 e0       	ldi	r21, 0x00	; 0
    2a4c:	ca 01       	movw	r24, r20
    2a4e:	88 0f       	add	r24, r24
    2a50:	99 1f       	adc	r25, r25
    2a52:	9c 01       	movw	r18, r24
    2a54:	22 0f       	add	r18, r18
    2a56:	33 1f       	adc	r19, r19
    2a58:	22 0f       	add	r18, r18
    2a5a:	33 1f       	adc	r19, r19
    2a5c:	22 0f       	add	r18, r18
    2a5e:	33 1f       	adc	r19, r19
    2a60:	82 0f       	add	r24, r18
    2a62:	93 1f       	adc	r25, r19
    2a64:	9c 01       	movw	r18, r24
    2a66:	24 0f       	add	r18, r20
    2a68:	35 1f       	adc	r19, r21
    2a6a:	8b 81       	ldd	r24, Y+3	; 0x03
    2a6c:	9c 81       	ldd	r25, Y+4	; 0x04
    2a6e:	fc 01       	movw	r30, r24
    2a70:	e2 0f       	add	r30, r18
    2a72:	f3 1f       	adc	r31, r19
    2a74:	95 85       	ldd	r25, Z+13	; 0x0d
    2a76:	86 2f       	mov	r24, r22
    2a78:	69 2f       	mov	r22, r25
    2a7a:	41 e0       	ldi	r20, 0x01	; 1
    2a7c:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    2a80:	8a 83       	std	Y+2, r24	; 0x02
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2a82:	8a 81       	ldd	r24, Y+2	; 0x02
    2a84:	81 30       	cpi	r24, 0x01	; 1
    2a86:	19 f0       	breq	.+6      	; 0x2a8e <SEV_SEG_enumInit+0x370>
    2a88:	8a 81       	ldd	r24, Y+2	; 0x02
    2a8a:	8d 83       	std	Y+5, r24	; 0x05
    2a8c:	3d c6       	rjmp	.+3194   	; 0x3708 <SEV_SEG_enumInit+0xfea>

			if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_CATHODE)
    2a8e:	89 81       	ldd	r24, Y+1	; 0x01
    2a90:	48 2f       	mov	r20, r24
    2a92:	50 e0       	ldi	r21, 0x00	; 0
    2a94:	ca 01       	movw	r24, r20
    2a96:	88 0f       	add	r24, r24
    2a98:	99 1f       	adc	r25, r25
    2a9a:	9c 01       	movw	r18, r24
    2a9c:	22 0f       	add	r18, r18
    2a9e:	33 1f       	adc	r19, r19
    2aa0:	22 0f       	add	r18, r18
    2aa2:	33 1f       	adc	r19, r19
    2aa4:	22 0f       	add	r18, r18
    2aa6:	33 1f       	adc	r19, r19
    2aa8:	82 0f       	add	r24, r18
    2aaa:	93 1f       	adc	r25, r19
    2aac:	9c 01       	movw	r18, r24
    2aae:	24 0f       	add	r18, r20
    2ab0:	35 1f       	adc	r19, r21
    2ab2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ab4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ab6:	fc 01       	movw	r30, r24
    2ab8:	e2 0f       	add	r30, r18
    2aba:	f3 1f       	adc	r31, r19
    2abc:	82 89       	ldd	r24, Z+18	; 0x12
    2abe:	81 30       	cpi	r24, 0x01	; 1
    2ac0:	09 f0       	breq	.+2      	; 0x2ac4 <SEV_SEG_enumInit+0x3a6>
    2ac2:	a5 c1       	rjmp	.+842    	; 0x2e0e <SEV_SEG_enumInit+0x6f0>
			{
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APin,LOW);
    2ac4:	89 81       	ldd	r24, Y+1	; 0x01
    2ac6:	48 2f       	mov	r20, r24
    2ac8:	50 e0       	ldi	r21, 0x00	; 0
    2aca:	ca 01       	movw	r24, r20
    2acc:	88 0f       	add	r24, r24
    2ace:	99 1f       	adc	r25, r25
    2ad0:	9c 01       	movw	r18, r24
    2ad2:	22 0f       	add	r18, r18
    2ad4:	33 1f       	adc	r19, r19
    2ad6:	22 0f       	add	r18, r18
    2ad8:	33 1f       	adc	r19, r19
    2ada:	22 0f       	add	r18, r18
    2adc:	33 1f       	adc	r19, r19
    2ade:	82 0f       	add	r24, r18
    2ae0:	93 1f       	adc	r25, r19
    2ae2:	9c 01       	movw	r18, r24
    2ae4:	24 0f       	add	r18, r20
    2ae6:	35 1f       	adc	r19, r21
    2ae8:	8b 81       	ldd	r24, Y+3	; 0x03
    2aea:	9c 81       	ldd	r25, Y+4	; 0x04
    2aec:	fc 01       	movw	r30, r24
    2aee:	e2 0f       	add	r30, r18
    2af0:	f3 1f       	adc	r31, r19
    2af2:	60 81       	ld	r22, Z
    2af4:	89 81       	ldd	r24, Y+1	; 0x01
    2af6:	48 2f       	mov	r20, r24
    2af8:	50 e0       	ldi	r21, 0x00	; 0
    2afa:	ca 01       	movw	r24, r20
    2afc:	88 0f       	add	r24, r24
    2afe:	99 1f       	adc	r25, r25
    2b00:	9c 01       	movw	r18, r24
    2b02:	22 0f       	add	r18, r18
    2b04:	33 1f       	adc	r19, r19
    2b06:	22 0f       	add	r18, r18
    2b08:	33 1f       	adc	r19, r19
    2b0a:	22 0f       	add	r18, r18
    2b0c:	33 1f       	adc	r19, r19
    2b0e:	82 0f       	add	r24, r18
    2b10:	93 1f       	adc	r25, r19
    2b12:	9c 01       	movw	r18, r24
    2b14:	24 0f       	add	r18, r20
    2b16:	35 1f       	adc	r19, r21
    2b18:	8b 81       	ldd	r24, Y+3	; 0x03
    2b1a:	9c 81       	ldd	r25, Y+4	; 0x04
    2b1c:	fc 01       	movw	r30, r24
    2b1e:	e2 0f       	add	r30, r18
    2b20:	f3 1f       	adc	r31, r19
    2b22:	91 81       	ldd	r25, Z+1	; 0x01
    2b24:	86 2f       	mov	r24, r22
    2b26:	69 2f       	mov	r22, r25
    2b28:	40 e0       	ldi	r20, 0x00	; 0
    2b2a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2b2e:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2b30:	8a 81       	ldd	r24, Y+2	; 0x02
    2b32:	81 30       	cpi	r24, 0x01	; 1
    2b34:	19 f0       	breq	.+6      	; 0x2b3c <SEV_SEG_enumInit+0x41e>
    2b36:	8a 81       	ldd	r24, Y+2	; 0x02
    2b38:	8d 83       	std	Y+5, r24	; 0x05
    2b3a:	e6 c5       	rjmp	.+3020   	; 0x3708 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPin,LOW);
    2b3c:	89 81       	ldd	r24, Y+1	; 0x01
    2b3e:	48 2f       	mov	r20, r24
    2b40:	50 e0       	ldi	r21, 0x00	; 0
    2b42:	ca 01       	movw	r24, r20
    2b44:	88 0f       	add	r24, r24
    2b46:	99 1f       	adc	r25, r25
    2b48:	9c 01       	movw	r18, r24
    2b4a:	22 0f       	add	r18, r18
    2b4c:	33 1f       	adc	r19, r19
    2b4e:	22 0f       	add	r18, r18
    2b50:	33 1f       	adc	r19, r19
    2b52:	22 0f       	add	r18, r18
    2b54:	33 1f       	adc	r19, r19
    2b56:	82 0f       	add	r24, r18
    2b58:	93 1f       	adc	r25, r19
    2b5a:	9c 01       	movw	r18, r24
    2b5c:	24 0f       	add	r18, r20
    2b5e:	35 1f       	adc	r19, r21
    2b60:	8b 81       	ldd	r24, Y+3	; 0x03
    2b62:	9c 81       	ldd	r25, Y+4	; 0x04
    2b64:	fc 01       	movw	r30, r24
    2b66:	e2 0f       	add	r30, r18
    2b68:	f3 1f       	adc	r31, r19
    2b6a:	62 81       	ldd	r22, Z+2	; 0x02
    2b6c:	89 81       	ldd	r24, Y+1	; 0x01
    2b6e:	48 2f       	mov	r20, r24
    2b70:	50 e0       	ldi	r21, 0x00	; 0
    2b72:	ca 01       	movw	r24, r20
    2b74:	88 0f       	add	r24, r24
    2b76:	99 1f       	adc	r25, r25
    2b78:	9c 01       	movw	r18, r24
    2b7a:	22 0f       	add	r18, r18
    2b7c:	33 1f       	adc	r19, r19
    2b7e:	22 0f       	add	r18, r18
    2b80:	33 1f       	adc	r19, r19
    2b82:	22 0f       	add	r18, r18
    2b84:	33 1f       	adc	r19, r19
    2b86:	82 0f       	add	r24, r18
    2b88:	93 1f       	adc	r25, r19
    2b8a:	9c 01       	movw	r18, r24
    2b8c:	24 0f       	add	r18, r20
    2b8e:	35 1f       	adc	r19, r21
    2b90:	8b 81       	ldd	r24, Y+3	; 0x03
    2b92:	9c 81       	ldd	r25, Y+4	; 0x04
    2b94:	fc 01       	movw	r30, r24
    2b96:	e2 0f       	add	r30, r18
    2b98:	f3 1f       	adc	r31, r19
    2b9a:	93 81       	ldd	r25, Z+3	; 0x03
    2b9c:	86 2f       	mov	r24, r22
    2b9e:	69 2f       	mov	r22, r25
    2ba0:	40 e0       	ldi	r20, 0x00	; 0
    2ba2:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2ba6:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2ba8:	8a 81       	ldd	r24, Y+2	; 0x02
    2baa:	81 30       	cpi	r24, 0x01	; 1
    2bac:	19 f0       	breq	.+6      	; 0x2bb4 <SEV_SEG_enumInit+0x496>
    2bae:	8a 81       	ldd	r24, Y+2	; 0x02
    2bb0:	8d 83       	std	Y+5, r24	; 0x05
    2bb2:	aa c5       	rjmp	.+2900   	; 0x3708 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPin,LOW);
    2bb4:	89 81       	ldd	r24, Y+1	; 0x01
    2bb6:	48 2f       	mov	r20, r24
    2bb8:	50 e0       	ldi	r21, 0x00	; 0
    2bba:	ca 01       	movw	r24, r20
    2bbc:	88 0f       	add	r24, r24
    2bbe:	99 1f       	adc	r25, r25
    2bc0:	9c 01       	movw	r18, r24
    2bc2:	22 0f       	add	r18, r18
    2bc4:	33 1f       	adc	r19, r19
    2bc6:	22 0f       	add	r18, r18
    2bc8:	33 1f       	adc	r19, r19
    2bca:	22 0f       	add	r18, r18
    2bcc:	33 1f       	adc	r19, r19
    2bce:	82 0f       	add	r24, r18
    2bd0:	93 1f       	adc	r25, r19
    2bd2:	9c 01       	movw	r18, r24
    2bd4:	24 0f       	add	r18, r20
    2bd6:	35 1f       	adc	r19, r21
    2bd8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bda:	9c 81       	ldd	r25, Y+4	; 0x04
    2bdc:	fc 01       	movw	r30, r24
    2bde:	e2 0f       	add	r30, r18
    2be0:	f3 1f       	adc	r31, r19
    2be2:	64 81       	ldd	r22, Z+4	; 0x04
    2be4:	89 81       	ldd	r24, Y+1	; 0x01
    2be6:	48 2f       	mov	r20, r24
    2be8:	50 e0       	ldi	r21, 0x00	; 0
    2bea:	ca 01       	movw	r24, r20
    2bec:	88 0f       	add	r24, r24
    2bee:	99 1f       	adc	r25, r25
    2bf0:	9c 01       	movw	r18, r24
    2bf2:	22 0f       	add	r18, r18
    2bf4:	33 1f       	adc	r19, r19
    2bf6:	22 0f       	add	r18, r18
    2bf8:	33 1f       	adc	r19, r19
    2bfa:	22 0f       	add	r18, r18
    2bfc:	33 1f       	adc	r19, r19
    2bfe:	82 0f       	add	r24, r18
    2c00:	93 1f       	adc	r25, r19
    2c02:	9c 01       	movw	r18, r24
    2c04:	24 0f       	add	r18, r20
    2c06:	35 1f       	adc	r19, r21
    2c08:	8b 81       	ldd	r24, Y+3	; 0x03
    2c0a:	9c 81       	ldd	r25, Y+4	; 0x04
    2c0c:	fc 01       	movw	r30, r24
    2c0e:	e2 0f       	add	r30, r18
    2c10:	f3 1f       	adc	r31, r19
    2c12:	95 81       	ldd	r25, Z+5	; 0x05
    2c14:	86 2f       	mov	r24, r22
    2c16:	69 2f       	mov	r22, r25
    2c18:	40 e0       	ldi	r20, 0x00	; 0
    2c1a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2c1e:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2c20:	8a 81       	ldd	r24, Y+2	; 0x02
    2c22:	81 30       	cpi	r24, 0x01	; 1
    2c24:	19 f0       	breq	.+6      	; 0x2c2c <SEV_SEG_enumInit+0x50e>
    2c26:	8a 81       	ldd	r24, Y+2	; 0x02
    2c28:	8d 83       	std	Y+5, r24	; 0x05
    2c2a:	6e c5       	rjmp	.+2780   	; 0x3708 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPin,LOW);
    2c2c:	89 81       	ldd	r24, Y+1	; 0x01
    2c2e:	48 2f       	mov	r20, r24
    2c30:	50 e0       	ldi	r21, 0x00	; 0
    2c32:	ca 01       	movw	r24, r20
    2c34:	88 0f       	add	r24, r24
    2c36:	99 1f       	adc	r25, r25
    2c38:	9c 01       	movw	r18, r24
    2c3a:	22 0f       	add	r18, r18
    2c3c:	33 1f       	adc	r19, r19
    2c3e:	22 0f       	add	r18, r18
    2c40:	33 1f       	adc	r19, r19
    2c42:	22 0f       	add	r18, r18
    2c44:	33 1f       	adc	r19, r19
    2c46:	82 0f       	add	r24, r18
    2c48:	93 1f       	adc	r25, r19
    2c4a:	9c 01       	movw	r18, r24
    2c4c:	24 0f       	add	r18, r20
    2c4e:	35 1f       	adc	r19, r21
    2c50:	8b 81       	ldd	r24, Y+3	; 0x03
    2c52:	9c 81       	ldd	r25, Y+4	; 0x04
    2c54:	fc 01       	movw	r30, r24
    2c56:	e2 0f       	add	r30, r18
    2c58:	f3 1f       	adc	r31, r19
    2c5a:	66 81       	ldd	r22, Z+6	; 0x06
    2c5c:	89 81       	ldd	r24, Y+1	; 0x01
    2c5e:	48 2f       	mov	r20, r24
    2c60:	50 e0       	ldi	r21, 0x00	; 0
    2c62:	ca 01       	movw	r24, r20
    2c64:	88 0f       	add	r24, r24
    2c66:	99 1f       	adc	r25, r25
    2c68:	9c 01       	movw	r18, r24
    2c6a:	22 0f       	add	r18, r18
    2c6c:	33 1f       	adc	r19, r19
    2c6e:	22 0f       	add	r18, r18
    2c70:	33 1f       	adc	r19, r19
    2c72:	22 0f       	add	r18, r18
    2c74:	33 1f       	adc	r19, r19
    2c76:	82 0f       	add	r24, r18
    2c78:	93 1f       	adc	r25, r19
    2c7a:	9c 01       	movw	r18, r24
    2c7c:	24 0f       	add	r18, r20
    2c7e:	35 1f       	adc	r19, r21
    2c80:	8b 81       	ldd	r24, Y+3	; 0x03
    2c82:	9c 81       	ldd	r25, Y+4	; 0x04
    2c84:	fc 01       	movw	r30, r24
    2c86:	e2 0f       	add	r30, r18
    2c88:	f3 1f       	adc	r31, r19
    2c8a:	97 81       	ldd	r25, Z+7	; 0x07
    2c8c:	86 2f       	mov	r24, r22
    2c8e:	69 2f       	mov	r22, r25
    2c90:	40 e0       	ldi	r20, 0x00	; 0
    2c92:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2c96:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2c98:	8a 81       	ldd	r24, Y+2	; 0x02
    2c9a:	81 30       	cpi	r24, 0x01	; 1
    2c9c:	19 f0       	breq	.+6      	; 0x2ca4 <SEV_SEG_enumInit+0x586>
    2c9e:	8a 81       	ldd	r24, Y+2	; 0x02
    2ca0:	8d 83       	std	Y+5, r24	; 0x05
    2ca2:	32 c5       	rjmp	.+2660   	; 0x3708 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPin,LOW);
    2ca4:	89 81       	ldd	r24, Y+1	; 0x01
    2ca6:	48 2f       	mov	r20, r24
    2ca8:	50 e0       	ldi	r21, 0x00	; 0
    2caa:	ca 01       	movw	r24, r20
    2cac:	88 0f       	add	r24, r24
    2cae:	99 1f       	adc	r25, r25
    2cb0:	9c 01       	movw	r18, r24
    2cb2:	22 0f       	add	r18, r18
    2cb4:	33 1f       	adc	r19, r19
    2cb6:	22 0f       	add	r18, r18
    2cb8:	33 1f       	adc	r19, r19
    2cba:	22 0f       	add	r18, r18
    2cbc:	33 1f       	adc	r19, r19
    2cbe:	82 0f       	add	r24, r18
    2cc0:	93 1f       	adc	r25, r19
    2cc2:	9c 01       	movw	r18, r24
    2cc4:	24 0f       	add	r18, r20
    2cc6:	35 1f       	adc	r19, r21
    2cc8:	8b 81       	ldd	r24, Y+3	; 0x03
    2cca:	9c 81       	ldd	r25, Y+4	; 0x04
    2ccc:	fc 01       	movw	r30, r24
    2cce:	e2 0f       	add	r30, r18
    2cd0:	f3 1f       	adc	r31, r19
    2cd2:	60 85       	ldd	r22, Z+8	; 0x08
    2cd4:	89 81       	ldd	r24, Y+1	; 0x01
    2cd6:	48 2f       	mov	r20, r24
    2cd8:	50 e0       	ldi	r21, 0x00	; 0
    2cda:	ca 01       	movw	r24, r20
    2cdc:	88 0f       	add	r24, r24
    2cde:	99 1f       	adc	r25, r25
    2ce0:	9c 01       	movw	r18, r24
    2ce2:	22 0f       	add	r18, r18
    2ce4:	33 1f       	adc	r19, r19
    2ce6:	22 0f       	add	r18, r18
    2ce8:	33 1f       	adc	r19, r19
    2cea:	22 0f       	add	r18, r18
    2cec:	33 1f       	adc	r19, r19
    2cee:	82 0f       	add	r24, r18
    2cf0:	93 1f       	adc	r25, r19
    2cf2:	9c 01       	movw	r18, r24
    2cf4:	24 0f       	add	r18, r20
    2cf6:	35 1f       	adc	r19, r21
    2cf8:	8b 81       	ldd	r24, Y+3	; 0x03
    2cfa:	9c 81       	ldd	r25, Y+4	; 0x04
    2cfc:	fc 01       	movw	r30, r24
    2cfe:	e2 0f       	add	r30, r18
    2d00:	f3 1f       	adc	r31, r19
    2d02:	91 85       	ldd	r25, Z+9	; 0x09
    2d04:	86 2f       	mov	r24, r22
    2d06:	69 2f       	mov	r22, r25
    2d08:	40 e0       	ldi	r20, 0x00	; 0
    2d0a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2d0e:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2d10:	8a 81       	ldd	r24, Y+2	; 0x02
    2d12:	81 30       	cpi	r24, 0x01	; 1
    2d14:	19 f0       	breq	.+6      	; 0x2d1c <SEV_SEG_enumInit+0x5fe>
    2d16:	8a 81       	ldd	r24, Y+2	; 0x02
    2d18:	8d 83       	std	Y+5, r24	; 0x05
    2d1a:	f6 c4       	rjmp	.+2540   	; 0x3708 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPin,LOW);
    2d1c:	89 81       	ldd	r24, Y+1	; 0x01
    2d1e:	48 2f       	mov	r20, r24
    2d20:	50 e0       	ldi	r21, 0x00	; 0
    2d22:	ca 01       	movw	r24, r20
    2d24:	88 0f       	add	r24, r24
    2d26:	99 1f       	adc	r25, r25
    2d28:	9c 01       	movw	r18, r24
    2d2a:	22 0f       	add	r18, r18
    2d2c:	33 1f       	adc	r19, r19
    2d2e:	22 0f       	add	r18, r18
    2d30:	33 1f       	adc	r19, r19
    2d32:	22 0f       	add	r18, r18
    2d34:	33 1f       	adc	r19, r19
    2d36:	82 0f       	add	r24, r18
    2d38:	93 1f       	adc	r25, r19
    2d3a:	9c 01       	movw	r18, r24
    2d3c:	24 0f       	add	r18, r20
    2d3e:	35 1f       	adc	r19, r21
    2d40:	8b 81       	ldd	r24, Y+3	; 0x03
    2d42:	9c 81       	ldd	r25, Y+4	; 0x04
    2d44:	fc 01       	movw	r30, r24
    2d46:	e2 0f       	add	r30, r18
    2d48:	f3 1f       	adc	r31, r19
    2d4a:	62 85       	ldd	r22, Z+10	; 0x0a
    2d4c:	89 81       	ldd	r24, Y+1	; 0x01
    2d4e:	48 2f       	mov	r20, r24
    2d50:	50 e0       	ldi	r21, 0x00	; 0
    2d52:	ca 01       	movw	r24, r20
    2d54:	88 0f       	add	r24, r24
    2d56:	99 1f       	adc	r25, r25
    2d58:	9c 01       	movw	r18, r24
    2d5a:	22 0f       	add	r18, r18
    2d5c:	33 1f       	adc	r19, r19
    2d5e:	22 0f       	add	r18, r18
    2d60:	33 1f       	adc	r19, r19
    2d62:	22 0f       	add	r18, r18
    2d64:	33 1f       	adc	r19, r19
    2d66:	82 0f       	add	r24, r18
    2d68:	93 1f       	adc	r25, r19
    2d6a:	9c 01       	movw	r18, r24
    2d6c:	24 0f       	add	r18, r20
    2d6e:	35 1f       	adc	r19, r21
    2d70:	8b 81       	ldd	r24, Y+3	; 0x03
    2d72:	9c 81       	ldd	r25, Y+4	; 0x04
    2d74:	fc 01       	movw	r30, r24
    2d76:	e2 0f       	add	r30, r18
    2d78:	f3 1f       	adc	r31, r19
    2d7a:	93 85       	ldd	r25, Z+11	; 0x0b
    2d7c:	86 2f       	mov	r24, r22
    2d7e:	69 2f       	mov	r22, r25
    2d80:	40 e0       	ldi	r20, 0x00	; 0
    2d82:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2d86:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2d88:	8a 81       	ldd	r24, Y+2	; 0x02
    2d8a:	81 30       	cpi	r24, 0x01	; 1
    2d8c:	19 f0       	breq	.+6      	; 0x2d94 <SEV_SEG_enumInit+0x676>
    2d8e:	8a 81       	ldd	r24, Y+2	; 0x02
    2d90:	8d 83       	std	Y+5, r24	; 0x05
    2d92:	ba c4       	rjmp	.+2420   	; 0x3708 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPin,LOW);
    2d94:	89 81       	ldd	r24, Y+1	; 0x01
    2d96:	48 2f       	mov	r20, r24
    2d98:	50 e0       	ldi	r21, 0x00	; 0
    2d9a:	ca 01       	movw	r24, r20
    2d9c:	88 0f       	add	r24, r24
    2d9e:	99 1f       	adc	r25, r25
    2da0:	9c 01       	movw	r18, r24
    2da2:	22 0f       	add	r18, r18
    2da4:	33 1f       	adc	r19, r19
    2da6:	22 0f       	add	r18, r18
    2da8:	33 1f       	adc	r19, r19
    2daa:	22 0f       	add	r18, r18
    2dac:	33 1f       	adc	r19, r19
    2dae:	82 0f       	add	r24, r18
    2db0:	93 1f       	adc	r25, r19
    2db2:	9c 01       	movw	r18, r24
    2db4:	24 0f       	add	r18, r20
    2db6:	35 1f       	adc	r19, r21
    2db8:	8b 81       	ldd	r24, Y+3	; 0x03
    2dba:	9c 81       	ldd	r25, Y+4	; 0x04
    2dbc:	fc 01       	movw	r30, r24
    2dbe:	e2 0f       	add	r30, r18
    2dc0:	f3 1f       	adc	r31, r19
    2dc2:	64 85       	ldd	r22, Z+12	; 0x0c
    2dc4:	89 81       	ldd	r24, Y+1	; 0x01
    2dc6:	48 2f       	mov	r20, r24
    2dc8:	50 e0       	ldi	r21, 0x00	; 0
    2dca:	ca 01       	movw	r24, r20
    2dcc:	88 0f       	add	r24, r24
    2dce:	99 1f       	adc	r25, r25
    2dd0:	9c 01       	movw	r18, r24
    2dd2:	22 0f       	add	r18, r18
    2dd4:	33 1f       	adc	r19, r19
    2dd6:	22 0f       	add	r18, r18
    2dd8:	33 1f       	adc	r19, r19
    2dda:	22 0f       	add	r18, r18
    2ddc:	33 1f       	adc	r19, r19
    2dde:	82 0f       	add	r24, r18
    2de0:	93 1f       	adc	r25, r19
    2de2:	9c 01       	movw	r18, r24
    2de4:	24 0f       	add	r18, r20
    2de6:	35 1f       	adc	r19, r21
    2de8:	8b 81       	ldd	r24, Y+3	; 0x03
    2dea:	9c 81       	ldd	r25, Y+4	; 0x04
    2dec:	fc 01       	movw	r30, r24
    2dee:	e2 0f       	add	r30, r18
    2df0:	f3 1f       	adc	r31, r19
    2df2:	95 85       	ldd	r25, Z+13	; 0x0d
    2df4:	86 2f       	mov	r24, r22
    2df6:	69 2f       	mov	r22, r25
    2df8:	40 e0       	ldi	r20, 0x00	; 0
    2dfa:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2dfe:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2e00:	8a 81       	ldd	r24, Y+2	; 0x02
    2e02:	81 30       	cpi	r24, 0x01	; 1
    2e04:	09 f4       	brne	.+2      	; 0x2e08 <SEV_SEG_enumInit+0x6ea>
    2e06:	c4 c1       	rjmp	.+904    	; 0x3190 <SEV_SEG_enumInit+0xa72>
    2e08:	8a 81       	ldd	r24, Y+2	; 0x02
    2e0a:	8d 83       	std	Y+5, r24	; 0x05
    2e0c:	7d c4       	rjmp	.+2298   	; 0x3708 <SEV_SEG_enumInit+0xfea>
			}
			else if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_ANODE)
    2e0e:	89 81       	ldd	r24, Y+1	; 0x01
    2e10:	48 2f       	mov	r20, r24
    2e12:	50 e0       	ldi	r21, 0x00	; 0
    2e14:	ca 01       	movw	r24, r20
    2e16:	88 0f       	add	r24, r24
    2e18:	99 1f       	adc	r25, r25
    2e1a:	9c 01       	movw	r18, r24
    2e1c:	22 0f       	add	r18, r18
    2e1e:	33 1f       	adc	r19, r19
    2e20:	22 0f       	add	r18, r18
    2e22:	33 1f       	adc	r19, r19
    2e24:	22 0f       	add	r18, r18
    2e26:	33 1f       	adc	r19, r19
    2e28:	82 0f       	add	r24, r18
    2e2a:	93 1f       	adc	r25, r19
    2e2c:	9c 01       	movw	r18, r24
    2e2e:	24 0f       	add	r18, r20
    2e30:	35 1f       	adc	r19, r21
    2e32:	8b 81       	ldd	r24, Y+3	; 0x03
    2e34:	9c 81       	ldd	r25, Y+4	; 0x04
    2e36:	fc 01       	movw	r30, r24
    2e38:	e2 0f       	add	r30, r18
    2e3a:	f3 1f       	adc	r31, r19
    2e3c:	82 89       	ldd	r24, Z+18	; 0x12
    2e3e:	88 23       	and	r24, r24
    2e40:	09 f0       	breq	.+2      	; 0x2e44 <SEV_SEG_enumInit+0x726>
    2e42:	a4 c1       	rjmp	.+840    	; 0x318c <SEV_SEG_enumInit+0xa6e>
			{
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8APin,HIGH);
    2e44:	89 81       	ldd	r24, Y+1	; 0x01
    2e46:	48 2f       	mov	r20, r24
    2e48:	50 e0       	ldi	r21, 0x00	; 0
    2e4a:	ca 01       	movw	r24, r20
    2e4c:	88 0f       	add	r24, r24
    2e4e:	99 1f       	adc	r25, r25
    2e50:	9c 01       	movw	r18, r24
    2e52:	22 0f       	add	r18, r18
    2e54:	33 1f       	adc	r19, r19
    2e56:	22 0f       	add	r18, r18
    2e58:	33 1f       	adc	r19, r19
    2e5a:	22 0f       	add	r18, r18
    2e5c:	33 1f       	adc	r19, r19
    2e5e:	82 0f       	add	r24, r18
    2e60:	93 1f       	adc	r25, r19
    2e62:	9c 01       	movw	r18, r24
    2e64:	24 0f       	add	r18, r20
    2e66:	35 1f       	adc	r19, r21
    2e68:	8b 81       	ldd	r24, Y+3	; 0x03
    2e6a:	9c 81       	ldd	r25, Y+4	; 0x04
    2e6c:	fc 01       	movw	r30, r24
    2e6e:	e2 0f       	add	r30, r18
    2e70:	f3 1f       	adc	r31, r19
    2e72:	60 81       	ld	r22, Z
    2e74:	89 81       	ldd	r24, Y+1	; 0x01
    2e76:	48 2f       	mov	r20, r24
    2e78:	50 e0       	ldi	r21, 0x00	; 0
    2e7a:	ca 01       	movw	r24, r20
    2e7c:	88 0f       	add	r24, r24
    2e7e:	99 1f       	adc	r25, r25
    2e80:	9c 01       	movw	r18, r24
    2e82:	22 0f       	add	r18, r18
    2e84:	33 1f       	adc	r19, r19
    2e86:	22 0f       	add	r18, r18
    2e88:	33 1f       	adc	r19, r19
    2e8a:	22 0f       	add	r18, r18
    2e8c:	33 1f       	adc	r19, r19
    2e8e:	82 0f       	add	r24, r18
    2e90:	93 1f       	adc	r25, r19
    2e92:	9c 01       	movw	r18, r24
    2e94:	24 0f       	add	r18, r20
    2e96:	35 1f       	adc	r19, r21
    2e98:	8b 81       	ldd	r24, Y+3	; 0x03
    2e9a:	9c 81       	ldd	r25, Y+4	; 0x04
    2e9c:	fc 01       	movw	r30, r24
    2e9e:	e2 0f       	add	r30, r18
    2ea0:	f3 1f       	adc	r31, r19
    2ea2:	91 81       	ldd	r25, Z+1	; 0x01
    2ea4:	86 2f       	mov	r24, r22
    2ea6:	69 2f       	mov	r22, r25
    2ea8:	41 e0       	ldi	r20, 0x01	; 1
    2eaa:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2eae:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2eb0:	8a 81       	ldd	r24, Y+2	; 0x02
    2eb2:	81 30       	cpi	r24, 0x01	; 1
    2eb4:	19 f0       	breq	.+6      	; 0x2ebc <SEV_SEG_enumInit+0x79e>
    2eb6:	8a 81       	ldd	r24, Y+2	; 0x02
    2eb8:	8d 83       	std	Y+5, r24	; 0x05
    2eba:	26 c4       	rjmp	.+2124   	; 0x3708 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8BPin,HIGH);
    2ebc:	89 81       	ldd	r24, Y+1	; 0x01
    2ebe:	48 2f       	mov	r20, r24
    2ec0:	50 e0       	ldi	r21, 0x00	; 0
    2ec2:	ca 01       	movw	r24, r20
    2ec4:	88 0f       	add	r24, r24
    2ec6:	99 1f       	adc	r25, r25
    2ec8:	9c 01       	movw	r18, r24
    2eca:	22 0f       	add	r18, r18
    2ecc:	33 1f       	adc	r19, r19
    2ece:	22 0f       	add	r18, r18
    2ed0:	33 1f       	adc	r19, r19
    2ed2:	22 0f       	add	r18, r18
    2ed4:	33 1f       	adc	r19, r19
    2ed6:	82 0f       	add	r24, r18
    2ed8:	93 1f       	adc	r25, r19
    2eda:	9c 01       	movw	r18, r24
    2edc:	24 0f       	add	r18, r20
    2ede:	35 1f       	adc	r19, r21
    2ee0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ee2:	9c 81       	ldd	r25, Y+4	; 0x04
    2ee4:	fc 01       	movw	r30, r24
    2ee6:	e2 0f       	add	r30, r18
    2ee8:	f3 1f       	adc	r31, r19
    2eea:	62 81       	ldd	r22, Z+2	; 0x02
    2eec:	89 81       	ldd	r24, Y+1	; 0x01
    2eee:	48 2f       	mov	r20, r24
    2ef0:	50 e0       	ldi	r21, 0x00	; 0
    2ef2:	ca 01       	movw	r24, r20
    2ef4:	88 0f       	add	r24, r24
    2ef6:	99 1f       	adc	r25, r25
    2ef8:	9c 01       	movw	r18, r24
    2efa:	22 0f       	add	r18, r18
    2efc:	33 1f       	adc	r19, r19
    2efe:	22 0f       	add	r18, r18
    2f00:	33 1f       	adc	r19, r19
    2f02:	22 0f       	add	r18, r18
    2f04:	33 1f       	adc	r19, r19
    2f06:	82 0f       	add	r24, r18
    2f08:	93 1f       	adc	r25, r19
    2f0a:	9c 01       	movw	r18, r24
    2f0c:	24 0f       	add	r18, r20
    2f0e:	35 1f       	adc	r19, r21
    2f10:	8b 81       	ldd	r24, Y+3	; 0x03
    2f12:	9c 81       	ldd	r25, Y+4	; 0x04
    2f14:	fc 01       	movw	r30, r24
    2f16:	e2 0f       	add	r30, r18
    2f18:	f3 1f       	adc	r31, r19
    2f1a:	93 81       	ldd	r25, Z+3	; 0x03
    2f1c:	86 2f       	mov	r24, r22
    2f1e:	69 2f       	mov	r22, r25
    2f20:	41 e0       	ldi	r20, 0x01	; 1
    2f22:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2f26:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2f28:	8a 81       	ldd	r24, Y+2	; 0x02
    2f2a:	81 30       	cpi	r24, 0x01	; 1
    2f2c:	19 f0       	breq	.+6      	; 0x2f34 <SEV_SEG_enumInit+0x816>
    2f2e:	8a 81       	ldd	r24, Y+2	; 0x02
    2f30:	8d 83       	std	Y+5, r24	; 0x05
    2f32:	ea c3       	rjmp	.+2004   	; 0x3708 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CPin,HIGH);
    2f34:	89 81       	ldd	r24, Y+1	; 0x01
    2f36:	48 2f       	mov	r20, r24
    2f38:	50 e0       	ldi	r21, 0x00	; 0
    2f3a:	ca 01       	movw	r24, r20
    2f3c:	88 0f       	add	r24, r24
    2f3e:	99 1f       	adc	r25, r25
    2f40:	9c 01       	movw	r18, r24
    2f42:	22 0f       	add	r18, r18
    2f44:	33 1f       	adc	r19, r19
    2f46:	22 0f       	add	r18, r18
    2f48:	33 1f       	adc	r19, r19
    2f4a:	22 0f       	add	r18, r18
    2f4c:	33 1f       	adc	r19, r19
    2f4e:	82 0f       	add	r24, r18
    2f50:	93 1f       	adc	r25, r19
    2f52:	9c 01       	movw	r18, r24
    2f54:	24 0f       	add	r18, r20
    2f56:	35 1f       	adc	r19, r21
    2f58:	8b 81       	ldd	r24, Y+3	; 0x03
    2f5a:	9c 81       	ldd	r25, Y+4	; 0x04
    2f5c:	fc 01       	movw	r30, r24
    2f5e:	e2 0f       	add	r30, r18
    2f60:	f3 1f       	adc	r31, r19
    2f62:	64 81       	ldd	r22, Z+4	; 0x04
    2f64:	89 81       	ldd	r24, Y+1	; 0x01
    2f66:	48 2f       	mov	r20, r24
    2f68:	50 e0       	ldi	r21, 0x00	; 0
    2f6a:	ca 01       	movw	r24, r20
    2f6c:	88 0f       	add	r24, r24
    2f6e:	99 1f       	adc	r25, r25
    2f70:	9c 01       	movw	r18, r24
    2f72:	22 0f       	add	r18, r18
    2f74:	33 1f       	adc	r19, r19
    2f76:	22 0f       	add	r18, r18
    2f78:	33 1f       	adc	r19, r19
    2f7a:	22 0f       	add	r18, r18
    2f7c:	33 1f       	adc	r19, r19
    2f7e:	82 0f       	add	r24, r18
    2f80:	93 1f       	adc	r25, r19
    2f82:	9c 01       	movw	r18, r24
    2f84:	24 0f       	add	r18, r20
    2f86:	35 1f       	adc	r19, r21
    2f88:	8b 81       	ldd	r24, Y+3	; 0x03
    2f8a:	9c 81       	ldd	r25, Y+4	; 0x04
    2f8c:	fc 01       	movw	r30, r24
    2f8e:	e2 0f       	add	r30, r18
    2f90:	f3 1f       	adc	r31, r19
    2f92:	95 81       	ldd	r25, Z+5	; 0x05
    2f94:	86 2f       	mov	r24, r22
    2f96:	69 2f       	mov	r22, r25
    2f98:	41 e0       	ldi	r20, 0x01	; 1
    2f9a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    2f9e:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    2fa0:	8a 81       	ldd	r24, Y+2	; 0x02
    2fa2:	81 30       	cpi	r24, 0x01	; 1
    2fa4:	19 f0       	breq	.+6      	; 0x2fac <SEV_SEG_enumInit+0x88e>
    2fa6:	8a 81       	ldd	r24, Y+2	; 0x02
    2fa8:	8d 83       	std	Y+5, r24	; 0x05
    2faa:	ae c3       	rjmp	.+1884   	; 0x3708 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DPin,HIGH);
    2fac:	89 81       	ldd	r24, Y+1	; 0x01
    2fae:	48 2f       	mov	r20, r24
    2fb0:	50 e0       	ldi	r21, 0x00	; 0
    2fb2:	ca 01       	movw	r24, r20
    2fb4:	88 0f       	add	r24, r24
    2fb6:	99 1f       	adc	r25, r25
    2fb8:	9c 01       	movw	r18, r24
    2fba:	22 0f       	add	r18, r18
    2fbc:	33 1f       	adc	r19, r19
    2fbe:	22 0f       	add	r18, r18
    2fc0:	33 1f       	adc	r19, r19
    2fc2:	22 0f       	add	r18, r18
    2fc4:	33 1f       	adc	r19, r19
    2fc6:	82 0f       	add	r24, r18
    2fc8:	93 1f       	adc	r25, r19
    2fca:	9c 01       	movw	r18, r24
    2fcc:	24 0f       	add	r18, r20
    2fce:	35 1f       	adc	r19, r21
    2fd0:	8b 81       	ldd	r24, Y+3	; 0x03
    2fd2:	9c 81       	ldd	r25, Y+4	; 0x04
    2fd4:	fc 01       	movw	r30, r24
    2fd6:	e2 0f       	add	r30, r18
    2fd8:	f3 1f       	adc	r31, r19
    2fda:	66 81       	ldd	r22, Z+6	; 0x06
    2fdc:	89 81       	ldd	r24, Y+1	; 0x01
    2fde:	48 2f       	mov	r20, r24
    2fe0:	50 e0       	ldi	r21, 0x00	; 0
    2fe2:	ca 01       	movw	r24, r20
    2fe4:	88 0f       	add	r24, r24
    2fe6:	99 1f       	adc	r25, r25
    2fe8:	9c 01       	movw	r18, r24
    2fea:	22 0f       	add	r18, r18
    2fec:	33 1f       	adc	r19, r19
    2fee:	22 0f       	add	r18, r18
    2ff0:	33 1f       	adc	r19, r19
    2ff2:	22 0f       	add	r18, r18
    2ff4:	33 1f       	adc	r19, r19
    2ff6:	82 0f       	add	r24, r18
    2ff8:	93 1f       	adc	r25, r19
    2ffa:	9c 01       	movw	r18, r24
    2ffc:	24 0f       	add	r18, r20
    2ffe:	35 1f       	adc	r19, r21
    3000:	8b 81       	ldd	r24, Y+3	; 0x03
    3002:	9c 81       	ldd	r25, Y+4	; 0x04
    3004:	fc 01       	movw	r30, r24
    3006:	e2 0f       	add	r30, r18
    3008:	f3 1f       	adc	r31, r19
    300a:	97 81       	ldd	r25, Z+7	; 0x07
    300c:	86 2f       	mov	r24, r22
    300e:	69 2f       	mov	r22, r25
    3010:	41 e0       	ldi	r20, 0x01	; 1
    3012:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3016:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3018:	8a 81       	ldd	r24, Y+2	; 0x02
    301a:	81 30       	cpi	r24, 0x01	; 1
    301c:	19 f0       	breq	.+6      	; 0x3024 <SEV_SEG_enumInit+0x906>
    301e:	8a 81       	ldd	r24, Y+2	; 0x02
    3020:	8d 83       	std	Y+5, r24	; 0x05
    3022:	72 c3       	rjmp	.+1764   	; 0x3708 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8EPin,HIGH);
    3024:	89 81       	ldd	r24, Y+1	; 0x01
    3026:	48 2f       	mov	r20, r24
    3028:	50 e0       	ldi	r21, 0x00	; 0
    302a:	ca 01       	movw	r24, r20
    302c:	88 0f       	add	r24, r24
    302e:	99 1f       	adc	r25, r25
    3030:	9c 01       	movw	r18, r24
    3032:	22 0f       	add	r18, r18
    3034:	33 1f       	adc	r19, r19
    3036:	22 0f       	add	r18, r18
    3038:	33 1f       	adc	r19, r19
    303a:	22 0f       	add	r18, r18
    303c:	33 1f       	adc	r19, r19
    303e:	82 0f       	add	r24, r18
    3040:	93 1f       	adc	r25, r19
    3042:	9c 01       	movw	r18, r24
    3044:	24 0f       	add	r18, r20
    3046:	35 1f       	adc	r19, r21
    3048:	8b 81       	ldd	r24, Y+3	; 0x03
    304a:	9c 81       	ldd	r25, Y+4	; 0x04
    304c:	fc 01       	movw	r30, r24
    304e:	e2 0f       	add	r30, r18
    3050:	f3 1f       	adc	r31, r19
    3052:	60 85       	ldd	r22, Z+8	; 0x08
    3054:	89 81       	ldd	r24, Y+1	; 0x01
    3056:	48 2f       	mov	r20, r24
    3058:	50 e0       	ldi	r21, 0x00	; 0
    305a:	ca 01       	movw	r24, r20
    305c:	88 0f       	add	r24, r24
    305e:	99 1f       	adc	r25, r25
    3060:	9c 01       	movw	r18, r24
    3062:	22 0f       	add	r18, r18
    3064:	33 1f       	adc	r19, r19
    3066:	22 0f       	add	r18, r18
    3068:	33 1f       	adc	r19, r19
    306a:	22 0f       	add	r18, r18
    306c:	33 1f       	adc	r19, r19
    306e:	82 0f       	add	r24, r18
    3070:	93 1f       	adc	r25, r19
    3072:	9c 01       	movw	r18, r24
    3074:	24 0f       	add	r18, r20
    3076:	35 1f       	adc	r19, r21
    3078:	8b 81       	ldd	r24, Y+3	; 0x03
    307a:	9c 81       	ldd	r25, Y+4	; 0x04
    307c:	fc 01       	movw	r30, r24
    307e:	e2 0f       	add	r30, r18
    3080:	f3 1f       	adc	r31, r19
    3082:	91 85       	ldd	r25, Z+9	; 0x09
    3084:	86 2f       	mov	r24, r22
    3086:	69 2f       	mov	r22, r25
    3088:	41 e0       	ldi	r20, 0x01	; 1
    308a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    308e:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3090:	8a 81       	ldd	r24, Y+2	; 0x02
    3092:	81 30       	cpi	r24, 0x01	; 1
    3094:	19 f0       	breq	.+6      	; 0x309c <SEV_SEG_enumInit+0x97e>
    3096:	8a 81       	ldd	r24, Y+2	; 0x02
    3098:	8d 83       	std	Y+5, r24	; 0x05
    309a:	36 c3       	rjmp	.+1644   	; 0x3708 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8FPin,HIGH);
    309c:	89 81       	ldd	r24, Y+1	; 0x01
    309e:	48 2f       	mov	r20, r24
    30a0:	50 e0       	ldi	r21, 0x00	; 0
    30a2:	ca 01       	movw	r24, r20
    30a4:	88 0f       	add	r24, r24
    30a6:	99 1f       	adc	r25, r25
    30a8:	9c 01       	movw	r18, r24
    30aa:	22 0f       	add	r18, r18
    30ac:	33 1f       	adc	r19, r19
    30ae:	22 0f       	add	r18, r18
    30b0:	33 1f       	adc	r19, r19
    30b2:	22 0f       	add	r18, r18
    30b4:	33 1f       	adc	r19, r19
    30b6:	82 0f       	add	r24, r18
    30b8:	93 1f       	adc	r25, r19
    30ba:	9c 01       	movw	r18, r24
    30bc:	24 0f       	add	r18, r20
    30be:	35 1f       	adc	r19, r21
    30c0:	8b 81       	ldd	r24, Y+3	; 0x03
    30c2:	9c 81       	ldd	r25, Y+4	; 0x04
    30c4:	fc 01       	movw	r30, r24
    30c6:	e2 0f       	add	r30, r18
    30c8:	f3 1f       	adc	r31, r19
    30ca:	62 85       	ldd	r22, Z+10	; 0x0a
    30cc:	89 81       	ldd	r24, Y+1	; 0x01
    30ce:	48 2f       	mov	r20, r24
    30d0:	50 e0       	ldi	r21, 0x00	; 0
    30d2:	ca 01       	movw	r24, r20
    30d4:	88 0f       	add	r24, r24
    30d6:	99 1f       	adc	r25, r25
    30d8:	9c 01       	movw	r18, r24
    30da:	22 0f       	add	r18, r18
    30dc:	33 1f       	adc	r19, r19
    30de:	22 0f       	add	r18, r18
    30e0:	33 1f       	adc	r19, r19
    30e2:	22 0f       	add	r18, r18
    30e4:	33 1f       	adc	r19, r19
    30e6:	82 0f       	add	r24, r18
    30e8:	93 1f       	adc	r25, r19
    30ea:	9c 01       	movw	r18, r24
    30ec:	24 0f       	add	r18, r20
    30ee:	35 1f       	adc	r19, r21
    30f0:	8b 81       	ldd	r24, Y+3	; 0x03
    30f2:	9c 81       	ldd	r25, Y+4	; 0x04
    30f4:	fc 01       	movw	r30, r24
    30f6:	e2 0f       	add	r30, r18
    30f8:	f3 1f       	adc	r31, r19
    30fa:	93 85       	ldd	r25, Z+11	; 0x0b
    30fc:	86 2f       	mov	r24, r22
    30fe:	69 2f       	mov	r22, r25
    3100:	41 e0       	ldi	r20, 0x01	; 1
    3102:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3106:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3108:	8a 81       	ldd	r24, Y+2	; 0x02
    310a:	81 30       	cpi	r24, 0x01	; 1
    310c:	19 f0       	breq	.+6      	; 0x3114 <SEV_SEG_enumInit+0x9f6>
    310e:	8a 81       	ldd	r24, Y+2	; 0x02
    3110:	8d 83       	std	Y+5, r24	; 0x05
    3112:	fa c2       	rjmp	.+1524   	; 0x3708 <SEV_SEG_enumInit+0xfea>
				Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPort,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8GPin,HIGH);
    3114:	89 81       	ldd	r24, Y+1	; 0x01
    3116:	48 2f       	mov	r20, r24
    3118:	50 e0       	ldi	r21, 0x00	; 0
    311a:	ca 01       	movw	r24, r20
    311c:	88 0f       	add	r24, r24
    311e:	99 1f       	adc	r25, r25
    3120:	9c 01       	movw	r18, r24
    3122:	22 0f       	add	r18, r18
    3124:	33 1f       	adc	r19, r19
    3126:	22 0f       	add	r18, r18
    3128:	33 1f       	adc	r19, r19
    312a:	22 0f       	add	r18, r18
    312c:	33 1f       	adc	r19, r19
    312e:	82 0f       	add	r24, r18
    3130:	93 1f       	adc	r25, r19
    3132:	9c 01       	movw	r18, r24
    3134:	24 0f       	add	r18, r20
    3136:	35 1f       	adc	r19, r21
    3138:	8b 81       	ldd	r24, Y+3	; 0x03
    313a:	9c 81       	ldd	r25, Y+4	; 0x04
    313c:	fc 01       	movw	r30, r24
    313e:	e2 0f       	add	r30, r18
    3140:	f3 1f       	adc	r31, r19
    3142:	64 85       	ldd	r22, Z+12	; 0x0c
    3144:	89 81       	ldd	r24, Y+1	; 0x01
    3146:	48 2f       	mov	r20, r24
    3148:	50 e0       	ldi	r21, 0x00	; 0
    314a:	ca 01       	movw	r24, r20
    314c:	88 0f       	add	r24, r24
    314e:	99 1f       	adc	r25, r25
    3150:	9c 01       	movw	r18, r24
    3152:	22 0f       	add	r18, r18
    3154:	33 1f       	adc	r19, r19
    3156:	22 0f       	add	r18, r18
    3158:	33 1f       	adc	r19, r19
    315a:	22 0f       	add	r18, r18
    315c:	33 1f       	adc	r19, r19
    315e:	82 0f       	add	r24, r18
    3160:	93 1f       	adc	r25, r19
    3162:	9c 01       	movw	r18, r24
    3164:	24 0f       	add	r18, r20
    3166:	35 1f       	adc	r19, r21
    3168:	8b 81       	ldd	r24, Y+3	; 0x03
    316a:	9c 81       	ldd	r25, Y+4	; 0x04
    316c:	fc 01       	movw	r30, r24
    316e:	e2 0f       	add	r30, r18
    3170:	f3 1f       	adc	r31, r19
    3172:	95 85       	ldd	r25, Z+13	; 0x0d
    3174:	86 2f       	mov	r24, r22
    3176:	69 2f       	mov	r22, r25
    3178:	41 e0       	ldi	r20, 0x01	; 1
    317a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    317e:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3180:	8a 81       	ldd	r24, Y+2	; 0x02
    3182:	81 30       	cpi	r24, 0x01	; 1
    3184:	29 f0       	breq	.+10     	; 0x3190 <SEV_SEG_enumInit+0xa72>
    3186:	8a 81       	ldd	r24, Y+2	; 0x02
    3188:	8d 83       	std	Y+5, r24	; 0x05
    318a:	be c2       	rjmp	.+1404   	; 0x3708 <SEV_SEG_enumInit+0xfea>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    318c:	83 e0       	ldi	r24, 0x03	; 3
    318e:	8a 83       	std	Y+2, r24	; 0x02
			}

			if (Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port<=DIO_PORTD
    3190:	89 81       	ldd	r24, Y+1	; 0x01
    3192:	48 2f       	mov	r20, r24
    3194:	50 e0       	ldi	r21, 0x00	; 0
    3196:	ca 01       	movw	r24, r20
    3198:	88 0f       	add	r24, r24
    319a:	99 1f       	adc	r25, r25
    319c:	9c 01       	movw	r18, r24
    319e:	22 0f       	add	r18, r18
    31a0:	33 1f       	adc	r19, r19
    31a2:	22 0f       	add	r18, r18
    31a4:	33 1f       	adc	r19, r19
    31a6:	22 0f       	add	r18, r18
    31a8:	33 1f       	adc	r19, r19
    31aa:	82 0f       	add	r24, r18
    31ac:	93 1f       	adc	r25, r19
    31ae:	9c 01       	movw	r18, r24
    31b0:	24 0f       	add	r18, r20
    31b2:	35 1f       	adc	r19, r21
    31b4:	8b 81       	ldd	r24, Y+3	; 0x03
    31b6:	9c 81       	ldd	r25, Y+4	; 0x04
    31b8:	fc 01       	movw	r30, r24
    31ba:	e2 0f       	add	r30, r18
    31bc:	f3 1f       	adc	r31, r19
    31be:	86 85       	ldd	r24, Z+14	; 0x0e
    31c0:	84 30       	cpi	r24, 0x04	; 4
    31c2:	08 f0       	brcs	.+2      	; 0x31c6 <SEV_SEG_enumInit+0xaa8>
    31c4:	07 c1       	rjmp	.+526    	; 0x33d4 <SEV_SEG_enumInit+0xcb6>
    31c6:	89 81       	ldd	r24, Y+1	; 0x01
    31c8:	48 2f       	mov	r20, r24
    31ca:	50 e0       	ldi	r21, 0x00	; 0
    31cc:	ca 01       	movw	r24, r20
    31ce:	88 0f       	add	r24, r24
    31d0:	99 1f       	adc	r25, r25
    31d2:	9c 01       	movw	r18, r24
    31d4:	22 0f       	add	r18, r18
    31d6:	33 1f       	adc	r19, r19
    31d8:	22 0f       	add	r18, r18
    31da:	33 1f       	adc	r19, r19
    31dc:	22 0f       	add	r18, r18
    31de:	33 1f       	adc	r19, r19
    31e0:	82 0f       	add	r24, r18
    31e2:	93 1f       	adc	r25, r19
    31e4:	9c 01       	movw	r18, r24
    31e6:	24 0f       	add	r18, r20
    31e8:	35 1f       	adc	r19, r21
    31ea:	8b 81       	ldd	r24, Y+3	; 0x03
    31ec:	9c 81       	ldd	r25, Y+4	; 0x04
    31ee:	fc 01       	movw	r30, r24
    31f0:	e2 0f       	add	r30, r18
    31f2:	f3 1f       	adc	r31, r19
    31f4:	87 85       	ldd	r24, Z+15	; 0x0f
    31f6:	88 30       	cpi	r24, 0x08	; 8
    31f8:	08 f0       	brcs	.+2      	; 0x31fc <SEV_SEG_enumInit+0xade>
    31fa:	ec c0       	rjmp	.+472    	; 0x33d4 <SEV_SEG_enumInit+0xcb6>
				&&Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Pin<=DIO_PIN7)
			{
				Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Pin,OUTPUT);
    31fc:	89 81       	ldd	r24, Y+1	; 0x01
    31fe:	48 2f       	mov	r20, r24
    3200:	50 e0       	ldi	r21, 0x00	; 0
    3202:	ca 01       	movw	r24, r20
    3204:	88 0f       	add	r24, r24
    3206:	99 1f       	adc	r25, r25
    3208:	9c 01       	movw	r18, r24
    320a:	22 0f       	add	r18, r18
    320c:	33 1f       	adc	r19, r19
    320e:	22 0f       	add	r18, r18
    3210:	33 1f       	adc	r19, r19
    3212:	22 0f       	add	r18, r18
    3214:	33 1f       	adc	r19, r19
    3216:	82 0f       	add	r24, r18
    3218:	93 1f       	adc	r25, r19
    321a:	9c 01       	movw	r18, r24
    321c:	24 0f       	add	r18, r20
    321e:	35 1f       	adc	r19, r21
    3220:	8b 81       	ldd	r24, Y+3	; 0x03
    3222:	9c 81       	ldd	r25, Y+4	; 0x04
    3224:	fc 01       	movw	r30, r24
    3226:	e2 0f       	add	r30, r18
    3228:	f3 1f       	adc	r31, r19
    322a:	66 85       	ldd	r22, Z+14	; 0x0e
    322c:	89 81       	ldd	r24, Y+1	; 0x01
    322e:	48 2f       	mov	r20, r24
    3230:	50 e0       	ldi	r21, 0x00	; 0
    3232:	ca 01       	movw	r24, r20
    3234:	88 0f       	add	r24, r24
    3236:	99 1f       	adc	r25, r25
    3238:	9c 01       	movw	r18, r24
    323a:	22 0f       	add	r18, r18
    323c:	33 1f       	adc	r19, r19
    323e:	22 0f       	add	r18, r18
    3240:	33 1f       	adc	r19, r19
    3242:	22 0f       	add	r18, r18
    3244:	33 1f       	adc	r19, r19
    3246:	82 0f       	add	r24, r18
    3248:	93 1f       	adc	r25, r19
    324a:	9c 01       	movw	r18, r24
    324c:	24 0f       	add	r18, r20
    324e:	35 1f       	adc	r19, r21
    3250:	8b 81       	ldd	r24, Y+3	; 0x03
    3252:	9c 81       	ldd	r25, Y+4	; 0x04
    3254:	fc 01       	movw	r30, r24
    3256:	e2 0f       	add	r30, r18
    3258:	f3 1f       	adc	r31, r19
    325a:	97 85       	ldd	r25, Z+15	; 0x0f
    325c:	86 2f       	mov	r24, r22
    325e:	69 2f       	mov	r22, r25
    3260:	41 e0       	ldi	r20, 0x01	; 1
    3262:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    3266:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3268:	8a 81       	ldd	r24, Y+2	; 0x02
    326a:	81 30       	cpi	r24, 0x01	; 1
    326c:	19 f0       	breq	.+6      	; 0x3274 <SEV_SEG_enumInit+0xb56>
    326e:	8a 81       	ldd	r24, Y+2	; 0x02
    3270:	8d 83       	std	Y+5, r24	; 0x05
    3272:	4a c2       	rjmp	.+1172   	; 0x3708 <SEV_SEG_enumInit+0xfea>

				if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_CATHODE)
    3274:	89 81       	ldd	r24, Y+1	; 0x01
    3276:	48 2f       	mov	r20, r24
    3278:	50 e0       	ldi	r21, 0x00	; 0
    327a:	ca 01       	movw	r24, r20
    327c:	88 0f       	add	r24, r24
    327e:	99 1f       	adc	r25, r25
    3280:	9c 01       	movw	r18, r24
    3282:	22 0f       	add	r18, r18
    3284:	33 1f       	adc	r19, r19
    3286:	22 0f       	add	r18, r18
    3288:	33 1f       	adc	r19, r19
    328a:	22 0f       	add	r18, r18
    328c:	33 1f       	adc	r19, r19
    328e:	82 0f       	add	r24, r18
    3290:	93 1f       	adc	r25, r19
    3292:	9c 01       	movw	r18, r24
    3294:	24 0f       	add	r18, r20
    3296:	35 1f       	adc	r19, r21
    3298:	8b 81       	ldd	r24, Y+3	; 0x03
    329a:	9c 81       	ldd	r25, Y+4	; 0x04
    329c:	fc 01       	movw	r30, r24
    329e:	e2 0f       	add	r30, r18
    32a0:	f3 1f       	adc	r31, r19
    32a2:	82 89       	ldd	r24, Z+18	; 0x12
    32a4:	81 30       	cpi	r24, 0x01	; 1
    32a6:	e9 f5       	brne	.+122    	; 0x3322 <SEV_SEG_enumInit+0xc04>
				{
					Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Pin,LOW);
    32a8:	89 81       	ldd	r24, Y+1	; 0x01
    32aa:	48 2f       	mov	r20, r24
    32ac:	50 e0       	ldi	r21, 0x00	; 0
    32ae:	ca 01       	movw	r24, r20
    32b0:	88 0f       	add	r24, r24
    32b2:	99 1f       	adc	r25, r25
    32b4:	9c 01       	movw	r18, r24
    32b6:	22 0f       	add	r18, r18
    32b8:	33 1f       	adc	r19, r19
    32ba:	22 0f       	add	r18, r18
    32bc:	33 1f       	adc	r19, r19
    32be:	22 0f       	add	r18, r18
    32c0:	33 1f       	adc	r19, r19
    32c2:	82 0f       	add	r24, r18
    32c4:	93 1f       	adc	r25, r19
    32c6:	9c 01       	movw	r18, r24
    32c8:	24 0f       	add	r18, r20
    32ca:	35 1f       	adc	r19, r21
    32cc:	8b 81       	ldd	r24, Y+3	; 0x03
    32ce:	9c 81       	ldd	r25, Y+4	; 0x04
    32d0:	fc 01       	movw	r30, r24
    32d2:	e2 0f       	add	r30, r18
    32d4:	f3 1f       	adc	r31, r19
    32d6:	66 85       	ldd	r22, Z+14	; 0x0e
    32d8:	89 81       	ldd	r24, Y+1	; 0x01
    32da:	48 2f       	mov	r20, r24
    32dc:	50 e0       	ldi	r21, 0x00	; 0
    32de:	ca 01       	movw	r24, r20
    32e0:	88 0f       	add	r24, r24
    32e2:	99 1f       	adc	r25, r25
    32e4:	9c 01       	movw	r18, r24
    32e6:	22 0f       	add	r18, r18
    32e8:	33 1f       	adc	r19, r19
    32ea:	22 0f       	add	r18, r18
    32ec:	33 1f       	adc	r19, r19
    32ee:	22 0f       	add	r18, r18
    32f0:	33 1f       	adc	r19, r19
    32f2:	82 0f       	add	r24, r18
    32f4:	93 1f       	adc	r25, r19
    32f6:	9c 01       	movw	r18, r24
    32f8:	24 0f       	add	r18, r20
    32fa:	35 1f       	adc	r19, r21
    32fc:	8b 81       	ldd	r24, Y+3	; 0x03
    32fe:	9c 81       	ldd	r25, Y+4	; 0x04
    3300:	fc 01       	movw	r30, r24
    3302:	e2 0f       	add	r30, r18
    3304:	f3 1f       	adc	r31, r19
    3306:	97 85       	ldd	r25, Z+15	; 0x0f
    3308:	86 2f       	mov	r24, r22
    330a:	69 2f       	mov	r22, r25
    330c:	40 e0       	ldi	r20, 0x00	; 0
    330e:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3312:	8a 83       	std	Y+2, r24	; 0x02
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3314:	8a 81       	ldd	r24, Y+2	; 0x02
    3316:	81 30       	cpi	r24, 0x01	; 1
    3318:	09 f4       	brne	.+2      	; 0x331c <SEV_SEG_enumInit+0xbfe>
    331a:	92 c0       	rjmp	.+292    	; 0x3440 <SEV_SEG_enumInit+0xd22>
    331c:	8a 81       	ldd	r24, Y+2	; 0x02
    331e:	8d 83       	std	Y+5, r24	; 0x05
    3320:	f3 c1       	rjmp	.+998    	; 0x3708 <SEV_SEG_enumInit+0xfea>
				}
				else if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_ANODE)
    3322:	89 81       	ldd	r24, Y+1	; 0x01
    3324:	48 2f       	mov	r20, r24
    3326:	50 e0       	ldi	r21, 0x00	; 0
    3328:	ca 01       	movw	r24, r20
    332a:	88 0f       	add	r24, r24
    332c:	99 1f       	adc	r25, r25
    332e:	9c 01       	movw	r18, r24
    3330:	22 0f       	add	r18, r18
    3332:	33 1f       	adc	r19, r19
    3334:	22 0f       	add	r18, r18
    3336:	33 1f       	adc	r19, r19
    3338:	22 0f       	add	r18, r18
    333a:	33 1f       	adc	r19, r19
    333c:	82 0f       	add	r24, r18
    333e:	93 1f       	adc	r25, r19
    3340:	9c 01       	movw	r18, r24
    3342:	24 0f       	add	r18, r20
    3344:	35 1f       	adc	r19, r21
    3346:	8b 81       	ldd	r24, Y+3	; 0x03
    3348:	9c 81       	ldd	r25, Y+4	; 0x04
    334a:	fc 01       	movw	r30, r24
    334c:	e2 0f       	add	r30, r18
    334e:	f3 1f       	adc	r31, r19
    3350:	82 89       	ldd	r24, Z+18	; 0x12
    3352:	88 23       	and	r24, r24
    3354:	e1 f5       	brne	.+120    	; 0x33ce <SEV_SEG_enumInit+0xcb0>
				{
					Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Pin,HIGH);
    3356:	89 81       	ldd	r24, Y+1	; 0x01
    3358:	48 2f       	mov	r20, r24
    335a:	50 e0       	ldi	r21, 0x00	; 0
    335c:	ca 01       	movw	r24, r20
    335e:	88 0f       	add	r24, r24
    3360:	99 1f       	adc	r25, r25
    3362:	9c 01       	movw	r18, r24
    3364:	22 0f       	add	r18, r18
    3366:	33 1f       	adc	r19, r19
    3368:	22 0f       	add	r18, r18
    336a:	33 1f       	adc	r19, r19
    336c:	22 0f       	add	r18, r18
    336e:	33 1f       	adc	r19, r19
    3370:	82 0f       	add	r24, r18
    3372:	93 1f       	adc	r25, r19
    3374:	9c 01       	movw	r18, r24
    3376:	24 0f       	add	r18, r20
    3378:	35 1f       	adc	r19, r21
    337a:	8b 81       	ldd	r24, Y+3	; 0x03
    337c:	9c 81       	ldd	r25, Y+4	; 0x04
    337e:	fc 01       	movw	r30, r24
    3380:	e2 0f       	add	r30, r18
    3382:	f3 1f       	adc	r31, r19
    3384:	66 85       	ldd	r22, Z+14	; 0x0e
    3386:	89 81       	ldd	r24, Y+1	; 0x01
    3388:	48 2f       	mov	r20, r24
    338a:	50 e0       	ldi	r21, 0x00	; 0
    338c:	ca 01       	movw	r24, r20
    338e:	88 0f       	add	r24, r24
    3390:	99 1f       	adc	r25, r25
    3392:	9c 01       	movw	r18, r24
    3394:	22 0f       	add	r18, r18
    3396:	33 1f       	adc	r19, r19
    3398:	22 0f       	add	r18, r18
    339a:	33 1f       	adc	r19, r19
    339c:	22 0f       	add	r18, r18
    339e:	33 1f       	adc	r19, r19
    33a0:	82 0f       	add	r24, r18
    33a2:	93 1f       	adc	r25, r19
    33a4:	9c 01       	movw	r18, r24
    33a6:	24 0f       	add	r18, r20
    33a8:	35 1f       	adc	r19, r21
    33aa:	8b 81       	ldd	r24, Y+3	; 0x03
    33ac:	9c 81       	ldd	r25, Y+4	; 0x04
    33ae:	fc 01       	movw	r30, r24
    33b0:	e2 0f       	add	r30, r18
    33b2:	f3 1f       	adc	r31, r19
    33b4:	97 85       	ldd	r25, Z+15	; 0x0f
    33b6:	86 2f       	mov	r24, r22
    33b8:	69 2f       	mov	r22, r25
    33ba:	41 e0       	ldi	r20, 0x01	; 1
    33bc:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    33c0:	8a 83       	std	Y+2, r24	; 0x02
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    33c2:	8a 81       	ldd	r24, Y+2	; 0x02
    33c4:	81 30       	cpi	r24, 0x01	; 1
    33c6:	e1 f1       	breq	.+120    	; 0x3440 <SEV_SEG_enumInit+0xd22>
    33c8:	8a 81       	ldd	r24, Y+2	; 0x02
    33ca:	8d 83       	std	Y+5, r24	; 0x05
    33cc:	9d c1       	rjmp	.+826    	; 0x3708 <SEV_SEG_enumInit+0xfea>
				}
				else
				{
					Local_enumErrorState=ES_OUT_OF_RANGE;
    33ce:	83 e0       	ldi	r24, 0x03	; 3
    33d0:	8a 83       	std	Y+2, r24	; 0x02
    33d2:	36 c0       	rjmp	.+108    	; 0x3440 <SEV_SEG_enumInit+0xd22>
				}
			}
			else if (Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    33d4:	89 81       	ldd	r24, Y+1	; 0x01
    33d6:	48 2f       	mov	r20, r24
    33d8:	50 e0       	ldi	r21, 0x00	; 0
    33da:	ca 01       	movw	r24, r20
    33dc:	88 0f       	add	r24, r24
    33de:	99 1f       	adc	r25, r25
    33e0:	9c 01       	movw	r18, r24
    33e2:	22 0f       	add	r18, r18
    33e4:	33 1f       	adc	r19, r19
    33e6:	22 0f       	add	r18, r18
    33e8:	33 1f       	adc	r19, r19
    33ea:	22 0f       	add	r18, r18
    33ec:	33 1f       	adc	r19, r19
    33ee:	82 0f       	add	r24, r18
    33f0:	93 1f       	adc	r25, r19
    33f2:	9c 01       	movw	r18, r24
    33f4:	24 0f       	add	r18, r20
    33f6:	35 1f       	adc	r19, r21
    33f8:	8b 81       	ldd	r24, Y+3	; 0x03
    33fa:	9c 81       	ldd	r25, Y+4	; 0x04
    33fc:	fc 01       	movw	r30, r24
    33fe:	e2 0f       	add	r30, r18
    3400:	f3 1f       	adc	r31, r19
    3402:	86 85       	ldd	r24, Z+14	; 0x0e
    3404:	88 30       	cpi	r24, 0x08	; 8
    3406:	d1 f4       	brne	.+52     	; 0x343c <SEV_SEG_enumInit+0xd1e>
    3408:	89 81       	ldd	r24, Y+1	; 0x01
    340a:	48 2f       	mov	r20, r24
    340c:	50 e0       	ldi	r21, 0x00	; 0
    340e:	ca 01       	movw	r24, r20
    3410:	88 0f       	add	r24, r24
    3412:	99 1f       	adc	r25, r25
    3414:	9c 01       	movw	r18, r24
    3416:	22 0f       	add	r18, r18
    3418:	33 1f       	adc	r19, r19
    341a:	22 0f       	add	r18, r18
    341c:	33 1f       	adc	r19, r19
    341e:	22 0f       	add	r18, r18
    3420:	33 1f       	adc	r19, r19
    3422:	82 0f       	add	r24, r18
    3424:	93 1f       	adc	r25, r19
    3426:	9c 01       	movw	r18, r24
    3428:	24 0f       	add	r18, r20
    342a:	35 1f       	adc	r19, r21
    342c:	8b 81       	ldd	r24, Y+3	; 0x03
    342e:	9c 81       	ldd	r25, Y+4	; 0x04
    3430:	fc 01       	movw	r30, r24
    3432:	e2 0f       	add	r30, r18
    3434:	f3 1f       	adc	r31, r19
    3436:	87 85       	ldd	r24, Z+15	; 0x0f
    3438:	88 30       	cpi	r24, 0x08	; 8
    343a:	11 f0       	breq	.+4      	; 0x3440 <SEV_SEG_enumInit+0xd22>
			{

			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    343c:	83 e0       	ldi	r24, 0x03	; 3
    343e:	8a 83       	std	Y+2, r24	; 0x02
			}

			if (Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port<=DIO_PORTD
    3440:	89 81       	ldd	r24, Y+1	; 0x01
    3442:	48 2f       	mov	r20, r24
    3444:	50 e0       	ldi	r21, 0x00	; 0
    3446:	ca 01       	movw	r24, r20
    3448:	88 0f       	add	r24, r24
    344a:	99 1f       	adc	r25, r25
    344c:	9c 01       	movw	r18, r24
    344e:	22 0f       	add	r18, r18
    3450:	33 1f       	adc	r19, r19
    3452:	22 0f       	add	r18, r18
    3454:	33 1f       	adc	r19, r19
    3456:	22 0f       	add	r18, r18
    3458:	33 1f       	adc	r19, r19
    345a:	82 0f       	add	r24, r18
    345c:	93 1f       	adc	r25, r19
    345e:	9c 01       	movw	r18, r24
    3460:	24 0f       	add	r18, r20
    3462:	35 1f       	adc	r19, r21
    3464:	8b 81       	ldd	r24, Y+3	; 0x03
    3466:	9c 81       	ldd	r25, Y+4	; 0x04
    3468:	fc 01       	movw	r30, r24
    346a:	e2 0f       	add	r30, r18
    346c:	f3 1f       	adc	r31, r19
    346e:	80 89       	ldd	r24, Z+16	; 0x10
    3470:	84 30       	cpi	r24, 0x04	; 4
    3472:	08 f0       	brcs	.+2      	; 0x3476 <SEV_SEG_enumInit+0xd58>
    3474:	07 c1       	rjmp	.+526    	; 0x3684 <SEV_SEG_enumInit+0xf66>
    3476:	89 81       	ldd	r24, Y+1	; 0x01
    3478:	48 2f       	mov	r20, r24
    347a:	50 e0       	ldi	r21, 0x00	; 0
    347c:	ca 01       	movw	r24, r20
    347e:	88 0f       	add	r24, r24
    3480:	99 1f       	adc	r25, r25
    3482:	9c 01       	movw	r18, r24
    3484:	22 0f       	add	r18, r18
    3486:	33 1f       	adc	r19, r19
    3488:	22 0f       	add	r18, r18
    348a:	33 1f       	adc	r19, r19
    348c:	22 0f       	add	r18, r18
    348e:	33 1f       	adc	r19, r19
    3490:	82 0f       	add	r24, r18
    3492:	93 1f       	adc	r25, r19
    3494:	9c 01       	movw	r18, r24
    3496:	24 0f       	add	r18, r20
    3498:	35 1f       	adc	r19, r21
    349a:	8b 81       	ldd	r24, Y+3	; 0x03
    349c:	9c 81       	ldd	r25, Y+4	; 0x04
    349e:	fc 01       	movw	r30, r24
    34a0:	e2 0f       	add	r30, r18
    34a2:	f3 1f       	adc	r31, r19
    34a4:	81 89       	ldd	r24, Z+17	; 0x11
    34a6:	88 30       	cpi	r24, 0x08	; 8
    34a8:	08 f0       	brcs	.+2      	; 0x34ac <SEV_SEG_enumInit+0xd8e>
    34aa:	ec c0       	rjmp	.+472    	; 0x3684 <SEV_SEG_enumInit+0xf66>
				&&Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
			{
				Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Pin,OUTPUT);
    34ac:	89 81       	ldd	r24, Y+1	; 0x01
    34ae:	48 2f       	mov	r20, r24
    34b0:	50 e0       	ldi	r21, 0x00	; 0
    34b2:	ca 01       	movw	r24, r20
    34b4:	88 0f       	add	r24, r24
    34b6:	99 1f       	adc	r25, r25
    34b8:	9c 01       	movw	r18, r24
    34ba:	22 0f       	add	r18, r18
    34bc:	33 1f       	adc	r19, r19
    34be:	22 0f       	add	r18, r18
    34c0:	33 1f       	adc	r19, r19
    34c2:	22 0f       	add	r18, r18
    34c4:	33 1f       	adc	r19, r19
    34c6:	82 0f       	add	r24, r18
    34c8:	93 1f       	adc	r25, r19
    34ca:	9c 01       	movw	r18, r24
    34cc:	24 0f       	add	r18, r20
    34ce:	35 1f       	adc	r19, r21
    34d0:	8b 81       	ldd	r24, Y+3	; 0x03
    34d2:	9c 81       	ldd	r25, Y+4	; 0x04
    34d4:	fc 01       	movw	r30, r24
    34d6:	e2 0f       	add	r30, r18
    34d8:	f3 1f       	adc	r31, r19
    34da:	60 89       	ldd	r22, Z+16	; 0x10
    34dc:	89 81       	ldd	r24, Y+1	; 0x01
    34de:	48 2f       	mov	r20, r24
    34e0:	50 e0       	ldi	r21, 0x00	; 0
    34e2:	ca 01       	movw	r24, r20
    34e4:	88 0f       	add	r24, r24
    34e6:	99 1f       	adc	r25, r25
    34e8:	9c 01       	movw	r18, r24
    34ea:	22 0f       	add	r18, r18
    34ec:	33 1f       	adc	r19, r19
    34ee:	22 0f       	add	r18, r18
    34f0:	33 1f       	adc	r19, r19
    34f2:	22 0f       	add	r18, r18
    34f4:	33 1f       	adc	r19, r19
    34f6:	82 0f       	add	r24, r18
    34f8:	93 1f       	adc	r25, r19
    34fa:	9c 01       	movw	r18, r24
    34fc:	24 0f       	add	r18, r20
    34fe:	35 1f       	adc	r19, r21
    3500:	8b 81       	ldd	r24, Y+3	; 0x03
    3502:	9c 81       	ldd	r25, Y+4	; 0x04
    3504:	fc 01       	movw	r30, r24
    3506:	e2 0f       	add	r30, r18
    3508:	f3 1f       	adc	r31, r19
    350a:	91 89       	ldd	r25, Z+17	; 0x11
    350c:	86 2f       	mov	r24, r22
    350e:	69 2f       	mov	r22, r25
    3510:	41 e0       	ldi	r20, 0x01	; 1
    3512:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    3516:	8a 83       	std	Y+2, r24	; 0x02
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3518:	8a 81       	ldd	r24, Y+2	; 0x02
    351a:	81 30       	cpi	r24, 0x01	; 1
    351c:	19 f0       	breq	.+6      	; 0x3524 <SEV_SEG_enumInit+0xe06>
    351e:	8a 81       	ldd	r24, Y+2	; 0x02
    3520:	8d 83       	std	Y+5, r24	; 0x05
    3522:	f2 c0       	rjmp	.+484    	; 0x3708 <SEV_SEG_enumInit+0xfea>

				if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_CATHODE)
    3524:	89 81       	ldd	r24, Y+1	; 0x01
    3526:	48 2f       	mov	r20, r24
    3528:	50 e0       	ldi	r21, 0x00	; 0
    352a:	ca 01       	movw	r24, r20
    352c:	88 0f       	add	r24, r24
    352e:	99 1f       	adc	r25, r25
    3530:	9c 01       	movw	r18, r24
    3532:	22 0f       	add	r18, r18
    3534:	33 1f       	adc	r19, r19
    3536:	22 0f       	add	r18, r18
    3538:	33 1f       	adc	r19, r19
    353a:	22 0f       	add	r18, r18
    353c:	33 1f       	adc	r19, r19
    353e:	82 0f       	add	r24, r18
    3540:	93 1f       	adc	r25, r19
    3542:	9c 01       	movw	r18, r24
    3544:	24 0f       	add	r18, r20
    3546:	35 1f       	adc	r19, r21
    3548:	8b 81       	ldd	r24, Y+3	; 0x03
    354a:	9c 81       	ldd	r25, Y+4	; 0x04
    354c:	fc 01       	movw	r30, r24
    354e:	e2 0f       	add	r30, r18
    3550:	f3 1f       	adc	r31, r19
    3552:	82 89       	ldd	r24, Z+18	; 0x12
    3554:	81 30       	cpi	r24, 0x01	; 1
    3556:	e9 f5       	brne	.+122    	; 0x35d2 <SEV_SEG_enumInit+0xeb4>
				{
					Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Pin,LOW);
    3558:	89 81       	ldd	r24, Y+1	; 0x01
    355a:	48 2f       	mov	r20, r24
    355c:	50 e0       	ldi	r21, 0x00	; 0
    355e:	ca 01       	movw	r24, r20
    3560:	88 0f       	add	r24, r24
    3562:	99 1f       	adc	r25, r25
    3564:	9c 01       	movw	r18, r24
    3566:	22 0f       	add	r18, r18
    3568:	33 1f       	adc	r19, r19
    356a:	22 0f       	add	r18, r18
    356c:	33 1f       	adc	r19, r19
    356e:	22 0f       	add	r18, r18
    3570:	33 1f       	adc	r19, r19
    3572:	82 0f       	add	r24, r18
    3574:	93 1f       	adc	r25, r19
    3576:	9c 01       	movw	r18, r24
    3578:	24 0f       	add	r18, r20
    357a:	35 1f       	adc	r19, r21
    357c:	8b 81       	ldd	r24, Y+3	; 0x03
    357e:	9c 81       	ldd	r25, Y+4	; 0x04
    3580:	fc 01       	movw	r30, r24
    3582:	e2 0f       	add	r30, r18
    3584:	f3 1f       	adc	r31, r19
    3586:	60 89       	ldd	r22, Z+16	; 0x10
    3588:	89 81       	ldd	r24, Y+1	; 0x01
    358a:	48 2f       	mov	r20, r24
    358c:	50 e0       	ldi	r21, 0x00	; 0
    358e:	ca 01       	movw	r24, r20
    3590:	88 0f       	add	r24, r24
    3592:	99 1f       	adc	r25, r25
    3594:	9c 01       	movw	r18, r24
    3596:	22 0f       	add	r18, r18
    3598:	33 1f       	adc	r19, r19
    359a:	22 0f       	add	r18, r18
    359c:	33 1f       	adc	r19, r19
    359e:	22 0f       	add	r18, r18
    35a0:	33 1f       	adc	r19, r19
    35a2:	82 0f       	add	r24, r18
    35a4:	93 1f       	adc	r25, r19
    35a6:	9c 01       	movw	r18, r24
    35a8:	24 0f       	add	r18, r20
    35aa:	35 1f       	adc	r19, r21
    35ac:	8b 81       	ldd	r24, Y+3	; 0x03
    35ae:	9c 81       	ldd	r25, Y+4	; 0x04
    35b0:	fc 01       	movw	r30, r24
    35b2:	e2 0f       	add	r30, r18
    35b4:	f3 1f       	adc	r31, r19
    35b6:	91 89       	ldd	r25, Z+17	; 0x11
    35b8:	86 2f       	mov	r24, r22
    35ba:	69 2f       	mov	r22, r25
    35bc:	40 e0       	ldi	r20, 0x00	; 0
    35be:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    35c2:	8a 83       	std	Y+2, r24	; 0x02
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    35c4:	8a 81       	ldd	r24, Y+2	; 0x02
    35c6:	81 30       	cpi	r24, 0x01	; 1
    35c8:	09 f4       	brne	.+2      	; 0x35cc <SEV_SEG_enumInit+0xeae>
    35ca:	92 c0       	rjmp	.+292    	; 0x36f0 <SEV_SEG_enumInit+0xfd2>
    35cc:	8a 81       	ldd	r24, Y+2	; 0x02
    35ce:	8d 83       	std	Y+5, r24	; 0x05
    35d0:	9b c0       	rjmp	.+310    	; 0x3708 <SEV_SEG_enumInit+0xfea>
				}
				else if(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8Type==COMMON_ANODE)
    35d2:	89 81       	ldd	r24, Y+1	; 0x01
    35d4:	48 2f       	mov	r20, r24
    35d6:	50 e0       	ldi	r21, 0x00	; 0
    35d8:	ca 01       	movw	r24, r20
    35da:	88 0f       	add	r24, r24
    35dc:	99 1f       	adc	r25, r25
    35de:	9c 01       	movw	r18, r24
    35e0:	22 0f       	add	r18, r18
    35e2:	33 1f       	adc	r19, r19
    35e4:	22 0f       	add	r18, r18
    35e6:	33 1f       	adc	r19, r19
    35e8:	22 0f       	add	r18, r18
    35ea:	33 1f       	adc	r19, r19
    35ec:	82 0f       	add	r24, r18
    35ee:	93 1f       	adc	r25, r19
    35f0:	9c 01       	movw	r18, r24
    35f2:	24 0f       	add	r18, r20
    35f4:	35 1f       	adc	r19, r21
    35f6:	8b 81       	ldd	r24, Y+3	; 0x03
    35f8:	9c 81       	ldd	r25, Y+4	; 0x04
    35fa:	fc 01       	movw	r30, r24
    35fc:	e2 0f       	add	r30, r18
    35fe:	f3 1f       	adc	r31, r19
    3600:	82 89       	ldd	r24, Z+18	; 0x12
    3602:	88 23       	and	r24, r24
    3604:	e1 f5       	brne	.+120    	; 0x367e <SEV_SEG_enumInit+0xf60>
				{
					Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port,Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Pin,HIGH);
    3606:	89 81       	ldd	r24, Y+1	; 0x01
    3608:	48 2f       	mov	r20, r24
    360a:	50 e0       	ldi	r21, 0x00	; 0
    360c:	ca 01       	movw	r24, r20
    360e:	88 0f       	add	r24, r24
    3610:	99 1f       	adc	r25, r25
    3612:	9c 01       	movw	r18, r24
    3614:	22 0f       	add	r18, r18
    3616:	33 1f       	adc	r19, r19
    3618:	22 0f       	add	r18, r18
    361a:	33 1f       	adc	r19, r19
    361c:	22 0f       	add	r18, r18
    361e:	33 1f       	adc	r19, r19
    3620:	82 0f       	add	r24, r18
    3622:	93 1f       	adc	r25, r19
    3624:	9c 01       	movw	r18, r24
    3626:	24 0f       	add	r18, r20
    3628:	35 1f       	adc	r19, r21
    362a:	8b 81       	ldd	r24, Y+3	; 0x03
    362c:	9c 81       	ldd	r25, Y+4	; 0x04
    362e:	fc 01       	movw	r30, r24
    3630:	e2 0f       	add	r30, r18
    3632:	f3 1f       	adc	r31, r19
    3634:	60 89       	ldd	r22, Z+16	; 0x10
    3636:	89 81       	ldd	r24, Y+1	; 0x01
    3638:	48 2f       	mov	r20, r24
    363a:	50 e0       	ldi	r21, 0x00	; 0
    363c:	ca 01       	movw	r24, r20
    363e:	88 0f       	add	r24, r24
    3640:	99 1f       	adc	r25, r25
    3642:	9c 01       	movw	r18, r24
    3644:	22 0f       	add	r18, r18
    3646:	33 1f       	adc	r19, r19
    3648:	22 0f       	add	r18, r18
    364a:	33 1f       	adc	r19, r19
    364c:	22 0f       	add	r18, r18
    364e:	33 1f       	adc	r19, r19
    3650:	82 0f       	add	r24, r18
    3652:	93 1f       	adc	r25, r19
    3654:	9c 01       	movw	r18, r24
    3656:	24 0f       	add	r18, r20
    3658:	35 1f       	adc	r19, r21
    365a:	8b 81       	ldd	r24, Y+3	; 0x03
    365c:	9c 81       	ldd	r25, Y+4	; 0x04
    365e:	fc 01       	movw	r30, r24
    3660:	e2 0f       	add	r30, r18
    3662:	f3 1f       	adc	r31, r19
    3664:	91 89       	ldd	r25, Z+17	; 0x11
    3666:	86 2f       	mov	r24, r22
    3668:	69 2f       	mov	r22, r25
    366a:	41 e0       	ldi	r20, 0x01	; 1
    366c:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3670:	8a 83       	std	Y+2, r24	; 0x02
					if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3672:	8a 81       	ldd	r24, Y+2	; 0x02
    3674:	81 30       	cpi	r24, 0x01	; 1
    3676:	e1 f1       	breq	.+120    	; 0x36f0 <SEV_SEG_enumInit+0xfd2>
    3678:	8a 81       	ldd	r24, Y+2	; 0x02
    367a:	8d 83       	std	Y+5, r24	; 0x05
    367c:	45 c0       	rjmp	.+138    	; 0x3708 <SEV_SEG_enumInit+0xfea>
				}
				else
				{
					Local_enumErrorState=ES_OUT_OF_RANGE;
    367e:	83 e0       	ldi	r24, 0x03	; 3
    3680:	8a 83       	std	Y+2, r24	; 0x02
    3682:	36 c0       	rjmp	.+108    	; 0x36f0 <SEV_SEG_enumInit+0xfd2>
				}
			}
			else if (Copy_pstrSegments[Local_u8Counter].SEV_SEG_u8DOT_Port==NOT_CONNECTED
    3684:	89 81       	ldd	r24, Y+1	; 0x01
    3686:	48 2f       	mov	r20, r24
    3688:	50 e0       	ldi	r21, 0x00	; 0
    368a:	ca 01       	movw	r24, r20
    368c:	88 0f       	add	r24, r24
    368e:	99 1f       	adc	r25, r25
    3690:	9c 01       	movw	r18, r24
    3692:	22 0f       	add	r18, r18
    3694:	33 1f       	adc	r19, r19
    3696:	22 0f       	add	r18, r18
    3698:	33 1f       	adc	r19, r19
    369a:	22 0f       	add	r18, r18
    369c:	33 1f       	adc	r19, r19
    369e:	82 0f       	add	r24, r18
    36a0:	93 1f       	adc	r25, r19
    36a2:	9c 01       	movw	r18, r24
    36a4:	24 0f       	add	r18, r20
    36a6:	35 1f       	adc	r19, r21
    36a8:	8b 81       	ldd	r24, Y+3	; 0x03
    36aa:	9c 81       	ldd	r25, Y+4	; 0x04
    36ac:	fc 01       	movw	r30, r24
    36ae:	e2 0f       	add	r30, r18
    36b0:	f3 1f       	adc	r31, r19
    36b2:	80 89       	ldd	r24, Z+16	; 0x10
    36b4:	88 30       	cpi	r24, 0x08	; 8
    36b6:	d1 f4       	brne	.+52     	; 0x36ec <SEV_SEG_enumInit+0xfce>
    36b8:	89 81       	ldd	r24, Y+1	; 0x01
    36ba:	48 2f       	mov	r20, r24
    36bc:	50 e0       	ldi	r21, 0x00	; 0
    36be:	ca 01       	movw	r24, r20
    36c0:	88 0f       	add	r24, r24
    36c2:	99 1f       	adc	r25, r25
    36c4:	9c 01       	movw	r18, r24
    36c6:	22 0f       	add	r18, r18
    36c8:	33 1f       	adc	r19, r19
    36ca:	22 0f       	add	r18, r18
    36cc:	33 1f       	adc	r19, r19
    36ce:	22 0f       	add	r18, r18
    36d0:	33 1f       	adc	r19, r19
    36d2:	82 0f       	add	r24, r18
    36d4:	93 1f       	adc	r25, r19
    36d6:	9c 01       	movw	r18, r24
    36d8:	24 0f       	add	r18, r20
    36da:	35 1f       	adc	r19, r21
    36dc:	8b 81       	ldd	r24, Y+3	; 0x03
    36de:	9c 81       	ldd	r25, Y+4	; 0x04
    36e0:	fc 01       	movw	r30, r24
    36e2:	e2 0f       	add	r30, r18
    36e4:	f3 1f       	adc	r31, r19
    36e6:	81 89       	ldd	r24, Z+17	; 0x11
    36e8:	88 30       	cpi	r24, 0x08	; 8
    36ea:	11 f0       	breq	.+4      	; 0x36f0 <SEV_SEG_enumInit+0xfd2>
			{

			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    36ec:	83 e0       	ldi	r24, 0x03	; 3
    36ee:	8a 83       	std	Y+2, r24	; 0x02
{
	ES_T Local_enumErrorState=ES_NOK;
	u8 Local_u8Counter=0;
	if (Copy_pstrSegments!=NULL)
	{
		for (Local_u8Counter=0;Local_u8Counter<SEV_SEG_NUM;Local_u8Counter++)
    36f0:	89 81       	ldd	r24, Y+1	; 0x01
    36f2:	8f 5f       	subi	r24, 0xFF	; 255
    36f4:	89 83       	std	Y+1, r24	; 0x01
    36f6:	89 81       	ldd	r24, Y+1	; 0x01
    36f8:	82 30       	cpi	r24, 0x02	; 2
    36fa:	08 f4       	brcc	.+2      	; 0x36fe <SEV_SEG_enumInit+0xfe0>
    36fc:	23 c8       	rjmp	.-4026   	; 0x2744 <SEV_SEG_enumInit+0x26>
    36fe:	02 c0       	rjmp	.+4      	; 0x3704 <SEV_SEG_enumInit+0xfe6>
			}
		}
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    3700:	82 e0       	ldi	r24, 0x02	; 2
    3702:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enumErrorState;
    3704:	8a 81       	ldd	r24, Y+2	; 0x02
    3706:	8d 83       	std	Y+5, r24	; 0x05
    3708:	8d 81       	ldd	r24, Y+5	; 0x05
}
    370a:	0f 90       	pop	r0
    370c:	0f 90       	pop	r0
    370e:	0f 90       	pop	r0
    3710:	0f 90       	pop	r0
    3712:	0f 90       	pop	r0
    3714:	cf 91       	pop	r28
    3716:	df 91       	pop	r29
    3718:	08 95       	ret

0000371a <SEV_SEG_enumNUMDisplay>:
ES_T SEV_SEG_enumNUMDisplay(u8 Copy_u8SegmentID,u8 Copy_u8Number)
{
    371a:	df 93       	push	r29
    371c:	cf 93       	push	r28
    371e:	cd b7       	in	r28, 0x3d	; 61
    3720:	de b7       	in	r29, 0x3e	; 62
    3722:	69 97       	sbiw	r28, 0x19	; 25
    3724:	0f b6       	in	r0, 0x3f	; 63
    3726:	f8 94       	cli
    3728:	de bf       	out	0x3e, r29	; 62
    372a:	0f be       	out	0x3f, r0	; 63
    372c:	cd bf       	out	0x3d, r28	; 61
    372e:	8a 83       	std	Y+2, r24	; 0x02
    3730:	6b 83       	std	Y+3, r22	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    3732:	19 82       	std	Y+1, r1	; 0x01

	if ((Copy_u8SegmentID<SEV_SEG_NUM)&&((Copy_u8Number>=0&&Copy_u8Number<=9)
    3734:	8a 81       	ldd	r24, Y+2	; 0x02
    3736:	82 30       	cpi	r24, 0x02	; 2
    3738:	08 f0       	brcs	.+2      	; 0x373c <SEV_SEG_enumNUMDisplay+0x22>
    373a:	44 c4       	rjmp	.+2184   	; 0x3fc4 <SEV_SEG_enumNUMDisplay+0x8aa>
    373c:	8b 81       	ldd	r24, Y+3	; 0x03
    373e:	8a 30       	cpi	r24, 0x0A	; 10
    3740:	70 f0       	brcs	.+28     	; 0x375e <SEV_SEG_enumNUMDisplay+0x44>
    3742:	8b 81       	ldd	r24, Y+3	; 0x03
    3744:	81 34       	cpi	r24, 0x41	; 65
    3746:	18 f0       	brcs	.+6      	; 0x374e <SEV_SEG_enumNUMDisplay+0x34>
    3748:	8b 81       	ldd	r24, Y+3	; 0x03
    374a:	87 34       	cpi	r24, 0x47	; 71
    374c:	40 f0       	brcs	.+16     	; 0x375e <SEV_SEG_enumNUMDisplay+0x44>
    374e:	8b 81       	ldd	r24, Y+3	; 0x03
    3750:	81 36       	cpi	r24, 0x61	; 97
    3752:	08 f4       	brcc	.+2      	; 0x3756 <SEV_SEG_enumNUMDisplay+0x3c>
    3754:	37 c4       	rjmp	.+2158   	; 0x3fc4 <SEV_SEG_enumNUMDisplay+0x8aa>
    3756:	8b 81       	ldd	r24, Y+3	; 0x03
    3758:	87 36       	cpi	r24, 0x67	; 103
    375a:	08 f0       	brcs	.+2      	; 0x375e <SEV_SEG_enumNUMDisplay+0x44>
    375c:	33 c4       	rjmp	.+2150   	; 0x3fc4 <SEV_SEG_enumNUMDisplay+0x8aa>
		||(Copy_u8Number>='A'&&Copy_u8Number<='F')||(Copy_u8Number>='a'&&Copy_u8Number<='f')))
	{
		if (Copy_u8Number=='a'||Copy_u8Number=='A')Copy_u8Number=10;
    375e:	8b 81       	ldd	r24, Y+3	; 0x03
    3760:	81 36       	cpi	r24, 0x61	; 97
    3762:	19 f0       	breq	.+6      	; 0x376a <SEV_SEG_enumNUMDisplay+0x50>
    3764:	8b 81       	ldd	r24, Y+3	; 0x03
    3766:	81 34       	cpi	r24, 0x41	; 65
    3768:	11 f4       	brne	.+4      	; 0x376e <SEV_SEG_enumNUMDisplay+0x54>
    376a:	8a e0       	ldi	r24, 0x0A	; 10
    376c:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='b'||Copy_u8Number=='B')Copy_u8Number=11;
    376e:	8b 81       	ldd	r24, Y+3	; 0x03
    3770:	82 36       	cpi	r24, 0x62	; 98
    3772:	19 f0       	breq	.+6      	; 0x377a <SEV_SEG_enumNUMDisplay+0x60>
    3774:	8b 81       	ldd	r24, Y+3	; 0x03
    3776:	82 34       	cpi	r24, 0x42	; 66
    3778:	11 f4       	brne	.+4      	; 0x377e <SEV_SEG_enumNUMDisplay+0x64>
    377a:	8b e0       	ldi	r24, 0x0B	; 11
    377c:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='c'||Copy_u8Number=='C')Copy_u8Number=12;
    377e:	8b 81       	ldd	r24, Y+3	; 0x03
    3780:	83 36       	cpi	r24, 0x63	; 99
    3782:	19 f0       	breq	.+6      	; 0x378a <SEV_SEG_enumNUMDisplay+0x70>
    3784:	8b 81       	ldd	r24, Y+3	; 0x03
    3786:	83 34       	cpi	r24, 0x43	; 67
    3788:	11 f4       	brne	.+4      	; 0x378e <SEV_SEG_enumNUMDisplay+0x74>
    378a:	8c e0       	ldi	r24, 0x0C	; 12
    378c:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='d'||Copy_u8Number=='D')Copy_u8Number=13;
    378e:	8b 81       	ldd	r24, Y+3	; 0x03
    3790:	84 36       	cpi	r24, 0x64	; 100
    3792:	19 f0       	breq	.+6      	; 0x379a <SEV_SEG_enumNUMDisplay+0x80>
    3794:	8b 81       	ldd	r24, Y+3	; 0x03
    3796:	84 34       	cpi	r24, 0x44	; 68
    3798:	11 f4       	brne	.+4      	; 0x379e <SEV_SEG_enumNUMDisplay+0x84>
    379a:	8d e0       	ldi	r24, 0x0D	; 13
    379c:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='e'||Copy_u8Number=='E')Copy_u8Number=14;
    379e:	8b 81       	ldd	r24, Y+3	; 0x03
    37a0:	85 36       	cpi	r24, 0x65	; 101
    37a2:	19 f0       	breq	.+6      	; 0x37aa <SEV_SEG_enumNUMDisplay+0x90>
    37a4:	8b 81       	ldd	r24, Y+3	; 0x03
    37a6:	85 34       	cpi	r24, 0x45	; 69
    37a8:	11 f4       	brne	.+4      	; 0x37ae <SEV_SEG_enumNUMDisplay+0x94>
    37aa:	8e e0       	ldi	r24, 0x0E	; 14
    37ac:	8b 83       	std	Y+3, r24	; 0x03
		if (Copy_u8Number=='f'||Copy_u8Number=='F')Copy_u8Number=15;
    37ae:	8b 81       	ldd	r24, Y+3	; 0x03
    37b0:	86 36       	cpi	r24, 0x66	; 102
    37b2:	19 f0       	breq	.+6      	; 0x37ba <SEV_SEG_enumNUMDisplay+0xa0>
    37b4:	8b 81       	ldd	r24, Y+3	; 0x03
    37b6:	86 34       	cpi	r24, 0x46	; 70
    37b8:	11 f4       	brne	.+4      	; 0x37be <SEV_SEG_enumNUMDisplay+0xa4>
    37ba:	8f e0       	ldi	r24, 0x0F	; 15
    37bc:	8b 83       	std	Y+3, r24	; 0x03

		if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    37be:	8a 81       	ldd	r24, Y+2	; 0x02
    37c0:	48 2f       	mov	r20, r24
    37c2:	50 e0       	ldi	r21, 0x00	; 0
    37c4:	ca 01       	movw	r24, r20
    37c6:	88 0f       	add	r24, r24
    37c8:	99 1f       	adc	r25, r25
    37ca:	9c 01       	movw	r18, r24
    37cc:	22 0f       	add	r18, r18
    37ce:	33 1f       	adc	r19, r19
    37d0:	22 0f       	add	r18, r18
    37d2:	33 1f       	adc	r19, r19
    37d4:	22 0f       	add	r18, r18
    37d6:	33 1f       	adc	r19, r19
    37d8:	82 0f       	add	r24, r18
    37da:	93 1f       	adc	r25, r19
    37dc:	84 0f       	add	r24, r20
    37de:	95 1f       	adc	r25, r21
    37e0:	fc 01       	movw	r30, r24
    37e2:	ea 56       	subi	r30, 0x6A	; 106
    37e4:	ff 4f       	sbci	r31, 0xFF	; 255
    37e6:	80 81       	ld	r24, Z
    37e8:	81 30       	cpi	r24, 0x01	; 1
    37ea:	09 f0       	breq	.+2      	; 0x37ee <SEV_SEG_enumNUMDisplay+0xd4>
    37ec:	c9 c1       	rjmp	.+914    	; 0x3b80 <SEV_SEG_enumNUMDisplay+0x466>
		{
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],0));
    37ee:	8a 81       	ldd	r24, Y+2	; 0x02
    37f0:	48 2f       	mov	r20, r24
    37f2:	50 e0       	ldi	r21, 0x00	; 0
    37f4:	ca 01       	movw	r24, r20
    37f6:	88 0f       	add	r24, r24
    37f8:	99 1f       	adc	r25, r25
    37fa:	9c 01       	movw	r18, r24
    37fc:	22 0f       	add	r18, r18
    37fe:	33 1f       	adc	r19, r19
    3800:	22 0f       	add	r18, r18
    3802:	33 1f       	adc	r19, r19
    3804:	22 0f       	add	r18, r18
    3806:	33 1f       	adc	r19, r19
    3808:	82 0f       	add	r24, r18
    380a:	93 1f       	adc	r25, r19
    380c:	84 0f       	add	r24, r20
    380e:	95 1f       	adc	r25, r21
    3810:	fc 01       	movw	r30, r24
    3812:	ec 57       	subi	r30, 0x7C	; 124
    3814:	ff 4f       	sbci	r31, 0xFF	; 255
    3816:	60 81       	ld	r22, Z
    3818:	8a 81       	ldd	r24, Y+2	; 0x02
    381a:	48 2f       	mov	r20, r24
    381c:	50 e0       	ldi	r21, 0x00	; 0
    381e:	ca 01       	movw	r24, r20
    3820:	88 0f       	add	r24, r24
    3822:	99 1f       	adc	r25, r25
    3824:	9c 01       	movw	r18, r24
    3826:	22 0f       	add	r18, r18
    3828:	33 1f       	adc	r19, r19
    382a:	22 0f       	add	r18, r18
    382c:	33 1f       	adc	r19, r19
    382e:	22 0f       	add	r18, r18
    3830:	33 1f       	adc	r19, r19
    3832:	82 0f       	add	r24, r18
    3834:	93 1f       	adc	r25, r19
    3836:	84 0f       	add	r24, r20
    3838:	95 1f       	adc	r25, r21
    383a:	fc 01       	movw	r30, r24
    383c:	eb 57       	subi	r30, 0x7B	; 123
    383e:	ff 4f       	sbci	r31, 0xFF	; 255
    3840:	20 81       	ld	r18, Z
    3842:	8b 81       	ldd	r24, Y+3	; 0x03
    3844:	88 2f       	mov	r24, r24
    3846:	90 e0       	ldi	r25, 0x00	; 0
    3848:	fc 01       	movw	r30, r24
    384a:	e6 55       	subi	r30, 0x56	; 86
    384c:	ff 4f       	sbci	r31, 0xFF	; 255
    384e:	80 81       	ld	r24, Z
    3850:	98 2f       	mov	r25, r24
    3852:	91 70       	andi	r25, 0x01	; 1
    3854:	86 2f       	mov	r24, r22
    3856:	62 2f       	mov	r22, r18
    3858:	49 2f       	mov	r20, r25
    385a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    385e:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3860:	89 81       	ldd	r24, Y+1	; 0x01
    3862:	81 30       	cpi	r24, 0x01	; 1
    3864:	19 f0       	breq	.+6      	; 0x386c <SEV_SEG_enumNUMDisplay+0x152>
    3866:	89 81       	ldd	r24, Y+1	; 0x01
    3868:	89 8f       	std	Y+25, r24	; 0x19
    386a:	b0 c3       	rjmp	.+1888   	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],1));
    386c:	8a 81       	ldd	r24, Y+2	; 0x02
    386e:	48 2f       	mov	r20, r24
    3870:	50 e0       	ldi	r21, 0x00	; 0
    3872:	ca 01       	movw	r24, r20
    3874:	88 0f       	add	r24, r24
    3876:	99 1f       	adc	r25, r25
    3878:	9c 01       	movw	r18, r24
    387a:	22 0f       	add	r18, r18
    387c:	33 1f       	adc	r19, r19
    387e:	22 0f       	add	r18, r18
    3880:	33 1f       	adc	r19, r19
    3882:	22 0f       	add	r18, r18
    3884:	33 1f       	adc	r19, r19
    3886:	82 0f       	add	r24, r18
    3888:	93 1f       	adc	r25, r19
    388a:	84 0f       	add	r24, r20
    388c:	95 1f       	adc	r25, r21
    388e:	fc 01       	movw	r30, r24
    3890:	ea 57       	subi	r30, 0x7A	; 122
    3892:	ff 4f       	sbci	r31, 0xFF	; 255
    3894:	60 81       	ld	r22, Z
    3896:	8a 81       	ldd	r24, Y+2	; 0x02
    3898:	48 2f       	mov	r20, r24
    389a:	50 e0       	ldi	r21, 0x00	; 0
    389c:	ca 01       	movw	r24, r20
    389e:	88 0f       	add	r24, r24
    38a0:	99 1f       	adc	r25, r25
    38a2:	9c 01       	movw	r18, r24
    38a4:	22 0f       	add	r18, r18
    38a6:	33 1f       	adc	r19, r19
    38a8:	22 0f       	add	r18, r18
    38aa:	33 1f       	adc	r19, r19
    38ac:	22 0f       	add	r18, r18
    38ae:	33 1f       	adc	r19, r19
    38b0:	82 0f       	add	r24, r18
    38b2:	93 1f       	adc	r25, r19
    38b4:	84 0f       	add	r24, r20
    38b6:	95 1f       	adc	r25, r21
    38b8:	fc 01       	movw	r30, r24
    38ba:	e9 57       	subi	r30, 0x79	; 121
    38bc:	ff 4f       	sbci	r31, 0xFF	; 255
    38be:	20 81       	ld	r18, Z
    38c0:	8b 81       	ldd	r24, Y+3	; 0x03
    38c2:	88 2f       	mov	r24, r24
    38c4:	90 e0       	ldi	r25, 0x00	; 0
    38c6:	fc 01       	movw	r30, r24
    38c8:	e6 55       	subi	r30, 0x56	; 86
    38ca:	ff 4f       	sbci	r31, 0xFF	; 255
    38cc:	80 81       	ld	r24, Z
    38ce:	86 95       	lsr	r24
    38d0:	98 2f       	mov	r25, r24
    38d2:	91 70       	andi	r25, 0x01	; 1
    38d4:	86 2f       	mov	r24, r22
    38d6:	62 2f       	mov	r22, r18
    38d8:	49 2f       	mov	r20, r25
    38da:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    38de:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    38e0:	89 81       	ldd	r24, Y+1	; 0x01
    38e2:	81 30       	cpi	r24, 0x01	; 1
    38e4:	19 f0       	breq	.+6      	; 0x38ec <SEV_SEG_enumNUMDisplay+0x1d2>
    38e6:	89 81       	ldd	r24, Y+1	; 0x01
    38e8:	89 8f       	std	Y+25, r24	; 0x19
    38ea:	70 c3       	rjmp	.+1760   	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],2));
    38ec:	8a 81       	ldd	r24, Y+2	; 0x02
    38ee:	48 2f       	mov	r20, r24
    38f0:	50 e0       	ldi	r21, 0x00	; 0
    38f2:	ca 01       	movw	r24, r20
    38f4:	88 0f       	add	r24, r24
    38f6:	99 1f       	adc	r25, r25
    38f8:	9c 01       	movw	r18, r24
    38fa:	22 0f       	add	r18, r18
    38fc:	33 1f       	adc	r19, r19
    38fe:	22 0f       	add	r18, r18
    3900:	33 1f       	adc	r19, r19
    3902:	22 0f       	add	r18, r18
    3904:	33 1f       	adc	r19, r19
    3906:	82 0f       	add	r24, r18
    3908:	93 1f       	adc	r25, r19
    390a:	84 0f       	add	r24, r20
    390c:	95 1f       	adc	r25, r21
    390e:	fc 01       	movw	r30, r24
    3910:	e8 57       	subi	r30, 0x78	; 120
    3912:	ff 4f       	sbci	r31, 0xFF	; 255
    3914:	60 81       	ld	r22, Z
    3916:	8a 81       	ldd	r24, Y+2	; 0x02
    3918:	48 2f       	mov	r20, r24
    391a:	50 e0       	ldi	r21, 0x00	; 0
    391c:	ca 01       	movw	r24, r20
    391e:	88 0f       	add	r24, r24
    3920:	99 1f       	adc	r25, r25
    3922:	9c 01       	movw	r18, r24
    3924:	22 0f       	add	r18, r18
    3926:	33 1f       	adc	r19, r19
    3928:	22 0f       	add	r18, r18
    392a:	33 1f       	adc	r19, r19
    392c:	22 0f       	add	r18, r18
    392e:	33 1f       	adc	r19, r19
    3930:	82 0f       	add	r24, r18
    3932:	93 1f       	adc	r25, r19
    3934:	84 0f       	add	r24, r20
    3936:	95 1f       	adc	r25, r21
    3938:	fc 01       	movw	r30, r24
    393a:	e7 57       	subi	r30, 0x77	; 119
    393c:	ff 4f       	sbci	r31, 0xFF	; 255
    393e:	20 81       	ld	r18, Z
    3940:	8b 81       	ldd	r24, Y+3	; 0x03
    3942:	88 2f       	mov	r24, r24
    3944:	90 e0       	ldi	r25, 0x00	; 0
    3946:	fc 01       	movw	r30, r24
    3948:	e6 55       	subi	r30, 0x56	; 86
    394a:	ff 4f       	sbci	r31, 0xFF	; 255
    394c:	80 81       	ld	r24, Z
    394e:	86 95       	lsr	r24
    3950:	86 95       	lsr	r24
    3952:	98 2f       	mov	r25, r24
    3954:	91 70       	andi	r25, 0x01	; 1
    3956:	86 2f       	mov	r24, r22
    3958:	62 2f       	mov	r22, r18
    395a:	49 2f       	mov	r20, r25
    395c:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3960:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3962:	89 81       	ldd	r24, Y+1	; 0x01
    3964:	81 30       	cpi	r24, 0x01	; 1
    3966:	19 f0       	breq	.+6      	; 0x396e <SEV_SEG_enumNUMDisplay+0x254>
    3968:	89 81       	ldd	r24, Y+1	; 0x01
    396a:	89 8f       	std	Y+25, r24	; 0x19
    396c:	2f c3       	rjmp	.+1630   	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],3));
    396e:	8a 81       	ldd	r24, Y+2	; 0x02
    3970:	48 2f       	mov	r20, r24
    3972:	50 e0       	ldi	r21, 0x00	; 0
    3974:	ca 01       	movw	r24, r20
    3976:	88 0f       	add	r24, r24
    3978:	99 1f       	adc	r25, r25
    397a:	9c 01       	movw	r18, r24
    397c:	22 0f       	add	r18, r18
    397e:	33 1f       	adc	r19, r19
    3980:	22 0f       	add	r18, r18
    3982:	33 1f       	adc	r19, r19
    3984:	22 0f       	add	r18, r18
    3986:	33 1f       	adc	r19, r19
    3988:	82 0f       	add	r24, r18
    398a:	93 1f       	adc	r25, r19
    398c:	84 0f       	add	r24, r20
    398e:	95 1f       	adc	r25, r21
    3990:	fc 01       	movw	r30, r24
    3992:	e6 57       	subi	r30, 0x76	; 118
    3994:	ff 4f       	sbci	r31, 0xFF	; 255
    3996:	60 81       	ld	r22, Z
    3998:	8a 81       	ldd	r24, Y+2	; 0x02
    399a:	48 2f       	mov	r20, r24
    399c:	50 e0       	ldi	r21, 0x00	; 0
    399e:	ca 01       	movw	r24, r20
    39a0:	88 0f       	add	r24, r24
    39a2:	99 1f       	adc	r25, r25
    39a4:	9c 01       	movw	r18, r24
    39a6:	22 0f       	add	r18, r18
    39a8:	33 1f       	adc	r19, r19
    39aa:	22 0f       	add	r18, r18
    39ac:	33 1f       	adc	r19, r19
    39ae:	22 0f       	add	r18, r18
    39b0:	33 1f       	adc	r19, r19
    39b2:	82 0f       	add	r24, r18
    39b4:	93 1f       	adc	r25, r19
    39b6:	84 0f       	add	r24, r20
    39b8:	95 1f       	adc	r25, r21
    39ba:	fc 01       	movw	r30, r24
    39bc:	e5 57       	subi	r30, 0x75	; 117
    39be:	ff 4f       	sbci	r31, 0xFF	; 255
    39c0:	20 81       	ld	r18, Z
    39c2:	8b 81       	ldd	r24, Y+3	; 0x03
    39c4:	88 2f       	mov	r24, r24
    39c6:	90 e0       	ldi	r25, 0x00	; 0
    39c8:	fc 01       	movw	r30, r24
    39ca:	e6 55       	subi	r30, 0x56	; 86
    39cc:	ff 4f       	sbci	r31, 0xFF	; 255
    39ce:	80 81       	ld	r24, Z
    39d0:	86 95       	lsr	r24
    39d2:	86 95       	lsr	r24
    39d4:	86 95       	lsr	r24
    39d6:	98 2f       	mov	r25, r24
    39d8:	91 70       	andi	r25, 0x01	; 1
    39da:	86 2f       	mov	r24, r22
    39dc:	62 2f       	mov	r22, r18
    39de:	49 2f       	mov	r20, r25
    39e0:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    39e4:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    39e6:	89 81       	ldd	r24, Y+1	; 0x01
    39e8:	81 30       	cpi	r24, 0x01	; 1
    39ea:	19 f0       	breq	.+6      	; 0x39f2 <SEV_SEG_enumNUMDisplay+0x2d8>
    39ec:	89 81       	ldd	r24, Y+1	; 0x01
    39ee:	89 8f       	std	Y+25, r24	; 0x19
    39f0:	ed c2       	rjmp	.+1498   	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],4));
    39f2:	8a 81       	ldd	r24, Y+2	; 0x02
    39f4:	48 2f       	mov	r20, r24
    39f6:	50 e0       	ldi	r21, 0x00	; 0
    39f8:	ca 01       	movw	r24, r20
    39fa:	88 0f       	add	r24, r24
    39fc:	99 1f       	adc	r25, r25
    39fe:	9c 01       	movw	r18, r24
    3a00:	22 0f       	add	r18, r18
    3a02:	33 1f       	adc	r19, r19
    3a04:	22 0f       	add	r18, r18
    3a06:	33 1f       	adc	r19, r19
    3a08:	22 0f       	add	r18, r18
    3a0a:	33 1f       	adc	r19, r19
    3a0c:	82 0f       	add	r24, r18
    3a0e:	93 1f       	adc	r25, r19
    3a10:	84 0f       	add	r24, r20
    3a12:	95 1f       	adc	r25, r21
    3a14:	fc 01       	movw	r30, r24
    3a16:	e4 57       	subi	r30, 0x74	; 116
    3a18:	ff 4f       	sbci	r31, 0xFF	; 255
    3a1a:	60 81       	ld	r22, Z
    3a1c:	8a 81       	ldd	r24, Y+2	; 0x02
    3a1e:	48 2f       	mov	r20, r24
    3a20:	50 e0       	ldi	r21, 0x00	; 0
    3a22:	ca 01       	movw	r24, r20
    3a24:	88 0f       	add	r24, r24
    3a26:	99 1f       	adc	r25, r25
    3a28:	9c 01       	movw	r18, r24
    3a2a:	22 0f       	add	r18, r18
    3a2c:	33 1f       	adc	r19, r19
    3a2e:	22 0f       	add	r18, r18
    3a30:	33 1f       	adc	r19, r19
    3a32:	22 0f       	add	r18, r18
    3a34:	33 1f       	adc	r19, r19
    3a36:	82 0f       	add	r24, r18
    3a38:	93 1f       	adc	r25, r19
    3a3a:	84 0f       	add	r24, r20
    3a3c:	95 1f       	adc	r25, r21
    3a3e:	fc 01       	movw	r30, r24
    3a40:	e3 57       	subi	r30, 0x73	; 115
    3a42:	ff 4f       	sbci	r31, 0xFF	; 255
    3a44:	20 81       	ld	r18, Z
    3a46:	8b 81       	ldd	r24, Y+3	; 0x03
    3a48:	88 2f       	mov	r24, r24
    3a4a:	90 e0       	ldi	r25, 0x00	; 0
    3a4c:	fc 01       	movw	r30, r24
    3a4e:	e6 55       	subi	r30, 0x56	; 86
    3a50:	ff 4f       	sbci	r31, 0xFF	; 255
    3a52:	80 81       	ld	r24, Z
    3a54:	82 95       	swap	r24
    3a56:	8f 70       	andi	r24, 0x0F	; 15
    3a58:	98 2f       	mov	r25, r24
    3a5a:	91 70       	andi	r25, 0x01	; 1
    3a5c:	86 2f       	mov	r24, r22
    3a5e:	62 2f       	mov	r22, r18
    3a60:	49 2f       	mov	r20, r25
    3a62:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3a66:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3a68:	89 81       	ldd	r24, Y+1	; 0x01
    3a6a:	81 30       	cpi	r24, 0x01	; 1
    3a6c:	19 f0       	breq	.+6      	; 0x3a74 <SEV_SEG_enumNUMDisplay+0x35a>
    3a6e:	89 81       	ldd	r24, Y+1	; 0x01
    3a70:	89 8f       	std	Y+25, r24	; 0x19
    3a72:	ac c2       	rjmp	.+1368   	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],5));
    3a74:	8a 81       	ldd	r24, Y+2	; 0x02
    3a76:	48 2f       	mov	r20, r24
    3a78:	50 e0       	ldi	r21, 0x00	; 0
    3a7a:	ca 01       	movw	r24, r20
    3a7c:	88 0f       	add	r24, r24
    3a7e:	99 1f       	adc	r25, r25
    3a80:	9c 01       	movw	r18, r24
    3a82:	22 0f       	add	r18, r18
    3a84:	33 1f       	adc	r19, r19
    3a86:	22 0f       	add	r18, r18
    3a88:	33 1f       	adc	r19, r19
    3a8a:	22 0f       	add	r18, r18
    3a8c:	33 1f       	adc	r19, r19
    3a8e:	82 0f       	add	r24, r18
    3a90:	93 1f       	adc	r25, r19
    3a92:	84 0f       	add	r24, r20
    3a94:	95 1f       	adc	r25, r21
    3a96:	fc 01       	movw	r30, r24
    3a98:	e2 57       	subi	r30, 0x72	; 114
    3a9a:	ff 4f       	sbci	r31, 0xFF	; 255
    3a9c:	60 81       	ld	r22, Z
    3a9e:	8a 81       	ldd	r24, Y+2	; 0x02
    3aa0:	48 2f       	mov	r20, r24
    3aa2:	50 e0       	ldi	r21, 0x00	; 0
    3aa4:	ca 01       	movw	r24, r20
    3aa6:	88 0f       	add	r24, r24
    3aa8:	99 1f       	adc	r25, r25
    3aaa:	9c 01       	movw	r18, r24
    3aac:	22 0f       	add	r18, r18
    3aae:	33 1f       	adc	r19, r19
    3ab0:	22 0f       	add	r18, r18
    3ab2:	33 1f       	adc	r19, r19
    3ab4:	22 0f       	add	r18, r18
    3ab6:	33 1f       	adc	r19, r19
    3ab8:	82 0f       	add	r24, r18
    3aba:	93 1f       	adc	r25, r19
    3abc:	84 0f       	add	r24, r20
    3abe:	95 1f       	adc	r25, r21
    3ac0:	fc 01       	movw	r30, r24
    3ac2:	e1 57       	subi	r30, 0x71	; 113
    3ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ac6:	20 81       	ld	r18, Z
    3ac8:	8b 81       	ldd	r24, Y+3	; 0x03
    3aca:	88 2f       	mov	r24, r24
    3acc:	90 e0       	ldi	r25, 0x00	; 0
    3ace:	fc 01       	movw	r30, r24
    3ad0:	e6 55       	subi	r30, 0x56	; 86
    3ad2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ad4:	80 81       	ld	r24, Z
    3ad6:	82 95       	swap	r24
    3ad8:	86 95       	lsr	r24
    3ada:	87 70       	andi	r24, 0x07	; 7
    3adc:	98 2f       	mov	r25, r24
    3ade:	91 70       	andi	r25, 0x01	; 1
    3ae0:	86 2f       	mov	r24, r22
    3ae2:	62 2f       	mov	r22, r18
    3ae4:	49 2f       	mov	r20, r25
    3ae6:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3aea:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3aec:	89 81       	ldd	r24, Y+1	; 0x01
    3aee:	81 30       	cpi	r24, 0x01	; 1
    3af0:	19 f0       	breq	.+6      	; 0x3af8 <SEV_SEG_enumNUMDisplay+0x3de>
    3af2:	89 81       	ldd	r24, Y+1	; 0x01
    3af4:	89 8f       	std	Y+25, r24	; 0x19
    3af6:	6a c2       	rjmp	.+1236   	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPin,READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],6));
    3af8:	8a 81       	ldd	r24, Y+2	; 0x02
    3afa:	48 2f       	mov	r20, r24
    3afc:	50 e0       	ldi	r21, 0x00	; 0
    3afe:	ca 01       	movw	r24, r20
    3b00:	88 0f       	add	r24, r24
    3b02:	99 1f       	adc	r25, r25
    3b04:	9c 01       	movw	r18, r24
    3b06:	22 0f       	add	r18, r18
    3b08:	33 1f       	adc	r19, r19
    3b0a:	22 0f       	add	r18, r18
    3b0c:	33 1f       	adc	r19, r19
    3b0e:	22 0f       	add	r18, r18
    3b10:	33 1f       	adc	r19, r19
    3b12:	82 0f       	add	r24, r18
    3b14:	93 1f       	adc	r25, r19
    3b16:	84 0f       	add	r24, r20
    3b18:	95 1f       	adc	r25, r21
    3b1a:	fc 01       	movw	r30, r24
    3b1c:	e0 57       	subi	r30, 0x70	; 112
    3b1e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b20:	60 81       	ld	r22, Z
    3b22:	8a 81       	ldd	r24, Y+2	; 0x02
    3b24:	48 2f       	mov	r20, r24
    3b26:	50 e0       	ldi	r21, 0x00	; 0
    3b28:	ca 01       	movw	r24, r20
    3b2a:	88 0f       	add	r24, r24
    3b2c:	99 1f       	adc	r25, r25
    3b2e:	9c 01       	movw	r18, r24
    3b30:	22 0f       	add	r18, r18
    3b32:	33 1f       	adc	r19, r19
    3b34:	22 0f       	add	r18, r18
    3b36:	33 1f       	adc	r19, r19
    3b38:	22 0f       	add	r18, r18
    3b3a:	33 1f       	adc	r19, r19
    3b3c:	82 0f       	add	r24, r18
    3b3e:	93 1f       	adc	r25, r19
    3b40:	84 0f       	add	r24, r20
    3b42:	95 1f       	adc	r25, r21
    3b44:	fc 01       	movw	r30, r24
    3b46:	ef 56       	subi	r30, 0x6F	; 111
    3b48:	ff 4f       	sbci	r31, 0xFF	; 255
    3b4a:	20 81       	ld	r18, Z
    3b4c:	8b 81       	ldd	r24, Y+3	; 0x03
    3b4e:	88 2f       	mov	r24, r24
    3b50:	90 e0       	ldi	r25, 0x00	; 0
    3b52:	fc 01       	movw	r30, r24
    3b54:	e6 55       	subi	r30, 0x56	; 86
    3b56:	ff 4f       	sbci	r31, 0xFF	; 255
    3b58:	80 81       	ld	r24, Z
    3b5a:	82 95       	swap	r24
    3b5c:	86 95       	lsr	r24
    3b5e:	86 95       	lsr	r24
    3b60:	83 70       	andi	r24, 0x03	; 3
    3b62:	98 2f       	mov	r25, r24
    3b64:	91 70       	andi	r25, 0x01	; 1
    3b66:	86 2f       	mov	r24, r22
    3b68:	62 2f       	mov	r22, r18
    3b6a:	49 2f       	mov	r20, r25
    3b6c:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3b70:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3b72:	89 81       	ldd	r24, Y+1	; 0x01
    3b74:	81 30       	cpi	r24, 0x01	; 1
    3b76:	09 f4       	brne	.+2      	; 0x3b7a <SEV_SEG_enumNUMDisplay+0x460>
    3b78:	27 c2       	rjmp	.+1102   	; 0x3fc8 <SEV_SEG_enumNUMDisplay+0x8ae>
    3b7a:	89 81       	ldd	r24, Y+1	; 0x01
    3b7c:	89 8f       	std	Y+25, r24	; 0x19
    3b7e:	26 c2       	rjmp	.+1100   	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    3b80:	8a 81       	ldd	r24, Y+2	; 0x02
    3b82:	48 2f       	mov	r20, r24
    3b84:	50 e0       	ldi	r21, 0x00	; 0
    3b86:	ca 01       	movw	r24, r20
    3b88:	88 0f       	add	r24, r24
    3b8a:	99 1f       	adc	r25, r25
    3b8c:	9c 01       	movw	r18, r24
    3b8e:	22 0f       	add	r18, r18
    3b90:	33 1f       	adc	r19, r19
    3b92:	22 0f       	add	r18, r18
    3b94:	33 1f       	adc	r19, r19
    3b96:	22 0f       	add	r18, r18
    3b98:	33 1f       	adc	r19, r19
    3b9a:	82 0f       	add	r24, r18
    3b9c:	93 1f       	adc	r25, r19
    3b9e:	84 0f       	add	r24, r20
    3ba0:	95 1f       	adc	r25, r21
    3ba2:	fc 01       	movw	r30, r24
    3ba4:	ea 56       	subi	r30, 0x6A	; 106
    3ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ba8:	80 81       	ld	r24, Z
    3baa:	88 23       	and	r24, r24
    3bac:	09 f0       	breq	.+2      	; 0x3bb0 <SEV_SEG_enumNUMDisplay+0x496>
    3bae:	07 c2       	rjmp	.+1038   	; 0x3fbe <SEV_SEG_enumNUMDisplay+0x8a4>
		{
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],0));
    3bb0:	8a 81       	ldd	r24, Y+2	; 0x02
    3bb2:	48 2f       	mov	r20, r24
    3bb4:	50 e0       	ldi	r21, 0x00	; 0
    3bb6:	ca 01       	movw	r24, r20
    3bb8:	88 0f       	add	r24, r24
    3bba:	99 1f       	adc	r25, r25
    3bbc:	9c 01       	movw	r18, r24
    3bbe:	22 0f       	add	r18, r18
    3bc0:	33 1f       	adc	r19, r19
    3bc2:	22 0f       	add	r18, r18
    3bc4:	33 1f       	adc	r19, r19
    3bc6:	22 0f       	add	r18, r18
    3bc8:	33 1f       	adc	r19, r19
    3bca:	82 0f       	add	r24, r18
    3bcc:	93 1f       	adc	r25, r19
    3bce:	84 0f       	add	r24, r20
    3bd0:	95 1f       	adc	r25, r21
    3bd2:	fc 01       	movw	r30, r24
    3bd4:	ec 57       	subi	r30, 0x7C	; 124
    3bd6:	ff 4f       	sbci	r31, 0xFF	; 255
    3bd8:	80 81       	ld	r24, Z
    3bda:	88 8f       	std	Y+24, r24	; 0x18
    3bdc:	8a 81       	ldd	r24, Y+2	; 0x02
    3bde:	48 2f       	mov	r20, r24
    3be0:	50 e0       	ldi	r21, 0x00	; 0
    3be2:	ca 01       	movw	r24, r20
    3be4:	88 0f       	add	r24, r24
    3be6:	99 1f       	adc	r25, r25
    3be8:	9c 01       	movw	r18, r24
    3bea:	22 0f       	add	r18, r18
    3bec:	33 1f       	adc	r19, r19
    3bee:	22 0f       	add	r18, r18
    3bf0:	33 1f       	adc	r19, r19
    3bf2:	22 0f       	add	r18, r18
    3bf4:	33 1f       	adc	r19, r19
    3bf6:	82 0f       	add	r24, r18
    3bf8:	93 1f       	adc	r25, r19
    3bfa:	84 0f       	add	r24, r20
    3bfc:	95 1f       	adc	r25, r21
    3bfe:	fc 01       	movw	r30, r24
    3c00:	eb 57       	subi	r30, 0x7B	; 123
    3c02:	ff 4f       	sbci	r31, 0xFF	; 255
    3c04:	80 81       	ld	r24, Z
    3c06:	8f 8b       	std	Y+23, r24	; 0x17
    3c08:	8b 81       	ldd	r24, Y+3	; 0x03
    3c0a:	88 2f       	mov	r24, r24
    3c0c:	90 e0       	ldi	r25, 0x00	; 0
    3c0e:	fc 01       	movw	r30, r24
    3c10:	e6 55       	subi	r30, 0x56	; 86
    3c12:	ff 4f       	sbci	r31, 0xFF	; 255
    3c14:	80 81       	ld	r24, Z
    3c16:	88 2f       	mov	r24, r24
    3c18:	90 e0       	ldi	r25, 0x00	; 0
    3c1a:	81 70       	andi	r24, 0x01	; 1
    3c1c:	90 70       	andi	r25, 0x00	; 0
    3c1e:	1e 8a       	std	Y+22, r1	; 0x16
    3c20:	00 97       	sbiw	r24, 0x00	; 0
    3c22:	11 f4       	brne	.+4      	; 0x3c28 <SEV_SEG_enumNUMDisplay+0x50e>
    3c24:	81 e0       	ldi	r24, 0x01	; 1
    3c26:	8e 8b       	std	Y+22, r24	; 0x16
    3c28:	88 8d       	ldd	r24, Y+24	; 0x18
    3c2a:	6f 89       	ldd	r22, Y+23	; 0x17
    3c2c:	4e 89       	ldd	r20, Y+22	; 0x16
    3c2e:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3c32:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3c34:	89 81       	ldd	r24, Y+1	; 0x01
    3c36:	81 30       	cpi	r24, 0x01	; 1
    3c38:	19 f0       	breq	.+6      	; 0x3c40 <SEV_SEG_enumNUMDisplay+0x526>
    3c3a:	89 81       	ldd	r24, Y+1	; 0x01
    3c3c:	89 8f       	std	Y+25, r24	; 0x19
    3c3e:	c6 c1       	rjmp	.+908    	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],1));
    3c40:	8a 81       	ldd	r24, Y+2	; 0x02
    3c42:	48 2f       	mov	r20, r24
    3c44:	50 e0       	ldi	r21, 0x00	; 0
    3c46:	ca 01       	movw	r24, r20
    3c48:	88 0f       	add	r24, r24
    3c4a:	99 1f       	adc	r25, r25
    3c4c:	9c 01       	movw	r18, r24
    3c4e:	22 0f       	add	r18, r18
    3c50:	33 1f       	adc	r19, r19
    3c52:	22 0f       	add	r18, r18
    3c54:	33 1f       	adc	r19, r19
    3c56:	22 0f       	add	r18, r18
    3c58:	33 1f       	adc	r19, r19
    3c5a:	82 0f       	add	r24, r18
    3c5c:	93 1f       	adc	r25, r19
    3c5e:	84 0f       	add	r24, r20
    3c60:	95 1f       	adc	r25, r21
    3c62:	fc 01       	movw	r30, r24
    3c64:	ea 57       	subi	r30, 0x7A	; 122
    3c66:	ff 4f       	sbci	r31, 0xFF	; 255
    3c68:	80 81       	ld	r24, Z
    3c6a:	8d 8b       	std	Y+21, r24	; 0x15
    3c6c:	8a 81       	ldd	r24, Y+2	; 0x02
    3c6e:	48 2f       	mov	r20, r24
    3c70:	50 e0       	ldi	r21, 0x00	; 0
    3c72:	ca 01       	movw	r24, r20
    3c74:	88 0f       	add	r24, r24
    3c76:	99 1f       	adc	r25, r25
    3c78:	9c 01       	movw	r18, r24
    3c7a:	22 0f       	add	r18, r18
    3c7c:	33 1f       	adc	r19, r19
    3c7e:	22 0f       	add	r18, r18
    3c80:	33 1f       	adc	r19, r19
    3c82:	22 0f       	add	r18, r18
    3c84:	33 1f       	adc	r19, r19
    3c86:	82 0f       	add	r24, r18
    3c88:	93 1f       	adc	r25, r19
    3c8a:	84 0f       	add	r24, r20
    3c8c:	95 1f       	adc	r25, r21
    3c8e:	fc 01       	movw	r30, r24
    3c90:	e9 57       	subi	r30, 0x79	; 121
    3c92:	ff 4f       	sbci	r31, 0xFF	; 255
    3c94:	80 81       	ld	r24, Z
    3c96:	8c 8b       	std	Y+20, r24	; 0x14
    3c98:	8b 81       	ldd	r24, Y+3	; 0x03
    3c9a:	88 2f       	mov	r24, r24
    3c9c:	90 e0       	ldi	r25, 0x00	; 0
    3c9e:	fc 01       	movw	r30, r24
    3ca0:	e6 55       	subi	r30, 0x56	; 86
    3ca2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ca4:	80 81       	ld	r24, Z
    3ca6:	86 95       	lsr	r24
    3ca8:	88 2f       	mov	r24, r24
    3caa:	90 e0       	ldi	r25, 0x00	; 0
    3cac:	81 70       	andi	r24, 0x01	; 1
    3cae:	90 70       	andi	r25, 0x00	; 0
    3cb0:	1b 8a       	std	Y+19, r1	; 0x13
    3cb2:	00 97       	sbiw	r24, 0x00	; 0
    3cb4:	11 f4       	brne	.+4      	; 0x3cba <SEV_SEG_enumNUMDisplay+0x5a0>
    3cb6:	81 e0       	ldi	r24, 0x01	; 1
    3cb8:	8b 8b       	std	Y+19, r24	; 0x13
    3cba:	8d 89       	ldd	r24, Y+21	; 0x15
    3cbc:	6c 89       	ldd	r22, Y+20	; 0x14
    3cbe:	4b 89       	ldd	r20, Y+19	; 0x13
    3cc0:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3cc4:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3cc6:	89 81       	ldd	r24, Y+1	; 0x01
    3cc8:	81 30       	cpi	r24, 0x01	; 1
    3cca:	19 f0       	breq	.+6      	; 0x3cd2 <SEV_SEG_enumNUMDisplay+0x5b8>
    3ccc:	89 81       	ldd	r24, Y+1	; 0x01
    3cce:	89 8f       	std	Y+25, r24	; 0x19
    3cd0:	7d c1       	rjmp	.+762    	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],2));
    3cd2:	8a 81       	ldd	r24, Y+2	; 0x02
    3cd4:	48 2f       	mov	r20, r24
    3cd6:	50 e0       	ldi	r21, 0x00	; 0
    3cd8:	ca 01       	movw	r24, r20
    3cda:	88 0f       	add	r24, r24
    3cdc:	99 1f       	adc	r25, r25
    3cde:	9c 01       	movw	r18, r24
    3ce0:	22 0f       	add	r18, r18
    3ce2:	33 1f       	adc	r19, r19
    3ce4:	22 0f       	add	r18, r18
    3ce6:	33 1f       	adc	r19, r19
    3ce8:	22 0f       	add	r18, r18
    3cea:	33 1f       	adc	r19, r19
    3cec:	82 0f       	add	r24, r18
    3cee:	93 1f       	adc	r25, r19
    3cf0:	84 0f       	add	r24, r20
    3cf2:	95 1f       	adc	r25, r21
    3cf4:	fc 01       	movw	r30, r24
    3cf6:	e8 57       	subi	r30, 0x78	; 120
    3cf8:	ff 4f       	sbci	r31, 0xFF	; 255
    3cfa:	80 81       	ld	r24, Z
    3cfc:	8a 8b       	std	Y+18, r24	; 0x12
    3cfe:	8a 81       	ldd	r24, Y+2	; 0x02
    3d00:	48 2f       	mov	r20, r24
    3d02:	50 e0       	ldi	r21, 0x00	; 0
    3d04:	ca 01       	movw	r24, r20
    3d06:	88 0f       	add	r24, r24
    3d08:	99 1f       	adc	r25, r25
    3d0a:	9c 01       	movw	r18, r24
    3d0c:	22 0f       	add	r18, r18
    3d0e:	33 1f       	adc	r19, r19
    3d10:	22 0f       	add	r18, r18
    3d12:	33 1f       	adc	r19, r19
    3d14:	22 0f       	add	r18, r18
    3d16:	33 1f       	adc	r19, r19
    3d18:	82 0f       	add	r24, r18
    3d1a:	93 1f       	adc	r25, r19
    3d1c:	84 0f       	add	r24, r20
    3d1e:	95 1f       	adc	r25, r21
    3d20:	fc 01       	movw	r30, r24
    3d22:	e7 57       	subi	r30, 0x77	; 119
    3d24:	ff 4f       	sbci	r31, 0xFF	; 255
    3d26:	80 81       	ld	r24, Z
    3d28:	89 8b       	std	Y+17, r24	; 0x11
    3d2a:	8b 81       	ldd	r24, Y+3	; 0x03
    3d2c:	88 2f       	mov	r24, r24
    3d2e:	90 e0       	ldi	r25, 0x00	; 0
    3d30:	fc 01       	movw	r30, r24
    3d32:	e6 55       	subi	r30, 0x56	; 86
    3d34:	ff 4f       	sbci	r31, 0xFF	; 255
    3d36:	80 81       	ld	r24, Z
    3d38:	86 95       	lsr	r24
    3d3a:	86 95       	lsr	r24
    3d3c:	88 2f       	mov	r24, r24
    3d3e:	90 e0       	ldi	r25, 0x00	; 0
    3d40:	81 70       	andi	r24, 0x01	; 1
    3d42:	90 70       	andi	r25, 0x00	; 0
    3d44:	18 8a       	std	Y+16, r1	; 0x10
    3d46:	00 97       	sbiw	r24, 0x00	; 0
    3d48:	11 f4       	brne	.+4      	; 0x3d4e <SEV_SEG_enumNUMDisplay+0x634>
    3d4a:	81 e0       	ldi	r24, 0x01	; 1
    3d4c:	88 8b       	std	Y+16, r24	; 0x10
    3d4e:	8a 89       	ldd	r24, Y+18	; 0x12
    3d50:	69 89       	ldd	r22, Y+17	; 0x11
    3d52:	48 89       	ldd	r20, Y+16	; 0x10
    3d54:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3d58:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3d5a:	89 81       	ldd	r24, Y+1	; 0x01
    3d5c:	81 30       	cpi	r24, 0x01	; 1
    3d5e:	19 f0       	breq	.+6      	; 0x3d66 <SEV_SEG_enumNUMDisplay+0x64c>
    3d60:	89 81       	ldd	r24, Y+1	; 0x01
    3d62:	89 8f       	std	Y+25, r24	; 0x19
    3d64:	33 c1       	rjmp	.+614    	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],3));
    3d66:	8a 81       	ldd	r24, Y+2	; 0x02
    3d68:	48 2f       	mov	r20, r24
    3d6a:	50 e0       	ldi	r21, 0x00	; 0
    3d6c:	ca 01       	movw	r24, r20
    3d6e:	88 0f       	add	r24, r24
    3d70:	99 1f       	adc	r25, r25
    3d72:	9c 01       	movw	r18, r24
    3d74:	22 0f       	add	r18, r18
    3d76:	33 1f       	adc	r19, r19
    3d78:	22 0f       	add	r18, r18
    3d7a:	33 1f       	adc	r19, r19
    3d7c:	22 0f       	add	r18, r18
    3d7e:	33 1f       	adc	r19, r19
    3d80:	82 0f       	add	r24, r18
    3d82:	93 1f       	adc	r25, r19
    3d84:	84 0f       	add	r24, r20
    3d86:	95 1f       	adc	r25, r21
    3d88:	fc 01       	movw	r30, r24
    3d8a:	e6 57       	subi	r30, 0x76	; 118
    3d8c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d8e:	80 81       	ld	r24, Z
    3d90:	8f 87       	std	Y+15, r24	; 0x0f
    3d92:	8a 81       	ldd	r24, Y+2	; 0x02
    3d94:	48 2f       	mov	r20, r24
    3d96:	50 e0       	ldi	r21, 0x00	; 0
    3d98:	ca 01       	movw	r24, r20
    3d9a:	88 0f       	add	r24, r24
    3d9c:	99 1f       	adc	r25, r25
    3d9e:	9c 01       	movw	r18, r24
    3da0:	22 0f       	add	r18, r18
    3da2:	33 1f       	adc	r19, r19
    3da4:	22 0f       	add	r18, r18
    3da6:	33 1f       	adc	r19, r19
    3da8:	22 0f       	add	r18, r18
    3daa:	33 1f       	adc	r19, r19
    3dac:	82 0f       	add	r24, r18
    3dae:	93 1f       	adc	r25, r19
    3db0:	84 0f       	add	r24, r20
    3db2:	95 1f       	adc	r25, r21
    3db4:	fc 01       	movw	r30, r24
    3db6:	e5 57       	subi	r30, 0x75	; 117
    3db8:	ff 4f       	sbci	r31, 0xFF	; 255
    3dba:	80 81       	ld	r24, Z
    3dbc:	8e 87       	std	Y+14, r24	; 0x0e
    3dbe:	8b 81       	ldd	r24, Y+3	; 0x03
    3dc0:	88 2f       	mov	r24, r24
    3dc2:	90 e0       	ldi	r25, 0x00	; 0
    3dc4:	fc 01       	movw	r30, r24
    3dc6:	e6 55       	subi	r30, 0x56	; 86
    3dc8:	ff 4f       	sbci	r31, 0xFF	; 255
    3dca:	80 81       	ld	r24, Z
    3dcc:	86 95       	lsr	r24
    3dce:	86 95       	lsr	r24
    3dd0:	86 95       	lsr	r24
    3dd2:	88 2f       	mov	r24, r24
    3dd4:	90 e0       	ldi	r25, 0x00	; 0
    3dd6:	81 70       	andi	r24, 0x01	; 1
    3dd8:	90 70       	andi	r25, 0x00	; 0
    3dda:	1d 86       	std	Y+13, r1	; 0x0d
    3ddc:	00 97       	sbiw	r24, 0x00	; 0
    3dde:	11 f4       	brne	.+4      	; 0x3de4 <SEV_SEG_enumNUMDisplay+0x6ca>
    3de0:	81 e0       	ldi	r24, 0x01	; 1
    3de2:	8d 87       	std	Y+13, r24	; 0x0d
    3de4:	8f 85       	ldd	r24, Y+15	; 0x0f
    3de6:	6e 85       	ldd	r22, Y+14	; 0x0e
    3de8:	4d 85       	ldd	r20, Y+13	; 0x0d
    3dea:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3dee:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3df0:	89 81       	ldd	r24, Y+1	; 0x01
    3df2:	81 30       	cpi	r24, 0x01	; 1
    3df4:	19 f0       	breq	.+6      	; 0x3dfc <SEV_SEG_enumNUMDisplay+0x6e2>
    3df6:	89 81       	ldd	r24, Y+1	; 0x01
    3df8:	89 8f       	std	Y+25, r24	; 0x19
    3dfa:	e8 c0       	rjmp	.+464    	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],4));
    3dfc:	8a 81       	ldd	r24, Y+2	; 0x02
    3dfe:	48 2f       	mov	r20, r24
    3e00:	50 e0       	ldi	r21, 0x00	; 0
    3e02:	ca 01       	movw	r24, r20
    3e04:	88 0f       	add	r24, r24
    3e06:	99 1f       	adc	r25, r25
    3e08:	9c 01       	movw	r18, r24
    3e0a:	22 0f       	add	r18, r18
    3e0c:	33 1f       	adc	r19, r19
    3e0e:	22 0f       	add	r18, r18
    3e10:	33 1f       	adc	r19, r19
    3e12:	22 0f       	add	r18, r18
    3e14:	33 1f       	adc	r19, r19
    3e16:	82 0f       	add	r24, r18
    3e18:	93 1f       	adc	r25, r19
    3e1a:	84 0f       	add	r24, r20
    3e1c:	95 1f       	adc	r25, r21
    3e1e:	fc 01       	movw	r30, r24
    3e20:	e4 57       	subi	r30, 0x74	; 116
    3e22:	ff 4f       	sbci	r31, 0xFF	; 255
    3e24:	80 81       	ld	r24, Z
    3e26:	8c 87       	std	Y+12, r24	; 0x0c
    3e28:	8a 81       	ldd	r24, Y+2	; 0x02
    3e2a:	48 2f       	mov	r20, r24
    3e2c:	50 e0       	ldi	r21, 0x00	; 0
    3e2e:	ca 01       	movw	r24, r20
    3e30:	88 0f       	add	r24, r24
    3e32:	99 1f       	adc	r25, r25
    3e34:	9c 01       	movw	r18, r24
    3e36:	22 0f       	add	r18, r18
    3e38:	33 1f       	adc	r19, r19
    3e3a:	22 0f       	add	r18, r18
    3e3c:	33 1f       	adc	r19, r19
    3e3e:	22 0f       	add	r18, r18
    3e40:	33 1f       	adc	r19, r19
    3e42:	82 0f       	add	r24, r18
    3e44:	93 1f       	adc	r25, r19
    3e46:	84 0f       	add	r24, r20
    3e48:	95 1f       	adc	r25, r21
    3e4a:	fc 01       	movw	r30, r24
    3e4c:	e3 57       	subi	r30, 0x73	; 115
    3e4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e50:	80 81       	ld	r24, Z
    3e52:	8b 87       	std	Y+11, r24	; 0x0b
    3e54:	8b 81       	ldd	r24, Y+3	; 0x03
    3e56:	88 2f       	mov	r24, r24
    3e58:	90 e0       	ldi	r25, 0x00	; 0
    3e5a:	fc 01       	movw	r30, r24
    3e5c:	e6 55       	subi	r30, 0x56	; 86
    3e5e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e60:	80 81       	ld	r24, Z
    3e62:	82 95       	swap	r24
    3e64:	8f 70       	andi	r24, 0x0F	; 15
    3e66:	88 2f       	mov	r24, r24
    3e68:	90 e0       	ldi	r25, 0x00	; 0
    3e6a:	81 70       	andi	r24, 0x01	; 1
    3e6c:	90 70       	andi	r25, 0x00	; 0
    3e6e:	1a 86       	std	Y+10, r1	; 0x0a
    3e70:	00 97       	sbiw	r24, 0x00	; 0
    3e72:	11 f4       	brne	.+4      	; 0x3e78 <SEV_SEG_enumNUMDisplay+0x75e>
    3e74:	81 e0       	ldi	r24, 0x01	; 1
    3e76:	8a 87       	std	Y+10, r24	; 0x0a
    3e78:	8c 85       	ldd	r24, Y+12	; 0x0c
    3e7a:	6b 85       	ldd	r22, Y+11	; 0x0b
    3e7c:	4a 85       	ldd	r20, Y+10	; 0x0a
    3e7e:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3e82:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3e84:	89 81       	ldd	r24, Y+1	; 0x01
    3e86:	81 30       	cpi	r24, 0x01	; 1
    3e88:	19 f0       	breq	.+6      	; 0x3e90 <SEV_SEG_enumNUMDisplay+0x776>
    3e8a:	89 81       	ldd	r24, Y+1	; 0x01
    3e8c:	89 8f       	std	Y+25, r24	; 0x19
    3e8e:	9e c0       	rjmp	.+316    	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],5));
    3e90:	8a 81       	ldd	r24, Y+2	; 0x02
    3e92:	48 2f       	mov	r20, r24
    3e94:	50 e0       	ldi	r21, 0x00	; 0
    3e96:	ca 01       	movw	r24, r20
    3e98:	88 0f       	add	r24, r24
    3e9a:	99 1f       	adc	r25, r25
    3e9c:	9c 01       	movw	r18, r24
    3e9e:	22 0f       	add	r18, r18
    3ea0:	33 1f       	adc	r19, r19
    3ea2:	22 0f       	add	r18, r18
    3ea4:	33 1f       	adc	r19, r19
    3ea6:	22 0f       	add	r18, r18
    3ea8:	33 1f       	adc	r19, r19
    3eaa:	82 0f       	add	r24, r18
    3eac:	93 1f       	adc	r25, r19
    3eae:	84 0f       	add	r24, r20
    3eb0:	95 1f       	adc	r25, r21
    3eb2:	fc 01       	movw	r30, r24
    3eb4:	e2 57       	subi	r30, 0x72	; 114
    3eb6:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb8:	80 81       	ld	r24, Z
    3eba:	89 87       	std	Y+9, r24	; 0x09
    3ebc:	8a 81       	ldd	r24, Y+2	; 0x02
    3ebe:	48 2f       	mov	r20, r24
    3ec0:	50 e0       	ldi	r21, 0x00	; 0
    3ec2:	ca 01       	movw	r24, r20
    3ec4:	88 0f       	add	r24, r24
    3ec6:	99 1f       	adc	r25, r25
    3ec8:	9c 01       	movw	r18, r24
    3eca:	22 0f       	add	r18, r18
    3ecc:	33 1f       	adc	r19, r19
    3ece:	22 0f       	add	r18, r18
    3ed0:	33 1f       	adc	r19, r19
    3ed2:	22 0f       	add	r18, r18
    3ed4:	33 1f       	adc	r19, r19
    3ed6:	82 0f       	add	r24, r18
    3ed8:	93 1f       	adc	r25, r19
    3eda:	84 0f       	add	r24, r20
    3edc:	95 1f       	adc	r25, r21
    3ede:	fc 01       	movw	r30, r24
    3ee0:	e1 57       	subi	r30, 0x71	; 113
    3ee2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ee4:	80 81       	ld	r24, Z
    3ee6:	88 87       	std	Y+8, r24	; 0x08
    3ee8:	8b 81       	ldd	r24, Y+3	; 0x03
    3eea:	88 2f       	mov	r24, r24
    3eec:	90 e0       	ldi	r25, 0x00	; 0
    3eee:	fc 01       	movw	r30, r24
    3ef0:	e6 55       	subi	r30, 0x56	; 86
    3ef2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ef4:	80 81       	ld	r24, Z
    3ef6:	82 95       	swap	r24
    3ef8:	86 95       	lsr	r24
    3efa:	87 70       	andi	r24, 0x07	; 7
    3efc:	88 2f       	mov	r24, r24
    3efe:	90 e0       	ldi	r25, 0x00	; 0
    3f00:	81 70       	andi	r24, 0x01	; 1
    3f02:	90 70       	andi	r25, 0x00	; 0
    3f04:	1f 82       	std	Y+7, r1	; 0x07
    3f06:	00 97       	sbiw	r24, 0x00	; 0
    3f08:	11 f4       	brne	.+4      	; 0x3f0e <SEV_SEG_enumNUMDisplay+0x7f4>
    3f0a:	81 e0       	ldi	r24, 0x01	; 1
    3f0c:	8f 83       	std	Y+7, r24	; 0x07
    3f0e:	89 85       	ldd	r24, Y+9	; 0x09
    3f10:	68 85       	ldd	r22, Y+8	; 0x08
    3f12:	4f 81       	ldd	r20, Y+7	; 0x07
    3f14:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3f18:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3f1a:	89 81       	ldd	r24, Y+1	; 0x01
    3f1c:	81 30       	cpi	r24, 0x01	; 1
    3f1e:	19 f0       	breq	.+6      	; 0x3f26 <SEV_SEG_enumNUMDisplay+0x80c>
    3f20:	89 81       	ldd	r24, Y+1	; 0x01
    3f22:	89 8f       	std	Y+25, r24	; 0x19
    3f24:	53 c0       	rjmp	.+166    	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPin,!READ_BIT(SEV_SEG_Au8NumDisplay[Copy_u8Number],6));
    3f26:	8a 81       	ldd	r24, Y+2	; 0x02
    3f28:	48 2f       	mov	r20, r24
    3f2a:	50 e0       	ldi	r21, 0x00	; 0
    3f2c:	ca 01       	movw	r24, r20
    3f2e:	88 0f       	add	r24, r24
    3f30:	99 1f       	adc	r25, r25
    3f32:	9c 01       	movw	r18, r24
    3f34:	22 0f       	add	r18, r18
    3f36:	33 1f       	adc	r19, r19
    3f38:	22 0f       	add	r18, r18
    3f3a:	33 1f       	adc	r19, r19
    3f3c:	22 0f       	add	r18, r18
    3f3e:	33 1f       	adc	r19, r19
    3f40:	82 0f       	add	r24, r18
    3f42:	93 1f       	adc	r25, r19
    3f44:	84 0f       	add	r24, r20
    3f46:	95 1f       	adc	r25, r21
    3f48:	fc 01       	movw	r30, r24
    3f4a:	e0 57       	subi	r30, 0x70	; 112
    3f4c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f4e:	80 81       	ld	r24, Z
    3f50:	8e 83       	std	Y+6, r24	; 0x06
    3f52:	8a 81       	ldd	r24, Y+2	; 0x02
    3f54:	48 2f       	mov	r20, r24
    3f56:	50 e0       	ldi	r21, 0x00	; 0
    3f58:	ca 01       	movw	r24, r20
    3f5a:	88 0f       	add	r24, r24
    3f5c:	99 1f       	adc	r25, r25
    3f5e:	9c 01       	movw	r18, r24
    3f60:	22 0f       	add	r18, r18
    3f62:	33 1f       	adc	r19, r19
    3f64:	22 0f       	add	r18, r18
    3f66:	33 1f       	adc	r19, r19
    3f68:	22 0f       	add	r18, r18
    3f6a:	33 1f       	adc	r19, r19
    3f6c:	82 0f       	add	r24, r18
    3f6e:	93 1f       	adc	r25, r19
    3f70:	84 0f       	add	r24, r20
    3f72:	95 1f       	adc	r25, r21
    3f74:	fc 01       	movw	r30, r24
    3f76:	ef 56       	subi	r30, 0x6F	; 111
    3f78:	ff 4f       	sbci	r31, 0xFF	; 255
    3f7a:	80 81       	ld	r24, Z
    3f7c:	8d 83       	std	Y+5, r24	; 0x05
    3f7e:	8b 81       	ldd	r24, Y+3	; 0x03
    3f80:	88 2f       	mov	r24, r24
    3f82:	90 e0       	ldi	r25, 0x00	; 0
    3f84:	fc 01       	movw	r30, r24
    3f86:	e6 55       	subi	r30, 0x56	; 86
    3f88:	ff 4f       	sbci	r31, 0xFF	; 255
    3f8a:	80 81       	ld	r24, Z
    3f8c:	82 95       	swap	r24
    3f8e:	86 95       	lsr	r24
    3f90:	86 95       	lsr	r24
    3f92:	83 70       	andi	r24, 0x03	; 3
    3f94:	88 2f       	mov	r24, r24
    3f96:	90 e0       	ldi	r25, 0x00	; 0
    3f98:	81 70       	andi	r24, 0x01	; 1
    3f9a:	90 70       	andi	r25, 0x00	; 0
    3f9c:	1c 82       	std	Y+4, r1	; 0x04
    3f9e:	00 97       	sbiw	r24, 0x00	; 0
    3fa0:	11 f4       	brne	.+4      	; 0x3fa6 <SEV_SEG_enumNUMDisplay+0x88c>
    3fa2:	81 e0       	ldi	r24, 0x01	; 1
    3fa4:	8c 83       	std	Y+4, r24	; 0x04
    3fa6:	8e 81       	ldd	r24, Y+6	; 0x06
    3fa8:	6d 81       	ldd	r22, Y+5	; 0x05
    3faa:	4c 81       	ldd	r20, Y+4	; 0x04
    3fac:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    3fb0:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    3fb2:	89 81       	ldd	r24, Y+1	; 0x01
    3fb4:	81 30       	cpi	r24, 0x01	; 1
    3fb6:	41 f0       	breq	.+16     	; 0x3fc8 <SEV_SEG_enumNUMDisplay+0x8ae>
    3fb8:	89 81       	ldd	r24, Y+1	; 0x01
    3fba:	89 8f       	std	Y+25, r24	; 0x19
    3fbc:	07 c0       	rjmp	.+14     	; 0x3fcc <SEV_SEG_enumNUMDisplay+0x8b2>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    3fbe:	83 e0       	ldi	r24, 0x03	; 3
    3fc0:	89 83       	std	Y+1, r24	; 0x01
    3fc2:	02 c0       	rjmp	.+4      	; 0x3fc8 <SEV_SEG_enumNUMDisplay+0x8ae>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    3fc4:	83 e0       	ldi	r24, 0x03	; 3
    3fc6:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    3fc8:	89 81       	ldd	r24, Y+1	; 0x01
    3fca:	89 8f       	std	Y+25, r24	; 0x19
    3fcc:	89 8d       	ldd	r24, Y+25	; 0x19
}
    3fce:	69 96       	adiw	r28, 0x19	; 25
    3fd0:	0f b6       	in	r0, 0x3f	; 63
    3fd2:	f8 94       	cli
    3fd4:	de bf       	out	0x3e, r29	; 62
    3fd6:	0f be       	out	0x3f, r0	; 63
    3fd8:	cd bf       	out	0x3d, r28	; 61
    3fda:	cf 91       	pop	r28
    3fdc:	df 91       	pop	r29
    3fde:	08 95       	ret

00003fe0 <SEV_SEG_enumCMNEnable>:
ES_T SEV_SEG_enumCMNEnable(u8 Copy_u8SegmentID)
{
    3fe0:	df 93       	push	r29
    3fe2:	cf 93       	push	r28
    3fe4:	00 d0       	rcall	.+0      	; 0x3fe6 <SEV_SEG_enumCMNEnable+0x6>
    3fe6:	cd b7       	in	r28, 0x3d	; 61
    3fe8:	de b7       	in	r29, 0x3e	; 62
    3fea:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    3fec:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    3fee:	8a 81       	ldd	r24, Y+2	; 0x02
    3ff0:	82 30       	cpi	r24, 0x02	; 2
    3ff2:	08 f0       	brcs	.+2      	; 0x3ff6 <SEV_SEG_enumCMNEnable+0x16>
    3ff4:	f6 c0       	rjmp	.+492    	; 0x41e2 <SEV_SEG_enumCMNEnable+0x202>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port<=DIO_PORTD
    3ff6:	8a 81       	ldd	r24, Y+2	; 0x02
    3ff8:	48 2f       	mov	r20, r24
    3ffa:	50 e0       	ldi	r21, 0x00	; 0
    3ffc:	ca 01       	movw	r24, r20
    3ffe:	88 0f       	add	r24, r24
    4000:	99 1f       	adc	r25, r25
    4002:	9c 01       	movw	r18, r24
    4004:	22 0f       	add	r18, r18
    4006:	33 1f       	adc	r19, r19
    4008:	22 0f       	add	r18, r18
    400a:	33 1f       	adc	r19, r19
    400c:	22 0f       	add	r18, r18
    400e:	33 1f       	adc	r19, r19
    4010:	82 0f       	add	r24, r18
    4012:	93 1f       	adc	r25, r19
    4014:	84 0f       	add	r24, r20
    4016:	95 1f       	adc	r25, r21
    4018:	fc 01       	movw	r30, r24
    401a:	ee 56       	subi	r30, 0x6E	; 110
    401c:	ff 4f       	sbci	r31, 0xFF	; 255
    401e:	80 81       	ld	r24, Z
    4020:	84 30       	cpi	r24, 0x04	; 4
    4022:	08 f0       	brcs	.+2      	; 0x4026 <SEV_SEG_enumCMNEnable+0x46>
    4024:	ab c0       	rjmp	.+342    	; 0x417c <SEV_SEG_enumCMNEnable+0x19c>
    4026:	8a 81       	ldd	r24, Y+2	; 0x02
    4028:	48 2f       	mov	r20, r24
    402a:	50 e0       	ldi	r21, 0x00	; 0
    402c:	ca 01       	movw	r24, r20
    402e:	88 0f       	add	r24, r24
    4030:	99 1f       	adc	r25, r25
    4032:	9c 01       	movw	r18, r24
    4034:	22 0f       	add	r18, r18
    4036:	33 1f       	adc	r19, r19
    4038:	22 0f       	add	r18, r18
    403a:	33 1f       	adc	r19, r19
    403c:	22 0f       	add	r18, r18
    403e:	33 1f       	adc	r19, r19
    4040:	82 0f       	add	r24, r18
    4042:	93 1f       	adc	r25, r19
    4044:	84 0f       	add	r24, r20
    4046:	95 1f       	adc	r25, r21
    4048:	fc 01       	movw	r30, r24
    404a:	ed 56       	subi	r30, 0x6D	; 109
    404c:	ff 4f       	sbci	r31, 0xFF	; 255
    404e:	80 81       	ld	r24, Z
    4050:	88 30       	cpi	r24, 0x08	; 8
    4052:	08 f0       	brcs	.+2      	; 0x4056 <SEV_SEG_enumCMNEnable+0x76>
    4054:	93 c0       	rjmp	.+294    	; 0x417c <SEV_SEG_enumCMNEnable+0x19c>
			&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin<=DIO_PIN7)
		{
			if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    4056:	8a 81       	ldd	r24, Y+2	; 0x02
    4058:	48 2f       	mov	r20, r24
    405a:	50 e0       	ldi	r21, 0x00	; 0
    405c:	ca 01       	movw	r24, r20
    405e:	88 0f       	add	r24, r24
    4060:	99 1f       	adc	r25, r25
    4062:	9c 01       	movw	r18, r24
    4064:	22 0f       	add	r18, r18
    4066:	33 1f       	adc	r19, r19
    4068:	22 0f       	add	r18, r18
    406a:	33 1f       	adc	r19, r19
    406c:	22 0f       	add	r18, r18
    406e:	33 1f       	adc	r19, r19
    4070:	82 0f       	add	r24, r18
    4072:	93 1f       	adc	r25, r19
    4074:	84 0f       	add	r24, r20
    4076:	95 1f       	adc	r25, r21
    4078:	fc 01       	movw	r30, r24
    407a:	ea 56       	subi	r30, 0x6A	; 106
    407c:	ff 4f       	sbci	r31, 0xFF	; 255
    407e:	80 81       	ld	r24, Z
    4080:	81 30       	cpi	r24, 0x01	; 1
    4082:	89 f5       	brne	.+98     	; 0x40e6 <SEV_SEG_enumCMNEnable+0x106>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,LOW);
    4084:	8a 81       	ldd	r24, Y+2	; 0x02
    4086:	48 2f       	mov	r20, r24
    4088:	50 e0       	ldi	r21, 0x00	; 0
    408a:	ca 01       	movw	r24, r20
    408c:	88 0f       	add	r24, r24
    408e:	99 1f       	adc	r25, r25
    4090:	9c 01       	movw	r18, r24
    4092:	22 0f       	add	r18, r18
    4094:	33 1f       	adc	r19, r19
    4096:	22 0f       	add	r18, r18
    4098:	33 1f       	adc	r19, r19
    409a:	22 0f       	add	r18, r18
    409c:	33 1f       	adc	r19, r19
    409e:	82 0f       	add	r24, r18
    40a0:	93 1f       	adc	r25, r19
    40a2:	84 0f       	add	r24, r20
    40a4:	95 1f       	adc	r25, r21
    40a6:	fc 01       	movw	r30, r24
    40a8:	ee 56       	subi	r30, 0x6E	; 110
    40aa:	ff 4f       	sbci	r31, 0xFF	; 255
    40ac:	60 81       	ld	r22, Z
    40ae:	8a 81       	ldd	r24, Y+2	; 0x02
    40b0:	48 2f       	mov	r20, r24
    40b2:	50 e0       	ldi	r21, 0x00	; 0
    40b4:	ca 01       	movw	r24, r20
    40b6:	88 0f       	add	r24, r24
    40b8:	99 1f       	adc	r25, r25
    40ba:	9c 01       	movw	r18, r24
    40bc:	22 0f       	add	r18, r18
    40be:	33 1f       	adc	r19, r19
    40c0:	22 0f       	add	r18, r18
    40c2:	33 1f       	adc	r19, r19
    40c4:	22 0f       	add	r18, r18
    40c6:	33 1f       	adc	r19, r19
    40c8:	82 0f       	add	r24, r18
    40ca:	93 1f       	adc	r25, r19
    40cc:	84 0f       	add	r24, r20
    40ce:	95 1f       	adc	r25, r21
    40d0:	fc 01       	movw	r30, r24
    40d2:	ed 56       	subi	r30, 0x6D	; 109
    40d4:	ff 4f       	sbci	r31, 0xFF	; 255
    40d6:	90 81       	ld	r25, Z
    40d8:	86 2f       	mov	r24, r22
    40da:	69 2f       	mov	r22, r25
    40dc:	40 e0       	ldi	r20, 0x00	; 0
    40de:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    40e2:	89 83       	std	Y+1, r24	; 0x01
    40e4:	80 c0       	rjmp	.+256    	; 0x41e6 <SEV_SEG_enumCMNEnable+0x206>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    40e6:	8a 81       	ldd	r24, Y+2	; 0x02
    40e8:	48 2f       	mov	r20, r24
    40ea:	50 e0       	ldi	r21, 0x00	; 0
    40ec:	ca 01       	movw	r24, r20
    40ee:	88 0f       	add	r24, r24
    40f0:	99 1f       	adc	r25, r25
    40f2:	9c 01       	movw	r18, r24
    40f4:	22 0f       	add	r18, r18
    40f6:	33 1f       	adc	r19, r19
    40f8:	22 0f       	add	r18, r18
    40fa:	33 1f       	adc	r19, r19
    40fc:	22 0f       	add	r18, r18
    40fe:	33 1f       	adc	r19, r19
    4100:	82 0f       	add	r24, r18
    4102:	93 1f       	adc	r25, r19
    4104:	84 0f       	add	r24, r20
    4106:	95 1f       	adc	r25, r21
    4108:	fc 01       	movw	r30, r24
    410a:	ea 56       	subi	r30, 0x6A	; 106
    410c:	ff 4f       	sbci	r31, 0xFF	; 255
    410e:	80 81       	ld	r24, Z
    4110:	88 23       	and	r24, r24
    4112:	89 f5       	brne	.+98     	; 0x4176 <SEV_SEG_enumCMNEnable+0x196>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,HIGH);
    4114:	8a 81       	ldd	r24, Y+2	; 0x02
    4116:	48 2f       	mov	r20, r24
    4118:	50 e0       	ldi	r21, 0x00	; 0
    411a:	ca 01       	movw	r24, r20
    411c:	88 0f       	add	r24, r24
    411e:	99 1f       	adc	r25, r25
    4120:	9c 01       	movw	r18, r24
    4122:	22 0f       	add	r18, r18
    4124:	33 1f       	adc	r19, r19
    4126:	22 0f       	add	r18, r18
    4128:	33 1f       	adc	r19, r19
    412a:	22 0f       	add	r18, r18
    412c:	33 1f       	adc	r19, r19
    412e:	82 0f       	add	r24, r18
    4130:	93 1f       	adc	r25, r19
    4132:	84 0f       	add	r24, r20
    4134:	95 1f       	adc	r25, r21
    4136:	fc 01       	movw	r30, r24
    4138:	ee 56       	subi	r30, 0x6E	; 110
    413a:	ff 4f       	sbci	r31, 0xFF	; 255
    413c:	60 81       	ld	r22, Z
    413e:	8a 81       	ldd	r24, Y+2	; 0x02
    4140:	48 2f       	mov	r20, r24
    4142:	50 e0       	ldi	r21, 0x00	; 0
    4144:	ca 01       	movw	r24, r20
    4146:	88 0f       	add	r24, r24
    4148:	99 1f       	adc	r25, r25
    414a:	9c 01       	movw	r18, r24
    414c:	22 0f       	add	r18, r18
    414e:	33 1f       	adc	r19, r19
    4150:	22 0f       	add	r18, r18
    4152:	33 1f       	adc	r19, r19
    4154:	22 0f       	add	r18, r18
    4156:	33 1f       	adc	r19, r19
    4158:	82 0f       	add	r24, r18
    415a:	93 1f       	adc	r25, r19
    415c:	84 0f       	add	r24, r20
    415e:	95 1f       	adc	r25, r21
    4160:	fc 01       	movw	r30, r24
    4162:	ed 56       	subi	r30, 0x6D	; 109
    4164:	ff 4f       	sbci	r31, 0xFF	; 255
    4166:	90 81       	ld	r25, Z
    4168:	86 2f       	mov	r24, r22
    416a:	69 2f       	mov	r22, r25
    416c:	41 e0       	ldi	r20, 0x01	; 1
    416e:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4172:	89 83       	std	Y+1, r24	; 0x01
    4174:	38 c0       	rjmp	.+112    	; 0x41e6 <SEV_SEG_enumCMNEnable+0x206>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    4176:	83 e0       	ldi	r24, 0x03	; 3
    4178:	89 83       	std	Y+1, r24	; 0x01
    417a:	35 c0       	rjmp	.+106    	; 0x41e6 <SEV_SEG_enumCMNEnable+0x206>
			}
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    417c:	8a 81       	ldd	r24, Y+2	; 0x02
    417e:	48 2f       	mov	r20, r24
    4180:	50 e0       	ldi	r21, 0x00	; 0
    4182:	ca 01       	movw	r24, r20
    4184:	88 0f       	add	r24, r24
    4186:	99 1f       	adc	r25, r25
    4188:	9c 01       	movw	r18, r24
    418a:	22 0f       	add	r18, r18
    418c:	33 1f       	adc	r19, r19
    418e:	22 0f       	add	r18, r18
    4190:	33 1f       	adc	r19, r19
    4192:	22 0f       	add	r18, r18
    4194:	33 1f       	adc	r19, r19
    4196:	82 0f       	add	r24, r18
    4198:	93 1f       	adc	r25, r19
    419a:	84 0f       	add	r24, r20
    419c:	95 1f       	adc	r25, r21
    419e:	fc 01       	movw	r30, r24
    41a0:	ee 56       	subi	r30, 0x6E	; 110
    41a2:	ff 4f       	sbci	r31, 0xFF	; 255
    41a4:	80 81       	ld	r24, Z
    41a6:	88 30       	cpi	r24, 0x08	; 8
    41a8:	c9 f4       	brne	.+50     	; 0x41dc <SEV_SEG_enumCMNEnable+0x1fc>
    41aa:	8a 81       	ldd	r24, Y+2	; 0x02
    41ac:	48 2f       	mov	r20, r24
    41ae:	50 e0       	ldi	r21, 0x00	; 0
    41b0:	ca 01       	movw	r24, r20
    41b2:	88 0f       	add	r24, r24
    41b4:	99 1f       	adc	r25, r25
    41b6:	9c 01       	movw	r18, r24
    41b8:	22 0f       	add	r18, r18
    41ba:	33 1f       	adc	r19, r19
    41bc:	22 0f       	add	r18, r18
    41be:	33 1f       	adc	r19, r19
    41c0:	22 0f       	add	r18, r18
    41c2:	33 1f       	adc	r19, r19
    41c4:	82 0f       	add	r24, r18
    41c6:	93 1f       	adc	r25, r19
    41c8:	84 0f       	add	r24, r20
    41ca:	95 1f       	adc	r25, r21
    41cc:	fc 01       	movw	r30, r24
    41ce:	ed 56       	subi	r30, 0x6D	; 109
    41d0:	ff 4f       	sbci	r31, 0xFF	; 255
    41d2:	80 81       	ld	r24, Z
    41d4:	88 30       	cpi	r24, 0x08	; 8
    41d6:	11 f4       	brne	.+4      	; 0x41dc <SEV_SEG_enumCMNEnable+0x1fc>
				&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin==NOT_CONNECTED)
		{
			Local_enumErrorState=ES_NOK;
    41d8:	19 82       	std	Y+1, r1	; 0x01
    41da:	05 c0       	rjmp	.+10     	; 0x41e6 <SEV_SEG_enumCMNEnable+0x206>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    41dc:	83 e0       	ldi	r24, 0x03	; 3
    41de:	89 83       	std	Y+1, r24	; 0x01
    41e0:	02 c0       	rjmp	.+4      	; 0x41e6 <SEV_SEG_enumCMNEnable+0x206>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    41e2:	83 e0       	ldi	r24, 0x03	; 3
    41e4:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    41e6:	89 81       	ldd	r24, Y+1	; 0x01
}
    41e8:	0f 90       	pop	r0
    41ea:	0f 90       	pop	r0
    41ec:	cf 91       	pop	r28
    41ee:	df 91       	pop	r29
    41f0:	08 95       	ret

000041f2 <SEV_SEG_enumCMNDisable>:
ES_T SEV_SEG_enumCMNDisable(u8 Copy_u8SegmentID)
{
    41f2:	df 93       	push	r29
    41f4:	cf 93       	push	r28
    41f6:	00 d0       	rcall	.+0      	; 0x41f8 <SEV_SEG_enumCMNDisable+0x6>
    41f8:	cd b7       	in	r28, 0x3d	; 61
    41fa:	de b7       	in	r29, 0x3e	; 62
    41fc:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    41fe:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    4200:	8a 81       	ldd	r24, Y+2	; 0x02
    4202:	82 30       	cpi	r24, 0x02	; 2
    4204:	08 f0       	brcs	.+2      	; 0x4208 <SEV_SEG_enumCMNDisable+0x16>
    4206:	f6 c0       	rjmp	.+492    	; 0x43f4 <SEV_SEG_enumCMNDisable+0x202>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port<=DIO_PORTD
    4208:	8a 81       	ldd	r24, Y+2	; 0x02
    420a:	48 2f       	mov	r20, r24
    420c:	50 e0       	ldi	r21, 0x00	; 0
    420e:	ca 01       	movw	r24, r20
    4210:	88 0f       	add	r24, r24
    4212:	99 1f       	adc	r25, r25
    4214:	9c 01       	movw	r18, r24
    4216:	22 0f       	add	r18, r18
    4218:	33 1f       	adc	r19, r19
    421a:	22 0f       	add	r18, r18
    421c:	33 1f       	adc	r19, r19
    421e:	22 0f       	add	r18, r18
    4220:	33 1f       	adc	r19, r19
    4222:	82 0f       	add	r24, r18
    4224:	93 1f       	adc	r25, r19
    4226:	84 0f       	add	r24, r20
    4228:	95 1f       	adc	r25, r21
    422a:	fc 01       	movw	r30, r24
    422c:	ee 56       	subi	r30, 0x6E	; 110
    422e:	ff 4f       	sbci	r31, 0xFF	; 255
    4230:	80 81       	ld	r24, Z
    4232:	84 30       	cpi	r24, 0x04	; 4
    4234:	08 f0       	brcs	.+2      	; 0x4238 <SEV_SEG_enumCMNDisable+0x46>
    4236:	ab c0       	rjmp	.+342    	; 0x438e <SEV_SEG_enumCMNDisable+0x19c>
    4238:	8a 81       	ldd	r24, Y+2	; 0x02
    423a:	48 2f       	mov	r20, r24
    423c:	50 e0       	ldi	r21, 0x00	; 0
    423e:	ca 01       	movw	r24, r20
    4240:	88 0f       	add	r24, r24
    4242:	99 1f       	adc	r25, r25
    4244:	9c 01       	movw	r18, r24
    4246:	22 0f       	add	r18, r18
    4248:	33 1f       	adc	r19, r19
    424a:	22 0f       	add	r18, r18
    424c:	33 1f       	adc	r19, r19
    424e:	22 0f       	add	r18, r18
    4250:	33 1f       	adc	r19, r19
    4252:	82 0f       	add	r24, r18
    4254:	93 1f       	adc	r25, r19
    4256:	84 0f       	add	r24, r20
    4258:	95 1f       	adc	r25, r21
    425a:	fc 01       	movw	r30, r24
    425c:	ed 56       	subi	r30, 0x6D	; 109
    425e:	ff 4f       	sbci	r31, 0xFF	; 255
    4260:	80 81       	ld	r24, Z
    4262:	88 30       	cpi	r24, 0x08	; 8
    4264:	08 f0       	brcs	.+2      	; 0x4268 <SEV_SEG_enumCMNDisable+0x76>
    4266:	93 c0       	rjmp	.+294    	; 0x438e <SEV_SEG_enumCMNDisable+0x19c>
			&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin<=DIO_PIN7)
		{
			if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    4268:	8a 81       	ldd	r24, Y+2	; 0x02
    426a:	48 2f       	mov	r20, r24
    426c:	50 e0       	ldi	r21, 0x00	; 0
    426e:	ca 01       	movw	r24, r20
    4270:	88 0f       	add	r24, r24
    4272:	99 1f       	adc	r25, r25
    4274:	9c 01       	movw	r18, r24
    4276:	22 0f       	add	r18, r18
    4278:	33 1f       	adc	r19, r19
    427a:	22 0f       	add	r18, r18
    427c:	33 1f       	adc	r19, r19
    427e:	22 0f       	add	r18, r18
    4280:	33 1f       	adc	r19, r19
    4282:	82 0f       	add	r24, r18
    4284:	93 1f       	adc	r25, r19
    4286:	84 0f       	add	r24, r20
    4288:	95 1f       	adc	r25, r21
    428a:	fc 01       	movw	r30, r24
    428c:	ea 56       	subi	r30, 0x6A	; 106
    428e:	ff 4f       	sbci	r31, 0xFF	; 255
    4290:	80 81       	ld	r24, Z
    4292:	81 30       	cpi	r24, 0x01	; 1
    4294:	89 f5       	brne	.+98     	; 0x42f8 <SEV_SEG_enumCMNDisable+0x106>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,HIGH);
    4296:	8a 81       	ldd	r24, Y+2	; 0x02
    4298:	48 2f       	mov	r20, r24
    429a:	50 e0       	ldi	r21, 0x00	; 0
    429c:	ca 01       	movw	r24, r20
    429e:	88 0f       	add	r24, r24
    42a0:	99 1f       	adc	r25, r25
    42a2:	9c 01       	movw	r18, r24
    42a4:	22 0f       	add	r18, r18
    42a6:	33 1f       	adc	r19, r19
    42a8:	22 0f       	add	r18, r18
    42aa:	33 1f       	adc	r19, r19
    42ac:	22 0f       	add	r18, r18
    42ae:	33 1f       	adc	r19, r19
    42b0:	82 0f       	add	r24, r18
    42b2:	93 1f       	adc	r25, r19
    42b4:	84 0f       	add	r24, r20
    42b6:	95 1f       	adc	r25, r21
    42b8:	fc 01       	movw	r30, r24
    42ba:	ee 56       	subi	r30, 0x6E	; 110
    42bc:	ff 4f       	sbci	r31, 0xFF	; 255
    42be:	60 81       	ld	r22, Z
    42c0:	8a 81       	ldd	r24, Y+2	; 0x02
    42c2:	48 2f       	mov	r20, r24
    42c4:	50 e0       	ldi	r21, 0x00	; 0
    42c6:	ca 01       	movw	r24, r20
    42c8:	88 0f       	add	r24, r24
    42ca:	99 1f       	adc	r25, r25
    42cc:	9c 01       	movw	r18, r24
    42ce:	22 0f       	add	r18, r18
    42d0:	33 1f       	adc	r19, r19
    42d2:	22 0f       	add	r18, r18
    42d4:	33 1f       	adc	r19, r19
    42d6:	22 0f       	add	r18, r18
    42d8:	33 1f       	adc	r19, r19
    42da:	82 0f       	add	r24, r18
    42dc:	93 1f       	adc	r25, r19
    42de:	84 0f       	add	r24, r20
    42e0:	95 1f       	adc	r25, r21
    42e2:	fc 01       	movw	r30, r24
    42e4:	ed 56       	subi	r30, 0x6D	; 109
    42e6:	ff 4f       	sbci	r31, 0xFF	; 255
    42e8:	90 81       	ld	r25, Z
    42ea:	86 2f       	mov	r24, r22
    42ec:	69 2f       	mov	r22, r25
    42ee:	41 e0       	ldi	r20, 0x01	; 1
    42f0:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    42f4:	89 83       	std	Y+1, r24	; 0x01
    42f6:	80 c0       	rjmp	.+256    	; 0x43f8 <SEV_SEG_enumCMNDisable+0x206>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    42f8:	8a 81       	ldd	r24, Y+2	; 0x02
    42fa:	48 2f       	mov	r20, r24
    42fc:	50 e0       	ldi	r21, 0x00	; 0
    42fe:	ca 01       	movw	r24, r20
    4300:	88 0f       	add	r24, r24
    4302:	99 1f       	adc	r25, r25
    4304:	9c 01       	movw	r18, r24
    4306:	22 0f       	add	r18, r18
    4308:	33 1f       	adc	r19, r19
    430a:	22 0f       	add	r18, r18
    430c:	33 1f       	adc	r19, r19
    430e:	22 0f       	add	r18, r18
    4310:	33 1f       	adc	r19, r19
    4312:	82 0f       	add	r24, r18
    4314:	93 1f       	adc	r25, r19
    4316:	84 0f       	add	r24, r20
    4318:	95 1f       	adc	r25, r21
    431a:	fc 01       	movw	r30, r24
    431c:	ea 56       	subi	r30, 0x6A	; 106
    431e:	ff 4f       	sbci	r31, 0xFF	; 255
    4320:	80 81       	ld	r24, Z
    4322:	88 23       	and	r24, r24
    4324:	89 f5       	brne	.+98     	; 0x4388 <SEV_SEG_enumCMNDisable+0x196>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,LOW);
    4326:	8a 81       	ldd	r24, Y+2	; 0x02
    4328:	48 2f       	mov	r20, r24
    432a:	50 e0       	ldi	r21, 0x00	; 0
    432c:	ca 01       	movw	r24, r20
    432e:	88 0f       	add	r24, r24
    4330:	99 1f       	adc	r25, r25
    4332:	9c 01       	movw	r18, r24
    4334:	22 0f       	add	r18, r18
    4336:	33 1f       	adc	r19, r19
    4338:	22 0f       	add	r18, r18
    433a:	33 1f       	adc	r19, r19
    433c:	22 0f       	add	r18, r18
    433e:	33 1f       	adc	r19, r19
    4340:	82 0f       	add	r24, r18
    4342:	93 1f       	adc	r25, r19
    4344:	84 0f       	add	r24, r20
    4346:	95 1f       	adc	r25, r21
    4348:	fc 01       	movw	r30, r24
    434a:	ee 56       	subi	r30, 0x6E	; 110
    434c:	ff 4f       	sbci	r31, 0xFF	; 255
    434e:	60 81       	ld	r22, Z
    4350:	8a 81       	ldd	r24, Y+2	; 0x02
    4352:	48 2f       	mov	r20, r24
    4354:	50 e0       	ldi	r21, 0x00	; 0
    4356:	ca 01       	movw	r24, r20
    4358:	88 0f       	add	r24, r24
    435a:	99 1f       	adc	r25, r25
    435c:	9c 01       	movw	r18, r24
    435e:	22 0f       	add	r18, r18
    4360:	33 1f       	adc	r19, r19
    4362:	22 0f       	add	r18, r18
    4364:	33 1f       	adc	r19, r19
    4366:	22 0f       	add	r18, r18
    4368:	33 1f       	adc	r19, r19
    436a:	82 0f       	add	r24, r18
    436c:	93 1f       	adc	r25, r19
    436e:	84 0f       	add	r24, r20
    4370:	95 1f       	adc	r25, r21
    4372:	fc 01       	movw	r30, r24
    4374:	ed 56       	subi	r30, 0x6D	; 109
    4376:	ff 4f       	sbci	r31, 0xFF	; 255
    4378:	90 81       	ld	r25, Z
    437a:	86 2f       	mov	r24, r22
    437c:	69 2f       	mov	r22, r25
    437e:	40 e0       	ldi	r20, 0x00	; 0
    4380:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4384:	89 83       	std	Y+1, r24	; 0x01
    4386:	38 c0       	rjmp	.+112    	; 0x43f8 <SEV_SEG_enumCMNDisable+0x206>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    4388:	83 e0       	ldi	r24, 0x03	; 3
    438a:	89 83       	std	Y+1, r24	; 0x01
    438c:	35 c0       	rjmp	.+106    	; 0x43f8 <SEV_SEG_enumCMNDisable+0x206>
			}
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    438e:	8a 81       	ldd	r24, Y+2	; 0x02
    4390:	48 2f       	mov	r20, r24
    4392:	50 e0       	ldi	r21, 0x00	; 0
    4394:	ca 01       	movw	r24, r20
    4396:	88 0f       	add	r24, r24
    4398:	99 1f       	adc	r25, r25
    439a:	9c 01       	movw	r18, r24
    439c:	22 0f       	add	r18, r18
    439e:	33 1f       	adc	r19, r19
    43a0:	22 0f       	add	r18, r18
    43a2:	33 1f       	adc	r19, r19
    43a4:	22 0f       	add	r18, r18
    43a6:	33 1f       	adc	r19, r19
    43a8:	82 0f       	add	r24, r18
    43aa:	93 1f       	adc	r25, r19
    43ac:	84 0f       	add	r24, r20
    43ae:	95 1f       	adc	r25, r21
    43b0:	fc 01       	movw	r30, r24
    43b2:	ee 56       	subi	r30, 0x6E	; 110
    43b4:	ff 4f       	sbci	r31, 0xFF	; 255
    43b6:	80 81       	ld	r24, Z
    43b8:	88 30       	cpi	r24, 0x08	; 8
    43ba:	c9 f4       	brne	.+50     	; 0x43ee <SEV_SEG_enumCMNDisable+0x1fc>
    43bc:	8a 81       	ldd	r24, Y+2	; 0x02
    43be:	48 2f       	mov	r20, r24
    43c0:	50 e0       	ldi	r21, 0x00	; 0
    43c2:	ca 01       	movw	r24, r20
    43c4:	88 0f       	add	r24, r24
    43c6:	99 1f       	adc	r25, r25
    43c8:	9c 01       	movw	r18, r24
    43ca:	22 0f       	add	r18, r18
    43cc:	33 1f       	adc	r19, r19
    43ce:	22 0f       	add	r18, r18
    43d0:	33 1f       	adc	r19, r19
    43d2:	22 0f       	add	r18, r18
    43d4:	33 1f       	adc	r19, r19
    43d6:	82 0f       	add	r24, r18
    43d8:	93 1f       	adc	r25, r19
    43da:	84 0f       	add	r24, r20
    43dc:	95 1f       	adc	r25, r21
    43de:	fc 01       	movw	r30, r24
    43e0:	ed 56       	subi	r30, 0x6D	; 109
    43e2:	ff 4f       	sbci	r31, 0xFF	; 255
    43e4:	80 81       	ld	r24, Z
    43e6:	88 30       	cpi	r24, 0x08	; 8
    43e8:	11 f4       	brne	.+4      	; 0x43ee <SEV_SEG_enumCMNDisable+0x1fc>
				&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin==NOT_CONNECTED)
		{
			Local_enumErrorState=ES_NOK;
    43ea:	19 82       	std	Y+1, r1	; 0x01
    43ec:	05 c0       	rjmp	.+10     	; 0x43f8 <SEV_SEG_enumCMNDisable+0x206>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    43ee:	83 e0       	ldi	r24, 0x03	; 3
    43f0:	89 83       	std	Y+1, r24	; 0x01
    43f2:	02 c0       	rjmp	.+4      	; 0x43f8 <SEV_SEG_enumCMNDisable+0x206>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    43f4:	83 e0       	ldi	r24, 0x03	; 3
    43f6:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    43f8:	89 81       	ldd	r24, Y+1	; 0x01
}
    43fa:	0f 90       	pop	r0
    43fc:	0f 90       	pop	r0
    43fe:	cf 91       	pop	r28
    4400:	df 91       	pop	r29
    4402:	08 95       	ret

00004404 <SEV_SEG_enumDOTEnable>:
ES_T SEV_SEG_enumDOTEnable(u8 Copy_u8SegmentID)
{
    4404:	df 93       	push	r29
    4406:	cf 93       	push	r28
    4408:	00 d0       	rcall	.+0      	; 0x440a <SEV_SEG_enumDOTEnable+0x6>
    440a:	cd b7       	in	r28, 0x3d	; 61
    440c:	de b7       	in	r29, 0x3e	; 62
    440e:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    4410:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    4412:	8a 81       	ldd	r24, Y+2	; 0x02
    4414:	82 30       	cpi	r24, 0x02	; 2
    4416:	08 f0       	brcs	.+2      	; 0x441a <SEV_SEG_enumDOTEnable+0x16>
    4418:	f6 c0       	rjmp	.+492    	; 0x4606 <SEV_SEG_enumDOTEnable+0x202>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port<=DIO_PORTD
    441a:	8a 81       	ldd	r24, Y+2	; 0x02
    441c:	48 2f       	mov	r20, r24
    441e:	50 e0       	ldi	r21, 0x00	; 0
    4420:	ca 01       	movw	r24, r20
    4422:	88 0f       	add	r24, r24
    4424:	99 1f       	adc	r25, r25
    4426:	9c 01       	movw	r18, r24
    4428:	22 0f       	add	r18, r18
    442a:	33 1f       	adc	r19, r19
    442c:	22 0f       	add	r18, r18
    442e:	33 1f       	adc	r19, r19
    4430:	22 0f       	add	r18, r18
    4432:	33 1f       	adc	r19, r19
    4434:	82 0f       	add	r24, r18
    4436:	93 1f       	adc	r25, r19
    4438:	84 0f       	add	r24, r20
    443a:	95 1f       	adc	r25, r21
    443c:	fc 01       	movw	r30, r24
    443e:	ec 56       	subi	r30, 0x6C	; 108
    4440:	ff 4f       	sbci	r31, 0xFF	; 255
    4442:	80 81       	ld	r24, Z
    4444:	84 30       	cpi	r24, 0x04	; 4
    4446:	08 f0       	brcs	.+2      	; 0x444a <SEV_SEG_enumDOTEnable+0x46>
    4448:	ab c0       	rjmp	.+342    	; 0x45a0 <SEV_SEG_enumDOTEnable+0x19c>
    444a:	8a 81       	ldd	r24, Y+2	; 0x02
    444c:	48 2f       	mov	r20, r24
    444e:	50 e0       	ldi	r21, 0x00	; 0
    4450:	ca 01       	movw	r24, r20
    4452:	88 0f       	add	r24, r24
    4454:	99 1f       	adc	r25, r25
    4456:	9c 01       	movw	r18, r24
    4458:	22 0f       	add	r18, r18
    445a:	33 1f       	adc	r19, r19
    445c:	22 0f       	add	r18, r18
    445e:	33 1f       	adc	r19, r19
    4460:	22 0f       	add	r18, r18
    4462:	33 1f       	adc	r19, r19
    4464:	82 0f       	add	r24, r18
    4466:	93 1f       	adc	r25, r19
    4468:	84 0f       	add	r24, r20
    446a:	95 1f       	adc	r25, r21
    446c:	fc 01       	movw	r30, r24
    446e:	eb 56       	subi	r30, 0x6B	; 107
    4470:	ff 4f       	sbci	r31, 0xFF	; 255
    4472:	80 81       	ld	r24, Z
    4474:	88 30       	cpi	r24, 0x08	; 8
    4476:	08 f0       	brcs	.+2      	; 0x447a <SEV_SEG_enumDOTEnable+0x76>
    4478:	93 c0       	rjmp	.+294    	; 0x45a0 <SEV_SEG_enumDOTEnable+0x19c>
			&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
		{
			if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    447a:	8a 81       	ldd	r24, Y+2	; 0x02
    447c:	48 2f       	mov	r20, r24
    447e:	50 e0       	ldi	r21, 0x00	; 0
    4480:	ca 01       	movw	r24, r20
    4482:	88 0f       	add	r24, r24
    4484:	99 1f       	adc	r25, r25
    4486:	9c 01       	movw	r18, r24
    4488:	22 0f       	add	r18, r18
    448a:	33 1f       	adc	r19, r19
    448c:	22 0f       	add	r18, r18
    448e:	33 1f       	adc	r19, r19
    4490:	22 0f       	add	r18, r18
    4492:	33 1f       	adc	r19, r19
    4494:	82 0f       	add	r24, r18
    4496:	93 1f       	adc	r25, r19
    4498:	84 0f       	add	r24, r20
    449a:	95 1f       	adc	r25, r21
    449c:	fc 01       	movw	r30, r24
    449e:	ea 56       	subi	r30, 0x6A	; 106
    44a0:	ff 4f       	sbci	r31, 0xFF	; 255
    44a2:	80 81       	ld	r24, Z
    44a4:	81 30       	cpi	r24, 0x01	; 1
    44a6:	89 f5       	brne	.+98     	; 0x450a <SEV_SEG_enumDOTEnable+0x106>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin,HIGH);
    44a8:	8a 81       	ldd	r24, Y+2	; 0x02
    44aa:	48 2f       	mov	r20, r24
    44ac:	50 e0       	ldi	r21, 0x00	; 0
    44ae:	ca 01       	movw	r24, r20
    44b0:	88 0f       	add	r24, r24
    44b2:	99 1f       	adc	r25, r25
    44b4:	9c 01       	movw	r18, r24
    44b6:	22 0f       	add	r18, r18
    44b8:	33 1f       	adc	r19, r19
    44ba:	22 0f       	add	r18, r18
    44bc:	33 1f       	adc	r19, r19
    44be:	22 0f       	add	r18, r18
    44c0:	33 1f       	adc	r19, r19
    44c2:	82 0f       	add	r24, r18
    44c4:	93 1f       	adc	r25, r19
    44c6:	84 0f       	add	r24, r20
    44c8:	95 1f       	adc	r25, r21
    44ca:	fc 01       	movw	r30, r24
    44cc:	ec 56       	subi	r30, 0x6C	; 108
    44ce:	ff 4f       	sbci	r31, 0xFF	; 255
    44d0:	60 81       	ld	r22, Z
    44d2:	8a 81       	ldd	r24, Y+2	; 0x02
    44d4:	48 2f       	mov	r20, r24
    44d6:	50 e0       	ldi	r21, 0x00	; 0
    44d8:	ca 01       	movw	r24, r20
    44da:	88 0f       	add	r24, r24
    44dc:	99 1f       	adc	r25, r25
    44de:	9c 01       	movw	r18, r24
    44e0:	22 0f       	add	r18, r18
    44e2:	33 1f       	adc	r19, r19
    44e4:	22 0f       	add	r18, r18
    44e6:	33 1f       	adc	r19, r19
    44e8:	22 0f       	add	r18, r18
    44ea:	33 1f       	adc	r19, r19
    44ec:	82 0f       	add	r24, r18
    44ee:	93 1f       	adc	r25, r19
    44f0:	84 0f       	add	r24, r20
    44f2:	95 1f       	adc	r25, r21
    44f4:	fc 01       	movw	r30, r24
    44f6:	eb 56       	subi	r30, 0x6B	; 107
    44f8:	ff 4f       	sbci	r31, 0xFF	; 255
    44fa:	90 81       	ld	r25, Z
    44fc:	86 2f       	mov	r24, r22
    44fe:	69 2f       	mov	r22, r25
    4500:	41 e0       	ldi	r20, 0x01	; 1
    4502:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4506:	89 83       	std	Y+1, r24	; 0x01
    4508:	80 c0       	rjmp	.+256    	; 0x460a <SEV_SEG_enumDOTEnable+0x206>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    450a:	8a 81       	ldd	r24, Y+2	; 0x02
    450c:	48 2f       	mov	r20, r24
    450e:	50 e0       	ldi	r21, 0x00	; 0
    4510:	ca 01       	movw	r24, r20
    4512:	88 0f       	add	r24, r24
    4514:	99 1f       	adc	r25, r25
    4516:	9c 01       	movw	r18, r24
    4518:	22 0f       	add	r18, r18
    451a:	33 1f       	adc	r19, r19
    451c:	22 0f       	add	r18, r18
    451e:	33 1f       	adc	r19, r19
    4520:	22 0f       	add	r18, r18
    4522:	33 1f       	adc	r19, r19
    4524:	82 0f       	add	r24, r18
    4526:	93 1f       	adc	r25, r19
    4528:	84 0f       	add	r24, r20
    452a:	95 1f       	adc	r25, r21
    452c:	fc 01       	movw	r30, r24
    452e:	ea 56       	subi	r30, 0x6A	; 106
    4530:	ff 4f       	sbci	r31, 0xFF	; 255
    4532:	80 81       	ld	r24, Z
    4534:	88 23       	and	r24, r24
    4536:	89 f5       	brne	.+98     	; 0x459a <SEV_SEG_enumDOTEnable+0x196>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,LOW);
    4538:	8a 81       	ldd	r24, Y+2	; 0x02
    453a:	48 2f       	mov	r20, r24
    453c:	50 e0       	ldi	r21, 0x00	; 0
    453e:	ca 01       	movw	r24, r20
    4540:	88 0f       	add	r24, r24
    4542:	99 1f       	adc	r25, r25
    4544:	9c 01       	movw	r18, r24
    4546:	22 0f       	add	r18, r18
    4548:	33 1f       	adc	r19, r19
    454a:	22 0f       	add	r18, r18
    454c:	33 1f       	adc	r19, r19
    454e:	22 0f       	add	r18, r18
    4550:	33 1f       	adc	r19, r19
    4552:	82 0f       	add	r24, r18
    4554:	93 1f       	adc	r25, r19
    4556:	84 0f       	add	r24, r20
    4558:	95 1f       	adc	r25, r21
    455a:	fc 01       	movw	r30, r24
    455c:	ee 56       	subi	r30, 0x6E	; 110
    455e:	ff 4f       	sbci	r31, 0xFF	; 255
    4560:	60 81       	ld	r22, Z
    4562:	8a 81       	ldd	r24, Y+2	; 0x02
    4564:	48 2f       	mov	r20, r24
    4566:	50 e0       	ldi	r21, 0x00	; 0
    4568:	ca 01       	movw	r24, r20
    456a:	88 0f       	add	r24, r24
    456c:	99 1f       	adc	r25, r25
    456e:	9c 01       	movw	r18, r24
    4570:	22 0f       	add	r18, r18
    4572:	33 1f       	adc	r19, r19
    4574:	22 0f       	add	r18, r18
    4576:	33 1f       	adc	r19, r19
    4578:	22 0f       	add	r18, r18
    457a:	33 1f       	adc	r19, r19
    457c:	82 0f       	add	r24, r18
    457e:	93 1f       	adc	r25, r19
    4580:	84 0f       	add	r24, r20
    4582:	95 1f       	adc	r25, r21
    4584:	fc 01       	movw	r30, r24
    4586:	ed 56       	subi	r30, 0x6D	; 109
    4588:	ff 4f       	sbci	r31, 0xFF	; 255
    458a:	90 81       	ld	r25, Z
    458c:	86 2f       	mov	r24, r22
    458e:	69 2f       	mov	r22, r25
    4590:	40 e0       	ldi	r20, 0x00	; 0
    4592:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4596:	89 83       	std	Y+1, r24	; 0x01
    4598:	38 c0       	rjmp	.+112    	; 0x460a <SEV_SEG_enumDOTEnable+0x206>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    459a:	83 e0       	ldi	r24, 0x03	; 3
    459c:	89 83       	std	Y+1, r24	; 0x01
    459e:	35 c0       	rjmp	.+106    	; 0x460a <SEV_SEG_enumDOTEnable+0x206>
			}
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    45a0:	8a 81       	ldd	r24, Y+2	; 0x02
    45a2:	48 2f       	mov	r20, r24
    45a4:	50 e0       	ldi	r21, 0x00	; 0
    45a6:	ca 01       	movw	r24, r20
    45a8:	88 0f       	add	r24, r24
    45aa:	99 1f       	adc	r25, r25
    45ac:	9c 01       	movw	r18, r24
    45ae:	22 0f       	add	r18, r18
    45b0:	33 1f       	adc	r19, r19
    45b2:	22 0f       	add	r18, r18
    45b4:	33 1f       	adc	r19, r19
    45b6:	22 0f       	add	r18, r18
    45b8:	33 1f       	adc	r19, r19
    45ba:	82 0f       	add	r24, r18
    45bc:	93 1f       	adc	r25, r19
    45be:	84 0f       	add	r24, r20
    45c0:	95 1f       	adc	r25, r21
    45c2:	fc 01       	movw	r30, r24
    45c4:	ee 56       	subi	r30, 0x6E	; 110
    45c6:	ff 4f       	sbci	r31, 0xFF	; 255
    45c8:	80 81       	ld	r24, Z
    45ca:	88 30       	cpi	r24, 0x08	; 8
    45cc:	c9 f4       	brne	.+50     	; 0x4600 <SEV_SEG_enumDOTEnable+0x1fc>
    45ce:	8a 81       	ldd	r24, Y+2	; 0x02
    45d0:	48 2f       	mov	r20, r24
    45d2:	50 e0       	ldi	r21, 0x00	; 0
    45d4:	ca 01       	movw	r24, r20
    45d6:	88 0f       	add	r24, r24
    45d8:	99 1f       	adc	r25, r25
    45da:	9c 01       	movw	r18, r24
    45dc:	22 0f       	add	r18, r18
    45de:	33 1f       	adc	r19, r19
    45e0:	22 0f       	add	r18, r18
    45e2:	33 1f       	adc	r19, r19
    45e4:	22 0f       	add	r18, r18
    45e6:	33 1f       	adc	r19, r19
    45e8:	82 0f       	add	r24, r18
    45ea:	93 1f       	adc	r25, r19
    45ec:	84 0f       	add	r24, r20
    45ee:	95 1f       	adc	r25, r21
    45f0:	fc 01       	movw	r30, r24
    45f2:	ed 56       	subi	r30, 0x6D	; 109
    45f4:	ff 4f       	sbci	r31, 0xFF	; 255
    45f6:	80 81       	ld	r24, Z
    45f8:	88 30       	cpi	r24, 0x08	; 8
    45fa:	11 f4       	brne	.+4      	; 0x4600 <SEV_SEG_enumDOTEnable+0x1fc>
				&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin==NOT_CONNECTED)
		{
			Local_enumErrorState=ES_NOK;
    45fc:	19 82       	std	Y+1, r1	; 0x01
    45fe:	05 c0       	rjmp	.+10     	; 0x460a <SEV_SEG_enumDOTEnable+0x206>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    4600:	83 e0       	ldi	r24, 0x03	; 3
    4602:	89 83       	std	Y+1, r24	; 0x01
    4604:	02 c0       	rjmp	.+4      	; 0x460a <SEV_SEG_enumDOTEnable+0x206>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    4606:	83 e0       	ldi	r24, 0x03	; 3
    4608:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    460a:	89 81       	ldd	r24, Y+1	; 0x01
}
    460c:	0f 90       	pop	r0
    460e:	0f 90       	pop	r0
    4610:	cf 91       	pop	r28
    4612:	df 91       	pop	r29
    4614:	08 95       	ret

00004616 <SEV_SEG_enumDOTDisable>:
ES_T SEV_SEG_enumDOTDisable(u8 Copy_u8SegmentID)
{
    4616:	df 93       	push	r29
    4618:	cf 93       	push	r28
    461a:	00 d0       	rcall	.+0      	; 0x461c <SEV_SEG_enumDOTDisable+0x6>
    461c:	cd b7       	in	r28, 0x3d	; 61
    461e:	de b7       	in	r29, 0x3e	; 62
    4620:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    4622:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    4624:	8a 81       	ldd	r24, Y+2	; 0x02
    4626:	82 30       	cpi	r24, 0x02	; 2
    4628:	08 f0       	brcs	.+2      	; 0x462c <SEV_SEG_enumDOTDisable+0x16>
    462a:	f6 c0       	rjmp	.+492    	; 0x4818 <SEV_SEG_enumDOTDisable+0x202>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port<=DIO_PORTD
    462c:	8a 81       	ldd	r24, Y+2	; 0x02
    462e:	48 2f       	mov	r20, r24
    4630:	50 e0       	ldi	r21, 0x00	; 0
    4632:	ca 01       	movw	r24, r20
    4634:	88 0f       	add	r24, r24
    4636:	99 1f       	adc	r25, r25
    4638:	9c 01       	movw	r18, r24
    463a:	22 0f       	add	r18, r18
    463c:	33 1f       	adc	r19, r19
    463e:	22 0f       	add	r18, r18
    4640:	33 1f       	adc	r19, r19
    4642:	22 0f       	add	r18, r18
    4644:	33 1f       	adc	r19, r19
    4646:	82 0f       	add	r24, r18
    4648:	93 1f       	adc	r25, r19
    464a:	84 0f       	add	r24, r20
    464c:	95 1f       	adc	r25, r21
    464e:	fc 01       	movw	r30, r24
    4650:	ec 56       	subi	r30, 0x6C	; 108
    4652:	ff 4f       	sbci	r31, 0xFF	; 255
    4654:	80 81       	ld	r24, Z
    4656:	84 30       	cpi	r24, 0x04	; 4
    4658:	08 f0       	brcs	.+2      	; 0x465c <SEV_SEG_enumDOTDisable+0x46>
    465a:	ab c0       	rjmp	.+342    	; 0x47b2 <SEV_SEG_enumDOTDisable+0x19c>
    465c:	8a 81       	ldd	r24, Y+2	; 0x02
    465e:	48 2f       	mov	r20, r24
    4660:	50 e0       	ldi	r21, 0x00	; 0
    4662:	ca 01       	movw	r24, r20
    4664:	88 0f       	add	r24, r24
    4666:	99 1f       	adc	r25, r25
    4668:	9c 01       	movw	r18, r24
    466a:	22 0f       	add	r18, r18
    466c:	33 1f       	adc	r19, r19
    466e:	22 0f       	add	r18, r18
    4670:	33 1f       	adc	r19, r19
    4672:	22 0f       	add	r18, r18
    4674:	33 1f       	adc	r19, r19
    4676:	82 0f       	add	r24, r18
    4678:	93 1f       	adc	r25, r19
    467a:	84 0f       	add	r24, r20
    467c:	95 1f       	adc	r25, r21
    467e:	fc 01       	movw	r30, r24
    4680:	eb 56       	subi	r30, 0x6B	; 107
    4682:	ff 4f       	sbci	r31, 0xFF	; 255
    4684:	80 81       	ld	r24, Z
    4686:	88 30       	cpi	r24, 0x08	; 8
    4688:	08 f0       	brcs	.+2      	; 0x468c <SEV_SEG_enumDOTDisable+0x76>
    468a:	93 c0       	rjmp	.+294    	; 0x47b2 <SEV_SEG_enumDOTDisable+0x19c>
			&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
		{
			if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    468c:	8a 81       	ldd	r24, Y+2	; 0x02
    468e:	48 2f       	mov	r20, r24
    4690:	50 e0       	ldi	r21, 0x00	; 0
    4692:	ca 01       	movw	r24, r20
    4694:	88 0f       	add	r24, r24
    4696:	99 1f       	adc	r25, r25
    4698:	9c 01       	movw	r18, r24
    469a:	22 0f       	add	r18, r18
    469c:	33 1f       	adc	r19, r19
    469e:	22 0f       	add	r18, r18
    46a0:	33 1f       	adc	r19, r19
    46a2:	22 0f       	add	r18, r18
    46a4:	33 1f       	adc	r19, r19
    46a6:	82 0f       	add	r24, r18
    46a8:	93 1f       	adc	r25, r19
    46aa:	84 0f       	add	r24, r20
    46ac:	95 1f       	adc	r25, r21
    46ae:	fc 01       	movw	r30, r24
    46b0:	ea 56       	subi	r30, 0x6A	; 106
    46b2:	ff 4f       	sbci	r31, 0xFF	; 255
    46b4:	80 81       	ld	r24, Z
    46b6:	81 30       	cpi	r24, 0x01	; 1
    46b8:	89 f5       	brne	.+98     	; 0x471c <SEV_SEG_enumDOTDisable+0x106>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin,LOW);
    46ba:	8a 81       	ldd	r24, Y+2	; 0x02
    46bc:	48 2f       	mov	r20, r24
    46be:	50 e0       	ldi	r21, 0x00	; 0
    46c0:	ca 01       	movw	r24, r20
    46c2:	88 0f       	add	r24, r24
    46c4:	99 1f       	adc	r25, r25
    46c6:	9c 01       	movw	r18, r24
    46c8:	22 0f       	add	r18, r18
    46ca:	33 1f       	adc	r19, r19
    46cc:	22 0f       	add	r18, r18
    46ce:	33 1f       	adc	r19, r19
    46d0:	22 0f       	add	r18, r18
    46d2:	33 1f       	adc	r19, r19
    46d4:	82 0f       	add	r24, r18
    46d6:	93 1f       	adc	r25, r19
    46d8:	84 0f       	add	r24, r20
    46da:	95 1f       	adc	r25, r21
    46dc:	fc 01       	movw	r30, r24
    46de:	ec 56       	subi	r30, 0x6C	; 108
    46e0:	ff 4f       	sbci	r31, 0xFF	; 255
    46e2:	60 81       	ld	r22, Z
    46e4:	8a 81       	ldd	r24, Y+2	; 0x02
    46e6:	48 2f       	mov	r20, r24
    46e8:	50 e0       	ldi	r21, 0x00	; 0
    46ea:	ca 01       	movw	r24, r20
    46ec:	88 0f       	add	r24, r24
    46ee:	99 1f       	adc	r25, r25
    46f0:	9c 01       	movw	r18, r24
    46f2:	22 0f       	add	r18, r18
    46f4:	33 1f       	adc	r19, r19
    46f6:	22 0f       	add	r18, r18
    46f8:	33 1f       	adc	r19, r19
    46fa:	22 0f       	add	r18, r18
    46fc:	33 1f       	adc	r19, r19
    46fe:	82 0f       	add	r24, r18
    4700:	93 1f       	adc	r25, r19
    4702:	84 0f       	add	r24, r20
    4704:	95 1f       	adc	r25, r21
    4706:	fc 01       	movw	r30, r24
    4708:	eb 56       	subi	r30, 0x6B	; 107
    470a:	ff 4f       	sbci	r31, 0xFF	; 255
    470c:	90 81       	ld	r25, Z
    470e:	86 2f       	mov	r24, r22
    4710:	69 2f       	mov	r22, r25
    4712:	40 e0       	ldi	r20, 0x00	; 0
    4714:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4718:	89 83       	std	Y+1, r24	; 0x01
    471a:	80 c0       	rjmp	.+256    	; 0x481c <SEV_SEG_enumDOTDisable+0x206>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    471c:	8a 81       	ldd	r24, Y+2	; 0x02
    471e:	48 2f       	mov	r20, r24
    4720:	50 e0       	ldi	r21, 0x00	; 0
    4722:	ca 01       	movw	r24, r20
    4724:	88 0f       	add	r24, r24
    4726:	99 1f       	adc	r25, r25
    4728:	9c 01       	movw	r18, r24
    472a:	22 0f       	add	r18, r18
    472c:	33 1f       	adc	r19, r19
    472e:	22 0f       	add	r18, r18
    4730:	33 1f       	adc	r19, r19
    4732:	22 0f       	add	r18, r18
    4734:	33 1f       	adc	r19, r19
    4736:	82 0f       	add	r24, r18
    4738:	93 1f       	adc	r25, r19
    473a:	84 0f       	add	r24, r20
    473c:	95 1f       	adc	r25, r21
    473e:	fc 01       	movw	r30, r24
    4740:	ea 56       	subi	r30, 0x6A	; 106
    4742:	ff 4f       	sbci	r31, 0xFF	; 255
    4744:	80 81       	ld	r24, Z
    4746:	88 23       	and	r24, r24
    4748:	89 f5       	brne	.+98     	; 0x47ac <SEV_SEG_enumDOTDisable+0x196>
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin,HIGH);
    474a:	8a 81       	ldd	r24, Y+2	; 0x02
    474c:	48 2f       	mov	r20, r24
    474e:	50 e0       	ldi	r21, 0x00	; 0
    4750:	ca 01       	movw	r24, r20
    4752:	88 0f       	add	r24, r24
    4754:	99 1f       	adc	r25, r25
    4756:	9c 01       	movw	r18, r24
    4758:	22 0f       	add	r18, r18
    475a:	33 1f       	adc	r19, r19
    475c:	22 0f       	add	r18, r18
    475e:	33 1f       	adc	r19, r19
    4760:	22 0f       	add	r18, r18
    4762:	33 1f       	adc	r19, r19
    4764:	82 0f       	add	r24, r18
    4766:	93 1f       	adc	r25, r19
    4768:	84 0f       	add	r24, r20
    476a:	95 1f       	adc	r25, r21
    476c:	fc 01       	movw	r30, r24
    476e:	ee 56       	subi	r30, 0x6E	; 110
    4770:	ff 4f       	sbci	r31, 0xFF	; 255
    4772:	60 81       	ld	r22, Z
    4774:	8a 81       	ldd	r24, Y+2	; 0x02
    4776:	48 2f       	mov	r20, r24
    4778:	50 e0       	ldi	r21, 0x00	; 0
    477a:	ca 01       	movw	r24, r20
    477c:	88 0f       	add	r24, r24
    477e:	99 1f       	adc	r25, r25
    4780:	9c 01       	movw	r18, r24
    4782:	22 0f       	add	r18, r18
    4784:	33 1f       	adc	r19, r19
    4786:	22 0f       	add	r18, r18
    4788:	33 1f       	adc	r19, r19
    478a:	22 0f       	add	r18, r18
    478c:	33 1f       	adc	r19, r19
    478e:	82 0f       	add	r24, r18
    4790:	93 1f       	adc	r25, r19
    4792:	84 0f       	add	r24, r20
    4794:	95 1f       	adc	r25, r21
    4796:	fc 01       	movw	r30, r24
    4798:	ed 56       	subi	r30, 0x6D	; 109
    479a:	ff 4f       	sbci	r31, 0xFF	; 255
    479c:	90 81       	ld	r25, Z
    479e:	86 2f       	mov	r24, r22
    47a0:	69 2f       	mov	r22, r25
    47a2:	41 e0       	ldi	r20, 0x01	; 1
    47a4:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    47a8:	89 83       	std	Y+1, r24	; 0x01
    47aa:	38 c0       	rjmp	.+112    	; 0x481c <SEV_SEG_enumDOTDisable+0x206>
			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    47ac:	83 e0       	ldi	r24, 0x03	; 3
    47ae:	89 83       	std	Y+1, r24	; 0x01
    47b0:	35 c0       	rjmp	.+106    	; 0x481c <SEV_SEG_enumDOTDisable+0x206>
			}
		}
		else if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Port==NOT_CONNECTED
    47b2:	8a 81       	ldd	r24, Y+2	; 0x02
    47b4:	48 2f       	mov	r20, r24
    47b6:	50 e0       	ldi	r21, 0x00	; 0
    47b8:	ca 01       	movw	r24, r20
    47ba:	88 0f       	add	r24, r24
    47bc:	99 1f       	adc	r25, r25
    47be:	9c 01       	movw	r18, r24
    47c0:	22 0f       	add	r18, r18
    47c2:	33 1f       	adc	r19, r19
    47c4:	22 0f       	add	r18, r18
    47c6:	33 1f       	adc	r19, r19
    47c8:	22 0f       	add	r18, r18
    47ca:	33 1f       	adc	r19, r19
    47cc:	82 0f       	add	r24, r18
    47ce:	93 1f       	adc	r25, r19
    47d0:	84 0f       	add	r24, r20
    47d2:	95 1f       	adc	r25, r21
    47d4:	fc 01       	movw	r30, r24
    47d6:	ee 56       	subi	r30, 0x6E	; 110
    47d8:	ff 4f       	sbci	r31, 0xFF	; 255
    47da:	80 81       	ld	r24, Z
    47dc:	88 30       	cpi	r24, 0x08	; 8
    47de:	c9 f4       	brne	.+50     	; 0x4812 <SEV_SEG_enumDOTDisable+0x1fc>
    47e0:	8a 81       	ldd	r24, Y+2	; 0x02
    47e2:	48 2f       	mov	r20, r24
    47e4:	50 e0       	ldi	r21, 0x00	; 0
    47e6:	ca 01       	movw	r24, r20
    47e8:	88 0f       	add	r24, r24
    47ea:	99 1f       	adc	r25, r25
    47ec:	9c 01       	movw	r18, r24
    47ee:	22 0f       	add	r18, r18
    47f0:	33 1f       	adc	r19, r19
    47f2:	22 0f       	add	r18, r18
    47f4:	33 1f       	adc	r19, r19
    47f6:	22 0f       	add	r18, r18
    47f8:	33 1f       	adc	r19, r19
    47fa:	82 0f       	add	r24, r18
    47fc:	93 1f       	adc	r25, r19
    47fe:	84 0f       	add	r24, r20
    4800:	95 1f       	adc	r25, r21
    4802:	fc 01       	movw	r30, r24
    4804:	ed 56       	subi	r30, 0x6D	; 109
    4806:	ff 4f       	sbci	r31, 0xFF	; 255
    4808:	80 81       	ld	r24, Z
    480a:	88 30       	cpi	r24, 0x08	; 8
    480c:	11 f4       	brne	.+4      	; 0x4812 <SEV_SEG_enumDOTDisable+0x1fc>
				&&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CMN_Pin==NOT_CONNECTED)
		{
			Local_enumErrorState=ES_NOK;
    480e:	19 82       	std	Y+1, r1	; 0x01
    4810:	05 c0       	rjmp	.+10     	; 0x481c <SEV_SEG_enumDOTDisable+0x206>
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    4812:	83 e0       	ldi	r24, 0x03	; 3
    4814:	89 83       	std	Y+1, r24	; 0x01
    4816:	02 c0       	rjmp	.+4      	; 0x481c <SEV_SEG_enumDOTDisable+0x206>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    4818:	83 e0       	ldi	r24, 0x03	; 3
    481a:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    481c:	89 81       	ldd	r24, Y+1	; 0x01
}
    481e:	0f 90       	pop	r0
    4820:	0f 90       	pop	r0
    4822:	cf 91       	pop	r28
    4824:	df 91       	pop	r29
    4826:	08 95       	ret

00004828 <SEV_SEG_enumSEGClear>:
ES_T SEV_SEG_enumSEGClear(u8 Copy_u8SegmentID)
{
    4828:	df 93       	push	r29
    482a:	cf 93       	push	r28
    482c:	00 d0       	rcall	.+0      	; 0x482e <SEV_SEG_enumSEGClear+0x6>
    482e:	0f 92       	push	r0
    4830:	cd b7       	in	r28, 0x3d	; 61
    4832:	de b7       	in	r29, 0x3e	; 62
    4834:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
    4836:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8SegmentID<SEV_SEG_NUM)
    4838:	8a 81       	ldd	r24, Y+2	; 0x02
    483a:	82 30       	cpi	r24, 0x02	; 2
    483c:	08 f0       	brcs	.+2      	; 0x4840 <SEV_SEG_enumSEGClear+0x18>
    483e:	55 c4       	rjmp	.+2218   	; 0x50ea <SEV_SEG_enumSEGClear+0x8c2>
	{
		if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_CATHODE)
    4840:	8a 81       	ldd	r24, Y+2	; 0x02
    4842:	48 2f       	mov	r20, r24
    4844:	50 e0       	ldi	r21, 0x00	; 0
    4846:	ca 01       	movw	r24, r20
    4848:	88 0f       	add	r24, r24
    484a:	99 1f       	adc	r25, r25
    484c:	9c 01       	movw	r18, r24
    484e:	22 0f       	add	r18, r18
    4850:	33 1f       	adc	r19, r19
    4852:	22 0f       	add	r18, r18
    4854:	33 1f       	adc	r19, r19
    4856:	22 0f       	add	r18, r18
    4858:	33 1f       	adc	r19, r19
    485a:	82 0f       	add	r24, r18
    485c:	93 1f       	adc	r25, r19
    485e:	84 0f       	add	r24, r20
    4860:	95 1f       	adc	r25, r21
    4862:	fc 01       	movw	r30, r24
    4864:	ea 56       	subi	r30, 0x6A	; 106
    4866:	ff 4f       	sbci	r31, 0xFF	; 255
    4868:	80 81       	ld	r24, Z
    486a:	81 30       	cpi	r24, 0x01	; 1
    486c:	09 f0       	breq	.+2      	; 0x4870 <SEV_SEG_enumSEGClear+0x48>
    486e:	12 c2       	rjmp	.+1060   	; 0x4c94 <SEV_SEG_enumSEGClear+0x46c>
		{
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APin,LOW);
    4870:	8a 81       	ldd	r24, Y+2	; 0x02
    4872:	48 2f       	mov	r20, r24
    4874:	50 e0       	ldi	r21, 0x00	; 0
    4876:	ca 01       	movw	r24, r20
    4878:	88 0f       	add	r24, r24
    487a:	99 1f       	adc	r25, r25
    487c:	9c 01       	movw	r18, r24
    487e:	22 0f       	add	r18, r18
    4880:	33 1f       	adc	r19, r19
    4882:	22 0f       	add	r18, r18
    4884:	33 1f       	adc	r19, r19
    4886:	22 0f       	add	r18, r18
    4888:	33 1f       	adc	r19, r19
    488a:	82 0f       	add	r24, r18
    488c:	93 1f       	adc	r25, r19
    488e:	84 0f       	add	r24, r20
    4890:	95 1f       	adc	r25, r21
    4892:	fc 01       	movw	r30, r24
    4894:	ec 57       	subi	r30, 0x7C	; 124
    4896:	ff 4f       	sbci	r31, 0xFF	; 255
    4898:	60 81       	ld	r22, Z
    489a:	8a 81       	ldd	r24, Y+2	; 0x02
    489c:	48 2f       	mov	r20, r24
    489e:	50 e0       	ldi	r21, 0x00	; 0
    48a0:	ca 01       	movw	r24, r20
    48a2:	88 0f       	add	r24, r24
    48a4:	99 1f       	adc	r25, r25
    48a6:	9c 01       	movw	r18, r24
    48a8:	22 0f       	add	r18, r18
    48aa:	33 1f       	adc	r19, r19
    48ac:	22 0f       	add	r18, r18
    48ae:	33 1f       	adc	r19, r19
    48b0:	22 0f       	add	r18, r18
    48b2:	33 1f       	adc	r19, r19
    48b4:	82 0f       	add	r24, r18
    48b6:	93 1f       	adc	r25, r19
    48b8:	84 0f       	add	r24, r20
    48ba:	95 1f       	adc	r25, r21
    48bc:	fc 01       	movw	r30, r24
    48be:	eb 57       	subi	r30, 0x7B	; 123
    48c0:	ff 4f       	sbci	r31, 0xFF	; 255
    48c2:	90 81       	ld	r25, Z
    48c4:	86 2f       	mov	r24, r22
    48c6:	69 2f       	mov	r22, r25
    48c8:	40 e0       	ldi	r20, 0x00	; 0
    48ca:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    48ce:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    48d0:	89 81       	ldd	r24, Y+1	; 0x01
    48d2:	81 30       	cpi	r24, 0x01	; 1
    48d4:	19 f0       	breq	.+6      	; 0x48dc <SEV_SEG_enumSEGClear+0xb4>
    48d6:	89 81       	ldd	r24, Y+1	; 0x01
    48d8:	8b 83       	std	Y+3, r24	; 0x03
    48da:	0b c4       	rjmp	.+2070   	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPin,LOW);
    48dc:	8a 81       	ldd	r24, Y+2	; 0x02
    48de:	48 2f       	mov	r20, r24
    48e0:	50 e0       	ldi	r21, 0x00	; 0
    48e2:	ca 01       	movw	r24, r20
    48e4:	88 0f       	add	r24, r24
    48e6:	99 1f       	adc	r25, r25
    48e8:	9c 01       	movw	r18, r24
    48ea:	22 0f       	add	r18, r18
    48ec:	33 1f       	adc	r19, r19
    48ee:	22 0f       	add	r18, r18
    48f0:	33 1f       	adc	r19, r19
    48f2:	22 0f       	add	r18, r18
    48f4:	33 1f       	adc	r19, r19
    48f6:	82 0f       	add	r24, r18
    48f8:	93 1f       	adc	r25, r19
    48fa:	84 0f       	add	r24, r20
    48fc:	95 1f       	adc	r25, r21
    48fe:	fc 01       	movw	r30, r24
    4900:	ea 57       	subi	r30, 0x7A	; 122
    4902:	ff 4f       	sbci	r31, 0xFF	; 255
    4904:	60 81       	ld	r22, Z
    4906:	8a 81       	ldd	r24, Y+2	; 0x02
    4908:	48 2f       	mov	r20, r24
    490a:	50 e0       	ldi	r21, 0x00	; 0
    490c:	ca 01       	movw	r24, r20
    490e:	88 0f       	add	r24, r24
    4910:	99 1f       	adc	r25, r25
    4912:	9c 01       	movw	r18, r24
    4914:	22 0f       	add	r18, r18
    4916:	33 1f       	adc	r19, r19
    4918:	22 0f       	add	r18, r18
    491a:	33 1f       	adc	r19, r19
    491c:	22 0f       	add	r18, r18
    491e:	33 1f       	adc	r19, r19
    4920:	82 0f       	add	r24, r18
    4922:	93 1f       	adc	r25, r19
    4924:	84 0f       	add	r24, r20
    4926:	95 1f       	adc	r25, r21
    4928:	fc 01       	movw	r30, r24
    492a:	e9 57       	subi	r30, 0x79	; 121
    492c:	ff 4f       	sbci	r31, 0xFF	; 255
    492e:	90 81       	ld	r25, Z
    4930:	86 2f       	mov	r24, r22
    4932:	69 2f       	mov	r22, r25
    4934:	40 e0       	ldi	r20, 0x00	; 0
    4936:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    493a:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    493c:	89 81       	ldd	r24, Y+1	; 0x01
    493e:	81 30       	cpi	r24, 0x01	; 1
    4940:	19 f0       	breq	.+6      	; 0x4948 <SEV_SEG_enumSEGClear+0x120>
    4942:	89 81       	ldd	r24, Y+1	; 0x01
    4944:	8b 83       	std	Y+3, r24	; 0x03
    4946:	d5 c3       	rjmp	.+1962   	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPin,LOW);
    4948:	8a 81       	ldd	r24, Y+2	; 0x02
    494a:	48 2f       	mov	r20, r24
    494c:	50 e0       	ldi	r21, 0x00	; 0
    494e:	ca 01       	movw	r24, r20
    4950:	88 0f       	add	r24, r24
    4952:	99 1f       	adc	r25, r25
    4954:	9c 01       	movw	r18, r24
    4956:	22 0f       	add	r18, r18
    4958:	33 1f       	adc	r19, r19
    495a:	22 0f       	add	r18, r18
    495c:	33 1f       	adc	r19, r19
    495e:	22 0f       	add	r18, r18
    4960:	33 1f       	adc	r19, r19
    4962:	82 0f       	add	r24, r18
    4964:	93 1f       	adc	r25, r19
    4966:	84 0f       	add	r24, r20
    4968:	95 1f       	adc	r25, r21
    496a:	fc 01       	movw	r30, r24
    496c:	e8 57       	subi	r30, 0x78	; 120
    496e:	ff 4f       	sbci	r31, 0xFF	; 255
    4970:	60 81       	ld	r22, Z
    4972:	8a 81       	ldd	r24, Y+2	; 0x02
    4974:	48 2f       	mov	r20, r24
    4976:	50 e0       	ldi	r21, 0x00	; 0
    4978:	ca 01       	movw	r24, r20
    497a:	88 0f       	add	r24, r24
    497c:	99 1f       	adc	r25, r25
    497e:	9c 01       	movw	r18, r24
    4980:	22 0f       	add	r18, r18
    4982:	33 1f       	adc	r19, r19
    4984:	22 0f       	add	r18, r18
    4986:	33 1f       	adc	r19, r19
    4988:	22 0f       	add	r18, r18
    498a:	33 1f       	adc	r19, r19
    498c:	82 0f       	add	r24, r18
    498e:	93 1f       	adc	r25, r19
    4990:	84 0f       	add	r24, r20
    4992:	95 1f       	adc	r25, r21
    4994:	fc 01       	movw	r30, r24
    4996:	e7 57       	subi	r30, 0x77	; 119
    4998:	ff 4f       	sbci	r31, 0xFF	; 255
    499a:	90 81       	ld	r25, Z
    499c:	86 2f       	mov	r24, r22
    499e:	69 2f       	mov	r22, r25
    49a0:	40 e0       	ldi	r20, 0x00	; 0
    49a2:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    49a6:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    49a8:	89 81       	ldd	r24, Y+1	; 0x01
    49aa:	81 30       	cpi	r24, 0x01	; 1
    49ac:	19 f0       	breq	.+6      	; 0x49b4 <SEV_SEG_enumSEGClear+0x18c>
    49ae:	89 81       	ldd	r24, Y+1	; 0x01
    49b0:	8b 83       	std	Y+3, r24	; 0x03
    49b2:	9f c3       	rjmp	.+1854   	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPin,LOW);
    49b4:	8a 81       	ldd	r24, Y+2	; 0x02
    49b6:	48 2f       	mov	r20, r24
    49b8:	50 e0       	ldi	r21, 0x00	; 0
    49ba:	ca 01       	movw	r24, r20
    49bc:	88 0f       	add	r24, r24
    49be:	99 1f       	adc	r25, r25
    49c0:	9c 01       	movw	r18, r24
    49c2:	22 0f       	add	r18, r18
    49c4:	33 1f       	adc	r19, r19
    49c6:	22 0f       	add	r18, r18
    49c8:	33 1f       	adc	r19, r19
    49ca:	22 0f       	add	r18, r18
    49cc:	33 1f       	adc	r19, r19
    49ce:	82 0f       	add	r24, r18
    49d0:	93 1f       	adc	r25, r19
    49d2:	84 0f       	add	r24, r20
    49d4:	95 1f       	adc	r25, r21
    49d6:	fc 01       	movw	r30, r24
    49d8:	e6 57       	subi	r30, 0x76	; 118
    49da:	ff 4f       	sbci	r31, 0xFF	; 255
    49dc:	60 81       	ld	r22, Z
    49de:	8a 81       	ldd	r24, Y+2	; 0x02
    49e0:	48 2f       	mov	r20, r24
    49e2:	50 e0       	ldi	r21, 0x00	; 0
    49e4:	ca 01       	movw	r24, r20
    49e6:	88 0f       	add	r24, r24
    49e8:	99 1f       	adc	r25, r25
    49ea:	9c 01       	movw	r18, r24
    49ec:	22 0f       	add	r18, r18
    49ee:	33 1f       	adc	r19, r19
    49f0:	22 0f       	add	r18, r18
    49f2:	33 1f       	adc	r19, r19
    49f4:	22 0f       	add	r18, r18
    49f6:	33 1f       	adc	r19, r19
    49f8:	82 0f       	add	r24, r18
    49fa:	93 1f       	adc	r25, r19
    49fc:	84 0f       	add	r24, r20
    49fe:	95 1f       	adc	r25, r21
    4a00:	fc 01       	movw	r30, r24
    4a02:	e5 57       	subi	r30, 0x75	; 117
    4a04:	ff 4f       	sbci	r31, 0xFF	; 255
    4a06:	90 81       	ld	r25, Z
    4a08:	86 2f       	mov	r24, r22
    4a0a:	69 2f       	mov	r22, r25
    4a0c:	40 e0       	ldi	r20, 0x00	; 0
    4a0e:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4a12:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4a14:	89 81       	ldd	r24, Y+1	; 0x01
    4a16:	81 30       	cpi	r24, 0x01	; 1
    4a18:	19 f0       	breq	.+6      	; 0x4a20 <SEV_SEG_enumSEGClear+0x1f8>
    4a1a:	89 81       	ldd	r24, Y+1	; 0x01
    4a1c:	8b 83       	std	Y+3, r24	; 0x03
    4a1e:	69 c3       	rjmp	.+1746   	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPin,LOW);
    4a20:	8a 81       	ldd	r24, Y+2	; 0x02
    4a22:	48 2f       	mov	r20, r24
    4a24:	50 e0       	ldi	r21, 0x00	; 0
    4a26:	ca 01       	movw	r24, r20
    4a28:	88 0f       	add	r24, r24
    4a2a:	99 1f       	adc	r25, r25
    4a2c:	9c 01       	movw	r18, r24
    4a2e:	22 0f       	add	r18, r18
    4a30:	33 1f       	adc	r19, r19
    4a32:	22 0f       	add	r18, r18
    4a34:	33 1f       	adc	r19, r19
    4a36:	22 0f       	add	r18, r18
    4a38:	33 1f       	adc	r19, r19
    4a3a:	82 0f       	add	r24, r18
    4a3c:	93 1f       	adc	r25, r19
    4a3e:	84 0f       	add	r24, r20
    4a40:	95 1f       	adc	r25, r21
    4a42:	fc 01       	movw	r30, r24
    4a44:	e4 57       	subi	r30, 0x74	; 116
    4a46:	ff 4f       	sbci	r31, 0xFF	; 255
    4a48:	60 81       	ld	r22, Z
    4a4a:	8a 81       	ldd	r24, Y+2	; 0x02
    4a4c:	48 2f       	mov	r20, r24
    4a4e:	50 e0       	ldi	r21, 0x00	; 0
    4a50:	ca 01       	movw	r24, r20
    4a52:	88 0f       	add	r24, r24
    4a54:	99 1f       	adc	r25, r25
    4a56:	9c 01       	movw	r18, r24
    4a58:	22 0f       	add	r18, r18
    4a5a:	33 1f       	adc	r19, r19
    4a5c:	22 0f       	add	r18, r18
    4a5e:	33 1f       	adc	r19, r19
    4a60:	22 0f       	add	r18, r18
    4a62:	33 1f       	adc	r19, r19
    4a64:	82 0f       	add	r24, r18
    4a66:	93 1f       	adc	r25, r19
    4a68:	84 0f       	add	r24, r20
    4a6a:	95 1f       	adc	r25, r21
    4a6c:	fc 01       	movw	r30, r24
    4a6e:	e3 57       	subi	r30, 0x73	; 115
    4a70:	ff 4f       	sbci	r31, 0xFF	; 255
    4a72:	90 81       	ld	r25, Z
    4a74:	86 2f       	mov	r24, r22
    4a76:	69 2f       	mov	r22, r25
    4a78:	40 e0       	ldi	r20, 0x00	; 0
    4a7a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4a7e:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4a80:	89 81       	ldd	r24, Y+1	; 0x01
    4a82:	81 30       	cpi	r24, 0x01	; 1
    4a84:	19 f0       	breq	.+6      	; 0x4a8c <SEV_SEG_enumSEGClear+0x264>
    4a86:	89 81       	ldd	r24, Y+1	; 0x01
    4a88:	8b 83       	std	Y+3, r24	; 0x03
    4a8a:	33 c3       	rjmp	.+1638   	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPin,LOW);
    4a8c:	8a 81       	ldd	r24, Y+2	; 0x02
    4a8e:	48 2f       	mov	r20, r24
    4a90:	50 e0       	ldi	r21, 0x00	; 0
    4a92:	ca 01       	movw	r24, r20
    4a94:	88 0f       	add	r24, r24
    4a96:	99 1f       	adc	r25, r25
    4a98:	9c 01       	movw	r18, r24
    4a9a:	22 0f       	add	r18, r18
    4a9c:	33 1f       	adc	r19, r19
    4a9e:	22 0f       	add	r18, r18
    4aa0:	33 1f       	adc	r19, r19
    4aa2:	22 0f       	add	r18, r18
    4aa4:	33 1f       	adc	r19, r19
    4aa6:	82 0f       	add	r24, r18
    4aa8:	93 1f       	adc	r25, r19
    4aaa:	84 0f       	add	r24, r20
    4aac:	95 1f       	adc	r25, r21
    4aae:	fc 01       	movw	r30, r24
    4ab0:	e2 57       	subi	r30, 0x72	; 114
    4ab2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ab4:	60 81       	ld	r22, Z
    4ab6:	8a 81       	ldd	r24, Y+2	; 0x02
    4ab8:	48 2f       	mov	r20, r24
    4aba:	50 e0       	ldi	r21, 0x00	; 0
    4abc:	ca 01       	movw	r24, r20
    4abe:	88 0f       	add	r24, r24
    4ac0:	99 1f       	adc	r25, r25
    4ac2:	9c 01       	movw	r18, r24
    4ac4:	22 0f       	add	r18, r18
    4ac6:	33 1f       	adc	r19, r19
    4ac8:	22 0f       	add	r18, r18
    4aca:	33 1f       	adc	r19, r19
    4acc:	22 0f       	add	r18, r18
    4ace:	33 1f       	adc	r19, r19
    4ad0:	82 0f       	add	r24, r18
    4ad2:	93 1f       	adc	r25, r19
    4ad4:	84 0f       	add	r24, r20
    4ad6:	95 1f       	adc	r25, r21
    4ad8:	fc 01       	movw	r30, r24
    4ada:	e1 57       	subi	r30, 0x71	; 113
    4adc:	ff 4f       	sbci	r31, 0xFF	; 255
    4ade:	90 81       	ld	r25, Z
    4ae0:	86 2f       	mov	r24, r22
    4ae2:	69 2f       	mov	r22, r25
    4ae4:	40 e0       	ldi	r20, 0x00	; 0
    4ae6:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4aea:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4aec:	89 81       	ldd	r24, Y+1	; 0x01
    4aee:	81 30       	cpi	r24, 0x01	; 1
    4af0:	19 f0       	breq	.+6      	; 0x4af8 <SEV_SEG_enumSEGClear+0x2d0>
    4af2:	89 81       	ldd	r24, Y+1	; 0x01
    4af4:	8b 83       	std	Y+3, r24	; 0x03
    4af6:	fd c2       	rjmp	.+1530   	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPin,LOW);
    4af8:	8a 81       	ldd	r24, Y+2	; 0x02
    4afa:	48 2f       	mov	r20, r24
    4afc:	50 e0       	ldi	r21, 0x00	; 0
    4afe:	ca 01       	movw	r24, r20
    4b00:	88 0f       	add	r24, r24
    4b02:	99 1f       	adc	r25, r25
    4b04:	9c 01       	movw	r18, r24
    4b06:	22 0f       	add	r18, r18
    4b08:	33 1f       	adc	r19, r19
    4b0a:	22 0f       	add	r18, r18
    4b0c:	33 1f       	adc	r19, r19
    4b0e:	22 0f       	add	r18, r18
    4b10:	33 1f       	adc	r19, r19
    4b12:	82 0f       	add	r24, r18
    4b14:	93 1f       	adc	r25, r19
    4b16:	84 0f       	add	r24, r20
    4b18:	95 1f       	adc	r25, r21
    4b1a:	fc 01       	movw	r30, r24
    4b1c:	e0 57       	subi	r30, 0x70	; 112
    4b1e:	ff 4f       	sbci	r31, 0xFF	; 255
    4b20:	60 81       	ld	r22, Z
    4b22:	8a 81       	ldd	r24, Y+2	; 0x02
    4b24:	48 2f       	mov	r20, r24
    4b26:	50 e0       	ldi	r21, 0x00	; 0
    4b28:	ca 01       	movw	r24, r20
    4b2a:	88 0f       	add	r24, r24
    4b2c:	99 1f       	adc	r25, r25
    4b2e:	9c 01       	movw	r18, r24
    4b30:	22 0f       	add	r18, r18
    4b32:	33 1f       	adc	r19, r19
    4b34:	22 0f       	add	r18, r18
    4b36:	33 1f       	adc	r19, r19
    4b38:	22 0f       	add	r18, r18
    4b3a:	33 1f       	adc	r19, r19
    4b3c:	82 0f       	add	r24, r18
    4b3e:	93 1f       	adc	r25, r19
    4b40:	84 0f       	add	r24, r20
    4b42:	95 1f       	adc	r25, r21
    4b44:	fc 01       	movw	r30, r24
    4b46:	ef 56       	subi	r30, 0x6F	; 111
    4b48:	ff 4f       	sbci	r31, 0xFF	; 255
    4b4a:	90 81       	ld	r25, Z
    4b4c:	86 2f       	mov	r24, r22
    4b4e:	69 2f       	mov	r22, r25
    4b50:	40 e0       	ldi	r20, 0x00	; 0
    4b52:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4b56:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4b58:	89 81       	ldd	r24, Y+1	; 0x01
    4b5a:	81 30       	cpi	r24, 0x01	; 1
    4b5c:	19 f0       	breq	.+6      	; 0x4b64 <SEV_SEG_enumSEGClear+0x33c>
    4b5e:	89 81       	ldd	r24, Y+1	; 0x01
    4b60:	8b 83       	std	Y+3, r24	; 0x03
    4b62:	c7 c2       	rjmp	.+1422   	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>

			if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port<=DIO_PORTD
    4b64:	8a 81       	ldd	r24, Y+2	; 0x02
    4b66:	48 2f       	mov	r20, r24
    4b68:	50 e0       	ldi	r21, 0x00	; 0
    4b6a:	ca 01       	movw	r24, r20
    4b6c:	88 0f       	add	r24, r24
    4b6e:	99 1f       	adc	r25, r25
    4b70:	9c 01       	movw	r18, r24
    4b72:	22 0f       	add	r18, r18
    4b74:	33 1f       	adc	r19, r19
    4b76:	22 0f       	add	r18, r18
    4b78:	33 1f       	adc	r19, r19
    4b7a:	22 0f       	add	r18, r18
    4b7c:	33 1f       	adc	r19, r19
    4b7e:	82 0f       	add	r24, r18
    4b80:	93 1f       	adc	r25, r19
    4b82:	84 0f       	add	r24, r20
    4b84:	95 1f       	adc	r25, r21
    4b86:	fc 01       	movw	r30, r24
    4b88:	ec 56       	subi	r30, 0x6C	; 108
    4b8a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b8c:	80 81       	ld	r24, Z
    4b8e:	84 30       	cpi	r24, 0x04	; 4
    4b90:	08 f0       	brcs	.+2      	; 0x4b94 <SEV_SEG_enumSEGClear+0x36c>
    4b92:	4e c0       	rjmp	.+156    	; 0x4c30 <SEV_SEG_enumSEGClear+0x408>
    4b94:	8a 81       	ldd	r24, Y+2	; 0x02
    4b96:	48 2f       	mov	r20, r24
    4b98:	50 e0       	ldi	r21, 0x00	; 0
    4b9a:	ca 01       	movw	r24, r20
    4b9c:	88 0f       	add	r24, r24
    4b9e:	99 1f       	adc	r25, r25
    4ba0:	9c 01       	movw	r18, r24
    4ba2:	22 0f       	add	r18, r18
    4ba4:	33 1f       	adc	r19, r19
    4ba6:	22 0f       	add	r18, r18
    4ba8:	33 1f       	adc	r19, r19
    4baa:	22 0f       	add	r18, r18
    4bac:	33 1f       	adc	r19, r19
    4bae:	82 0f       	add	r24, r18
    4bb0:	93 1f       	adc	r25, r19
    4bb2:	84 0f       	add	r24, r20
    4bb4:	95 1f       	adc	r25, r21
    4bb6:	fc 01       	movw	r30, r24
    4bb8:	eb 56       	subi	r30, 0x6B	; 107
    4bba:	ff 4f       	sbci	r31, 0xFF	; 255
    4bbc:	80 81       	ld	r24, Z
    4bbe:	88 30       	cpi	r24, 0x08	; 8
    4bc0:	b8 f5       	brcc	.+110    	; 0x4c30 <SEV_SEG_enumSEGClear+0x408>
			   &&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin,LOW);
    4bc2:	8a 81       	ldd	r24, Y+2	; 0x02
    4bc4:	48 2f       	mov	r20, r24
    4bc6:	50 e0       	ldi	r21, 0x00	; 0
    4bc8:	ca 01       	movw	r24, r20
    4bca:	88 0f       	add	r24, r24
    4bcc:	99 1f       	adc	r25, r25
    4bce:	9c 01       	movw	r18, r24
    4bd0:	22 0f       	add	r18, r18
    4bd2:	33 1f       	adc	r19, r19
    4bd4:	22 0f       	add	r18, r18
    4bd6:	33 1f       	adc	r19, r19
    4bd8:	22 0f       	add	r18, r18
    4bda:	33 1f       	adc	r19, r19
    4bdc:	82 0f       	add	r24, r18
    4bde:	93 1f       	adc	r25, r19
    4be0:	84 0f       	add	r24, r20
    4be2:	95 1f       	adc	r25, r21
    4be4:	fc 01       	movw	r30, r24
    4be6:	ec 56       	subi	r30, 0x6C	; 108
    4be8:	ff 4f       	sbci	r31, 0xFF	; 255
    4bea:	60 81       	ld	r22, Z
    4bec:	8a 81       	ldd	r24, Y+2	; 0x02
    4bee:	48 2f       	mov	r20, r24
    4bf0:	50 e0       	ldi	r21, 0x00	; 0
    4bf2:	ca 01       	movw	r24, r20
    4bf4:	88 0f       	add	r24, r24
    4bf6:	99 1f       	adc	r25, r25
    4bf8:	9c 01       	movw	r18, r24
    4bfa:	22 0f       	add	r18, r18
    4bfc:	33 1f       	adc	r19, r19
    4bfe:	22 0f       	add	r18, r18
    4c00:	33 1f       	adc	r19, r19
    4c02:	22 0f       	add	r18, r18
    4c04:	33 1f       	adc	r19, r19
    4c06:	82 0f       	add	r24, r18
    4c08:	93 1f       	adc	r25, r19
    4c0a:	84 0f       	add	r24, r20
    4c0c:	95 1f       	adc	r25, r21
    4c0e:	fc 01       	movw	r30, r24
    4c10:	eb 56       	subi	r30, 0x6B	; 107
    4c12:	ff 4f       	sbci	r31, 0xFF	; 255
    4c14:	90 81       	ld	r25, Z
    4c16:	86 2f       	mov	r24, r22
    4c18:	69 2f       	mov	r22, r25
    4c1a:	40 e0       	ldi	r20, 0x00	; 0
    4c1c:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4c20:	89 83       	std	Y+1, r24	; 0x01
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4c22:	89 81       	ldd	r24, Y+1	; 0x01
    4c24:	81 30       	cpi	r24, 0x01	; 1
    4c26:	09 f4       	brne	.+2      	; 0x4c2a <SEV_SEG_enumSEGClear+0x402>
    4c28:	62 c2       	rjmp	.+1220   	; 0x50ee <SEV_SEG_enumSEGClear+0x8c6>
    4c2a:	89 81       	ldd	r24, Y+1	; 0x01
    4c2c:	8b 83       	std	Y+3, r24	; 0x03
    4c2e:	61 c2       	rjmp	.+1218   	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port==NOT_CONNECTED
    4c30:	8a 81       	ldd	r24, Y+2	; 0x02
    4c32:	48 2f       	mov	r20, r24
    4c34:	50 e0       	ldi	r21, 0x00	; 0
    4c36:	ca 01       	movw	r24, r20
    4c38:	88 0f       	add	r24, r24
    4c3a:	99 1f       	adc	r25, r25
    4c3c:	9c 01       	movw	r18, r24
    4c3e:	22 0f       	add	r18, r18
    4c40:	33 1f       	adc	r19, r19
    4c42:	22 0f       	add	r18, r18
    4c44:	33 1f       	adc	r19, r19
    4c46:	22 0f       	add	r18, r18
    4c48:	33 1f       	adc	r19, r19
    4c4a:	82 0f       	add	r24, r18
    4c4c:	93 1f       	adc	r25, r19
    4c4e:	84 0f       	add	r24, r20
    4c50:	95 1f       	adc	r25, r21
    4c52:	fc 01       	movw	r30, r24
    4c54:	ec 56       	subi	r30, 0x6C	; 108
    4c56:	ff 4f       	sbci	r31, 0xFF	; 255
    4c58:	80 81       	ld	r24, Z
    4c5a:	88 30       	cpi	r24, 0x08	; 8
    4c5c:	c1 f4       	brne	.+48     	; 0x4c8e <SEV_SEG_enumSEGClear+0x466>
    4c5e:	8a 81       	ldd	r24, Y+2	; 0x02
    4c60:	48 2f       	mov	r20, r24
    4c62:	50 e0       	ldi	r21, 0x00	; 0
    4c64:	ca 01       	movw	r24, r20
    4c66:	88 0f       	add	r24, r24
    4c68:	99 1f       	adc	r25, r25
    4c6a:	9c 01       	movw	r18, r24
    4c6c:	22 0f       	add	r18, r18
    4c6e:	33 1f       	adc	r19, r19
    4c70:	22 0f       	add	r18, r18
    4c72:	33 1f       	adc	r19, r19
    4c74:	22 0f       	add	r18, r18
    4c76:	33 1f       	adc	r19, r19
    4c78:	82 0f       	add	r24, r18
    4c7a:	93 1f       	adc	r25, r19
    4c7c:	84 0f       	add	r24, r20
    4c7e:	95 1f       	adc	r25, r21
    4c80:	fc 01       	movw	r30, r24
    4c82:	eb 56       	subi	r30, 0x6B	; 107
    4c84:	ff 4f       	sbci	r31, 0xFF	; 255
    4c86:	80 81       	ld	r24, Z
    4c88:	89 30       	cpi	r24, 0x09	; 9
    4c8a:	08 f4       	brcc	.+2      	; 0x4c8e <SEV_SEG_enumSEGClear+0x466>
    4c8c:	30 c2       	rjmp	.+1120   	; 0x50ee <SEV_SEG_enumSEGClear+0x8c6>
			{

			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    4c8e:	83 e0       	ldi	r24, 0x03	; 3
    4c90:	89 83       	std	Y+1, r24	; 0x01
    4c92:	2d c2       	rjmp	.+1114   	; 0x50ee <SEV_SEG_enumSEGClear+0x8c6>
			}
		}
		else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8Type==COMMON_ANODE)
    4c94:	8a 81       	ldd	r24, Y+2	; 0x02
    4c96:	48 2f       	mov	r20, r24
    4c98:	50 e0       	ldi	r21, 0x00	; 0
    4c9a:	ca 01       	movw	r24, r20
    4c9c:	88 0f       	add	r24, r24
    4c9e:	99 1f       	adc	r25, r25
    4ca0:	9c 01       	movw	r18, r24
    4ca2:	22 0f       	add	r18, r18
    4ca4:	33 1f       	adc	r19, r19
    4ca6:	22 0f       	add	r18, r18
    4ca8:	33 1f       	adc	r19, r19
    4caa:	22 0f       	add	r18, r18
    4cac:	33 1f       	adc	r19, r19
    4cae:	82 0f       	add	r24, r18
    4cb0:	93 1f       	adc	r25, r19
    4cb2:	84 0f       	add	r24, r20
    4cb4:	95 1f       	adc	r25, r21
    4cb6:	fc 01       	movw	r30, r24
    4cb8:	ea 56       	subi	r30, 0x6A	; 106
    4cba:	ff 4f       	sbci	r31, 0xFF	; 255
    4cbc:	80 81       	ld	r24, Z
    4cbe:	88 23       	and	r24, r24
    4cc0:	09 f0       	breq	.+2      	; 0x4cc4 <SEV_SEG_enumSEGClear+0x49c>
    4cc2:	10 c2       	rjmp	.+1056   	; 0x50e4 <SEV_SEG_enumSEGClear+0x8bc>
		{
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8APin,HIGH);
    4cc4:	8a 81       	ldd	r24, Y+2	; 0x02
    4cc6:	48 2f       	mov	r20, r24
    4cc8:	50 e0       	ldi	r21, 0x00	; 0
    4cca:	ca 01       	movw	r24, r20
    4ccc:	88 0f       	add	r24, r24
    4cce:	99 1f       	adc	r25, r25
    4cd0:	9c 01       	movw	r18, r24
    4cd2:	22 0f       	add	r18, r18
    4cd4:	33 1f       	adc	r19, r19
    4cd6:	22 0f       	add	r18, r18
    4cd8:	33 1f       	adc	r19, r19
    4cda:	22 0f       	add	r18, r18
    4cdc:	33 1f       	adc	r19, r19
    4cde:	82 0f       	add	r24, r18
    4ce0:	93 1f       	adc	r25, r19
    4ce2:	84 0f       	add	r24, r20
    4ce4:	95 1f       	adc	r25, r21
    4ce6:	fc 01       	movw	r30, r24
    4ce8:	ec 57       	subi	r30, 0x7C	; 124
    4cea:	ff 4f       	sbci	r31, 0xFF	; 255
    4cec:	60 81       	ld	r22, Z
    4cee:	8a 81       	ldd	r24, Y+2	; 0x02
    4cf0:	48 2f       	mov	r20, r24
    4cf2:	50 e0       	ldi	r21, 0x00	; 0
    4cf4:	ca 01       	movw	r24, r20
    4cf6:	88 0f       	add	r24, r24
    4cf8:	99 1f       	adc	r25, r25
    4cfa:	9c 01       	movw	r18, r24
    4cfc:	22 0f       	add	r18, r18
    4cfe:	33 1f       	adc	r19, r19
    4d00:	22 0f       	add	r18, r18
    4d02:	33 1f       	adc	r19, r19
    4d04:	22 0f       	add	r18, r18
    4d06:	33 1f       	adc	r19, r19
    4d08:	82 0f       	add	r24, r18
    4d0a:	93 1f       	adc	r25, r19
    4d0c:	84 0f       	add	r24, r20
    4d0e:	95 1f       	adc	r25, r21
    4d10:	fc 01       	movw	r30, r24
    4d12:	eb 57       	subi	r30, 0x7B	; 123
    4d14:	ff 4f       	sbci	r31, 0xFF	; 255
    4d16:	90 81       	ld	r25, Z
    4d18:	86 2f       	mov	r24, r22
    4d1a:	69 2f       	mov	r22, r25
    4d1c:	41 e0       	ldi	r20, 0x01	; 1
    4d1e:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4d22:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4d24:	89 81       	ldd	r24, Y+1	; 0x01
    4d26:	81 30       	cpi	r24, 0x01	; 1
    4d28:	19 f0       	breq	.+6      	; 0x4d30 <SEV_SEG_enumSEGClear+0x508>
    4d2a:	89 81       	ldd	r24, Y+1	; 0x01
    4d2c:	8b 83       	std	Y+3, r24	; 0x03
    4d2e:	e1 c1       	rjmp	.+962    	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8BPin,HIGH);
    4d30:	8a 81       	ldd	r24, Y+2	; 0x02
    4d32:	48 2f       	mov	r20, r24
    4d34:	50 e0       	ldi	r21, 0x00	; 0
    4d36:	ca 01       	movw	r24, r20
    4d38:	88 0f       	add	r24, r24
    4d3a:	99 1f       	adc	r25, r25
    4d3c:	9c 01       	movw	r18, r24
    4d3e:	22 0f       	add	r18, r18
    4d40:	33 1f       	adc	r19, r19
    4d42:	22 0f       	add	r18, r18
    4d44:	33 1f       	adc	r19, r19
    4d46:	22 0f       	add	r18, r18
    4d48:	33 1f       	adc	r19, r19
    4d4a:	82 0f       	add	r24, r18
    4d4c:	93 1f       	adc	r25, r19
    4d4e:	84 0f       	add	r24, r20
    4d50:	95 1f       	adc	r25, r21
    4d52:	fc 01       	movw	r30, r24
    4d54:	ea 57       	subi	r30, 0x7A	; 122
    4d56:	ff 4f       	sbci	r31, 0xFF	; 255
    4d58:	60 81       	ld	r22, Z
    4d5a:	8a 81       	ldd	r24, Y+2	; 0x02
    4d5c:	48 2f       	mov	r20, r24
    4d5e:	50 e0       	ldi	r21, 0x00	; 0
    4d60:	ca 01       	movw	r24, r20
    4d62:	88 0f       	add	r24, r24
    4d64:	99 1f       	adc	r25, r25
    4d66:	9c 01       	movw	r18, r24
    4d68:	22 0f       	add	r18, r18
    4d6a:	33 1f       	adc	r19, r19
    4d6c:	22 0f       	add	r18, r18
    4d6e:	33 1f       	adc	r19, r19
    4d70:	22 0f       	add	r18, r18
    4d72:	33 1f       	adc	r19, r19
    4d74:	82 0f       	add	r24, r18
    4d76:	93 1f       	adc	r25, r19
    4d78:	84 0f       	add	r24, r20
    4d7a:	95 1f       	adc	r25, r21
    4d7c:	fc 01       	movw	r30, r24
    4d7e:	e9 57       	subi	r30, 0x79	; 121
    4d80:	ff 4f       	sbci	r31, 0xFF	; 255
    4d82:	90 81       	ld	r25, Z
    4d84:	86 2f       	mov	r24, r22
    4d86:	69 2f       	mov	r22, r25
    4d88:	41 e0       	ldi	r20, 0x01	; 1
    4d8a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4d8e:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4d90:	89 81       	ldd	r24, Y+1	; 0x01
    4d92:	81 30       	cpi	r24, 0x01	; 1
    4d94:	19 f0       	breq	.+6      	; 0x4d9c <SEV_SEG_enumSEGClear+0x574>
    4d96:	89 81       	ldd	r24, Y+1	; 0x01
    4d98:	8b 83       	std	Y+3, r24	; 0x03
    4d9a:	ab c1       	rjmp	.+854    	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8CPin,HIGH);
    4d9c:	8a 81       	ldd	r24, Y+2	; 0x02
    4d9e:	48 2f       	mov	r20, r24
    4da0:	50 e0       	ldi	r21, 0x00	; 0
    4da2:	ca 01       	movw	r24, r20
    4da4:	88 0f       	add	r24, r24
    4da6:	99 1f       	adc	r25, r25
    4da8:	9c 01       	movw	r18, r24
    4daa:	22 0f       	add	r18, r18
    4dac:	33 1f       	adc	r19, r19
    4dae:	22 0f       	add	r18, r18
    4db0:	33 1f       	adc	r19, r19
    4db2:	22 0f       	add	r18, r18
    4db4:	33 1f       	adc	r19, r19
    4db6:	82 0f       	add	r24, r18
    4db8:	93 1f       	adc	r25, r19
    4dba:	84 0f       	add	r24, r20
    4dbc:	95 1f       	adc	r25, r21
    4dbe:	fc 01       	movw	r30, r24
    4dc0:	e8 57       	subi	r30, 0x78	; 120
    4dc2:	ff 4f       	sbci	r31, 0xFF	; 255
    4dc4:	60 81       	ld	r22, Z
    4dc6:	8a 81       	ldd	r24, Y+2	; 0x02
    4dc8:	48 2f       	mov	r20, r24
    4dca:	50 e0       	ldi	r21, 0x00	; 0
    4dcc:	ca 01       	movw	r24, r20
    4dce:	88 0f       	add	r24, r24
    4dd0:	99 1f       	adc	r25, r25
    4dd2:	9c 01       	movw	r18, r24
    4dd4:	22 0f       	add	r18, r18
    4dd6:	33 1f       	adc	r19, r19
    4dd8:	22 0f       	add	r18, r18
    4dda:	33 1f       	adc	r19, r19
    4ddc:	22 0f       	add	r18, r18
    4dde:	33 1f       	adc	r19, r19
    4de0:	82 0f       	add	r24, r18
    4de2:	93 1f       	adc	r25, r19
    4de4:	84 0f       	add	r24, r20
    4de6:	95 1f       	adc	r25, r21
    4de8:	fc 01       	movw	r30, r24
    4dea:	e7 57       	subi	r30, 0x77	; 119
    4dec:	ff 4f       	sbci	r31, 0xFF	; 255
    4dee:	90 81       	ld	r25, Z
    4df0:	86 2f       	mov	r24, r22
    4df2:	69 2f       	mov	r22, r25
    4df4:	41 e0       	ldi	r20, 0x01	; 1
    4df6:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4dfa:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4dfc:	89 81       	ldd	r24, Y+1	; 0x01
    4dfe:	81 30       	cpi	r24, 0x01	; 1
    4e00:	19 f0       	breq	.+6      	; 0x4e08 <SEV_SEG_enumSEGClear+0x5e0>
    4e02:	89 81       	ldd	r24, Y+1	; 0x01
    4e04:	8b 83       	std	Y+3, r24	; 0x03
    4e06:	75 c1       	rjmp	.+746    	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DPin,HIGH);
    4e08:	8a 81       	ldd	r24, Y+2	; 0x02
    4e0a:	48 2f       	mov	r20, r24
    4e0c:	50 e0       	ldi	r21, 0x00	; 0
    4e0e:	ca 01       	movw	r24, r20
    4e10:	88 0f       	add	r24, r24
    4e12:	99 1f       	adc	r25, r25
    4e14:	9c 01       	movw	r18, r24
    4e16:	22 0f       	add	r18, r18
    4e18:	33 1f       	adc	r19, r19
    4e1a:	22 0f       	add	r18, r18
    4e1c:	33 1f       	adc	r19, r19
    4e1e:	22 0f       	add	r18, r18
    4e20:	33 1f       	adc	r19, r19
    4e22:	82 0f       	add	r24, r18
    4e24:	93 1f       	adc	r25, r19
    4e26:	84 0f       	add	r24, r20
    4e28:	95 1f       	adc	r25, r21
    4e2a:	fc 01       	movw	r30, r24
    4e2c:	e6 57       	subi	r30, 0x76	; 118
    4e2e:	ff 4f       	sbci	r31, 0xFF	; 255
    4e30:	60 81       	ld	r22, Z
    4e32:	8a 81       	ldd	r24, Y+2	; 0x02
    4e34:	48 2f       	mov	r20, r24
    4e36:	50 e0       	ldi	r21, 0x00	; 0
    4e38:	ca 01       	movw	r24, r20
    4e3a:	88 0f       	add	r24, r24
    4e3c:	99 1f       	adc	r25, r25
    4e3e:	9c 01       	movw	r18, r24
    4e40:	22 0f       	add	r18, r18
    4e42:	33 1f       	adc	r19, r19
    4e44:	22 0f       	add	r18, r18
    4e46:	33 1f       	adc	r19, r19
    4e48:	22 0f       	add	r18, r18
    4e4a:	33 1f       	adc	r19, r19
    4e4c:	82 0f       	add	r24, r18
    4e4e:	93 1f       	adc	r25, r19
    4e50:	84 0f       	add	r24, r20
    4e52:	95 1f       	adc	r25, r21
    4e54:	fc 01       	movw	r30, r24
    4e56:	e5 57       	subi	r30, 0x75	; 117
    4e58:	ff 4f       	sbci	r31, 0xFF	; 255
    4e5a:	90 81       	ld	r25, Z
    4e5c:	86 2f       	mov	r24, r22
    4e5e:	69 2f       	mov	r22, r25
    4e60:	41 e0       	ldi	r20, 0x01	; 1
    4e62:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4e66:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4e68:	89 81       	ldd	r24, Y+1	; 0x01
    4e6a:	81 30       	cpi	r24, 0x01	; 1
    4e6c:	19 f0       	breq	.+6      	; 0x4e74 <SEV_SEG_enumSEGClear+0x64c>
    4e6e:	89 81       	ldd	r24, Y+1	; 0x01
    4e70:	8b 83       	std	Y+3, r24	; 0x03
    4e72:	3f c1       	rjmp	.+638    	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8EPin,HIGH);
    4e74:	8a 81       	ldd	r24, Y+2	; 0x02
    4e76:	48 2f       	mov	r20, r24
    4e78:	50 e0       	ldi	r21, 0x00	; 0
    4e7a:	ca 01       	movw	r24, r20
    4e7c:	88 0f       	add	r24, r24
    4e7e:	99 1f       	adc	r25, r25
    4e80:	9c 01       	movw	r18, r24
    4e82:	22 0f       	add	r18, r18
    4e84:	33 1f       	adc	r19, r19
    4e86:	22 0f       	add	r18, r18
    4e88:	33 1f       	adc	r19, r19
    4e8a:	22 0f       	add	r18, r18
    4e8c:	33 1f       	adc	r19, r19
    4e8e:	82 0f       	add	r24, r18
    4e90:	93 1f       	adc	r25, r19
    4e92:	84 0f       	add	r24, r20
    4e94:	95 1f       	adc	r25, r21
    4e96:	fc 01       	movw	r30, r24
    4e98:	e4 57       	subi	r30, 0x74	; 116
    4e9a:	ff 4f       	sbci	r31, 0xFF	; 255
    4e9c:	60 81       	ld	r22, Z
    4e9e:	8a 81       	ldd	r24, Y+2	; 0x02
    4ea0:	48 2f       	mov	r20, r24
    4ea2:	50 e0       	ldi	r21, 0x00	; 0
    4ea4:	ca 01       	movw	r24, r20
    4ea6:	88 0f       	add	r24, r24
    4ea8:	99 1f       	adc	r25, r25
    4eaa:	9c 01       	movw	r18, r24
    4eac:	22 0f       	add	r18, r18
    4eae:	33 1f       	adc	r19, r19
    4eb0:	22 0f       	add	r18, r18
    4eb2:	33 1f       	adc	r19, r19
    4eb4:	22 0f       	add	r18, r18
    4eb6:	33 1f       	adc	r19, r19
    4eb8:	82 0f       	add	r24, r18
    4eba:	93 1f       	adc	r25, r19
    4ebc:	84 0f       	add	r24, r20
    4ebe:	95 1f       	adc	r25, r21
    4ec0:	fc 01       	movw	r30, r24
    4ec2:	e3 57       	subi	r30, 0x73	; 115
    4ec4:	ff 4f       	sbci	r31, 0xFF	; 255
    4ec6:	90 81       	ld	r25, Z
    4ec8:	86 2f       	mov	r24, r22
    4eca:	69 2f       	mov	r22, r25
    4ecc:	41 e0       	ldi	r20, 0x01	; 1
    4ece:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4ed2:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4ed4:	89 81       	ldd	r24, Y+1	; 0x01
    4ed6:	81 30       	cpi	r24, 0x01	; 1
    4ed8:	19 f0       	breq	.+6      	; 0x4ee0 <SEV_SEG_enumSEGClear+0x6b8>
    4eda:	89 81       	ldd	r24, Y+1	; 0x01
    4edc:	8b 83       	std	Y+3, r24	; 0x03
    4ede:	09 c1       	rjmp	.+530    	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8FPin,HIGH);
    4ee0:	8a 81       	ldd	r24, Y+2	; 0x02
    4ee2:	48 2f       	mov	r20, r24
    4ee4:	50 e0       	ldi	r21, 0x00	; 0
    4ee6:	ca 01       	movw	r24, r20
    4ee8:	88 0f       	add	r24, r24
    4eea:	99 1f       	adc	r25, r25
    4eec:	9c 01       	movw	r18, r24
    4eee:	22 0f       	add	r18, r18
    4ef0:	33 1f       	adc	r19, r19
    4ef2:	22 0f       	add	r18, r18
    4ef4:	33 1f       	adc	r19, r19
    4ef6:	22 0f       	add	r18, r18
    4ef8:	33 1f       	adc	r19, r19
    4efa:	82 0f       	add	r24, r18
    4efc:	93 1f       	adc	r25, r19
    4efe:	84 0f       	add	r24, r20
    4f00:	95 1f       	adc	r25, r21
    4f02:	fc 01       	movw	r30, r24
    4f04:	e2 57       	subi	r30, 0x72	; 114
    4f06:	ff 4f       	sbci	r31, 0xFF	; 255
    4f08:	60 81       	ld	r22, Z
    4f0a:	8a 81       	ldd	r24, Y+2	; 0x02
    4f0c:	48 2f       	mov	r20, r24
    4f0e:	50 e0       	ldi	r21, 0x00	; 0
    4f10:	ca 01       	movw	r24, r20
    4f12:	88 0f       	add	r24, r24
    4f14:	99 1f       	adc	r25, r25
    4f16:	9c 01       	movw	r18, r24
    4f18:	22 0f       	add	r18, r18
    4f1a:	33 1f       	adc	r19, r19
    4f1c:	22 0f       	add	r18, r18
    4f1e:	33 1f       	adc	r19, r19
    4f20:	22 0f       	add	r18, r18
    4f22:	33 1f       	adc	r19, r19
    4f24:	82 0f       	add	r24, r18
    4f26:	93 1f       	adc	r25, r19
    4f28:	84 0f       	add	r24, r20
    4f2a:	95 1f       	adc	r25, r21
    4f2c:	fc 01       	movw	r30, r24
    4f2e:	e1 57       	subi	r30, 0x71	; 113
    4f30:	ff 4f       	sbci	r31, 0xFF	; 255
    4f32:	90 81       	ld	r25, Z
    4f34:	86 2f       	mov	r24, r22
    4f36:	69 2f       	mov	r22, r25
    4f38:	41 e0       	ldi	r20, 0x01	; 1
    4f3a:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4f3e:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4f40:	89 81       	ldd	r24, Y+1	; 0x01
    4f42:	81 30       	cpi	r24, 0x01	; 1
    4f44:	19 f0       	breq	.+6      	; 0x4f4c <SEV_SEG_enumSEGClear+0x724>
    4f46:	89 81       	ldd	r24, Y+1	; 0x01
    4f48:	8b 83       	std	Y+3, r24	; 0x03
    4f4a:	d3 c0       	rjmp	.+422    	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPort,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8GPin,HIGH);
    4f4c:	8a 81       	ldd	r24, Y+2	; 0x02
    4f4e:	48 2f       	mov	r20, r24
    4f50:	50 e0       	ldi	r21, 0x00	; 0
    4f52:	ca 01       	movw	r24, r20
    4f54:	88 0f       	add	r24, r24
    4f56:	99 1f       	adc	r25, r25
    4f58:	9c 01       	movw	r18, r24
    4f5a:	22 0f       	add	r18, r18
    4f5c:	33 1f       	adc	r19, r19
    4f5e:	22 0f       	add	r18, r18
    4f60:	33 1f       	adc	r19, r19
    4f62:	22 0f       	add	r18, r18
    4f64:	33 1f       	adc	r19, r19
    4f66:	82 0f       	add	r24, r18
    4f68:	93 1f       	adc	r25, r19
    4f6a:	84 0f       	add	r24, r20
    4f6c:	95 1f       	adc	r25, r21
    4f6e:	fc 01       	movw	r30, r24
    4f70:	e0 57       	subi	r30, 0x70	; 112
    4f72:	ff 4f       	sbci	r31, 0xFF	; 255
    4f74:	60 81       	ld	r22, Z
    4f76:	8a 81       	ldd	r24, Y+2	; 0x02
    4f78:	48 2f       	mov	r20, r24
    4f7a:	50 e0       	ldi	r21, 0x00	; 0
    4f7c:	ca 01       	movw	r24, r20
    4f7e:	88 0f       	add	r24, r24
    4f80:	99 1f       	adc	r25, r25
    4f82:	9c 01       	movw	r18, r24
    4f84:	22 0f       	add	r18, r18
    4f86:	33 1f       	adc	r19, r19
    4f88:	22 0f       	add	r18, r18
    4f8a:	33 1f       	adc	r19, r19
    4f8c:	22 0f       	add	r18, r18
    4f8e:	33 1f       	adc	r19, r19
    4f90:	82 0f       	add	r24, r18
    4f92:	93 1f       	adc	r25, r19
    4f94:	84 0f       	add	r24, r20
    4f96:	95 1f       	adc	r25, r21
    4f98:	fc 01       	movw	r30, r24
    4f9a:	ef 56       	subi	r30, 0x6F	; 111
    4f9c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f9e:	90 81       	ld	r25, Z
    4fa0:	86 2f       	mov	r24, r22
    4fa2:	69 2f       	mov	r22, r25
    4fa4:	41 e0       	ldi	r20, 0x01	; 1
    4fa6:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    4faa:	89 83       	std	Y+1, r24	; 0x01
			if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    4fac:	89 81       	ldd	r24, Y+1	; 0x01
    4fae:	81 30       	cpi	r24, 0x01	; 1
    4fb0:	19 f0       	breq	.+6      	; 0x4fb8 <SEV_SEG_enumSEGClear+0x790>
    4fb2:	89 81       	ldd	r24, Y+1	; 0x01
    4fb4:	8b 83       	std	Y+3, r24	; 0x03
    4fb6:	9d c0       	rjmp	.+314    	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>

			if(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port<=DIO_PORTD
    4fb8:	8a 81       	ldd	r24, Y+2	; 0x02
    4fba:	48 2f       	mov	r20, r24
    4fbc:	50 e0       	ldi	r21, 0x00	; 0
    4fbe:	ca 01       	movw	r24, r20
    4fc0:	88 0f       	add	r24, r24
    4fc2:	99 1f       	adc	r25, r25
    4fc4:	9c 01       	movw	r18, r24
    4fc6:	22 0f       	add	r18, r18
    4fc8:	33 1f       	adc	r19, r19
    4fca:	22 0f       	add	r18, r18
    4fcc:	33 1f       	adc	r19, r19
    4fce:	22 0f       	add	r18, r18
    4fd0:	33 1f       	adc	r19, r19
    4fd2:	82 0f       	add	r24, r18
    4fd4:	93 1f       	adc	r25, r19
    4fd6:	84 0f       	add	r24, r20
    4fd8:	95 1f       	adc	r25, r21
    4fda:	fc 01       	movw	r30, r24
    4fdc:	ec 56       	subi	r30, 0x6C	; 108
    4fde:	ff 4f       	sbci	r31, 0xFF	; 255
    4fe0:	80 81       	ld	r24, Z
    4fe2:	84 30       	cpi	r24, 0x04	; 4
    4fe4:	08 f0       	brcs	.+2      	; 0x4fe8 <SEV_SEG_enumSEGClear+0x7c0>
    4fe6:	4d c0       	rjmp	.+154    	; 0x5082 <SEV_SEG_enumSEGClear+0x85a>
    4fe8:	8a 81       	ldd	r24, Y+2	; 0x02
    4fea:	48 2f       	mov	r20, r24
    4fec:	50 e0       	ldi	r21, 0x00	; 0
    4fee:	ca 01       	movw	r24, r20
    4ff0:	88 0f       	add	r24, r24
    4ff2:	99 1f       	adc	r25, r25
    4ff4:	9c 01       	movw	r18, r24
    4ff6:	22 0f       	add	r18, r18
    4ff8:	33 1f       	adc	r19, r19
    4ffa:	22 0f       	add	r18, r18
    4ffc:	33 1f       	adc	r19, r19
    4ffe:	22 0f       	add	r18, r18
    5000:	33 1f       	adc	r19, r19
    5002:	82 0f       	add	r24, r18
    5004:	93 1f       	adc	r25, r19
    5006:	84 0f       	add	r24, r20
    5008:	95 1f       	adc	r25, r21
    500a:	fc 01       	movw	r30, r24
    500c:	eb 56       	subi	r30, 0x6B	; 107
    500e:	ff 4f       	sbci	r31, 0xFF	; 255
    5010:	80 81       	ld	r24, Z
    5012:	88 30       	cpi	r24, 0x08	; 8
    5014:	b0 f5       	brcc	.+108    	; 0x5082 <SEV_SEG_enumSEGClear+0x85a>
			   &&SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin<=DIO_PIN7)
			{
				Local_enumErrorState=DIO_enumSetPinValue(SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port,SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Pin,HIGH);
    5016:	8a 81       	ldd	r24, Y+2	; 0x02
    5018:	48 2f       	mov	r20, r24
    501a:	50 e0       	ldi	r21, 0x00	; 0
    501c:	ca 01       	movw	r24, r20
    501e:	88 0f       	add	r24, r24
    5020:	99 1f       	adc	r25, r25
    5022:	9c 01       	movw	r18, r24
    5024:	22 0f       	add	r18, r18
    5026:	33 1f       	adc	r19, r19
    5028:	22 0f       	add	r18, r18
    502a:	33 1f       	adc	r19, r19
    502c:	22 0f       	add	r18, r18
    502e:	33 1f       	adc	r19, r19
    5030:	82 0f       	add	r24, r18
    5032:	93 1f       	adc	r25, r19
    5034:	84 0f       	add	r24, r20
    5036:	95 1f       	adc	r25, r21
    5038:	fc 01       	movw	r30, r24
    503a:	ec 56       	subi	r30, 0x6C	; 108
    503c:	ff 4f       	sbci	r31, 0xFF	; 255
    503e:	60 81       	ld	r22, Z
    5040:	8a 81       	ldd	r24, Y+2	; 0x02
    5042:	48 2f       	mov	r20, r24
    5044:	50 e0       	ldi	r21, 0x00	; 0
    5046:	ca 01       	movw	r24, r20
    5048:	88 0f       	add	r24, r24
    504a:	99 1f       	adc	r25, r25
    504c:	9c 01       	movw	r18, r24
    504e:	22 0f       	add	r18, r18
    5050:	33 1f       	adc	r19, r19
    5052:	22 0f       	add	r18, r18
    5054:	33 1f       	adc	r19, r19
    5056:	22 0f       	add	r18, r18
    5058:	33 1f       	adc	r19, r19
    505a:	82 0f       	add	r24, r18
    505c:	93 1f       	adc	r25, r19
    505e:	84 0f       	add	r24, r20
    5060:	95 1f       	adc	r25, r21
    5062:	fc 01       	movw	r30, r24
    5064:	eb 56       	subi	r30, 0x6B	; 107
    5066:	ff 4f       	sbci	r31, 0xFF	; 255
    5068:	90 81       	ld	r25, Z
    506a:	86 2f       	mov	r24, r22
    506c:	69 2f       	mov	r22, r25
    506e:	41 e0       	ldi	r20, 0x01	; 1
    5070:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    5074:	89 83       	std	Y+1, r24	; 0x01
				if(Local_enumErrorState!=ES_OK)return Local_enumErrorState;
    5076:	89 81       	ldd	r24, Y+1	; 0x01
    5078:	81 30       	cpi	r24, 0x01	; 1
    507a:	c9 f1       	breq	.+114    	; 0x50ee <SEV_SEG_enumSEGClear+0x8c6>
    507c:	89 81       	ldd	r24, Y+1	; 0x01
    507e:	8b 83       	std	Y+3, r24	; 0x03
    5080:	38 c0       	rjmp	.+112    	; 0x50f2 <SEV_SEG_enumSEGClear+0x8ca>
			}
			else if (SEV_SEG_AstrSegments[Copy_u8SegmentID].SEV_SEG_u8DOT_Port==NOT_CONNECTED
    5082:	8a 81       	ldd	r24, Y+2	; 0x02
    5084:	48 2f       	mov	r20, r24
    5086:	50 e0       	ldi	r21, 0x00	; 0
    5088:	ca 01       	movw	r24, r20
    508a:	88 0f       	add	r24, r24
    508c:	99 1f       	adc	r25, r25
    508e:	9c 01       	movw	r18, r24
    5090:	22 0f       	add	r18, r18
    5092:	33 1f       	adc	r19, r19
    5094:	22 0f       	add	r18, r18
    5096:	33 1f       	adc	r19, r19
    5098:	22 0f       	add	r18, r18
    509a:	33 1f       	adc	r19, r19
    509c:	82 0f       	add	r24, r18
    509e:	93 1f       	adc	r25, r19
    50a0:	84 0f       	add	r24, r20
    50a2:	95 1f       	adc	r25, r21
    50a4:	fc 01       	movw	r30, r24
    50a6:	ec 56       	subi	r30, 0x6C	; 108
    50a8:	ff 4f       	sbci	r31, 0xFF	; 255
    50aa:	80 81       	ld	r24, Z
    50ac:	88 30       	cpi	r24, 0x08	; 8
    50ae:	b9 f4       	brne	.+46     	; 0x50de <SEV_SEG_enumSEGClear+0x8b6>
    50b0:	8a 81       	ldd	r24, Y+2	; 0x02
    50b2:	48 2f       	mov	r20, r24
    50b4:	50 e0       	ldi	r21, 0x00	; 0
    50b6:	ca 01       	movw	r24, r20
    50b8:	88 0f       	add	r24, r24
    50ba:	99 1f       	adc	r25, r25
    50bc:	9c 01       	movw	r18, r24
    50be:	22 0f       	add	r18, r18
    50c0:	33 1f       	adc	r19, r19
    50c2:	22 0f       	add	r18, r18
    50c4:	33 1f       	adc	r19, r19
    50c6:	22 0f       	add	r18, r18
    50c8:	33 1f       	adc	r19, r19
    50ca:	82 0f       	add	r24, r18
    50cc:	93 1f       	adc	r25, r19
    50ce:	84 0f       	add	r24, r20
    50d0:	95 1f       	adc	r25, r21
    50d2:	fc 01       	movw	r30, r24
    50d4:	eb 56       	subi	r30, 0x6B	; 107
    50d6:	ff 4f       	sbci	r31, 0xFF	; 255
    50d8:	80 81       	ld	r24, Z
    50da:	89 30       	cpi	r24, 0x09	; 9
    50dc:	40 f0       	brcs	.+16     	; 0x50ee <SEV_SEG_enumSEGClear+0x8c6>
			{

			}
			else
			{
				Local_enumErrorState=ES_OUT_OF_RANGE;
    50de:	83 e0       	ldi	r24, 0x03	; 3
    50e0:	89 83       	std	Y+1, r24	; 0x01
    50e2:	05 c0       	rjmp	.+10     	; 0x50ee <SEV_SEG_enumSEGClear+0x8c6>
			}
		}
		else
		{
			Local_enumErrorState=ES_OUT_OF_RANGE;
    50e4:	83 e0       	ldi	r24, 0x03	; 3
    50e6:	89 83       	std	Y+1, r24	; 0x01
    50e8:	02 c0       	rjmp	.+4      	; 0x50ee <SEV_SEG_enumSEGClear+0x8c6>
		}
	}
	else
	{
		Local_enumErrorState=ES_OUT_OF_RANGE;
    50ea:	83 e0       	ldi	r24, 0x03	; 3
    50ec:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    50ee:	89 81       	ldd	r24, Y+1	; 0x01
    50f0:	8b 83       	std	Y+3, r24	; 0x03
    50f2:	8b 81       	ldd	r24, Y+3	; 0x03
}
    50f4:	0f 90       	pop	r0
    50f6:	0f 90       	pop	r0
    50f8:	0f 90       	pop	r0
    50fa:	cf 91       	pop	r28
    50fc:	df 91       	pop	r29
    50fe:	08 95       	ret

00005100 <SW_enumSwitchsInit>:
#include "../include/LIB/STDtypes.h"
#include "../include/MCAL/DIO/DIO_int.h"
#include "../include/HAL/SWITCH/SW_config.h"

ES_T SW_enumSwitchsInit(SW_T* Copy_pstrSwitchs)
{
    5100:	df 93       	push	r29
    5102:	cf 93       	push	r28
    5104:	00 d0       	rcall	.+0      	; 0x5106 <SW_enumSwitchsInit+0x6>
    5106:	00 d0       	rcall	.+0      	; 0x5108 <SW_enumSwitchsInit+0x8>
    5108:	cd b7       	in	r28, 0x3d	; 61
    510a:	de b7       	in	r29, 0x3e	; 62
    510c:	9c 83       	std	Y+4, r25	; 0x04
    510e:	8b 83       	std	Y+3, r24	; 0x03
	ES_T Local_enumErrorState=ES_NOK;
    5110:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Counter=0;
    5112:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pstrSwitchs!=NULL)
    5114:	8b 81       	ldd	r24, Y+3	; 0x03
    5116:	9c 81       	ldd	r25, Y+4	; 0x04
    5118:	00 97       	sbiw	r24, 0x00	; 0
    511a:	09 f4       	brne	.+2      	; 0x511e <SW_enumSwitchsInit+0x1e>
    511c:	5d c0       	rjmp	.+186    	; 0x51d8 <SW_enumSwitchsInit+0xd8>
	{
		for (Local_u8Counter=0;Local_u8Counter<SW_NUM;Local_u8Counter++)
    511e:	19 82       	std	Y+1, r1	; 0x01
    5120:	55 c0       	rjmp	.+170    	; 0x51cc <SW_enumSwitchsInit+0xcc>
		{
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSwitchs[Local_u8Counter].SW_PortID,Copy_pstrSwitchs[Local_u8Counter].SW_PinID,INPUT);
    5122:	89 81       	ldd	r24, Y+1	; 0x01
    5124:	28 2f       	mov	r18, r24
    5126:	30 e0       	ldi	r19, 0x00	; 0
    5128:	c9 01       	movw	r24, r18
    512a:	88 0f       	add	r24, r24
    512c:	99 1f       	adc	r25, r25
    512e:	28 0f       	add	r18, r24
    5130:	39 1f       	adc	r19, r25
    5132:	8b 81       	ldd	r24, Y+3	; 0x03
    5134:	9c 81       	ldd	r25, Y+4	; 0x04
    5136:	fc 01       	movw	r30, r24
    5138:	e2 0f       	add	r30, r18
    513a:	f3 1f       	adc	r31, r19
    513c:	40 81       	ld	r20, Z
    513e:	89 81       	ldd	r24, Y+1	; 0x01
    5140:	28 2f       	mov	r18, r24
    5142:	30 e0       	ldi	r19, 0x00	; 0
    5144:	c9 01       	movw	r24, r18
    5146:	88 0f       	add	r24, r24
    5148:	99 1f       	adc	r25, r25
    514a:	28 0f       	add	r18, r24
    514c:	39 1f       	adc	r19, r25
    514e:	8b 81       	ldd	r24, Y+3	; 0x03
    5150:	9c 81       	ldd	r25, Y+4	; 0x04
    5152:	fc 01       	movw	r30, r24
    5154:	e2 0f       	add	r30, r18
    5156:	f3 1f       	adc	r31, r19
    5158:	91 81       	ldd	r25, Z+1	; 0x01
    515a:	84 2f       	mov	r24, r20
    515c:	69 2f       	mov	r22, r25
    515e:	40 e0       	ldi	r20, 0x00	; 0
    5160:	0e 94 ca 07 	call	0xf94	; 0xf94 <DIO_enumSetPinDirection>
    5164:	8a 83       	std	Y+2, r24	; 0x02
			Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSwitchs[Local_u8Counter].SW_PortID,Copy_pstrSwitchs[Local_u8Counter].SW_PinID,Copy_pstrSwitchs[Local_u8Counter].SW_State);
    5166:	89 81       	ldd	r24, Y+1	; 0x01
    5168:	28 2f       	mov	r18, r24
    516a:	30 e0       	ldi	r19, 0x00	; 0
    516c:	c9 01       	movw	r24, r18
    516e:	88 0f       	add	r24, r24
    5170:	99 1f       	adc	r25, r25
    5172:	28 0f       	add	r18, r24
    5174:	39 1f       	adc	r19, r25
    5176:	8b 81       	ldd	r24, Y+3	; 0x03
    5178:	9c 81       	ldd	r25, Y+4	; 0x04
    517a:	fc 01       	movw	r30, r24
    517c:	e2 0f       	add	r30, r18
    517e:	f3 1f       	adc	r31, r19
    5180:	50 81       	ld	r21, Z
    5182:	89 81       	ldd	r24, Y+1	; 0x01
    5184:	28 2f       	mov	r18, r24
    5186:	30 e0       	ldi	r19, 0x00	; 0
    5188:	c9 01       	movw	r24, r18
    518a:	88 0f       	add	r24, r24
    518c:	99 1f       	adc	r25, r25
    518e:	28 0f       	add	r18, r24
    5190:	39 1f       	adc	r19, r25
    5192:	8b 81       	ldd	r24, Y+3	; 0x03
    5194:	9c 81       	ldd	r25, Y+4	; 0x04
    5196:	fc 01       	movw	r30, r24
    5198:	e2 0f       	add	r30, r18
    519a:	f3 1f       	adc	r31, r19
    519c:	41 81       	ldd	r20, Z+1	; 0x01
    519e:	89 81       	ldd	r24, Y+1	; 0x01
    51a0:	28 2f       	mov	r18, r24
    51a2:	30 e0       	ldi	r19, 0x00	; 0
    51a4:	c9 01       	movw	r24, r18
    51a6:	88 0f       	add	r24, r24
    51a8:	99 1f       	adc	r25, r25
    51aa:	28 0f       	add	r18, r24
    51ac:	39 1f       	adc	r19, r25
    51ae:	8b 81       	ldd	r24, Y+3	; 0x03
    51b0:	9c 81       	ldd	r25, Y+4	; 0x04
    51b2:	fc 01       	movw	r30, r24
    51b4:	e2 0f       	add	r30, r18
    51b6:	f3 1f       	adc	r31, r19
    51b8:	92 81       	ldd	r25, Z+2	; 0x02
    51ba:	85 2f       	mov	r24, r21
    51bc:	64 2f       	mov	r22, r20
    51be:	49 2f       	mov	r20, r25
    51c0:	0e 94 b6 08 	call	0x116c	; 0x116c <DIO_enumSetPinValue>
    51c4:	8a 83       	std	Y+2, r24	; 0x02
	ES_T Local_enumErrorState=ES_NOK;
	u8 Local_u8Counter=0;

	if (Copy_pstrSwitchs!=NULL)
	{
		for (Local_u8Counter=0;Local_u8Counter<SW_NUM;Local_u8Counter++)
    51c6:	89 81       	ldd	r24, Y+1	; 0x01
    51c8:	8f 5f       	subi	r24, 0xFF	; 255
    51ca:	89 83       	std	Y+1, r24	; 0x01
    51cc:	89 81       	ldd	r24, Y+1	; 0x01
    51ce:	88 23       	and	r24, r24
    51d0:	09 f4       	brne	.+2      	; 0x51d4 <SW_enumSwitchsInit+0xd4>
    51d2:	a7 cf       	rjmp	.-178    	; 0x5122 <SW_enumSwitchsInit+0x22>
		{
			Local_enumErrorState=DIO_enumSetPinDirection(Copy_pstrSwitchs[Local_u8Counter].SW_PortID,Copy_pstrSwitchs[Local_u8Counter].SW_PinID,INPUT);
			Local_enumErrorState=DIO_enumSetPinValue(Copy_pstrSwitchs[Local_u8Counter].SW_PortID,Copy_pstrSwitchs[Local_u8Counter].SW_PinID,Copy_pstrSwitchs[Local_u8Counter].SW_State);
		}
		Local_enumErrorState=ES_NOK;
    51d4:	1a 82       	std	Y+2, r1	; 0x02
    51d6:	02 c0       	rjmp	.+4      	; 0x51dc <SW_enumSwitchsInit+0xdc>
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    51d8:	82 e0       	ldi	r24, 0x02	; 2
    51da:	8a 83       	std	Y+2, r24	; 0x02
	}

	return Local_enumErrorState;
    51dc:	8a 81       	ldd	r24, Y+2	; 0x02
}
    51de:	0f 90       	pop	r0
    51e0:	0f 90       	pop	r0
    51e2:	0f 90       	pop	r0
    51e4:	0f 90       	pop	r0
    51e6:	cf 91       	pop	r28
    51e8:	df 91       	pop	r29
    51ea:	08 95       	ret

000051ec <SW_enumSwitchGetState>:
ES_T SW_enumSwitchGetState(SW_T* Copy_pstrSwitch,u8* Copy_pu8SWState)
{
    51ec:	df 93       	push	r29
    51ee:	cf 93       	push	r28
    51f0:	00 d0       	rcall	.+0      	; 0x51f2 <SW_enumSwitchGetState+0x6>
    51f2:	00 d0       	rcall	.+0      	; 0x51f4 <SW_enumSwitchGetState+0x8>
    51f4:	0f 92       	push	r0
    51f6:	cd b7       	in	r28, 0x3d	; 61
    51f8:	de b7       	in	r29, 0x3e	; 62
    51fa:	9b 83       	std	Y+3, r25	; 0x03
    51fc:	8a 83       	std	Y+2, r24	; 0x02
    51fe:	7d 83       	std	Y+5, r23	; 0x05
    5200:	6c 83       	std	Y+4, r22	; 0x04
	ES_T Local_enumErrorState=ES_NOK;
    5202:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_pstrSwitch!=NULL&&Copy_pu8SWState!=NULL)
    5204:	8a 81       	ldd	r24, Y+2	; 0x02
    5206:	9b 81       	ldd	r25, Y+3	; 0x03
    5208:	00 97       	sbiw	r24, 0x00	; 0
    520a:	91 f0       	breq	.+36     	; 0x5230 <SW_enumSwitchGetState+0x44>
    520c:	8c 81       	ldd	r24, Y+4	; 0x04
    520e:	9d 81       	ldd	r25, Y+5	; 0x05
    5210:	00 97       	sbiw	r24, 0x00	; 0
    5212:	71 f0       	breq	.+28     	; 0x5230 <SW_enumSwitchGetState+0x44>
	{
		Local_enumErrorState=DIO_enumGetPinValue(Copy_pstrSwitch->SW_PortID,Copy_pstrSwitch->SW_PinID,Copy_pu8SWState);
    5214:	ea 81       	ldd	r30, Y+2	; 0x02
    5216:	fb 81       	ldd	r31, Y+3	; 0x03
    5218:	80 81       	ld	r24, Z
    521a:	ea 81       	ldd	r30, Y+2	; 0x02
    521c:	fb 81       	ldd	r31, Y+3	; 0x03
    521e:	91 81       	ldd	r25, Z+1	; 0x01
    5220:	2c 81       	ldd	r18, Y+4	; 0x04
    5222:	3d 81       	ldd	r19, Y+5	; 0x05
    5224:	69 2f       	mov	r22, r25
    5226:	a9 01       	movw	r20, r18
    5228:	0e 94 5c 0b 	call	0x16b8	; 0x16b8 <DIO_enumGetPinValue>
    522c:	89 83       	std	Y+1, r24	; 0x01
    522e:	02 c0       	rjmp	.+4      	; 0x5234 <SW_enumSwitchGetState+0x48>
	}
	else
	{
		Local_enumErrorState=ES_NULL_POINTER;
    5230:	82 e0       	ldi	r24, 0x02	; 2
    5232:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enumErrorState;
    5234:	89 81       	ldd	r24, Y+1	; 0x01
}
    5236:	0f 90       	pop	r0
    5238:	0f 90       	pop	r0
    523a:	0f 90       	pop	r0
    523c:	0f 90       	pop	r0
    523e:	0f 90       	pop	r0
    5240:	cf 91       	pop	r28
    5242:	df 91       	pop	r29
    5244:	08 95       	ret

00005246 <main>:
#include "../include/MCAL/DIO/DIO_int.h"
#include "../include/HAL/LCD/LCD_int.h"


int main (void)
{
    5246:	df 93       	push	r29
    5248:	cf 93       	push	r28
    524a:	cd b7       	in	r28, 0x3d	; 61
    524c:	de b7       	in	r29, 0x3e	; 62
	LCD_enumInit();
    524e:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <LCD_enumInit>
    5252:	ff cf       	rjmp	.-2      	; 0x5252 <main+0xc>

00005254 <__prologue_saves__>:
    5254:	2f 92       	push	r2
    5256:	3f 92       	push	r3
    5258:	4f 92       	push	r4
    525a:	5f 92       	push	r5
    525c:	6f 92       	push	r6
    525e:	7f 92       	push	r7
    5260:	8f 92       	push	r8
    5262:	9f 92       	push	r9
    5264:	af 92       	push	r10
    5266:	bf 92       	push	r11
    5268:	cf 92       	push	r12
    526a:	df 92       	push	r13
    526c:	ef 92       	push	r14
    526e:	ff 92       	push	r15
    5270:	0f 93       	push	r16
    5272:	1f 93       	push	r17
    5274:	cf 93       	push	r28
    5276:	df 93       	push	r29
    5278:	cd b7       	in	r28, 0x3d	; 61
    527a:	de b7       	in	r29, 0x3e	; 62
    527c:	ca 1b       	sub	r28, r26
    527e:	db 0b       	sbc	r29, r27
    5280:	0f b6       	in	r0, 0x3f	; 63
    5282:	f8 94       	cli
    5284:	de bf       	out	0x3e, r29	; 62
    5286:	0f be       	out	0x3f, r0	; 63
    5288:	cd bf       	out	0x3d, r28	; 61
    528a:	09 94       	ijmp

0000528c <__epilogue_restores__>:
    528c:	2a 88       	ldd	r2, Y+18	; 0x12
    528e:	39 88       	ldd	r3, Y+17	; 0x11
    5290:	48 88       	ldd	r4, Y+16	; 0x10
    5292:	5f 84       	ldd	r5, Y+15	; 0x0f
    5294:	6e 84       	ldd	r6, Y+14	; 0x0e
    5296:	7d 84       	ldd	r7, Y+13	; 0x0d
    5298:	8c 84       	ldd	r8, Y+12	; 0x0c
    529a:	9b 84       	ldd	r9, Y+11	; 0x0b
    529c:	aa 84       	ldd	r10, Y+10	; 0x0a
    529e:	b9 84       	ldd	r11, Y+9	; 0x09
    52a0:	c8 84       	ldd	r12, Y+8	; 0x08
    52a2:	df 80       	ldd	r13, Y+7	; 0x07
    52a4:	ee 80       	ldd	r14, Y+6	; 0x06
    52a6:	fd 80       	ldd	r15, Y+5	; 0x05
    52a8:	0c 81       	ldd	r16, Y+4	; 0x04
    52aa:	1b 81       	ldd	r17, Y+3	; 0x03
    52ac:	aa 81       	ldd	r26, Y+2	; 0x02
    52ae:	b9 81       	ldd	r27, Y+1	; 0x01
    52b0:	ce 0f       	add	r28, r30
    52b2:	d1 1d       	adc	r29, r1
    52b4:	0f b6       	in	r0, 0x3f	; 63
    52b6:	f8 94       	cli
    52b8:	de bf       	out	0x3e, r29	; 62
    52ba:	0f be       	out	0x3f, r0	; 63
    52bc:	cd bf       	out	0x3d, r28	; 61
    52be:	ed 01       	movw	r28, r26
    52c0:	08 95       	ret

000052c2 <_exit>:
    52c2:	f8 94       	cli

000052c4 <__stop_program>:
    52c4:	ff cf       	rjmp	.-2      	; 0x52c4 <__stop_program>
